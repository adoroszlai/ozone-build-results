<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201108 01:29:25.053" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:14.870" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:16.943" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:17:16.943" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:17:16.943" starttime="20201108 01:17:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:16.944" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:17:16.945" starttime="20201108 01:17:16.944"></status>
</kw>
<msg timestamp="20201108 01:17:16.945" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:17:16.945" starttime="20201108 01:17:14.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:16.950" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:18.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:18.844" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:18.844" starttime="20201108 01:17:16.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:18.845" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:18.845" starttime="20201108 01:17:18.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:18.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:18.846" starttime="20201108 01:17:18.845"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:18.846" starttime="20201108 01:17:16.947"></status>
</kw>
<msg timestamp="20201108 01:17:18.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:18.846" starttime="20201108 01:17:16.946"></status>
</kw>
<msg timestamp="20201108 01:17:18.846" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201108 01:17:18.846" starttime="20201108 01:17:16.946"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201108 01:17:18.847" starttime="20201108 01:17:18.847"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:18.847" starttime="20201108 01:17:16.945"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:18.847" starttime="20201108 01:17:16.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:18.851" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:20.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:20.593" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:20.593" starttime="20201108 01:17:18.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:20.594" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:20.594" starttime="20201108 01:17:20.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:20.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:20.595" starttime="20201108 01:17:20.594"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:20.595" starttime="20201108 01:17:18.849"></status>
</kw>
<msg timestamp="20201108 01:17:20.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:20.595" starttime="20201108 01:17:18.848"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:20.595" starttime="20201108 01:17:18.848"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:20.596" starttime="20201108 01:17:18.848"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:20.596" starttime="20201108 01:17:18.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201108 01:17:20.596" starttime="20201108 01:17:20.596"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:20.601" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:22.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:22.531" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:17:20.472Z",
  "modificat...</msg>
<status status="PASS" endtime="20201108 01:17:22.531" starttime="20201108 01:17:20.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:22.532" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:17:20.472Z",
  "modificationTime" : "2020-11-08T01:17:20.472Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201108 01:17:22.532" starttime="20201108 01:17:22.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:22.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:22.532" starttime="20201108 01:17:22.532"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:22.533" starttime="20201108 01:17:20.597"></status>
</kw>
<msg timestamp="20201108 01:17:22.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:22.533" starttime="20201108 01:17:20.597"></status>
</kw>
<msg timestamp="20201108 01:17:22.533" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:17:20.472Z",
  "modificat...</msg>
<status status="PASS" endtime="20201108 01:17:22.533" starttime="20201108 01:17:20.596"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201108 01:17:22.534" starttime="20201108 01:17:22.533"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:17:22.537" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:17:22.537" starttime="20201108 01:17:22.537"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:17:22.538" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:17:22.538" starttime="20201108 01:17:22.537"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:22.538" starttime="20201108 01:17:22.536"></status>
</kw>
<msg timestamp="20201108 01:17:22.538" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:17:22.538" starttime="20201108 01:17:22.536"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:22.538" starttime="20201108 01:17:22.535"></status>
</kw>
<msg timestamp="20201108 01:17:22.538" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:17:22.538" starttime="20201108 01:17:22.534"></status>
</kw>
<msg timestamp="20201108 01:17:22.538" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:17:22.538" starttime="20201108 01:17:22.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:22.543" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:24.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:24.398" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:24.398" starttime="20201108 01:17:22.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:24.399" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:24.399" starttime="20201108 01:17:24.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:24.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:24.400" starttime="20201108 01:17:24.399"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:24.400" starttime="20201108 01:17:22.539"></status>
</kw>
<msg timestamp="20201108 01:17:24.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:24.400" starttime="20201108 01:17:22.539"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:24.400" starttime="20201108 01:17:22.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:24.405" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:29.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:29.155" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:29.155" starttime="20201108 01:17:24.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:29.156" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:29.156" starttime="20201108 01:17:29.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:29.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:29.157" starttime="20201108 01:17:29.157"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:29.157" starttime="20201108 01:17:24.402"></status>
</kw>
<msg timestamp="20201108 01:17:29.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:29.158" starttime="20201108 01:17:24.401"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:29.158" starttime="20201108 01:17:24.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:29.161" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:32.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:32.905" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:32.905" starttime="20201108 01:17:29.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:32.906" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:32.906" starttime="20201108 01:17:32.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:32.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:32.906" starttime="20201108 01:17:32.906"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:32.907" starttime="20201108 01:17:29.159"></status>
</kw>
<msg timestamp="20201108 01:17:32.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:32.907" starttime="20201108 01:17:29.159"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:32.907" starttime="20201108 01:17:29.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:32.911" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:36.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:36.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:36.388" starttime="20201108 01:17:32.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:36.389" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:36.389" starttime="20201108 01:17:36.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:36.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:36.390" starttime="20201108 01:17:36.389"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:36.390" starttime="20201108 01:17:32.908"></status>
</kw>
<msg timestamp="20201108 01:17:36.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:36.390" starttime="20201108 01:17:32.908"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:36.391" starttime="20201108 01:17:32.907"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:17:36.391" critical="yes" starttime="20201108 01:17:14.864"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:17:36.395" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:17:36.395" starttime="20201108 01:17:36.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:17:36.396" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:17:36.396" starttime="20201108 01:17:36.395"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:36.396" starttime="20201108 01:17:36.394"></status>
</kw>
<msg timestamp="20201108 01:17:36.396" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:17:36.396" starttime="20201108 01:17:36.394"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:36.396" starttime="20201108 01:17:36.393"></status>
</kw>
<msg timestamp="20201108 01:17:36.396" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:17:36.396" starttime="20201108 01:17:36.393"></status>
</kw>
<msg timestamp="20201108 01:17:36.397" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:17:36.397" starttime="20201108 01:17:36.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:36.400" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:38.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:38.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:38.381" starttime="20201108 01:17:36.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:38.382" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:38.382" starttime="20201108 01:17:38.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:38.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:38.383" starttime="20201108 01:17:38.382"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:38.383" starttime="20201108 01:17:36.397"></status>
</kw>
<msg timestamp="20201108 01:17:38.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:38.383" starttime="20201108 01:17:36.397"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:38.383" starttime="20201108 01:17:36.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:38.387" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:40.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:40.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:17:40.384" starttime="20201108 01:17:38.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:40.385" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:17:40.385" starttime="20201108 01:17:40.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:40.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:40.386" starttime="20201108 01:17:40.385"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:40.386" starttime="20201108 01:17:38.384"></status>
</kw>
<msg timestamp="20201108 01:17:40.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:40.386" starttime="20201108 01:17:38.384"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:40.387" starttime="20201108 01:17:38.384"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:17:40.387" critical="yes" starttime="20201108 01:17:36.391"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201108 01:17:40.388" starttime="20201108 01:17:14.817"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:19:14.149" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:19:14.149" starttime="20201108 01:19:14.149"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:19:14.150" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:19:14.150" starttime="20201108 01:19:14.149"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:14.150" starttime="20201108 01:19:14.148"></status>
</kw>
<msg timestamp="20201108 01:19:14.150" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:19:14.150" starttime="20201108 01:19:14.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:19:14.151" starttime="20201108 01:19:14.150"></status>
</kw>
<msg timestamp="20201108 01:19:14.151" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:19:14.151" starttime="20201108 01:19:14.150"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:14.151" starttime="20201108 01:19:14.147"></status>
</kw>
<msg timestamp="20201108 01:19:14.151" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:19:14.151" starttime="20201108 01:19:14.147"></status>
</kw>
<msg timestamp="20201108 01:19:14.151" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:19:14.151" starttime="20201108 01:19:14.146"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:19:14.152" level="INFO">${random} = 34612</msg>
<status status="PASS" endtime="20201108 01:19:14.152" starttime="20201108 01:19:14.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:19:14.156" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-34612 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:19:17.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:19:17.304" level="INFO">${output} = 2020-11-08 01:19:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:19:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 ...</msg>
<status status="PASS" endtime="20201108 01:19:17.304" starttime="20201108 01:19:14.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:19:17.305" level="INFO">2020-11-08 01:19:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:19:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 01:19:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-08 01:19:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:19:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A17F791204AA-&gt;7c9f42be-b129-4a69-b55b-910b33f3ac44
2020-11-08 01:19:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201108 01:19:17.305" starttime="20201108 01:19:17.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:19:17.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:19:17.306" starttime="20201108 01:19:17.306"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:17.306" starttime="20201108 01:19:14.153"></status>
</kw>
<msg timestamp="20201108 01:19:17.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:19:17.307" starttime="20201108 01:19:14.152"></status>
</kw>
<msg timestamp="20201108 01:19:17.307" level="INFO">${result} = 2020-11-08 01:19:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:19:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 ...</msg>
<status status="PASS" endtime="20201108 01:19:17.307" starttime="20201108 01:19:14.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:19:17.311" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:19:18.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:19:18.865" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-08 01:19 ofs://om/volume1/bucket1/ozone-34612
-rw-...</msg>
<status status="PASS" endtime="20201108 01:19:18.865" starttime="20201108 01:19:17.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:19:18.866" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-08 01:19 ofs://om/volume1/bucket1/ozone-34612
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-08 01:17 ofs://om/volume1/bucket1/ozone-77969
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:18 ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201108 01:19:18.866" starttime="20201108 01:19:18.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:19:18.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:19:18.866" starttime="20201108 01:19:18.866"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:18.867" starttime="20201108 01:19:17.309"></status>
</kw>
<msg timestamp="20201108 01:19:18.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:19:18.867" starttime="20201108 01:19:17.308"></status>
</kw>
<msg timestamp="20201108 01:19:18.867" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-08 01:19 ofs://om/volume1/bucket1/ozone-34612
-rw-...</msg>
<status status="PASS" endtime="20201108 01:19:18.867" starttime="20201108 01:19:17.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:19:18.868" starttime="20201108 01:19:18.867"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:19:18.868" critical="yes" starttime="20201108 01:19:14.145"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201108 01:19:18.869" starttime="20201108 01:19:14.098"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:17:44.628" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:17:44.628" starttime="20201108 01:17:44.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:17:44.628" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:17:44.628" starttime="20201108 01:17:44.628"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:44.629" starttime="20201108 01:17:44.627"></status>
</kw>
<msg timestamp="20201108 01:17:44.629" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:17:44.629" starttime="20201108 01:17:44.627"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:44.629" starttime="20201108 01:17:44.626"></status>
</kw>
<msg timestamp="20201108 01:17:44.629" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:17:44.629" starttime="20201108 01:17:44.625"></status>
</kw>
<msg timestamp="20201108 01:17:44.629" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:17:44.629" starttime="20201108 01:17:44.625"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:17:44.630" level="INFO">${random} = 77969</msg>
<status status="PASS" endtime="20201108 01:17:44.630" starttime="20201108 01:17:44.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:44.634" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-77969 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:47.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:47.757" level="INFO">${output} = 2020-11-08 01:17:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:17:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 ...</msg>
<status status="PASS" endtime="20201108 01:17:47.757" starttime="20201108 01:17:44.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:47.758" level="INFO">2020-11-08 01:17:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:17:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 01:17:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-08 01:17:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:17:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-93AECC1B08D0-&gt;7c9f42be-b129-4a69-b55b-910b33f3ac44
2020-11-08 01:17:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201108 01:17:47.758" starttime="20201108 01:17:47.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:47.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:47.759" starttime="20201108 01:17:47.759"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:47.759" starttime="20201108 01:17:44.630"></status>
</kw>
<msg timestamp="20201108 01:17:47.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:47.760" starttime="20201108 01:17:44.630"></status>
</kw>
<msg timestamp="20201108 01:17:47.760" level="INFO">${result} = 2020-11-08 01:17:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:17:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 ...</msg>
<status status="PASS" endtime="20201108 01:17:47.760" starttime="20201108 01:17:44.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:47.766" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:49.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:49.351" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-08 01:17 o3fs://bucket1.volume1.om/ozone-77969
dr...</msg>
<status status="PASS" endtime="20201108 01:17:49.351" starttime="20201108 01:17:47.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:49.352" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-08 01:17 o3fs://bucket1.volume1.om/ozone-77969
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:17:49.353" starttime="20201108 01:17:49.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:49.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:49.353" starttime="20201108 01:17:49.353"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:49.353" starttime="20201108 01:17:47.762"></status>
</kw>
<msg timestamp="20201108 01:17:49.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:49.354" starttime="20201108 01:17:47.760"></status>
</kw>
<msg timestamp="20201108 01:17:49.354" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-08 01:17 o3fs://bucket1.volume1.om/ozone-77969
dr...</msg>
<status status="PASS" endtime="20201108 01:17:49.354" starttime="20201108 01:17:47.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:17:49.354" starttime="20201108 01:17:49.354"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:17:49.355" critical="yes" starttime="20201108 01:17:44.624"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201108 01:17:49.356" starttime="20201108 01:17:44.579"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:19:23.171" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:19:23.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:19:23.177" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:23.177" starttime="20201108 01:19:23.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:19:23.177" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:23.178" starttime="20201108 01:19:23.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:19:23.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:19:23.178" starttime="20201108 01:19:23.178"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:23.178" starttime="20201108 01:19:23.166"></status>
</kw>
<msg timestamp="20201108 01:19:23.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:19:23.179" starttime="20201108 01:19:23.166"></status>
</kw>
<msg timestamp="20201108 01:19:23.179" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:23.179" starttime="20201108 01:19:23.166"></status>
</kw>
<msg timestamp="20201108 01:19:23.179" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:23.179" starttime="20201108 01:19:23.165"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:19:23.183" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:19:23.183" starttime="20201108 01:19:23.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:19:23.184" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:19:23.184" starttime="20201108 01:19:23.184"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:23.184" starttime="20201108 01:19:23.182"></status>
</kw>
<msg timestamp="20201108 01:19:23.184" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:19:23.184" starttime="20201108 01:19:23.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:19:23.185" starttime="20201108 01:19:23.185"></status>
</kw>
<msg timestamp="20201108 01:19:23.185" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:19:23.185" starttime="20201108 01:19:23.184"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:23.185" starttime="20201108 01:19:23.181"></status>
</kw>
<msg timestamp="20201108 01:19:23.185" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:19:23.186" starttime="20201108 01:19:23.180"></status>
</kw>
<msg timestamp="20201108 01:19:23.186" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:19:23.186" starttime="20201108 01:19:23.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:19:23.189" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:19:58.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:19:58.322" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:19:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:19:24 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201108 01:19:58.322" starttime="20201108 01:19:23.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:19:58.323" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:19:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:19:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 01:19:24 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-08 01:19:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:19:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E35D33DD1BE5-&gt;7c9f42be-b129-4a69-b55b-910b33f3ac44
2020-11-08 01:19:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-08 01:19:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:19:28 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:19:28 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-08 01:19:29 INFO  JobSubmitter:198 - number of splits:3
2020-11-08 01:19:29 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604798204049_0003
2020-11-08 01:19:29 INFO  YarnClientImpl:273 - Submitted application application_1604798204049_0003
2020-11-08 01:19:29 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604798204049_0003/
2020-11-08 01:19:29 INFO  Job:1339 - Running job: job_1604798204049_0003
2020-11-08 01:19:35 INFO  Job:1360 - Job job_1604798204049_0003 running in uber mode : false
2020-11-08 01:19:35 INFO  Job:1367 -  map 0% reduce 0%
2020-11-08 01:19:41 INFO  Job:1367 -  map 33% reduce 0%
2020-11-08 01:19:46 INFO  Job:1367 -  map 67% reduce 0%
2020-11-08 01:19:50 INFO  Job:1367 -  map 100% reduce 0%
2020-11-08 01:19:56 INFO  Job:1367 -  map 100% reduce 100%
2020-11-08 01:19:57 INFO  Job:1378 - Job job_1604798204049_0003 completed successfully
2020-11-08 01:19:57 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34980
		Total time spent by all reduces in occupied slots (ms)=22952
		Total time spent by all map tasks (ms)=8745
		Total time spent by all reduce tasks (ms)=5738
		Total vcore-milliseconds taken by all map tasks=8745
		Total vcore-milliseconds taken by all reduce tasks=5738
		Total megabyte-milliseconds taken by all map tasks=35819520
		Total megabyte-milliseconds taken by all reduce tasks=23502848
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=6190
		Physical memory (bytes) snapshot=1144004608
		Virtual memory (bytes) snapshot=15777812480
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.327 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201108 01:19:58.324" starttime="20201108 01:19:58.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:19:58.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:19:58.324" starttime="20201108 01:19:58.324"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.324" starttime="20201108 01:19:23.187"></status>
</kw>
<msg timestamp="20201108 01:19:58.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:19:58.325" starttime="20201108 01:19:23.186"></status>
</kw>
<msg timestamp="20201108 01:19:58.325" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:19:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:19:24 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201108 01:19:58.325" starttime="20201108 01:19:23.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:19:58.325" starttime="20201108 01:19:58.325"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:19:58.326" critical="yes" starttime="20201108 01:19:23.165"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:19:58.330" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:19:58.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:19:58.336" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:58.336" starttime="20201108 01:19:58.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:19:58.337" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:58.337" starttime="20201108 01:19:58.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:19:58.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:19:58.338" starttime="20201108 01:19:58.337"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.338" starttime="20201108 01:19:58.328"></status>
</kw>
<msg timestamp="20201108 01:19:58.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:19:58.339" starttime="20201108 01:19:58.328"></status>
</kw>
<msg timestamp="20201108 01:19:58.339" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:58.339" starttime="20201108 01:19:58.327"></status>
</kw>
<msg timestamp="20201108 01:19:58.339" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:19:58.339" starttime="20201108 01:19:58.327"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:19:58.340" level="INFO">${random} = 76</msg>
<status status="PASS" endtime="20201108 01:19:58.340" starttime="20201108 01:19:58.339"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:19:58.343" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:19:58.343" starttime="20201108 01:19:58.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:19:58.344" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:19:58.344" starttime="20201108 01:19:58.343"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.344" starttime="20201108 01:19:58.342"></status>
</kw>
<msg timestamp="20201108 01:19:58.344" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:19:58.344" starttime="20201108 01:19:58.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:19:58.345" starttime="20201108 01:19:58.344"></status>
</kw>
<msg timestamp="20201108 01:19:58.345" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:19:58.345" starttime="20201108 01:19:58.344"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.345" starttime="20201108 01:19:58.341"></status>
</kw>
<msg timestamp="20201108 01:19:58.345" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:19:58.345" starttime="20201108 01:19:58.340"></status>
</kw>
<msg timestamp="20201108 01:19:58.345" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:19:58.345" starttime="20201108 01:19:58.340"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:19:58.348" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:19:58.348" starttime="20201108 01:19:58.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:19:58.349" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:19:58.349" starttime="20201108 01:19:58.348"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.349" starttime="20201108 01:19:58.348"></status>
</kw>
<msg timestamp="20201108 01:19:58.349" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:19:58.349" starttime="20201108 01:19:58.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:19:58.350" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201108 01:19:58.350" starttime="20201108 01:19:58.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:19:58.351" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201108 01:19:58.351" starttime="20201108 01:19:58.351"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.351" starttime="20201108 01:19:58.350"></status>
</kw>
<msg timestamp="20201108 01:19:58.351" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201108 01:19:58.351" starttime="20201108 01:19:58.349"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.352" starttime="20201108 01:19:58.347"></status>
</kw>
<msg timestamp="20201108 01:19:58.352" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201108 01:19:58.352" starttime="20201108 01:19:58.346"></status>
</kw>
<msg timestamp="20201108 01:19:58.352" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201108 01:19:58.352" starttime="20201108 01:19:58.346"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:19:58.355" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:19:58.355" starttime="20201108 01:19:58.354"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:19:58.355" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:19:58.355" starttime="20201108 01:19:58.355"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.355" starttime="20201108 01:19:58.354"></status>
</kw>
<msg timestamp="20201108 01:19:58.356" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:19:58.356" starttime="20201108 01:19:58.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:19:58.357" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201108 01:19:58.357" starttime="20201108 01:19:58.356"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:19:58.357" level="INFO">${result} = /wordcount-76.txt</msg>
<status status="PASS" endtime="20201108 01:19:58.357" starttime="20201108 01:19:58.357"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.358" starttime="20201108 01:19:58.356"></status>
</kw>
<msg timestamp="20201108 01:19:58.358" level="INFO">${path_with_leading} = /wordcount-76.txt</msg>
<status status="PASS" endtime="20201108 01:19:58.358" starttime="20201108 01:19:58.356"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:58.358" starttime="20201108 01:19:58.353"></status>
</kw>
<msg timestamp="20201108 01:19:58.358" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20201108 01:19:58.358" starttime="20201108 01:19:58.353"></status>
</kw>
<msg timestamp="20201108 01:19:58.358" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20201108 01:19:58.358" starttime="20201108 01:19:58.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:19:58.362" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-76.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:20:29.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:20:29.698" level="INFO">${output} = 2020-11-08 01:19:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:20:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201108 01:20:29.698" starttime="20201108 01:19:58.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:20:29.699" level="INFO">2020-11-08 01:19:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:20:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:20:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:20:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 01:20:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-08 01:20:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:20:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FD83421BFFFC-&gt;7c9f42be-b129-4a69-b55b-910b33f3ac44
2020-11-08 01:20:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:20:01 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-08 01:20:01 INFO  JobSubmitter:198 - number of splits:3
2020-11-08 01:20:01 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604798204049_0004
2020-11-08 01:20:01 INFO  YarnClientImpl:273 - Submitted application application_1604798204049_0004
2020-11-08 01:20:01 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604798204049_0004/
2020-11-08 01:20:01 INFO  Job:1339 - Running job: job_1604798204049_0004
2020-11-08 01:20:09 INFO  Job:1360 - Job job_1604798204049_0004 running in uber mode : false
2020-11-08 01:20:09 INFO  Job:1367 -  map 0% reduce 0%
2020-11-08 01:20:16 INFO  Job:1367 -  map 33% reduce 0%
2020-11-08 01:20:20 INFO  Job:1367 -  map 67% reduce 0%
2020-11-08 01:20:24 INFO  Job:1367 -  map 100% reduce 0%
2020-11-08 01:20:29 INFO  Job:1367 -  map 100% reduce 100%
2020-11-08 01:20:29 INFO  Job:1378 - Job job_1604798204049_0004 completed successfully
2020-11-08 01:20:29 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36312
		Total time spent by all reduces in occupied slots (ms)=13212
		Total time spent by all map tasks (ms)=9078
		Total time spent by all reduce tasks (ms)=3303
		Total vcore-milliseconds taken by all map tasks=9078
		Total vcore-milliseconds taken by all reduce tasks=3303
		Total megabyte-milliseconds taken by all map tasks=37183488
		Total megabyte-milliseconds taken by all reduce tasks=13529088
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=6580
		Physical memory (bytes) snapshot=1159352320
		Virtual memory (bytes) snapshot=15790936064
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201108 01:20:29.699" starttime="20201108 01:20:29.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:20:29.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:20:29.700" starttime="20201108 01:20:29.699"></status>
</kw>
<status status="PASS" endtime="20201108 01:20:29.700" starttime="20201108 01:19:58.359"></status>
</kw>
<msg timestamp="20201108 01:20:29.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:20:29.700" starttime="20201108 01:19:58.359"></status>
</kw>
<msg timestamp="20201108 01:20:29.701" level="INFO">${output} = 2020-11-08 01:19:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:20:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201108 01:20:29.701" starttime="20201108 01:19:58.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201108 01:20:29.701" starttime="20201108 01:20:29.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:20:29.702" starttime="20201108 01:20:29.701"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:20:29.702" critical="yes" starttime="20201108 01:19:58.326"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201108 01:20:29.703" starttime="20201108 01:19:23.116"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:53.622" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:17:53.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:17:53.627" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:17:53.627" starttime="20201108 01:17:53.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:17:53.628" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:17:53.628" starttime="20201108 01:17:53.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:17:53.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:17:53.628" starttime="20201108 01:17:53.628"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:53.628" starttime="20201108 01:17:53.617"></status>
</kw>
<msg timestamp="20201108 01:17:53.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:17:53.629" starttime="20201108 01:17:53.617"></status>
</kw>
<msg timestamp="20201108 01:17:53.629" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:17:53.629" starttime="20201108 01:17:53.617"></status>
</kw>
<msg timestamp="20201108 01:17:53.629" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:17:53.629" starttime="20201108 01:17:53.616"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:17:53.633" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:17:53.633" starttime="20201108 01:17:53.633"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:17:53.634" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:17:53.634" starttime="20201108 01:17:53.633"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:53.634" starttime="20201108 01:17:53.631"></status>
</kw>
<msg timestamp="20201108 01:17:53.634" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:17:53.634" starttime="20201108 01:17:53.631"></status>
</kw>
<status status="PASS" endtime="20201108 01:17:53.634" starttime="20201108 01:17:53.630"></status>
</kw>
<msg timestamp="20201108 01:17:53.634" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:17:53.634" starttime="20201108 01:17:53.630"></status>
</kw>
<msg timestamp="20201108 01:17:53.634" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:17:53.635" starttime="20201108 01:17:53.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:17:53.638" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:18:32.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:18:32.931" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:17:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:17:55 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201108 01:18:32.931" starttime="20201108 01:17:53.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:18:32.932" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:17:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:17:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 01:17:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-08 01:17:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:17:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD6000C7295A-&gt;7c9f42be-b129-4a69-b55b-910b33f3ac44
2020-11-08 01:17:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-08 01:18:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:18:02 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-08 01:18:02 INFO  JobSubmitter:198 - number of splits:3
2020-11-08 01:18:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604798204049_0001
2020-11-08 01:18:02 INFO  YarnClientImpl:273 - Submitted application application_1604798204049_0001
2020-11-08 01:18:03 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604798204049_0001/
2020-11-08 01:18:03 INFO  Job:1339 - Running job: job_1604798204049_0001
2020-11-08 01:18:12 INFO  Job:1360 - Job job_1604798204049_0001 running in uber mode : false
2020-11-08 01:18:12 INFO  Job:1367 -  map 0% reduce 0%
2020-11-08 01:18:18 INFO  Job:1367 -  map 33% reduce 0%
2020-11-08 01:18:23 INFO  Job:1367 -  map 67% reduce 0%
2020-11-08 01:18:27 INFO  Job:1367 -  map 100% reduce 0%
2020-11-08 01:18:31 INFO  Job:1367 -  map 100% reduce 100%
2020-11-08 01:18:32 INFO  Job:1378 - Job job_1604798204049_0001 completed successfully
2020-11-08 01:18:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35480
		Total time spent by all reduces in occupied slots (ms)=14328
		Total time spent by all map tasks (ms)=8870
		Total time spent by all reduce tasks (ms)=3582
		Total vcore-milliseconds taken by all map tasks=8870
		Total vcore-milliseconds taken by all reduce tasks=3582
		Total megabyte-milliseconds taken by all map tasks=36331520
		Total megabyte-milliseconds taken by all reduce tasks=14671872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=554
		CPU time spent (ms)=6210
		Physical memory (bytes) snapshot=1154576384
		Virtual memory (bytes) snapshot=15784763392
		Total committed heap usage (bytes)=1045954560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.798 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201108 01:18:32.933" starttime="20201108 01:18:32.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:18:32.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:18:32.933" starttime="20201108 01:18:32.933"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.933" starttime="20201108 01:17:53.635"></status>
</kw>
<msg timestamp="20201108 01:18:32.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:18:32.934" starttime="20201108 01:17:53.635"></status>
</kw>
<msg timestamp="20201108 01:18:32.934" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:17:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:17:55 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201108 01:18:32.934" starttime="20201108 01:17:53.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:18:32.934" starttime="20201108 01:18:32.934"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:18:32.935" critical="yes" starttime="20201108 01:17:53.616"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:18:32.939" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:18:32.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:18:32.945" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:18:32.945" starttime="20201108 01:18:32.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:18:32.945" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:18:32.945" starttime="20201108 01:18:32.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:18:32.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:18:32.946" starttime="20201108 01:18:32.946"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.946" starttime="20201108 01:18:32.937"></status>
</kw>
<msg timestamp="20201108 01:18:32.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:18:32.946" starttime="20201108 01:18:32.937"></status>
</kw>
<msg timestamp="20201108 01:18:32.947" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:18:32.947" starttime="20201108 01:18:32.936"></status>
</kw>
<msg timestamp="20201108 01:18:32.947" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201108 01:18:32.947" starttime="20201108 01:18:32.936"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:18:32.947" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201108 01:18:32.947" starttime="20201108 01:18:32.947"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:18:32.951" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:18:32.951" starttime="20201108 01:18:32.950"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:18:32.951" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:18:32.951" starttime="20201108 01:18:32.951"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.952" starttime="20201108 01:18:32.950"></status>
</kw>
<msg timestamp="20201108 01:18:32.952" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:18:32.952" starttime="20201108 01:18:32.949"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.952" starttime="20201108 01:18:32.949"></status>
</kw>
<msg timestamp="20201108 01:18:32.952" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:18:32.952" starttime="20201108 01:18:32.948"></status>
</kw>
<msg timestamp="20201108 01:18:32.952" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:18:32.952" starttime="20201108 01:18:32.948"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:18:32.955" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:18:32.955" starttime="20201108 01:18:32.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:18:32.956" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:18:32.956" starttime="20201108 01:18:32.955"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.956" starttime="20201108 01:18:32.954"></status>
</kw>
<msg timestamp="20201108 01:18:32.956" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:18:32.956" starttime="20201108 01:18:32.954"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.956" starttime="20201108 01:18:32.953"></status>
</kw>
<msg timestamp="20201108 01:18:32.956" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:18:32.956" starttime="20201108 01:18:32.953"></status>
</kw>
<msg timestamp="20201108 01:18:32.956" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:18:32.956" starttime="20201108 01:18:32.952"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:18:32.960" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:18:32.960" starttime="20201108 01:18:32.959"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:18:32.960" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:18:32.961" starttime="20201108 01:18:32.960"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.961" starttime="20201108 01:18:32.959"></status>
</kw>
<msg timestamp="20201108 01:18:32.961" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:18:32.961" starttime="20201108 01:18:32.958"></status>
</kw>
<status status="PASS" endtime="20201108 01:18:32.961" starttime="20201108 01:18:32.958"></status>
</kw>
<msg timestamp="20201108 01:18:32.961" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201108 01:18:32.961" starttime="20201108 01:18:32.957"></status>
</kw>
<msg timestamp="20201108 01:18:32.961" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201108 01:18:32.961" starttime="20201108 01:18:32.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:18:32.966" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:19:09.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:19:09.833" level="INFO">${output} = 2020-11-08 01:18:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:18:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201108 01:19:09.833" starttime="20201108 01:18:32.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:19:09.834" level="INFO">2020-11-08 01:18:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:18:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:18:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:18:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-08 01:18:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-08 01:18:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:18:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6579363A5E9B-&gt;7c9f42be-b129-4a69-b55b-910b33f3ac44
2020-11-08 01:18:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:18:36 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-08 01:18:36 INFO  JobSubmitter:198 - number of splits:3
2020-11-08 01:18:38 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604798204049_0002
2020-11-08 01:18:39 INFO  YarnClientImpl:273 - Submitted application application_1604798204049_0002
2020-11-08 01:18:39 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604798204049_0002/
2020-11-08 01:18:39 INFO  Job:1339 - Running job: job_1604798204049_0002
2020-11-08 01:18:46 INFO  Job:1360 - Job job_1604798204049_0002 running in uber mode : false
2020-11-08 01:18:46 INFO  Job:1367 -  map 0% reduce 0%
2020-11-08 01:18:52 INFO  Job:1367 -  map 33% reduce 0%
2020-11-08 01:18:57 INFO  Job:1367 -  map 67% reduce 0%
2020-11-08 01:19:02 INFO  Job:1367 -  map 100% reduce 0%
2020-11-08 01:19:06 INFO  Job:1367 -  map 100% reduce 100%
2020-11-08 01:19:09 INFO  Job:1378 - Job job_1604798204049_0002 completed successfully
2020-11-08 01:19:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36132
		Total time spent by all reduces in occupied slots (ms)=12864
		Total time spent by all map tasks (ms)=9033
		Total time spent by all reduce tasks (ms)=3216
		Total vcore-milliseconds taken by all map tasks=9033
		Total vcore-milliseconds taken by all reduce tasks=3216
		Total megabyte-milliseconds taken by all map tasks=36999168
		Total megabyte-milliseconds taken by all reduce tasks=13172736
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=554
		CPU time spent (ms)=6500
		Physical memory (bytes) snapshot=1168773120
		Virtual memory (bytes) snapshot=15791583232
		Total committed heap usage (bytes)=1048576000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201108 01:19:09.834" starttime="20201108 01:19:09.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:19:09.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:19:09.835" starttime="20201108 01:19:09.834"></status>
</kw>
<status status="PASS" endtime="20201108 01:19:09.835" starttime="20201108 01:18:32.962"></status>
</kw>
<msg timestamp="20201108 01:19:09.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:19:09.836" starttime="20201108 01:18:32.962"></status>
</kw>
<msg timestamp="20201108 01:19:09.836" level="INFO">${output} = 2020-11-08 01:18:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-08 01:18:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201108 01:19:09.836" starttime="20201108 01:18:32.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201108 01:19:09.836" starttime="20201108 01:19:09.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:19:09.837" starttime="20201108 01:19:09.836"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:19:09.837" critical="yes" starttime="20201108 01:18:32.935"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201108 01:19:09.838" starttime="20201108 01:17:53.564"></status>
</suite>
<status status="PASS" elapsedtime="177980" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:32.116" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:34.151" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:21:34.151" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:21:34.151" starttime="20201108 01:21:32.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:34.152" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:21:34.152" starttime="20201108 01:21:34.152"></status>
</kw>
<msg timestamp="20201108 01:21:34.153" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:21:34.153" starttime="20201108 01:21:32.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:34.158" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:35.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:35.948" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:35.948" starttime="20201108 01:21:34.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:35.949" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:35.949" starttime="20201108 01:21:35.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:35.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:35.950" starttime="20201108 01:21:35.950"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:35.950" starttime="20201108 01:21:34.155"></status>
</kw>
<msg timestamp="20201108 01:21:35.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:35.951" starttime="20201108 01:21:34.155"></status>
</kw>
<msg timestamp="20201108 01:21:35.951" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201108 01:21:35.951" starttime="20201108 01:21:34.154"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201108 01:21:35.951" starttime="20201108 01:21:35.951"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:35.951" starttime="20201108 01:21:34.153"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:35.952" starttime="20201108 01:21:34.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:35.956" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:37.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:37.769" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:37.769" starttime="20201108 01:21:35.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:37.770" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:37.771" starttime="20201108 01:21:37.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:37.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:37.771" starttime="20201108 01:21:37.771"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:37.772" starttime="20201108 01:21:35.953"></status>
</kw>
<msg timestamp="20201108 01:21:37.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:37.772" starttime="20201108 01:21:35.953"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:37.772" starttime="20201108 01:21:35.953"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:37.772" starttime="20201108 01:21:35.952"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:37.772" starttime="20201108 01:21:35.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201108 01:21:37.773" starttime="20201108 01:21:37.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:37.777" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:39.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:39.726" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:21:37.646Z",
  "modificat...</msg>
<status status="PASS" endtime="20201108 01:21:39.726" starttime="20201108 01:21:37.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:39.727" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:21:37.646Z",
  "modificationTime" : "2020-11-08T01:21:37.646Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201108 01:21:39.727" starttime="20201108 01:21:39.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:39.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:39.728" starttime="20201108 01:21:39.728"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:39.728" starttime="20201108 01:21:37.774"></status>
</kw>
<msg timestamp="20201108 01:21:39.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:39.728" starttime="20201108 01:21:37.773"></status>
</kw>
<msg timestamp="20201108 01:21:39.729" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:21:37.646Z",
  "modificat...</msg>
<status status="PASS" endtime="20201108 01:21:39.729" starttime="20201108 01:21:37.773"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201108 01:21:39.729" starttime="20201108 01:21:39.729"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:21:39.733" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:21:39.733" starttime="20201108 01:21:39.732"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:21:39.733" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:21:39.733" starttime="20201108 01:21:39.733"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:39.733" starttime="20201108 01:21:39.732"></status>
</kw>
<msg timestamp="20201108 01:21:39.733" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:21:39.733" starttime="20201108 01:21:39.731"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:39.734" starttime="20201108 01:21:39.731"></status>
</kw>
<msg timestamp="20201108 01:21:39.734" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:21:39.734" starttime="20201108 01:21:39.730"></status>
</kw>
<msg timestamp="20201108 01:21:39.734" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:21:39.734" starttime="20201108 01:21:39.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:39.738" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:41.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:41.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:41.503" starttime="20201108 01:21:39.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:41.504" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:41.504" starttime="20201108 01:21:41.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:41.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:41.505" starttime="20201108 01:21:41.505"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:41.505" starttime="20201108 01:21:39.735"></status>
</kw>
<msg timestamp="20201108 01:21:41.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:41.505" starttime="20201108 01:21:39.735"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:41.506" starttime="20201108 01:21:39.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:41.510" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:46.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:46.329" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:46.329" starttime="20201108 01:21:41.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:46.331" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:46.331" starttime="20201108 01:21:46.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:46.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:46.331" starttime="20201108 01:21:46.331"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:46.332" starttime="20201108 01:21:41.507"></status>
</kw>
<msg timestamp="20201108 01:21:46.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:46.332" starttime="20201108 01:21:41.506"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:46.332" starttime="20201108 01:21:41.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:46.335" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:49.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:49.783" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:49.783" starttime="20201108 01:21:46.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:49.784" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:49.784" starttime="20201108 01:21:49.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:49.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:49.785" starttime="20201108 01:21:49.784"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:49.785" starttime="20201108 01:21:46.333"></status>
</kw>
<msg timestamp="20201108 01:21:49.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:49.785" starttime="20201108 01:21:46.333"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:49.785" starttime="20201108 01:21:46.332"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:49.789" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:53.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:53.291" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:53.291" starttime="20201108 01:21:49.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:53.292" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:53.292" starttime="20201108 01:21:53.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:53.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:53.293" starttime="20201108 01:21:53.292"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:53.293" starttime="20201108 01:21:49.786"></status>
</kw>
<msg timestamp="20201108 01:21:53.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:53.293" starttime="20201108 01:21:49.786"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:53.293" starttime="20201108 01:21:49.785"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:21:53.293" critical="yes" starttime="20201108 01:21:32.110"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:21:53.298" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:21:53.298" starttime="20201108 01:21:53.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:21:53.298" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:21:53.298" starttime="20201108 01:21:53.298"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:53.299" starttime="20201108 01:21:53.297"></status>
</kw>
<msg timestamp="20201108 01:21:53.299" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:21:53.299" starttime="20201108 01:21:53.296"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:53.299" starttime="20201108 01:21:53.296"></status>
</kw>
<msg timestamp="20201108 01:21:53.299" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:21:53.299" starttime="20201108 01:21:53.295"></status>
</kw>
<msg timestamp="20201108 01:21:53.299" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:21:53.299" starttime="20201108 01:21:53.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:53.303" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:55.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:55.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:55.270" starttime="20201108 01:21:53.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:55.271" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:55.271" starttime="20201108 01:21:55.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:55.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:55.272" starttime="20201108 01:21:55.271"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:55.272" starttime="20201108 01:21:53.300"></status>
</kw>
<msg timestamp="20201108 01:21:55.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:55.272" starttime="20201108 01:21:53.300"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:55.272" starttime="20201108 01:21:53.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:21:55.277" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:21:57.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:21:57.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:21:57.218" starttime="20201108 01:21:55.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:21:57.219" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:21:57.219" starttime="20201108 01:21:57.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:21:57.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:21:57.220" starttime="20201108 01:21:57.219"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:57.220" starttime="20201108 01:21:55.273"></status>
</kw>
<msg timestamp="20201108 01:21:57.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:21:57.220" starttime="20201108 01:21:55.273"></status>
</kw>
<status status="PASS" endtime="20201108 01:21:57.221" starttime="20201108 01:21:55.272"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:21:57.221" critical="yes" starttime="20201108 01:21:53.294"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201108 01:21:57.222" starttime="20201108 01:21:32.063"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:23:26.030" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:23:26.030" starttime="20201108 01:23:26.030"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:23:26.031" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:23:26.031" starttime="20201108 01:23:26.030"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:26.031" starttime="20201108 01:23:26.029"></status>
</kw>
<msg timestamp="20201108 01:23:26.031" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:23:26.031" starttime="20201108 01:23:26.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:23:26.032" starttime="20201108 01:23:26.032"></status>
</kw>
<msg timestamp="20201108 01:23:26.032" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:23:26.032" starttime="20201108 01:23:26.031"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:26.032" starttime="20201108 01:23:26.028"></status>
</kw>
<msg timestamp="20201108 01:23:26.032" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:23:26.032" starttime="20201108 01:23:26.028"></status>
</kw>
<msg timestamp="20201108 01:23:26.033" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:23:26.033" starttime="20201108 01:23:26.027"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:23:26.033" level="INFO">${random} = 63164</msg>
<status status="PASS" endtime="20201108 01:23:26.033" starttime="20201108 01:23:26.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:23:26.038" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-63164 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:23:29.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:23:29.450" level="INFO">${output} = 2020-11-08 01:23:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:23:29.450" starttime="20201108 01:23:26.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:23:29.451" level="INFO">2020-11-08 01:23:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-08 01:23:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:23:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:23:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:23:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:23:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-853477D1D2CB-&gt;71d34d0a-781f-4cf7-afef-cda0fe196bd0
2020-11-08 01:23:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:23:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:23:29.451" starttime="20201108 01:23:29.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:23:29.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:23:29.452" starttime="20201108 01:23:29.452"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:29.452" starttime="20201108 01:23:26.034"></status>
</kw>
<msg timestamp="20201108 01:23:29.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:23:29.452" starttime="20201108 01:23:26.034"></status>
</kw>
<msg timestamp="20201108 01:23:29.453" level="INFO">${result} = 2020-11-08 01:23:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:23:29.453" starttime="20201108 01:23:26.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:23:29.458" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:23:31.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:23:31.086" level="INFO">${output} = 2020-11-08 01:23:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:23:31.086" starttime="20201108 01:23:29.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:23:31.087" level="INFO">2020-11-08 01:23:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:30 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-08 01:23 ofs://om/volume1/bucket1/ozone-63164
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-08 01:22 ofs://om/volume1/bucket1/ozone-76366
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:21 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:22 ofs://om/volume1/bucket1/wordcount-52.txt
2020-11-08 01:23:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:23:31.088" starttime="20201108 01:23:31.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:23:31.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:23:31.088" starttime="20201108 01:23:31.088"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:31.088" starttime="20201108 01:23:29.455"></status>
</kw>
<msg timestamp="20201108 01:23:31.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:23:31.089" starttime="20201108 01:23:29.455"></status>
</kw>
<msg timestamp="20201108 01:23:31.089" level="INFO">${result} = 2020-11-08 01:23:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:23:31.089" starttime="20201108 01:23:29.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:23:31.089" starttime="20201108 01:23:31.089"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:23:31.090" critical="yes" starttime="20201108 01:23:26.026"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201108 01:23:31.091" starttime="20201108 01:23:25.981"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:22:01.520" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:22:01.520" starttime="20201108 01:22:01.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:22:01.521" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:22:01.521" starttime="20201108 01:22:01.520"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:01.521" starttime="20201108 01:22:01.519"></status>
</kw>
<msg timestamp="20201108 01:22:01.521" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:22:01.521" starttime="20201108 01:22:01.519"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:01.521" starttime="20201108 01:22:01.518"></status>
</kw>
<msg timestamp="20201108 01:22:01.522" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:22:01.522" starttime="20201108 01:22:01.518"></status>
</kw>
<msg timestamp="20201108 01:22:01.522" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:22:01.522" starttime="20201108 01:22:01.517"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:22:01.522" level="INFO">${random} = 76366</msg>
<status status="PASS" endtime="20201108 01:22:01.522" starttime="20201108 01:22:01.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:22:01.528" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76366 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:22:04.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:22:04.903" level="INFO">${output} = 2020-11-08 01:22:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:22:04.904" starttime="20201108 01:22:01.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:22:04.905" level="INFO">2020-11-08 01:22:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-08 01:22:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:22:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:22:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:22:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:22:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F4BE37561636-&gt;71d34d0a-781f-4cf7-afef-cda0fe196bd0
2020-11-08 01:22:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:22:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:22:04.905" starttime="20201108 01:22:04.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:22:04.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:22:04.905" starttime="20201108 01:22:04.905"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:04.905" starttime="20201108 01:22:01.523"></status>
</kw>
<msg timestamp="20201108 01:22:04.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:22:04.906" starttime="20201108 01:22:01.523"></status>
</kw>
<msg timestamp="20201108 01:22:04.906" level="INFO">${result} = 2020-11-08 01:22:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:22:04.906" starttime="20201108 01:22:01.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:22:04.910" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:22:06.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:22:06.544" level="INFO">${output} = 2020-11-08 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:22:06.544" starttime="20201108 01:22:04.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:22:06.545" level="INFO">2020-11-08 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-08 01:22 o3fs://bucket1.volume1.om/ozone-76366
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:21 o3fs://bucket1.volume1.om/user
2020-11-08 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:22:06.545" starttime="20201108 01:22:06.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:22:06.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:22:06.546" starttime="20201108 01:22:06.545"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:06.546" starttime="20201108 01:22:04.908"></status>
</kw>
<msg timestamp="20201108 01:22:06.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:22:06.546" starttime="20201108 01:22:04.907"></status>
</kw>
<msg timestamp="20201108 01:22:06.546" level="INFO">${result} = 2020-11-08 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:22:06.546" starttime="20201108 01:22:04.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:22:06.547" starttime="20201108 01:22:06.547"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:22:06.547" critical="yes" starttime="20201108 01:22:01.516"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201108 01:22:06.548" starttime="20201108 01:22:01.468"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:23:35.345" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:23:35.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:23:35.352" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:23:35.352" starttime="20201108 01:23:35.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:23:35.353" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:23:35.353" starttime="20201108 01:23:35.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:23:35.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:23:35.353" starttime="20201108 01:23:35.353"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:35.354" starttime="20201108 01:23:35.340"></status>
</kw>
<msg timestamp="20201108 01:23:35.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:23:35.354" starttime="20201108 01:23:35.340"></status>
</kw>
<msg timestamp="20201108 01:23:35.354" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:23:35.354" starttime="20201108 01:23:35.340"></status>
</kw>
<msg timestamp="20201108 01:23:35.354" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:23:35.354" starttime="20201108 01:23:35.339"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:23:35.358" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:23:35.358" starttime="20201108 01:23:35.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:23:35.359" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:23:35.359" starttime="20201108 01:23:35.359"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:35.359" starttime="20201108 01:23:35.357"></status>
</kw>
<msg timestamp="20201108 01:23:35.359" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:23:35.359" starttime="20201108 01:23:35.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:23:35.360" starttime="20201108 01:23:35.360"></status>
</kw>
<msg timestamp="20201108 01:23:35.360" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:23:35.360" starttime="20201108 01:23:35.359"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:35.360" starttime="20201108 01:23:35.356"></status>
</kw>
<msg timestamp="20201108 01:23:35.361" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:23:35.361" starttime="20201108 01:23:35.355"></status>
</kw>
<msg timestamp="20201108 01:23:35.361" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:23:35.361" starttime="20201108 01:23:35.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:23:35.364" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:24:09.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:24:09.358" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23...</msg>
<status status="PASS" endtime="20201108 01:24:09.358" starttime="20201108 01:23:35.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:24:09.359" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-08 01:23:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:23:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:23:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:23:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:23:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D3E8535D57B2-&gt;71d34d0a-781f-4cf7-afef-cda0fe196bd0
2020-11-08 01:23:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-08 01:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-08 01:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:38 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:23:38 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:23:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798470837_0003
2020-11-08 01:23:39 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:39 INFO  Configuration:2752 - resource-types.xml not found
2020-11-08 01:23:39 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-08 01:23:39 INFO  YarnClientImpl:324 - Submitted application application_1604798470837_0003
2020-11-08 01:23:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798470837_0003/
2020-11-08 01:23:39 INFO  Job:1619 - Running job: job_1604798470837_0003
2020-11-08 01:23:46 INFO  Job:1640 - Job job_1604798470837_0003 running in uber mode : false
2020-11-08 01:23:46 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:23:52 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:23:57 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:24:02 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:24:07 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:24:08 INFO  Job:1658 - Job job_1604798470837_0003 completed successfully
2020-11-08 01:24:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35844
		Total time spent by all reduces in occupied slots (ms)=17528
		Total time spent by all map tasks (ms)=8961
		Total time spent by all reduce tasks (ms)=4382
		Total vcore-milliseconds taken by all map tasks=8961
		Total vcore-milliseconds taken by all reduce tasks=4382
		Total megabyte-milliseconds taken by all map tasks=36704256
		Total megabyte-milliseconds taken by all reduce tasks=17948672
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=647
		CPU time spent (ms)=6330
		Physical memory (bytes) snapshot=1209729024
		Virtual memory (bytes) snapshot=15810826240
		Total committed heap usage (bytes)=1066926080
		Peak Map Physical memory (bytes)=309096448
		Peak Map Virtual memory (bytes)=3953344512
		Peak Reduce Physical memory (bytes)=296128512
		Peak Reduce Virtual memory (bytes)=3964174336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.552 seconds
2020-11-08 01:24:08 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-08 01:24:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:24:09.359" starttime="20201108 01:24:09.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:24:09.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:24:09.360" starttime="20201108 01:24:09.359"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.360" starttime="20201108 01:23:35.362"></status>
</kw>
<msg timestamp="20201108 01:24:09.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:24:09.360" starttime="20201108 01:23:35.361"></status>
</kw>
<msg timestamp="20201108 01:24:09.361" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23...</msg>
<status status="PASS" endtime="20201108 01:24:09.361" starttime="20201108 01:23:35.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:24:09.361" starttime="20201108 01:24:09.361"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:24:09.361" critical="yes" starttime="20201108 01:23:35.337"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:24:09.366" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:24:09.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:24:09.372" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:24:09.372" starttime="20201108 01:24:09.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:24:09.372" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:24:09.372" starttime="20201108 01:24:09.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:24:09.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:24:09.373" starttime="20201108 01:24:09.373"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.373" starttime="20201108 01:24:09.364"></status>
</kw>
<msg timestamp="20201108 01:24:09.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:24:09.373" starttime="20201108 01:24:09.363"></status>
</kw>
<msg timestamp="20201108 01:24:09.374" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:24:09.374" starttime="20201108 01:24:09.363"></status>
</kw>
<msg timestamp="20201108 01:24:09.374" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:24:09.374" starttime="20201108 01:24:09.363"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:24:09.374" level="INFO">${random} = 68</msg>
<status status="PASS" endtime="20201108 01:24:09.374" starttime="20201108 01:24:09.374"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:24:09.378" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:24:09.378" starttime="20201108 01:24:09.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:24:09.378" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:24:09.378" starttime="20201108 01:24:09.378"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.379" starttime="20201108 01:24:09.377"></status>
</kw>
<msg timestamp="20201108 01:24:09.379" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:24:09.379" starttime="20201108 01:24:09.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:24:09.380" starttime="20201108 01:24:09.379"></status>
</kw>
<msg timestamp="20201108 01:24:09.380" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:24:09.380" starttime="20201108 01:24:09.379"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.380" starttime="20201108 01:24:09.376"></status>
</kw>
<msg timestamp="20201108 01:24:09.380" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:24:09.380" starttime="20201108 01:24:09.375"></status>
</kw>
<msg timestamp="20201108 01:24:09.380" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:24:09.380" starttime="20201108 01:24:09.375"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:24:09.383" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:24:09.383" starttime="20201108 01:24:09.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:24:09.384" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:24:09.384" starttime="20201108 01:24:09.383"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.384" starttime="20201108 01:24:09.382"></status>
</kw>
<msg timestamp="20201108 01:24:09.384" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:24:09.384" starttime="20201108 01:24:09.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:24:09.385" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201108 01:24:09.385" starttime="20201108 01:24:09.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:24:09.386" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201108 01:24:09.386" starttime="20201108 01:24:09.385"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.386" starttime="20201108 01:24:09.385"></status>
</kw>
<msg timestamp="20201108 01:24:09.386" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201108 01:24:09.386" starttime="20201108 01:24:09.384"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.386" starttime="20201108 01:24:09.381"></status>
</kw>
<msg timestamp="20201108 01:24:09.387" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201108 01:24:09.387" starttime="20201108 01:24:09.381"></status>
</kw>
<msg timestamp="20201108 01:24:09.387" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201108 01:24:09.387" starttime="20201108 01:24:09.380"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:24:09.390" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:24:09.390" starttime="20201108 01:24:09.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:24:09.390" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:24:09.390" starttime="20201108 01:24:09.390"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.390" starttime="20201108 01:24:09.389"></status>
</kw>
<msg timestamp="20201108 01:24:09.390" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:24:09.390" starttime="20201108 01:24:09.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:24:09.392" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201108 01:24:09.392" starttime="20201108 01:24:09.391"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:24:09.392" level="INFO">${result} = /wordcount-68.txt</msg>
<status status="PASS" endtime="20201108 01:24:09.392" starttime="20201108 01:24:09.392"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.392" starttime="20201108 01:24:09.391"></status>
</kw>
<msg timestamp="20201108 01:24:09.393" level="INFO">${path_with_leading} = /wordcount-68.txt</msg>
<status status="PASS" endtime="20201108 01:24:09.393" starttime="20201108 01:24:09.391"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:09.393" starttime="20201108 01:24:09.388"></status>
</kw>
<msg timestamp="20201108 01:24:09.393" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-68.txt</msg>
<status status="PASS" endtime="20201108 01:24:09.393" starttime="20201108 01:24:09.387"></status>
</kw>
<msg timestamp="20201108 01:24:09.393" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-68.txt</msg>
<status status="PASS" endtime="20201108 01:24:09.393" starttime="20201108 01:24:09.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:24:09.398" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-68.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:24:42.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:24:42.969" level="INFO">${output} = 2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:24:42.969" starttime="20201108 01:24:09.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:24:42.970" level="INFO">2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-08 01:24:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:24:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:11 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-08 01:24:11 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:24:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:24:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:24:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:24:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-966BAAF775FD-&gt;71d34d0a-781f-4cf7-afef-cda0fe196bd0
2020-11-08 01:24:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:24:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:24:12 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:24:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798470837_0004
2020-11-08 01:24:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:24:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:13 INFO  Configuration:2752 - resource-types.xml not found
2020-11-08 01:24:13 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-08 01:24:13 INFO  YarnClientImpl:324 - Submitted application application_1604798470837_0004
2020-11-08 01:24:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798470837_0004/
2020-11-08 01:24:13 INFO  Job:1619 - Running job: job_1604798470837_0004
2020-11-08 01:24:21 INFO  Job:1640 - Job job_1604798470837_0004 running in uber mode : false
2020-11-08 01:24:21 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:24:27 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:24:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:24:37 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:24:42 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:24:42 INFO  Job:1658 - Job job_1604798470837_0004 completed successfully
2020-11-08 01:24:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083691
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36816
		Total time spent by all reduces in occupied slots (ms)=13548
		Total time spent by all map tasks (ms)=9204
		Total time spent by all reduce tasks (ms)=3387
		Total vcore-milliseconds taken by all map tasks=9204
		Total vcore-milliseconds taken by all reduce tasks=3387
		Total megabyte-milliseconds taken by all map tasks=37699584
		Total megabyte-milliseconds taken by all reduce tasks=13873152
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=566
		CPU time spent (ms)=6250
		Physical memory (bytes) snapshot=1200017408
		Virtual memory (bytes) snapshot=15783714816
		Total committed heap usage (bytes)=1069023232
		Peak Map Physical memory (bytes)=310792192
		Peak Map Virtual memory (bytes)=3946401792
		Peak Reduce Physical memory (bytes)=297066496
		Peak Reduce Virtual memory (bytes)=3968901120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-08 01:24:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:24:42.970" starttime="20201108 01:24:42.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:24:42.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:24:42.971" starttime="20201108 01:24:42.970"></status>
</kw>
<status status="PASS" endtime="20201108 01:24:42.971" starttime="20201108 01:24:09.394"></status>
</kw>
<msg timestamp="20201108 01:24:42.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:24:42.971" starttime="20201108 01:24:09.394"></status>
</kw>
<msg timestamp="20201108 01:24:42.972" level="INFO">${output} = 2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:24:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:24:42.972" starttime="20201108 01:24:09.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201108 01:24:42.972" starttime="20201108 01:24:42.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:24:42.973" starttime="20201108 01:24:42.972"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:24:42.973" critical="yes" starttime="20201108 01:24:09.362"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201108 01:24:42.974" starttime="20201108 01:23:35.290"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:22:10.858" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:22:10.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:22:10.864" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:10.864" starttime="20201108 01:22:10.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:22:10.864" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:10.865" starttime="20201108 01:22:10.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:22:10.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:22:10.865" starttime="20201108 01:22:10.865"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:10.865" starttime="20201108 01:22:10.853"></status>
</kw>
<msg timestamp="20201108 01:22:10.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:22:10.866" starttime="20201108 01:22:10.853"></status>
</kw>
<msg timestamp="20201108 01:22:10.866" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:10.866" starttime="20201108 01:22:10.853"></status>
</kw>
<msg timestamp="20201108 01:22:10.866" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:10.866" starttime="20201108 01:22:10.852"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:22:10.870" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:22:10.870" starttime="20201108 01:22:10.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:22:10.871" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:22:10.871" starttime="20201108 01:22:10.870"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:10.871" starttime="20201108 01:22:10.868"></status>
</kw>
<msg timestamp="20201108 01:22:10.871" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:22:10.871" starttime="20201108 01:22:10.868"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:10.871" starttime="20201108 01:22:10.867"></status>
</kw>
<msg timestamp="20201108 01:22:10.871" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:22:10.871" starttime="20201108 01:22:10.867"></status>
</kw>
<msg timestamp="20201108 01:22:10.872" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:22:10.872" starttime="20201108 01:22:10.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:22:10.875" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:22:47.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:22:47.812" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:22:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22...</msg>
<status status="PASS" endtime="20201108 01:22:47.812" starttime="20201108 01:22:10.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:22:47.813" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:22:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-08 01:22:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:22:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:22:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:22:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:22:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FC785F3A5909-&gt;71d34d0a-781f-4cf7-afef-cda0fe196bd0
2020-11-08 01:22:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-08 01:22:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-08 01:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:22:14 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:22:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798470837_0001
2020-11-08 01:22:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:14 INFO  Configuration:2752 - resource-types.xml not found
2020-11-08 01:22:14 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-08 01:22:15 INFO  YarnClientImpl:324 - Submitted application application_1604798470837_0001
2020-11-08 01:22:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798470837_0001/
2020-11-08 01:22:15 INFO  Job:1619 - Running job: job_1604798470837_0001
2020-11-08 01:22:24 INFO  Job:1640 - Job job_1604798470837_0001 running in uber mode : false
2020-11-08 01:22:24 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:22:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:22:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:22:41 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:22:45 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:22:47 INFO  Job:1658 - Job job_1604798470837_0001 completed successfully
2020-11-08 01:22:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36444
		Total time spent by all reduces in occupied slots (ms)=13364
		Total time spent by all map tasks (ms)=9111
		Total time spent by all reduce tasks (ms)=3341
		Total vcore-milliseconds taken by all map tasks=9111
		Total vcore-milliseconds taken by all reduce tasks=3341
		Total megabyte-milliseconds taken by all map tasks=37318656
		Total megabyte-milliseconds taken by all reduce tasks=13684736
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=5990
		Physical memory (bytes) snapshot=1226395648
		Virtual memory (bytes) snapshot=15800659968
		Total committed heap usage (bytes)=1073741824
		Peak Map Physical memory (bytes)=324366336
		Peak Map Virtual memory (bytes)=3953524736
		Peak Reduce Physical memory (bytes)=290177024
		Peak Reduce Virtual memory (bytes)=3963674624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.314 seconds
2020-11-08 01:22:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:47 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-08 01:22:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:22:47.813" starttime="20201108 01:22:47.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:22:47.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:22:47.814" starttime="20201108 01:22:47.813"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.814" starttime="20201108 01:22:10.872"></status>
</kw>
<msg timestamp="20201108 01:22:47.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:22:47.814" starttime="20201108 01:22:10.872"></status>
</kw>
<msg timestamp="20201108 01:22:47.815" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:22:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22...</msg>
<status status="PASS" endtime="20201108 01:22:47.815" starttime="20201108 01:22:10.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:22:47.815" starttime="20201108 01:22:47.815"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:22:47.815" critical="yes" starttime="20201108 01:22:10.852"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:22:47.820" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:22:47.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:22:47.825" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:47.825" starttime="20201108 01:22:47.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:22:47.826" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:47.826" starttime="20201108 01:22:47.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:22:47.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:22:47.826" starttime="20201108 01:22:47.826"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.827" starttime="20201108 01:22:47.818"></status>
</kw>
<msg timestamp="20201108 01:22:47.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:22:47.827" starttime="20201108 01:22:47.817"></status>
</kw>
<msg timestamp="20201108 01:22:47.827" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:47.827" starttime="20201108 01:22:47.817"></status>
</kw>
<msg timestamp="20201108 01:22:47.827" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201108 01:22:47.827" starttime="20201108 01:22:47.817"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:22:47.828" level="INFO">${random} = 52</msg>
<status status="PASS" endtime="20201108 01:22:47.828" starttime="20201108 01:22:47.827"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:22:47.831" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:22:47.831" starttime="20201108 01:22:47.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:22:47.832" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:22:47.832" starttime="20201108 01:22:47.831"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.832" starttime="20201108 01:22:47.830"></status>
</kw>
<msg timestamp="20201108 01:22:47.832" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:22:47.832" starttime="20201108 01:22:47.830"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.832" starttime="20201108 01:22:47.829"></status>
</kw>
<msg timestamp="20201108 01:22:47.832" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:22:47.832" starttime="20201108 01:22:47.829"></status>
</kw>
<msg timestamp="20201108 01:22:47.833" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:22:47.833" starttime="20201108 01:22:47.828"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:22:47.835" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:22:47.835" starttime="20201108 01:22:47.835"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:22:47.836" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:22:47.836" starttime="20201108 01:22:47.836"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.836" starttime="20201108 01:22:47.835"></status>
</kw>
<msg timestamp="20201108 01:22:47.836" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:22:47.836" starttime="20201108 01:22:47.834"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.837" starttime="20201108 01:22:47.834"></status>
</kw>
<msg timestamp="20201108 01:22:47.837" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:22:47.837" starttime="20201108 01:22:47.833"></status>
</kw>
<msg timestamp="20201108 01:22:47.837" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:22:47.837" starttime="20201108 01:22:47.833"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:22:47.840" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:22:47.840" starttime="20201108 01:22:47.839"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:22:47.840" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:22:47.840" starttime="20201108 01:22:47.840"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.841" starttime="20201108 01:22:47.839"></status>
</kw>
<msg timestamp="20201108 01:22:47.841" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:22:47.841" starttime="20201108 01:22:47.839"></status>
</kw>
<status status="PASS" endtime="20201108 01:22:47.841" starttime="20201108 01:22:47.838"></status>
</kw>
<msg timestamp="20201108 01:22:47.841" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20201108 01:22:47.841" starttime="20201108 01:22:47.838"></status>
</kw>
<msg timestamp="20201108 01:22:47.841" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20201108 01:22:47.841" starttime="20201108 01:22:47.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:22:47.844" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-52.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:23:21.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:23:21.736" level="INFO">${output} = 2020-11-08 01:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:23:21.736" starttime="20201108 01:22:47.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:23:21.737" level="INFO">2020-11-08 01:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-08 01:22:49 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-08 01:22:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:22:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:22:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:22:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-505D50AF7E8E-&gt;71d34d0a-781f-4cf7-afef-cda0fe196bd0
2020-11-08 01:22:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:22:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:22:51 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:22:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798470837_0002
2020-11-08 01:22:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:22:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:51 INFO  Configuration:2752 - resource-types.xml not found
2020-11-08 01:22:51 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-08 01:22:51 INFO  YarnClientImpl:324 - Submitted application application_1604798470837_0002
2020-11-08 01:22:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798470837_0002/
2020-11-08 01:22:51 INFO  Job:1619 - Running job: job_1604798470837_0002
2020-11-08 01:23:00 INFO  Job:1640 - Job job_1604798470837_0002 running in uber mode : false
2020-11-08 01:23:00 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:23:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:23:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:23:16 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:23:20 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:23:21 INFO  Job:1658 - Job job_1604798470837_0002 completed successfully
2020-11-08 01:23:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:23:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083775
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35752
		Total time spent by all reduces in occupied slots (ms)=13256
		Total time spent by all map tasks (ms)=8938
		Total time spent by all reduce tasks (ms)=3314
		Total vcore-milliseconds taken by all map tasks=8938
		Total vcore-milliseconds taken by all reduce tasks=3314
		Total megabyte-milliseconds taken by all map tasks=36610048
		Total megabyte-milliseconds taken by all reduce tasks=13574144
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=551
		CPU time spent (ms)=5830
		Physical memory (bytes) snapshot=1195098112
		Virtual memory (bytes) snapshot=15779504128
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=311304192
		Peak Map Virtual memory (bytes)=3944255488
		Peak Reduce Physical memory (bytes)=295276544
		Peak Reduce Virtual memory (bytes)=3969171456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-08 01:23:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201108 01:23:21.738" starttime="20201108 01:23:21.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:23:21.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:23:21.739" starttime="20201108 01:23:21.738"></status>
</kw>
<status status="PASS" endtime="20201108 01:23:21.739" starttime="20201108 01:22:47.842"></status>
</kw>
<msg timestamp="20201108 01:23:21.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:23:21.739" starttime="20201108 01:22:47.842"></status>
</kw>
<msg timestamp="20201108 01:23:21.739" level="INFO">${output} = 2020-11-08 01:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-08 01:22:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201108 01:23:21.739" starttime="20201108 01:22:47.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201108 01:23:21.740" starttime="20201108 01:23:21.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:23:21.740" starttime="20201108 01:23:21.740"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:23:21.740" critical="yes" starttime="20201108 01:22:47.816"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201108 01:23:21.742" starttime="20201108 01:22:10.807"></status>
</suite>
<status status="PASS" elapsedtime="173968" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:25:48.261" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:25:51.750" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:25:51.750" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:25:51.750" starttime="20201108 01:25:48.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:25:51.751" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:25:51.751" starttime="20201108 01:25:51.751"></status>
</kw>
<msg timestamp="20201108 01:25:51.752" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:25:51.752" starttime="20201108 01:25:48.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:25:51.757" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:25:55.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:25:55.903" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:25:55.903" starttime="20201108 01:25:51.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:25:55.904" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:25:55.904" starttime="20201108 01:25:55.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:25:55.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:25:55.905" starttime="20201108 01:25:55.904"></status>
</kw>
<status status="PASS" endtime="20201108 01:25:55.905" starttime="20201108 01:25:51.753"></status>
</kw>
<msg timestamp="20201108 01:25:55.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:25:55.905" starttime="20201108 01:25:51.753"></status>
</kw>
<msg timestamp="20201108 01:25:55.905" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201108 01:25:55.905" starttime="20201108 01:25:51.753"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201108 01:25:55.906" starttime="20201108 01:25:55.906"></status>
</kw>
<status status="PASS" endtime="20201108 01:25:55.906" starttime="20201108 01:25:51.752"></status>
</kw>
<status status="PASS" endtime="20201108 01:25:55.906" starttime="20201108 01:25:51.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:25:55.910" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:25:58.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:25:58.843" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:25:58.843" starttime="20201108 01:25:55.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:25:58.844" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:25:58.844" starttime="20201108 01:25:58.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:25:58.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:25:58.845" starttime="20201108 01:25:58.844"></status>
</kw>
<status status="PASS" endtime="20201108 01:25:58.845" starttime="20201108 01:25:55.908"></status>
</kw>
<msg timestamp="20201108 01:25:58.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:25:58.845" starttime="20201108 01:25:55.908"></status>
</kw>
<status status="PASS" endtime="20201108 01:25:58.845" starttime="20201108 01:25:55.907"></status>
</kw>
<status status="PASS" endtime="20201108 01:25:58.845" starttime="20201108 01:25:55.907"></status>
</kw>
<status status="PASS" endtime="20201108 01:25:58.845" starttime="20201108 01:25:55.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201108 01:25:58.846" starttime="20201108 01:25:58.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:25:58.849" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:01.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:01.605" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:25:58.554Z",
  "modificat...</msg>
<status status="PASS" endtime="20201108 01:26:01.605" starttime="20201108 01:25:58.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:01.607" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:25:58.554Z",
  "modificationTime" : "2020-11-08T01:25:58.554Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201108 01:26:01.607" starttime="20201108 01:26:01.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:01.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:01.607" starttime="20201108 01:26:01.607"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:01.607" starttime="20201108 01:25:58.847"></status>
</kw>
<msg timestamp="20201108 01:26:01.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:01.608" starttime="20201108 01:25:58.846"></status>
</kw>
<msg timestamp="20201108 01:26:01.608" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:25:58.554Z",
  "modificat...</msg>
<status status="PASS" endtime="20201108 01:26:01.608" starttime="20201108 01:25:58.846"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201108 01:26:01.608" starttime="20201108 01:26:01.608"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:26:01.612" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:26:01.612" starttime="20201108 01:26:01.611"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:26:01.612" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:26:01.612" starttime="20201108 01:26:01.612"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:01.613" starttime="20201108 01:26:01.611"></status>
</kw>
<msg timestamp="20201108 01:26:01.613" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:26:01.613" starttime="20201108 01:26:01.611"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:01.613" starttime="20201108 01:26:01.610"></status>
</kw>
<msg timestamp="20201108 01:26:01.613" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:26:01.613" starttime="20201108 01:26:01.609"></status>
</kw>
<msg timestamp="20201108 01:26:01.613" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:26:01.613" starttime="20201108 01:26:01.609"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:01.617" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:04.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:04.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:26:04.790" starttime="20201108 01:26:01.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:04.791" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:26:04.791" starttime="20201108 01:26:04.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:04.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:04.792" starttime="20201108 01:26:04.791"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:04.792" starttime="20201108 01:26:01.614"></status>
</kw>
<msg timestamp="20201108 01:26:04.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:04.792" starttime="20201108 01:26:01.614"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:04.793" starttime="20201108 01:26:01.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:04.796" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:11.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:11.562" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:26:11.562" starttime="20201108 01:26:04.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:11.563" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:26:11.563" starttime="20201108 01:26:11.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:11.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:11.564" starttime="20201108 01:26:11.563"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:11.564" starttime="20201108 01:26:04.794"></status>
</kw>
<msg timestamp="20201108 01:26:11.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:11.564" starttime="20201108 01:26:04.793"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:11.564" starttime="20201108 01:26:04.793"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:11.569" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:16.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:16.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:26:16.315" starttime="20201108 01:26:11.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:16.316" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:26:16.316" starttime="20201108 01:26:16.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:16.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:16.317" starttime="20201108 01:26:16.316"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:16.317" starttime="20201108 01:26:11.565"></status>
</kw>
<msg timestamp="20201108 01:26:16.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:16.317" starttime="20201108 01:26:11.565"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:16.317" starttime="20201108 01:26:11.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:16.322" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:20.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:20.811" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:26:20.812" starttime="20201108 01:26:16.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:20.813" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:26:20.813" starttime="20201108 01:26:20.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:20.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:20.813" starttime="20201108 01:26:20.813"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:20.813" starttime="20201108 01:26:16.318"></status>
</kw>
<msg timestamp="20201108 01:26:20.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:20.814" starttime="20201108 01:26:16.318"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:20.814" starttime="20201108 01:26:16.317"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:26:20.814" critical="yes" starttime="20201108 01:25:48.255"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:26:20.820" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:26:20.820" starttime="20201108 01:26:20.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:26:20.821" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:26:20.821" starttime="20201108 01:26:20.820"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:20.821" starttime="20201108 01:26:20.819"></status>
</kw>
<msg timestamp="20201108 01:26:20.821" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:26:20.821" starttime="20201108 01:26:20.819"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:20.821" starttime="20201108 01:26:20.818"></status>
</kw>
<msg timestamp="20201108 01:26:20.821" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:26:20.822" starttime="20201108 01:26:20.818"></status>
</kw>
<msg timestamp="20201108 01:26:20.822" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:26:20.822" starttime="20201108 01:26:20.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:20.825" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:23.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:23.290" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:26:23.290" starttime="20201108 01:26:20.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:23.291" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:26:23.291" starttime="20201108 01:26:23.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:23.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:23.292" starttime="20201108 01:26:23.292"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:23.292" starttime="20201108 01:26:20.822"></status>
</kw>
<msg timestamp="20201108 01:26:23.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:23.293" starttime="20201108 01:26:20.822"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:23.293" starttime="20201108 01:26:20.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:23.296" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:26.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:26.127" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:26:26.127" starttime="20201108 01:26:23.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:26.128" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:26:26.128" starttime="20201108 01:26:26.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:26.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:26.128" starttime="20201108 01:26:26.128"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:26.129" starttime="20201108 01:26:23.294"></status>
</kw>
<msg timestamp="20201108 01:26:26.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:26.129" starttime="20201108 01:26:23.293"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:26.129" starttime="20201108 01:26:23.293"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:26:26.129" critical="yes" starttime="20201108 01:26:20.816"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201108 01:26:26.131" starttime="20201108 01:25:48.207"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:27:57.394" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:27:57.394" starttime="20201108 01:27:57.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:27:57.394" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:27:57.394" starttime="20201108 01:27:57.394"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:57.394" starttime="20201108 01:27:57.393"></status>
</kw>
<msg timestamp="20201108 01:27:57.394" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:27:57.394" starttime="20201108 01:27:57.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:27:57.395" starttime="20201108 01:27:57.395"></status>
</kw>
<msg timestamp="20201108 01:27:57.395" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:27:57.395" starttime="20201108 01:27:57.395"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:57.396" starttime="20201108 01:27:57.392"></status>
</kw>
<msg timestamp="20201108 01:27:57.396" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:27:57.396" starttime="20201108 01:27:57.391"></status>
</kw>
<msg timestamp="20201108 01:27:57.396" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:27:57.396" starttime="20201108 01:27:57.390"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:27:57.396" level="INFO">${random} = 42019</msg>
<status status="PASS" endtime="20201108 01:27:57.397" starttime="20201108 01:27:57.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:27:57.402" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-42019 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:28:03.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:28:03.217" level="INFO">${output} = 2020-11-08 01:27:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:27:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201108 01:28:03.217" starttime="20201108 01:27:57.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:28:03.218" level="INFO">2020-11-08 01:27:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:27:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:27:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:27:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:27:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B3652737B310-&gt;243f96ba-eaa7-4d14-95b2-da165ae8b414
2020-11-08 01:27:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201108 01:28:03.218" starttime="20201108 01:28:03.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:28:03.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:28:03.219" starttime="20201108 01:28:03.218"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:03.219" starttime="20201108 01:27:57.397"></status>
</kw>
<msg timestamp="20201108 01:28:03.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:28:03.219" starttime="20201108 01:27:57.397"></status>
</kw>
<msg timestamp="20201108 01:28:03.219" level="INFO">${result} = 2020-11-08 01:27:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:27:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201108 01:28:03.219" starttime="20201108 01:27:57.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:28:03.224" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:28:04.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:28:04.862" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:26 ofs://om/volume1/bucket1/ozone-22930
-rw-...</msg>
<status status="PASS" endtime="20201108 01:28:04.862" starttime="20201108 01:28:03.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:28:04.863" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:26 ofs://om/volume1/bucket1/ozone-22930
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:28 ofs://om/volume1/bucket1/ozone-42019
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:27 ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201108 01:28:04.863" starttime="20201108 01:28:04.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:28:04.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:28:04.864" starttime="20201108 01:28:04.864"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:04.864" starttime="20201108 01:28:03.221"></status>
</kw>
<msg timestamp="20201108 01:28:04.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:28:04.865" starttime="20201108 01:28:03.221"></status>
</kw>
<msg timestamp="20201108 01:28:04.865" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:26 ofs://om/volume1/bucket1/ozone-22930
-rw-...</msg>
<status status="PASS" endtime="20201108 01:28:04.865" starttime="20201108 01:28:03.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:28:04.865" starttime="20201108 01:28:04.865"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:28:04.865" critical="yes" starttime="20201108 01:27:57.389"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201108 01:28:04.866" starttime="20201108 01:27:57.342"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:26:30.394" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:26:30.394" starttime="20201108 01:26:30.394"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:26:30.395" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:26:30.395" starttime="20201108 01:26:30.394"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:30.395" starttime="20201108 01:26:30.393"></status>
</kw>
<msg timestamp="20201108 01:26:30.395" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:26:30.395" starttime="20201108 01:26:30.393"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:30.395" starttime="20201108 01:26:30.392"></status>
</kw>
<msg timestamp="20201108 01:26:30.395" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:26:30.395" starttime="20201108 01:26:30.392"></status>
</kw>
<msg timestamp="20201108 01:26:30.395" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:26:30.396" starttime="20201108 01:26:30.391"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:26:30.396" level="INFO">${random} = 22930</msg>
<status status="PASS" endtime="20201108 01:26:30.396" starttime="20201108 01:26:30.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:30.402" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-22930 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:33.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:33.921" level="INFO">${output} = 2020-11-08 01:26:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:26:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201108 01:26:33.921" starttime="20201108 01:26:30.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:33.922" level="INFO">2020-11-08 01:26:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:26:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:26:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:26:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:26:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-31CE11305BC7-&gt;243f96ba-eaa7-4d14-95b2-da165ae8b414
2020-11-08 01:26:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201108 01:26:33.923" starttime="20201108 01:26:33.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:33.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:33.923" starttime="20201108 01:26:33.923"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:33.923" starttime="20201108 01:26:30.397"></status>
</kw>
<msg timestamp="20201108 01:26:33.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:33.924" starttime="20201108 01:26:30.397"></status>
</kw>
<msg timestamp="20201108 01:26:33.924" level="INFO">${result} = 2020-11-08 01:26:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:26:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201108 01:26:33.924" starttime="20201108 01:26:30.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:33.928" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:35.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:35.618" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:26 o3fs://bucket1.volume1.om/ozone-22930
dr...</msg>
<status status="PASS" endtime="20201108 01:26:35.618" starttime="20201108 01:26:33.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:35.619" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:26 o3fs://bucket1.volume1.om/ozone-22930
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:26:35.619" starttime="20201108 01:26:35.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:35.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:35.620" starttime="20201108 01:26:35.619"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:35.620" starttime="20201108 01:26:33.926"></status>
</kw>
<msg timestamp="20201108 01:26:35.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:35.620" starttime="20201108 01:26:33.925"></status>
</kw>
<msg timestamp="20201108 01:26:35.621" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:26 o3fs://bucket1.volume1.om/ozone-22930
dr...</msg>
<status status="PASS" endtime="20201108 01:26:35.621" starttime="20201108 01:26:33.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:26:35.621" starttime="20201108 01:26:35.621"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:26:35.621" critical="yes" starttime="20201108 01:26:30.390"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201108 01:26:35.622" starttime="20201108 01:26:30.345"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:28:09.130" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:28:09.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:28:09.134" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:09.134" starttime="20201108 01:28:09.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:28:09.134" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:09.135" starttime="20201108 01:28:09.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:28:09.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:28:09.135" starttime="20201108 01:28:09.135"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:09.135" starttime="20201108 01:28:09.124"></status>
</kw>
<msg timestamp="20201108 01:28:09.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:28:09.136" starttime="20201108 01:28:09.124"></status>
</kw>
<msg timestamp="20201108 01:28:09.136" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:09.136" starttime="20201108 01:28:09.123"></status>
</kw>
<msg timestamp="20201108 01:28:09.136" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:09.136" starttime="20201108 01:28:09.123"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:28:09.140" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:28:09.140" starttime="20201108 01:28:09.140"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:28:09.140" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:28:09.141" starttime="20201108 01:28:09.140"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:09.141" starttime="20201108 01:28:09.138"></status>
</kw>
<msg timestamp="20201108 01:28:09.141" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:28:09.141" starttime="20201108 01:28:09.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:28:09.142" starttime="20201108 01:28:09.141"></status>
</kw>
<msg timestamp="20201108 01:28:09.142" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:28:09.142" starttime="20201108 01:28:09.141"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:09.142" starttime="20201108 01:28:09.137"></status>
</kw>
<msg timestamp="20201108 01:28:09.142" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:28:09.142" starttime="20201108 01:28:09.137"></status>
</kw>
<msg timestamp="20201108 01:28:09.142" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:28:09.142" starttime="20201108 01:28:09.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:28:09.146" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:28:44.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:28:44.872" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:28:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:28:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201108 01:28:44.872" starttime="20201108 01:28:09.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:28:44.873" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:28:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:28:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:28:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:28:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:28:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-40388D7590A8-&gt;243f96ba-eaa7-4d14-95b2-da165ae8b414
2020-11-08 01:28:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-08 01:28:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:28:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:28:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:28:15 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:28:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798723264_0003
2020-11-08 01:28:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:28:15 INFO  Configuration:2795 - resource-types.xml not found
2020-11-08 01:28:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-08 01:28:15 INFO  YarnClientImpl:329 - Submitted application application_1604798723264_0003
2020-11-08 01:28:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798723264_0003/
2020-11-08 01:28:15 INFO  Job:1619 - Running job: job_1604798723264_0003
2020-11-08 01:28:23 INFO  Job:1640 - Job job_1604798723264_0003 running in uber mode : false
2020-11-08 01:28:23 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:28:29 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:28:34 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:28:39 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:28:43 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:28:44 INFO  Job:1658 - Job job_1604798723264_0003 completed successfully
2020-11-08 01:28:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36696
		Total time spent by all reduces in occupied slots (ms)=13836
		Total time spent by all map tasks (ms)=9174
		Total time spent by all reduce tasks (ms)=3459
		Total vcore-milliseconds taken by all map tasks=9174
		Total vcore-milliseconds taken by all reduce tasks=3459
		Total megabyte-milliseconds taken by all map tasks=37576704
		Total megabyte-milliseconds taken by all reduce tasks=14168064
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=6810
		Physical memory (bytes) snapshot=1182941184
		Virtual memory (bytes) snapshot=15809974272
		Total committed heap usage (bytes)=1062207488
		Peak Map Physical memory (bytes)=295223296
		Peak Map Virtual memory (bytes)=3948552192
		Peak Reduce Physical memory (bytes)=301547520
		Peak Reduce Virtual memory (bytes)=3967279104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.249 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201108 01:28:44.873" starttime="20201108 01:28:44.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:28:44.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:28:44.874" starttime="20201108 01:28:44.873"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.874" starttime="20201108 01:28:09.143"></status>
</kw>
<msg timestamp="20201108 01:28:44.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:28:44.874" starttime="20201108 01:28:09.143"></status>
</kw>
<msg timestamp="20201108 01:28:44.875" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:28:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:28:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201108 01:28:44.875" starttime="20201108 01:28:09.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:28:44.875" starttime="20201108 01:28:44.875"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:28:44.875" critical="yes" starttime="20201108 01:28:09.122"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:28:44.882" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:28:44.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:28:44.885" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:44.885" starttime="20201108 01:28:44.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:28:44.886" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:44.886" starttime="20201108 01:28:44.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:28:44.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:28:44.887" starttime="20201108 01:28:44.886"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.887" starttime="20201108 01:28:44.878"></status>
</kw>
<msg timestamp="20201108 01:28:44.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:28:44.887" starttime="20201108 01:28:44.878"></status>
</kw>
<msg timestamp="20201108 01:28:44.887" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:44.888" starttime="20201108 01:28:44.877"></status>
</kw>
<msg timestamp="20201108 01:28:44.888" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:28:44.888" starttime="20201108 01:28:44.877"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:28:44.888" level="INFO">${random} = 63</msg>
<status status="PASS" endtime="20201108 01:28:44.888" starttime="20201108 01:28:44.888"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:28:44.892" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:28:44.892" starttime="20201108 01:28:44.891"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:28:44.892" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:28:44.892" starttime="20201108 01:28:44.892"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.892" starttime="20201108 01:28:44.891"></status>
</kw>
<msg timestamp="20201108 01:28:44.893" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:28:44.893" starttime="20201108 01:28:44.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:28:44.893" starttime="20201108 01:28:44.893"></status>
</kw>
<msg timestamp="20201108 01:28:44.893" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201108 01:28:44.894" starttime="20201108 01:28:44.893"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.894" starttime="20201108 01:28:44.890"></status>
</kw>
<msg timestamp="20201108 01:28:44.894" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:28:44.894" starttime="20201108 01:28:44.889"></status>
</kw>
<msg timestamp="20201108 01:28:44.894" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201108 01:28:44.894" starttime="20201108 01:28:44.888"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:28:44.897" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:28:44.897" starttime="20201108 01:28:44.897"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:28:44.897" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:28:44.898" starttime="20201108 01:28:44.897"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.898" starttime="20201108 01:28:44.896"></status>
</kw>
<msg timestamp="20201108 01:28:44.898" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:28:44.898" starttime="20201108 01:28:44.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:28:44.899" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201108 01:28:44.899" starttime="20201108 01:28:44.899"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:28:44.900" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201108 01:28:44.900" starttime="20201108 01:28:44.899"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.900" starttime="20201108 01:28:44.898"></status>
</kw>
<msg timestamp="20201108 01:28:44.900" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201108 01:28:44.900" starttime="20201108 01:28:44.898"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.900" starttime="20201108 01:28:44.895"></status>
</kw>
<msg timestamp="20201108 01:28:44.900" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201108 01:28:44.900" starttime="20201108 01:28:44.895"></status>
</kw>
<msg timestamp="20201108 01:28:44.901" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201108 01:28:44.901" starttime="20201108 01:28:44.894"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201108 01:28:44.903" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201108 01:28:44.904" starttime="20201108 01:28:44.903"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:28:44.904" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201108 01:28:44.904" starttime="20201108 01:28:44.904"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.904" starttime="20201108 01:28:44.903"></status>
</kw>
<msg timestamp="20201108 01:28:44.904" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201108 01:28:44.904" starttime="20201108 01:28:44.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:28:44.906" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201108 01:28:44.906" starttime="20201108 01:28:44.905"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:28:44.906" level="INFO">${result} = /wordcount-63.txt</msg>
<status status="PASS" endtime="20201108 01:28:44.906" starttime="20201108 01:28:44.906"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.906" starttime="20201108 01:28:44.905"></status>
</kw>
<msg timestamp="20201108 01:28:44.906" level="INFO">${path_with_leading} = /wordcount-63.txt</msg>
<status status="PASS" endtime="20201108 01:28:44.906" starttime="20201108 01:28:44.904"></status>
</kw>
<status status="PASS" endtime="20201108 01:28:44.907" starttime="20201108 01:28:44.902"></status>
</kw>
<msg timestamp="20201108 01:28:44.907" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-63.txt</msg>
<status status="PASS" endtime="20201108 01:28:44.907" starttime="20201108 01:28:44.901"></status>
</kw>
<msg timestamp="20201108 01:28:44.907" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-63.txt</msg>
<status status="PASS" endtime="20201108 01:28:44.907" starttime="20201108 01:28:44.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:28:44.911" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-63.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:29:18.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:29:18.446" level="INFO">${output} = 2020-11-08 01:28:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:28:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201108 01:29:18.446" starttime="20201108 01:28:44.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:29:18.447" level="INFO">2020-11-08 01:28:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:28:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:28:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:28:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:28:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:28:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:28:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-266B2A94EE39-&gt;243f96ba-eaa7-4d14-95b2-da165ae8b414
2020-11-08 01:28:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:28:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:28:48 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:28:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798723264_0004
2020-11-08 01:28:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:28:48 INFO  Configuration:2795 - resource-types.xml not found
2020-11-08 01:28:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-08 01:28:48 INFO  YarnClientImpl:329 - Submitted application application_1604798723264_0004
2020-11-08 01:28:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798723264_0004/
2020-11-08 01:28:48 INFO  Job:1619 - Running job: job_1604798723264_0004
2020-11-08 01:28:56 INFO  Job:1640 - Job job_1604798723264_0004 running in uber mode : false
2020-11-08 01:28:56 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:29:02 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:29:07 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:29:12 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:29:16 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:29:17 INFO  Job:1658 - Job job_1604798723264_0004 completed successfully
2020-11-08 01:29:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123795
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36124
		Total time spent by all reduces in occupied slots (ms)=13528
		Total time spent by all map tasks (ms)=9031
		Total time spent by all reduce tasks (ms)=3382
		Total vcore-milliseconds taken by all map tasks=9031
		Total vcore-milliseconds taken by all reduce tasks=3382
		Total megabyte-milliseconds taken by all map tasks=36990976
		Total megabyte-milliseconds taken by all reduce tasks=13852672
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=6590
		Physical memory (bytes) snapshot=1177460736
		Virtual memory (bytes) snapshot=15802228736
		Total committed heap usage (bytes)=1063256064
		Peak Map Physical memory (bytes)=294551552
		Peak Map Virtual memory (bytes)=3946799104
		Peak Reduce Physical memory (bytes)=298848256
		Peak Reduce Virtual memory (bytes)=3971002368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201108 01:29:18.448" starttime="20201108 01:29:18.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:29:18.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:29:18.448" starttime="20201108 01:29:18.448"></status>
</kw>
<status status="PASS" endtime="20201108 01:29:18.449" starttime="20201108 01:28:44.908"></status>
</kw>
<msg timestamp="20201108 01:29:18.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:29:18.449" starttime="20201108 01:28:44.908"></status>
</kw>
<msg timestamp="20201108 01:29:18.449" level="INFO">${output} = 2020-11-08 01:28:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:28:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201108 01:29:18.449" starttime="20201108 01:28:44.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201108 01:29:18.450" starttime="20201108 01:29:18.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:29:18.450" starttime="20201108 01:29:18.450"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:29:18.451" critical="yes" starttime="20201108 01:28:44.876"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201108 01:29:18.452" starttime="20201108 01:28:09.077"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:39.842" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:26:39.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:26:39.845" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:26:39.845" starttime="20201108 01:26:39.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:26:39.846" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:26:39.846" starttime="20201108 01:26:39.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:26:39.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:26:39.847" starttime="20201108 01:26:39.846"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:39.847" starttime="20201108 01:26:39.836"></status>
</kw>
<msg timestamp="20201108 01:26:39.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:26:39.847" starttime="20201108 01:26:39.836"></status>
</kw>
<msg timestamp="20201108 01:26:39.847" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:26:39.847" starttime="20201108 01:26:39.836"></status>
</kw>
<msg timestamp="20201108 01:26:39.848" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:26:39.848" starttime="20201108 01:26:39.835"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:26:39.852" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:26:39.852" starttime="20201108 01:26:39.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:26:39.852" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:26:39.852" starttime="20201108 01:26:39.852"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:39.853" starttime="20201108 01:26:39.850"></status>
</kw>
<msg timestamp="20201108 01:26:39.853" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:26:39.853" starttime="20201108 01:26:39.850"></status>
</kw>
<status status="PASS" endtime="20201108 01:26:39.853" starttime="20201108 01:26:39.849"></status>
</kw>
<msg timestamp="20201108 01:26:39.853" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:26:39.853" starttime="20201108 01:26:39.848"></status>
</kw>
<msg timestamp="20201108 01:26:39.853" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:26:39.853" starttime="20201108 01:26:39.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:26:39.856" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:27:19.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:27:19.955" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:26:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:26:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201108 01:27:19.955" starttime="20201108 01:26:39.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:27:19.956" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:26:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:26:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:26:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:26:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:26:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E0BF19DE8564-&gt;243f96ba-eaa7-4d14-95b2-da165ae8b414
2020-11-08 01:26:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-08 01:26:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:26:45 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:26:46 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:26:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798723264_0001
2020-11-08 01:26:46 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:26:46 INFO  Configuration:2795 - resource-types.xml not found
2020-11-08 01:26:46 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-08 01:26:46 INFO  YarnClientImpl:329 - Submitted application application_1604798723264_0001
2020-11-08 01:26:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798723264_0001/
2020-11-08 01:26:46 INFO  Job:1619 - Running job: job_1604798723264_0001
2020-11-08 01:26:56 INFO  Job:1640 - Job job_1604798723264_0001 running in uber mode : false
2020-11-08 01:26:56 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:27:03 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:27:07 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:27:12 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:27:18 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:27:19 INFO  Job:1658 - Job job_1604798723264_0001 completed successfully
2020-11-08 01:27:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36396
		Total time spent by all reduces in occupied slots (ms)=17716
		Total time spent by all map tasks (ms)=9099
		Total time spent by all reduce tasks (ms)=4429
		Total vcore-milliseconds taken by all map tasks=9099
		Total vcore-milliseconds taken by all reduce tasks=4429
		Total megabyte-milliseconds taken by all map tasks=37269504
		Total megabyte-milliseconds taken by all reduce tasks=18141184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=6130
		Physical memory (bytes) snapshot=1159860224
		Virtual memory (bytes) snapshot=15798853632
		Total committed heap usage (bytes)=1064828928
		Peak Map Physical memory (bytes)=296370176
		Peak Map Virtual memory (bytes)=3952967680
		Peak Reduce Physical memory (bytes)=272793600
		Peak Reduce Virtual memory (bytes)=3952132096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.557 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201108 01:27:19.956" starttime="20201108 01:27:19.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:27:19.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:27:19.957" starttime="20201108 01:27:19.957"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.957" starttime="20201108 01:26:39.854"></status>
</kw>
<msg timestamp="20201108 01:27:19.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:27:19.958" starttime="20201108 01:26:39.854"></status>
</kw>
<msg timestamp="20201108 01:27:19.958" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-08 01:26:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:26:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201108 01:27:19.958" starttime="20201108 01:26:39.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:27:19.958" starttime="20201108 01:27:19.958"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:27:19.959" critical="yes" starttime="20201108 01:26:39.835"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:27:19.964" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:27:19.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:27:19.968" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:27:19.968" starttime="20201108 01:27:19.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:27:19.969" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:27:19.969" starttime="20201108 01:27:19.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:27:19.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:27:19.970" starttime="20201108 01:27:19.969"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.970" starttime="20201108 01:27:19.961"></status>
</kw>
<msg timestamp="20201108 01:27:19.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:27:19.970" starttime="20201108 01:27:19.961"></status>
</kw>
<msg timestamp="20201108 01:27:19.971" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:27:19.971" starttime="20201108 01:27:19.961"></status>
</kw>
<msg timestamp="20201108 01:27:19.971" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:27:19.971" starttime="20201108 01:27:19.960"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:27:19.971" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201108 01:27:19.971" starttime="20201108 01:27:19.971"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:27:19.975" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:27:19.975" starttime="20201108 01:27:19.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:27:19.975" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:27:19.975" starttime="20201108 01:27:19.975"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.976" starttime="20201108 01:27:19.974"></status>
</kw>
<msg timestamp="20201108 01:27:19.976" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:27:19.976" starttime="20201108 01:27:19.973"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.976" starttime="20201108 01:27:19.973"></status>
</kw>
<msg timestamp="20201108 01:27:19.976" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:27:19.976" starttime="20201108 01:27:19.972"></status>
</kw>
<msg timestamp="20201108 01:27:19.976" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:27:19.976" starttime="20201108 01:27:19.972"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:27:19.979" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:27:19.979" starttime="20201108 01:27:19.979"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:27:19.980" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:27:19.980" starttime="20201108 01:27:19.979"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.980" starttime="20201108 01:27:19.978"></status>
</kw>
<msg timestamp="20201108 01:27:19.980" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:27:19.980" starttime="20201108 01:27:19.978"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.980" starttime="20201108 01:27:19.977"></status>
</kw>
<msg timestamp="20201108 01:27:19.980" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:27:19.980" starttime="20201108 01:27:19.977"></status>
</kw>
<msg timestamp="20201108 01:27:19.981" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:27:19.981" starttime="20201108 01:27:19.976"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:27:19.983" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:27:19.983" starttime="20201108 01:27:19.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:27:19.984" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:27:19.984" starttime="20201108 01:27:19.983"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.984" starttime="20201108 01:27:19.983"></status>
</kw>
<msg timestamp="20201108 01:27:19.984" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:27:19.984" starttime="20201108 01:27:19.982"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:19.984" starttime="20201108 01:27:19.982"></status>
</kw>
<msg timestamp="20201108 01:27:19.984" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-08.txt</msg>
<status status="PASS" endtime="20201108 01:27:19.985" starttime="20201108 01:27:19.981"></status>
</kw>
<msg timestamp="20201108 01:27:19.985" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-08.txt</msg>
<status status="PASS" endtime="20201108 01:27:19.985" starttime="20201108 01:27:19.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:27:19.988" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:27:53.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:27:53.054" level="INFO">${output} = 2020-11-08 01:27:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:27:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201108 01:27:53.054" starttime="20201108 01:27:19.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:27:53.056" level="INFO">2020-11-08 01:27:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:27:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-08 01:27:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:27:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:27:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:27:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:27:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E9A53D2D3882-&gt;243f96ba-eaa7-4d14-95b2-da165ae8b414
2020-11-08 01:27:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:27:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-08 01:27:23 INFO  JobSubmitter:202 - number of splits:3
2020-11-08 01:27:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604798723264_0002
2020-11-08 01:27:23 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-08 01:27:24 INFO  Configuration:2795 - resource-types.xml not found
2020-11-08 01:27:24 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-08 01:27:24 INFO  YarnClientImpl:329 - Submitted application application_1604798723264_0002
2020-11-08 01:27:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604798723264_0002/
2020-11-08 01:27:24 INFO  Job:1619 - Running job: job_1604798723264_0002
2020-11-08 01:27:31 INFO  Job:1640 - Job job_1604798723264_0002 running in uber mode : false
2020-11-08 01:27:31 INFO  Job:1647 -  map 0% reduce 0%
2020-11-08 01:27:37 INFO  Job:1647 -  map 33% reduce 0%
2020-11-08 01:27:42 INFO  Job:1647 -  map 67% reduce 0%
2020-11-08 01:27:47 INFO  Job:1647 -  map 100% reduce 0%
2020-11-08 01:27:52 INFO  Job:1647 -  map 100% reduce 100%
2020-11-08 01:27:52 INFO  Job:1658 - Job job_1604798723264_0002 completed successfully
2020-11-08 01:27:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123879
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37696
		Total time spent by all reduces in occupied slots (ms)=13740
		Total time spent by all map tasks (ms)=9424
		Total time spent by all reduce tasks (ms)=3435
		Total vcore-milliseconds taken by all map tasks=9424
		Total vcore-milliseconds taken by all reduce tasks=3435
		Total megabyte-milliseconds taken by all map tasks=38600704
		Total megabyte-milliseconds taken by all reduce tasks=14069760
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=549
		CPU time spent (ms)=6860
		Physical memory (bytes) snapshot=1280221184
		Virtual memory (bytes) snapshot=15808380928
		Total committed heap usage (bytes)=1227358208
		Peak Map Physical memory (bytes)=298545152
		Peak Map Virtual memory (bytes)=3948355584
		Peak Reduce Physical memory (bytes)=389709824
		Peak Reduce Virtual memory (bytes)=3968126976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201108 01:27:53.056" starttime="20201108 01:27:53.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:27:53.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:27:53.056" starttime="20201108 01:27:53.056"></status>
</kw>
<status status="PASS" endtime="20201108 01:27:53.057" starttime="20201108 01:27:19.986"></status>
</kw>
<msg timestamp="20201108 01:27:53.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:27:53.057" starttime="20201108 01:27:19.985"></status>
</kw>
<msg timestamp="20201108 01:27:53.057" level="INFO">${output} = 2020-11-08 01:27:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-08 01:27:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201108 01:27:53.057" starttime="20201108 01:27:19.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201108 01:27:53.058" starttime="20201108 01:27:53.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201108 01:27:53.058" starttime="20201108 01:27:53.058"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201108 01:27:53.059" critical="yes" starttime="20201108 01:27:19.959"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201108 01:27:53.060" starttime="20201108 01:26:39.790"></status>
</suite>
<status status="PASS" elapsedtime="193370" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="545318" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
