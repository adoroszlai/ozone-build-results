<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201108 01:57:44.789" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:04.234" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:14.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:14.055" level="INFO">${output} = 2020-11-08 01:54:05,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:06,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:14.055" starttime="20201108 01:54:04.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:14.056" level="INFO">2020-11-08 01:54:05,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:06,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:54:06,036 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-08 01:54:08,322 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-08 01:54:08,323 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-08 01:54:08,323 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-08 01:54:08,323 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-08 01:54:08,324 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-08 01:54:08,324 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-08 01:54:08,324 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-08 01:54:08,328 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-08 01:54:08,331 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:08,368 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-84858, with testuser/scm@EXAMPLE.COM as owner.
2020-11-08 01:54:08,828 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84858/bucket-0-62317, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-08 01:54:09,337 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:10,342 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:11,324 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-08 01:54:11,342 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:12,343 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,425
Average Time spent in bucket creation: 00:00:00,237
Average Time spent in key creation: 00:00:01,045
Average Time spent in key write: 00:00:01,683
Total bytes written: 10240
Total Execution time: 00:00:07,316
***************************************************</msg>
<status status="PASS" endtime="20201108 01:54:14.056" starttime="20201108 01:54:14.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:14.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:14.057" starttime="20201108 01:54:14.056"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:14.057" starttime="20201108 01:54:04.229"></status>
</kw>
<msg timestamp="20201108 01:54:14.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:14.057" starttime="20201108 01:54:04.229"></status>
</kw>
<msg timestamp="20201108 01:54:14.057" level="INFO">${result} = 2020-11-08 01:54:05,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:06,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:14.057" starttime="20201108 01:54:04.228"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:54:14.059" starttime="20201108 01:54:14.058"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:14.059" starttime="20201108 01:54:14.058"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:54:14.059" critical="yes" starttime="20201108 01:54:04.228"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:14.065" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:21.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:21.916" level="INFO">${output} = 2020-11-08 01:54:15,706 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:15,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:21.916" starttime="20201108 01:54:14.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:21.919" level="INFO">2020-11-08 01:54:15,706 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:15,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:54:15,840 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-08 01:54:16,012 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s1bqphl2wn
2020-11-08 01:54:16,032 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-08 01:54:17,035 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:17,289 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-08 01:54:17,351 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-08 01:54:17,956 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-08 01:54:18,035 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:18,268 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:54:18,269 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6B89570E1670-&gt;965ca1a6-ee0f-41ac-a43b-635ebf083af2
2020-11-08 01:54:18,269 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-08 01:54:19,036 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:20,036 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:21,037 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-08 01:54:21,544 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3124.05403, max=3124.05403, mean=3124.05403, stddev=0.0, median=3124.05403, p75=3124.05403, p95=3124.05403, p98=3124.05403, p99=3124.05403, p999=3124.05403, mean_rate=0.24193706756369654, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-08 01:54:21,544 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-08 01:54:21,547 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-08 01:54:21,547 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201108 01:54:21.919" starttime="20201108 01:54:21.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:21.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:21.919" starttime="20201108 01:54:21.919"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:21.920" starttime="20201108 01:54:14.062"></status>
</kw>
<msg timestamp="20201108 01:54:21.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:21.920" starttime="20201108 01:54:14.061"></status>
</kw>
<msg timestamp="20201108 01:54:21.920" level="INFO">${result} = 2020-11-08 01:54:15,706 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:15,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:21.920" starttime="20201108 01:54:14.061"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:54:21.921" starttime="20201108 01:54:21.921"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:21.921" starttime="20201108 01:54:21.920"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:54:21.921" critical="yes" starttime="20201108 01:54:14.060"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:21.926" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:26.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:26.112" level="INFO">${output} = 2020-11-08 01:54:23,345 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:23,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:26.112" starttime="20201108 01:54:21.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:26.113" level="INFO">2020-11-08 01:54:23,345 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:23,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:54:23,554 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-08 01:54:23,724 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qpexyuvjkk
2020-11-08 01:54:23,742 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-08 01:54:24,748 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:25,749 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-08 01:54:26,042 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=180.371181, max=180.371181, mean=180.371181, stddev=0.0, median=180.371181, p75=180.371181, p95=180.371181, p98=180.371181, p99=180.371181, p999=180.371181, mean_rate=0.890712182268201, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-08 01:54:26,044 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-08 01:54:26,044 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-08 01:54:26,044 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201108 01:54:26.113" starttime="20201108 01:54:26.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:26.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:26.114" starttime="20201108 01:54:26.113"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:26.114" starttime="20201108 01:54:21.923"></status>
</kw>
<msg timestamp="20201108 01:54:26.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:26.114" starttime="20201108 01:54:21.923"></status>
</kw>
<msg timestamp="20201108 01:54:26.115" level="INFO">${result} = 2020-11-08 01:54:23,345 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:23,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:26.115" starttime="20201108 01:54:21.922"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:54:26.116" starttime="20201108 01:54:26.115"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:26.116" starttime="20201108 01:54:26.115"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:54:26.116" critical="yes" starttime="20201108 01:54:21.922"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:26.121" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:30.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:30.419" level="INFO">${output} = 2020-11-08 01:54:27,679 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:27,850 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:30.419" starttime="20201108 01:54:26.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:30.420" level="INFO">2020-11-08 01:54:27,679 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:27,850 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:54:27,850 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-08 01:54:28,002 [main] INFO freon.BaseFreonGenerator: Executing test with prefix j9tuefwm1y
2020-11-08 01:54:28,025 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-08 01:54:29,030 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-08 01:54:30,031 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-08 01:54:30,355 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=74.235044, max=74.235044, mean=74.235044, stddev=0.0, median=74.235044, p75=74.235044, p95=74.235044, p98=74.235044, p99=74.235044, p999=74.235044, mean_rate=0.8984159761992502, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-08 01:54:30,364 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-08 01:54:30,364 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-08 01:54:30,364 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201108 01:54:30.420" starttime="20201108 01:54:30.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:30.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:30.420" starttime="20201108 01:54:30.420"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:30.421" starttime="20201108 01:54:26.118"></status>
</kw>
<msg timestamp="20201108 01:54:30.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:30.421" starttime="20201108 01:54:26.118"></status>
</kw>
<msg timestamp="20201108 01:54:30.421" level="INFO">${result} = 2020-11-08 01:54:27,679 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-08 01:54:27,850 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201108 01:54:30.421" starttime="20201108 01:54:26.117"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:54:30.422" starttime="20201108 01:54:30.422"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:30.422" starttime="20201108 01:54:30.421"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:54:30.422" critical="yes" starttime="20201108 01:54:26.117"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201108 01:54:30.424" starttime="20201108 01:54:04.206"></status>
</suite>
<status status="PASS" endtime="20201108 01:54:30.427" starttime="20201108 01:54:04.183"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:53:59.101" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:53:59.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:53:59.103" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:53:59.104" starttime="20201108 01:53:59.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:53:59.104" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:53:59.104" starttime="20201108 01:53:59.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:53:59.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:53:59.105" starttime="20201108 01:53:59.105"></status>
</kw>
<status status="PASS" endtime="20201108 01:53:59.105" starttime="20201108 01:53:59.097"></status>
</kw>
<msg timestamp="20201108 01:53:59.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:53:59.105" starttime="20201108 01:53:59.097"></status>
</kw>
<msg timestamp="20201108 01:53:59.106" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:53:59.106" starttime="20201108 01:53:59.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:53:59.107" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:53:59.107" starttime="20201108 01:53:59.106"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:53:59.112" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:53:59.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:53:59.121" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:53:59.122" starttime="20201108 01:53:59.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:53:59.122" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:53:59.123" starttime="20201108 01:53:59.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:53:59.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:53:59.123" starttime="20201108 01:53:59.123"></status>
</kw>
<status status="PASS" endtime="20201108 01:53:59.123" starttime="20201108 01:53:59.108"></status>
</kw>
<msg timestamp="20201108 01:53:59.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:53:59.124" starttime="20201108 01:53:59.108"></status>
</kw>
<status status="PASS" endtime="20201108 01:53:59.124" starttime="20201108 01:53:59.107"></status>
</kw>
<status status="PASS" endtime="20201108 01:53:59.124" starttime="20201108 01:53:59.107"></status>
</kw>
<status status="PASS" endtime="20201108 01:53:59.124" starttime="20201108 01:53:59.095"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:53:59.124" critical="yes" starttime="20201108 01:53:59.095"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201108 01:53:59.125" starttime="20201108 01:53:59.049"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:54:35.491" level="INFO">${random} = 63305</msg>
<status status="PASS" endtime="20201108 01:54:35.491" starttime="20201108 01:54:35.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201108 01:54:35.492" level="INFO">${source} = 63305-source</msg>
<status status="PASS" endtime="20201108 01:54:35.492" starttime="20201108 01:54:35.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201108 01:54:35.493" level="INFO">${target} = 63305-target</msg>
<status status="PASS" endtime="20201108 01:54:35.493" starttime="20201108 01:54:35.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:35.498" level="INFO">Running command 'ozone sh volume create 63305-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:38.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:38.587" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:54:38.587" starttime="20201108 01:54:35.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:38.588" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:54:38.588" starttime="20201108 01:54:38.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:38.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:38.588" starttime="20201108 01:54:38.588"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:38.588" starttime="20201108 01:54:35.494"></status>
</kw>
<msg timestamp="20201108 01:54:38.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:38.589" starttime="20201108 01:54:35.494"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:38.589" starttime="20201108 01:54:35.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:38.593" level="INFO">Running command 'ozone sh volume create 63305-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:41.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:41.681" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:54:41.681" starttime="20201108 01:54:38.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:41.682" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:54:41.682" starttime="20201108 01:54:41.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:41.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:41.682" starttime="20201108 01:54:41.682"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:41.683" starttime="20201108 01:54:38.590"></status>
</kw>
<msg timestamp="20201108 01:54:41.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:41.683" starttime="20201108 01:54:38.589"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:41.683" starttime="20201108 01:54:38.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:41.688" level="INFO">Running command 'ozone sh bucket create 63305-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:45.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:45.411" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:54:45.411" starttime="20201108 01:54:41.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:45.412" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:54:45.412" starttime="20201108 01:54:45.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:45.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:45.412" starttime="20201108 01:54:45.412"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:45.413" starttime="20201108 01:54:41.685"></status>
</kw>
<msg timestamp="20201108 01:54:45.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:45.413" starttime="20201108 01:54:41.684"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:45.413" starttime="20201108 01:54:41.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:45.416" level="INFO">Running command 'ozone sh key put 63305-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:50.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:50.512" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:54:50.512" starttime="20201108 01:54:45.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:50.513" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:54:50.513" starttime="20201108 01:54:50.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:50.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:50.514" starttime="20201108 01:54:50.513"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:50.514" starttime="20201108 01:54:45.414"></status>
</kw>
<msg timestamp="20201108 01:54:50.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:50.514" starttime="20201108 01:54:45.414"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:50.514" starttime="20201108 01:54:45.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:50.518" level="INFO">Running command 'ozone sh bucket create 63305-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:53.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:53.674" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:54:53.674" starttime="20201108 01:54:50.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:53.675" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:54:53.675" starttime="20201108 01:54:53.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:53.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:53.676" starttime="20201108 01:54:53.675"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:53.676" starttime="20201108 01:54:50.515"></status>
</kw>
<msg timestamp="20201108 01:54:53.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:53.676" starttime="20201108 01:54:50.515"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:53.676" starttime="20201108 01:54:50.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:53.681" level="INFO">Running command 'ozone sh bucket link 63305-source/readable-bucket 63305-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:54:56.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:54:56.792" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:54:56.792" starttime="20201108 01:54:53.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:54:56.793" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:54:56.793" starttime="20201108 01:54:56.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:54:56.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:54:56.794" starttime="20201108 01:54:56.794"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:56.794" starttime="20201108 01:54:53.677"></status>
</kw>
<msg timestamp="20201108 01:54:56.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:54:56.794" starttime="20201108 01:54:53.677"></status>
</kw>
<status status="PASS" endtime="20201108 01:54:56.795" starttime="20201108 01:54:53.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:54:56.798" level="INFO">Running command 'ozone sh bucket link 63305-source/readable-bucket 63305-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:00.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:00.074" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:00.074" starttime="20201108 01:54:56.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:00.075" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:00.075" starttime="20201108 01:55:00.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:00.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:00.076" starttime="20201108 01:55:00.076"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:00.076" starttime="20201108 01:54:56.795"></status>
</kw>
<msg timestamp="20201108 01:55:00.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:00.076" starttime="20201108 01:54:56.795"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:00.077" starttime="20201108 01:54:56.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:00.080" level="INFO">Running command 'ozone sh bucket link 63305-source/unreadable-bucket 63305-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:03.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:03.344" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:03.344" starttime="20201108 01:55:00.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:03.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:03.345" starttime="20201108 01:55:03.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:03.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:03.346" starttime="20201108 01:55:03.345"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:03.346" starttime="20201108 01:55:00.077"></status>
</kw>
<msg timestamp="20201108 01:55:03.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:03.346" starttime="20201108 01:55:00.077"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:03.346" starttime="20201108 01:55:00.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:03.351" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 63305-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:06.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:06.661" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:06.661" starttime="20201108 01:55:03.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:06.662" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201108 01:55:06.662" starttime="20201108 01:55:06.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:06.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:06.662" starttime="20201108 01:55:06.662"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:06.662" starttime="20201108 01:55:03.347"></status>
</kw>
<msg timestamp="20201108 01:55:06.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:06.663" starttime="20201108 01:55:03.347"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:06.663" starttime="20201108 01:55:03.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:06.668" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 63305-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:09.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:09.912" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:09.913" starttime="20201108 01:55:06.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:09.913" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201108 01:55:09.913" starttime="20201108 01:55:09.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:09.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:09.914" starttime="20201108 01:55:09.914"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:09.914" starttime="20201108 01:55:06.664"></status>
</kw>
<msg timestamp="20201108 01:55:09.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:09.914" starttime="20201108 01:55:06.663"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:09.915" starttime="20201108 01:55:06.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:09.919" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 63305-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:13.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:13.223" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:13.223" starttime="20201108 01:55:09.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:13.224" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201108 01:55:13.224" starttime="20201108 01:55:13.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:13.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:13.225" starttime="20201108 01:55:13.224"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:13.225" starttime="20201108 01:55:09.915"></status>
</kw>
<msg timestamp="20201108 01:55:13.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:13.225" starttime="20201108 01:55:09.915"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:13.225" starttime="20201108 01:55:09.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:13.231" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 63305-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:16.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:16.552" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:16.552" starttime="20201108 01:55:13.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:16.553" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201108 01:55:16.553" starttime="20201108 01:55:16.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:16.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:16.554" starttime="20201108 01:55:16.553"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:16.554" starttime="20201108 01:55:13.226"></status>
</kw>
<msg timestamp="20201108 01:55:16.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:16.554" starttime="20201108 01:55:13.226"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:16.554" starttime="20201108 01:55:13.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:16.559" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 63305-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:19.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:19.703" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:19.703" starttime="20201108 01:55:16.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:19.704" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201108 01:55:19.704" starttime="20201108 01:55:19.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:19.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:19.704" starttime="20201108 01:55:19.704"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.705" starttime="20201108 01:55:16.555"></status>
</kw>
<msg timestamp="20201108 01:55:19.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:19.705" starttime="20201108 01:55:16.555"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.705" starttime="20201108 01:55:16.555"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.705" starttime="20201108 01:54:41.684"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.705" starttime="20201108 01:54:41.683"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.706" starttime="20201108 01:54:35.491"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:19.711" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:19.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:19.714" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:55:19.714" starttime="20201108 01:55:19.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:19.715" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:55:19.715" starttime="20201108 01:55:19.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:19.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:19.716" starttime="20201108 01:55:19.715"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.716" starttime="20201108 01:55:19.709"></status>
</kw>
<msg timestamp="20201108 01:55:19.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:19.716" starttime="20201108 01:55:19.708"></status>
</kw>
<msg timestamp="20201108 01:55:19.716" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:55:19.716" starttime="20201108 01:55:19.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:55:19.717" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:55:19.717" starttime="20201108 01:55:19.716"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:19.722" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:19.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:19.739" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:55:19.739" starttime="20201108 01:55:19.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:19.740" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:55:19.740" starttime="20201108 01:55:19.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:19.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:19.741" starttime="20201108 01:55:19.740"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.741" starttime="20201108 01:55:19.719"></status>
</kw>
<msg timestamp="20201108 01:55:19.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:19.741" starttime="20201108 01:55:19.719"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.741" starttime="20201108 01:55:19.718"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.742" starttime="20201108 01:55:19.718"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.742" starttime="20201108 01:55:19.707"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:19.742" starttime="20201108 01:55:19.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:19.746" level="INFO">Running command 'ozone sh bucket link 63305-source/no-such-bucket 63305-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:23.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:23.288" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:23.288" starttime="20201108 01:55:19.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:23.289" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:23.290" starttime="20201108 01:55:23.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:23.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:23.290" starttime="20201108 01:55:23.290"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:23.291" starttime="20201108 01:55:19.743"></status>
</kw>
<msg timestamp="20201108 01:55:23.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:23.291" starttime="20201108 01:55:19.743"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:23.291" starttime="20201108 01:55:19.742"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:23.294" level="INFO">Running command 'ozone sh key list 63305-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:26.303" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:55:26.303" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:26.303" starttime="20201108 01:55:23.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:26.304" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201108 01:55:26.304" starttime="20201108 01:55:26.303"></status>
</kw>
<msg timestamp="20201108 01:55:26.304" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:26.304" starttime="20201108 01:55:23.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201108 01:55:26.305" starttime="20201108 01:55:26.305"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:55:26.305" critical="yes" starttime="20201108 01:55:19.706"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:26.311" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:26.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:26.314" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:55:26.314" starttime="20201108 01:55:26.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:26.315" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:55:26.315" starttime="20201108 01:55:26.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:26.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:26.316" starttime="20201108 01:55:26.315"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:26.316" starttime="20201108 01:55:26.309"></status>
</kw>
<msg timestamp="20201108 01:55:26.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:26.316" starttime="20201108 01:55:26.309"></status>
</kw>
<msg timestamp="20201108 01:55:26.316" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:55:26.316" starttime="20201108 01:55:26.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:55:26.317" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:55:26.317" starttime="20201108 01:55:26.317"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:26.321" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:26.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:26.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:55:26.337" starttime="20201108 01:55:26.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:26.338" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:55:26.338" starttime="20201108 01:55:26.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:26.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:26.339" starttime="20201108 01:55:26.338"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:26.339" starttime="20201108 01:55:26.318"></status>
</kw>
<msg timestamp="20201108 01:55:26.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:26.339" starttime="20201108 01:55:26.318"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:26.339" starttime="20201108 01:55:26.317"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:26.339" starttime="20201108 01:55:26.317"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:26.339" starttime="20201108 01:55:26.308"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:26.339" starttime="20201108 01:55:26.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:26.343" level="INFO">Running command 'ozone sh bucket link 63305-source/bucket1 63305-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:29.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:29.559" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:29.559" starttime="20201108 01:55:26.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:29.560" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:29.560" starttime="20201108 01:55:29.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:29.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:29.561" starttime="20201108 01:55:29.560"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:29.561" starttime="20201108 01:55:26.340"></status>
</kw>
<msg timestamp="20201108 01:55:29.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:29.561" starttime="20201108 01:55:26.340"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:29.561" starttime="20201108 01:55:26.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:29.567" level="INFO">Running command 'ozone sh bucket create 63305-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:32.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:32.815" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:32.815" starttime="20201108 01:55:29.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:32.816" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:32.816" starttime="20201108 01:55:32.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:32.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:32.817" starttime="20201108 01:55:32.816"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:32.817" starttime="20201108 01:55:29.563"></status>
</kw>
<msg timestamp="20201108 01:55:32.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:32.817" starttime="20201108 01:55:29.562"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:32.818" starttime="20201108 01:55:29.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:32.822" level="INFO">Running command 'ozone sh key put 63305-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:38.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:38.148" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:38.148" starttime="20201108 01:55:32.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:38.149" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:38.149" starttime="20201108 01:55:38.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:38.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:38.150" starttime="20201108 01:55:38.149"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:38.150" starttime="20201108 01:55:32.819"></status>
</kw>
<msg timestamp="20201108 01:55:38.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:38.150" starttime="20201108 01:55:32.818"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:38.150" starttime="20201108 01:55:32.818"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201108 01:55:38.152" level="INFO">${postfix} = 18867</msg>
<status status="PASS" endtime="20201108 01:55:38.152" starttime="20201108 01:55:38.152"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201108 01:55:38.153" level="INFO">${tmpfile} = /tmp/tempkey-18867</msg>
<status status="PASS" endtime="20201108 01:55:38.153" starttime="20201108 01:55:38.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:38.157" level="INFO">Running command 'ozone sh key get -f 63305-target/link1/key1 /tmp/tempkey-18867 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:43.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:43.660" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:43.660" starttime="20201108 01:55:38.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.661" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:43.662" starttime="20201108 01:55:43.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:43.662" starttime="20201108 01:55:43.662"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.662" starttime="20201108 01:55:38.153"></status>
</kw>
<msg timestamp="20201108 01:55:43.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:43.663" starttime="20201108 01:55:38.153"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.663" starttime="20201108 01:55:38.153"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201108 01:55:43.666" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-18867 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:43.668" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201108 01:55:43.668" starttime="20201108 01:55:43.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:43.672" level="INFO">Running command 'rm -f /tmp/tempkey-18867 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:43.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:43.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:55:43.674" starttime="20201108 01:55:43.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.675" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:55:43.675" starttime="20201108 01:55:43.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:43.676" starttime="20201108 01:55:43.676"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.676" starttime="20201108 01:55:43.669"></status>
</kw>
<msg timestamp="20201108 01:55:43.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:43.676" starttime="20201108 01:55:43.669"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.677" starttime="20201108 01:55:43.668"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:55:43.677" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201108 01:55:43.677" starttime="20201108 01:55:43.677"></status>
</kw>
<msg timestamp="20201108 01:55:43.677" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201108 01:55:43.677" starttime="20201108 01:55:38.151"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:55:43.678" starttime="20201108 01:55:43.678"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.678" starttime="20201108 01:55:38.151"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:55:43.678" critical="yes" starttime="20201108 01:55:26.306"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:43.684" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:43.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:43.685" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:55:43.685" starttime="20201108 01:55:43.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.686" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:55:43.686" starttime="20201108 01:55:43.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:43.687" starttime="20201108 01:55:43.686"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.687" starttime="20201108 01:55:43.681"></status>
</kw>
<msg timestamp="20201108 01:55:43.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:43.687" starttime="20201108 01:55:43.680"></status>
</kw>
<msg timestamp="20201108 01:55:43.687" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:55:43.687" starttime="20201108 01:55:43.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:55:43.688" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:55:43.688" starttime="20201108 01:55:43.687"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:43.692" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:43.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:43.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:55:43.703" starttime="20201108 01:55:43.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.704" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:55:43.704" starttime="20201108 01:55:43.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:43.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:43.704" starttime="20201108 01:55:43.704"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.704" starttime="20201108 01:55:43.689"></status>
</kw>
<msg timestamp="20201108 01:55:43.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:43.705" starttime="20201108 01:55:43.689"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.705" starttime="20201108 01:55:43.688"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.705" starttime="20201108 01:55:43.688"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.705" starttime="20201108 01:55:43.680"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:43.705" starttime="20201108 01:55:43.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:43.710" level="INFO">Running command 'ozone sh key put 63305-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:49.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:49.195" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:49.195" starttime="20201108 01:55:43.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:49.196" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:49.196" starttime="20201108 01:55:49.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:49.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:49.197" starttime="20201108 01:55:49.197"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:49.197" starttime="20201108 01:55:43.706"></status>
</kw>
<msg timestamp="20201108 01:55:49.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:49.197" starttime="20201108 01:55:43.706"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:49.198" starttime="20201108 01:55:43.705"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201108 01:55:49.199" level="INFO">${postfix} = 06482</msg>
<status status="PASS" endtime="20201108 01:55:49.199" starttime="20201108 01:55:49.199"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201108 01:55:49.200" level="INFO">${tmpfile} = /tmp/tempkey-06482</msg>
<status status="PASS" endtime="20201108 01:55:49.200" starttime="20201108 01:55:49.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:49.203" level="INFO">Running command 'ozone sh key get -f 63305-source/bucket1/key2 /tmp/tempkey-06482 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:54.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:54.267" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:55:54.267" starttime="20201108 01:55:49.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.268" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:55:54.269" starttime="20201108 01:55:54.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:54.269" starttime="20201108 01:55:54.269"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.269" starttime="20201108 01:55:49.201"></status>
</kw>
<msg timestamp="20201108 01:55:54.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:54.270" starttime="20201108 01:55:49.200"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.270" starttime="20201108 01:55:49.200"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201108 01:55:54.273" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-06482 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:54.275" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201108 01:55:54.275" starttime="20201108 01:55:54.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:54.279" level="INFO">Running command 'rm -f /tmp/tempkey-06482 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:54.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:54.281" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:55:54.281" starttime="20201108 01:55:54.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.281" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:55:54.282" starttime="20201108 01:55:54.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:54.282" starttime="20201108 01:55:54.282"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.282" starttime="20201108 01:55:54.276"></status>
</kw>
<msg timestamp="20201108 01:55:54.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:54.283" starttime="20201108 01:55:54.276"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.283" starttime="20201108 01:55:54.275"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:55:54.283" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201108 01:55:54.283" starttime="20201108 01:55:54.283"></status>
</kw>
<msg timestamp="20201108 01:55:54.284" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201108 01:55:54.284" starttime="20201108 01:55:49.198"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:55:54.284" starttime="20201108 01:55:54.284"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.284" starttime="20201108 01:55:49.198"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:55:54.284" critical="yes" starttime="20201108 01:55:43.679"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:54.292" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:54.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:54.295" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:55:54.295" starttime="20201108 01:55:54.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.295" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:55:54.296" starttime="20201108 01:55:54.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:54.296" starttime="20201108 01:55:54.296"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.296" starttime="20201108 01:55:54.290"></status>
</kw>
<msg timestamp="20201108 01:55:54.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:54.297" starttime="20201108 01:55:54.289"></status>
</kw>
<msg timestamp="20201108 01:55:54.297" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:55:54.297" starttime="20201108 01:55:54.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:55:54.297" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:55:54.297" starttime="20201108 01:55:54.297"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:54.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:54.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:54.312" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:55:54.312" starttime="20201108 01:55:54.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.313" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:55:54.313" starttime="20201108 01:55:54.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:54.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:54.314" starttime="20201108 01:55:54.313"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.314" starttime="20201108 01:55:54.299"></status>
</kw>
<msg timestamp="20201108 01:55:54.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:54.314" starttime="20201108 01:55:54.298"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.314" starttime="20201108 01:55:54.298"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.314" starttime="20201108 01:55:54.297"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.314" starttime="20201108 01:55:54.288"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:54.315" starttime="20201108 01:55:54.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:54.318" level="INFO">Running command 'ozone sh key list 63305-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:55:57.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:55:57.824" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201108 01:55:57.824" starttime="20201108 01:55:54.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:55:57.825" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201108 01:55:57.825" starttime="20201108 01:55:57.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:55:57.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:55:57.825" starttime="20201108 01:55:57.825"></status>
</kw>
<status status="PASS" endtime="20201108 01:55:57.826" starttime="20201108 01:55:54.315"></status>
</kw>
<msg timestamp="20201108 01:55:57.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:55:57.826" starttime="20201108 01:55:54.315"></status>
</kw>
<msg timestamp="20201108 01:55:57.826" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201108 01:55:57.826" starttime="20201108 01:55:54.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:55:57.831" level="INFO">Running command 'ozone sh key list 63305-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:01.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:01.104" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201108 01:56:01.104" starttime="20201108 01:55:57.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:01.105" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201108 01:56:01.105" starttime="20201108 01:56:01.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:01.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:01.106" starttime="20201108 01:56:01.105"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:01.106" starttime="20201108 01:55:57.827"></status>
</kw>
<msg timestamp="20201108 01:56:01.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:01.106" starttime="20201108 01:55:57.827"></status>
</kw>
<msg timestamp="20201108 01:56:01.107" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201108 01:56:01.107" starttime="20201108 01:55:57.826"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:01.107" starttime="20201108 01:56:01.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:01.108" starttime="20201108 01:56:01.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:01.108" starttime="20201108 01:56:01.108"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:01.108" critical="yes" starttime="20201108 01:55:54.287"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:01.114" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:01.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:01.120" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:01.120" starttime="20201108 01:56:01.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:01.121" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:01.121" starttime="20201108 01:56:01.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:01.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:01.122" starttime="20201108 01:56:01.121"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:01.122" starttime="20201108 01:56:01.112"></status>
</kw>
<msg timestamp="20201108 01:56:01.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:01.122" starttime="20201108 01:56:01.111"></status>
</kw>
<msg timestamp="20201108 01:56:01.122" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:01.122" starttime="20201108 01:56:01.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:01.123" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:01.123" starttime="20201108 01:56:01.122"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:01.128" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:01.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:01.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:01.137" starttime="20201108 01:56:01.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:01.138" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:01.138" starttime="20201108 01:56:01.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:01.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:01.139" starttime="20201108 01:56:01.138"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:01.139" starttime="20201108 01:56:01.124"></status>
</kw>
<msg timestamp="20201108 01:56:01.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:01.139" starttime="20201108 01:56:01.124"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:01.140" starttime="20201108 01:56:01.123"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:01.140" starttime="20201108 01:56:01.123"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:01.140" starttime="20201108 01:56:01.111"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:01.140" starttime="20201108 01:56:01.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:01.145" level="INFO">Running command 'ozone sh key delete 63305-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:04.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:04.239" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:04.239" starttime="20201108 01:56:01.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:04.240" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:56:04.240" starttime="20201108 01:56:04.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:04.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:04.241" starttime="20201108 01:56:04.240"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:04.241" starttime="20201108 01:56:01.141"></status>
</kw>
<msg timestamp="20201108 01:56:04.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:04.241" starttime="20201108 01:56:01.141"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:04.241" starttime="20201108 01:56:01.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:04.245" level="INFO">Running command 'ozone sh key list 63305-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:07.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:07.896" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201108 01:56:07.896" starttime="20201108 01:56:04.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:07.897" level="INFO">key1</msg>
<status status="PASS" endtime="20201108 01:56:07.897" starttime="20201108 01:56:07.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:07.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:07.898" starttime="20201108 01:56:07.897"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:07.898" starttime="20201108 01:56:04.242"></status>
</kw>
<msg timestamp="20201108 01:56:07.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:07.898" starttime="20201108 01:56:04.242"></status>
</kw>
<msg timestamp="20201108 01:56:07.898" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201108 01:56:07.898" starttime="20201108 01:56:04.242"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:07.899" starttime="20201108 01:56:07.898"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:07.899" critical="yes" starttime="20201108 01:56:01.109"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:07.905" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:07.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:07.907" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:07.907" starttime="20201108 01:56:07.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:07.908" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:07.908" starttime="20201108 01:56:07.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:07.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:07.909" starttime="20201108 01:56:07.908"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:07.909" starttime="20201108 01:56:07.902"></status>
</kw>
<msg timestamp="20201108 01:56:07.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:07.909" starttime="20201108 01:56:07.902"></status>
</kw>
<msg timestamp="20201108 01:56:07.910" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:07.910" starttime="20201108 01:56:07.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:07.910" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:07.911" starttime="20201108 01:56:07.910"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:07.915" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:07.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:07.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:07.931" starttime="20201108 01:56:07.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:07.932" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:07.932" starttime="20201108 01:56:07.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:07.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:07.933" starttime="20201108 01:56:07.932"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:07.933" starttime="20201108 01:56:07.912"></status>
</kw>
<msg timestamp="20201108 01:56:07.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:07.933" starttime="20201108 01:56:07.912"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:07.933" starttime="20201108 01:56:07.911"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:07.933" starttime="20201108 01:56:07.911"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:07.933" starttime="20201108 01:56:07.901"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:07.934" starttime="20201108 01:56:07.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:07.938" level="INFO">Running command 'ozone sh bucket list 63305-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:11.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:11.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:11.339" starttime="20201108 01:56:07.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:11.340" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:55:23.118Z",
  "modificationTime" : "2020-11-08T01:55:23.118Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:55:03.136Z",
  "modificationTime" : "2020-11-08T01:55:19.613Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:55:29.444Z",
  "modificationTime" : "2020-11-08T01:55:29.444Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:54:56.707Z",
  "modificationTime" : "2020-11-08T01:55:16.304Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:54:59.895Z",
  "modificationTime" : "2020-11-08T01:54:59.895Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201108 01:56:11.340" starttime="20201108 01:56:11.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:11.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:11.341" starttime="20201108 01:56:11.340"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:11.341" starttime="20201108 01:56:07.935"></status>
</kw>
<msg timestamp="20201108 01:56:11.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:11.341" starttime="20201108 01:56:07.934"></status>
</kw>
<msg timestamp="20201108 01:56:11.341" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:11.341" starttime="20201108 01:56:07.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:11.342" starttime="20201108 01:56:11.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:11.342" starttime="20201108 01:56:11.342"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:11.343" critical="yes" starttime="20201108 01:56:07.900"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:11.349" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:11.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:11.351" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:11.351" starttime="20201108 01:56:11.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:11.352" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:11.352" starttime="20201108 01:56:11.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:11.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:11.353" starttime="20201108 01:56:11.352"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:11.353" starttime="20201108 01:56:11.346"></status>
</kw>
<msg timestamp="20201108 01:56:11.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:11.353" starttime="20201108 01:56:11.345"></status>
</kw>
<msg timestamp="20201108 01:56:11.353" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:11.353" starttime="20201108 01:56:11.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:11.354" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:11.354" starttime="20201108 01:56:11.354"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:11.358" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:11.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:11.375" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:11.375" starttime="20201108 01:56:11.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:11.376" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:11.376" starttime="20201108 01:56:11.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:11.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:11.376" starttime="20201108 01:56:11.376"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:11.377" starttime="20201108 01:56:11.355"></status>
</kw>
<msg timestamp="20201108 01:56:11.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:11.377" starttime="20201108 01:56:11.355"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:11.377" starttime="20201108 01:56:11.355"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:11.377" starttime="20201108 01:56:11.354"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:11.377" starttime="20201108 01:56:11.345"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:11.377" starttime="20201108 01:56:11.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:11.381" level="INFO">Running command 'ozone sh bucket info 63305-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:14.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:14.759" level="INFO">${output} = 63305-source bucket1</msg>
<status status="PASS" endtime="20201108 01:56:14.759" starttime="20201108 01:56:11.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:14.760" level="INFO">63305-source bucket1</msg>
<status status="PASS" endtime="20201108 01:56:14.760" starttime="20201108 01:56:14.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:14.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:14.761" starttime="20201108 01:56:14.760"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:14.761" starttime="20201108 01:56:11.378"></status>
</kw>
<msg timestamp="20201108 01:56:14.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:14.761" starttime="20201108 01:56:11.378"></status>
</kw>
<msg timestamp="20201108 01:56:14.761" level="INFO">${result} = 63305-source bucket1</msg>
<status status="PASS" endtime="20201108 01:56:14.762" starttime="20201108 01:56:11.377"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:14.762" starttime="20201108 01:56:14.762"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:14.762" critical="yes" starttime="20201108 01:56:11.343"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:14.769" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:14.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:14.771" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:14.771" starttime="20201108 01:56:14.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:14.772" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:14.772" starttime="20201108 01:56:14.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:14.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:14.773" starttime="20201108 01:56:14.772"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:14.773" starttime="20201108 01:56:14.766"></status>
</kw>
<msg timestamp="20201108 01:56:14.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:14.773" starttime="20201108 01:56:14.765"></status>
</kw>
<msg timestamp="20201108 01:56:14.773" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:14.773" starttime="20201108 01:56:14.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:14.774" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:14.774" starttime="20201108 01:56:14.773"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:14.778" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:14.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:14.788" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:14.789" starttime="20201108 01:56:14.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:14.790" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:14.790" starttime="20201108 01:56:14.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:14.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:14.791" starttime="20201108 01:56:14.790"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:14.791" starttime="20201108 01:56:14.775"></status>
</kw>
<msg timestamp="20201108 01:56:14.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:14.791" starttime="20201108 01:56:14.775"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:14.791" starttime="20201108 01:56:14.774"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:14.791" starttime="20201108 01:56:14.774"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:14.791" starttime="20201108 01:56:14.765"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:14.791" starttime="20201108 01:56:14.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:14.796" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 63305-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:17.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:17.901" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:17.901" starttime="20201108 01:56:14.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:17.902" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201108 01:56:17.902" starttime="20201108 01:56:17.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:17.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:17.903" starttime="20201108 01:56:17.902"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:17.903" starttime="20201108 01:56:14.792"></status>
</kw>
<msg timestamp="20201108 01:56:17.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:17.903" starttime="20201108 01:56:14.792"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:17.904" starttime="20201108 01:56:14.792"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:17.909" level="INFO">Running command 'ozone sh bucket getacl 63305-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:21.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:21.610" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201108 01:56:21.610" starttime="20201108 01:56:17.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:21.611" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201108 01:56:21.611" starttime="20201108 01:56:21.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:21.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:21.611" starttime="20201108 01:56:21.611"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:21.612" starttime="20201108 01:56:17.905"></status>
</kw>
<msg timestamp="20201108 01:56:21.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:21.612" starttime="20201108 01:56:17.905"></status>
</kw>
<msg timestamp="20201108 01:56:21.612" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201108 01:56:21.612" starttime="20201108 01:56:17.904"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:21.613" starttime="20201108 01:56:21.612"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:21.613" starttime="20201108 01:56:17.904"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:21.618" level="INFO">Running command 'ozone sh bucket getacl 63305-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:24.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:24.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:24.733" starttime="20201108 01:56:21.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:24.735" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:24.735" starttime="20201108 01:56:24.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:24.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:24.735" starttime="20201108 01:56:24.735"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:24.736" starttime="20201108 01:56:21.615"></status>
</kw>
<msg timestamp="20201108 01:56:24.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:24.736" starttime="20201108 01:56:21.614"></status>
</kw>
<msg timestamp="20201108 01:56:24.736" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201108 01:56:24.736" starttime="20201108 01:56:21.614"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:24.737" starttime="20201108 01:56:24.736"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:24.737" starttime="20201108 01:56:21.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:24.742" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 63305-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:27.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:27.697" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:27.697" starttime="20201108 01:56:24.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:27.698" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201108 01:56:27.698" starttime="20201108 01:56:27.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:27.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:27.699" starttime="20201108 01:56:27.698"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:27.699" starttime="20201108 01:56:24.738"></status>
</kw>
<msg timestamp="20201108 01:56:27.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:27.699" starttime="20201108 01:56:24.737"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:27.699" starttime="20201108 01:56:24.737"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:27.705" level="INFO">Running command 'ozone sh bucket getacl 63305-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:30.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:30.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:30.967" starttime="20201108 01:56:27.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:30.968" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:30.968" starttime="20201108 01:56:30.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:30.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:30.969" starttime="20201108 01:56:30.968"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:30.969" starttime="20201108 01:56:27.701"></status>
</kw>
<msg timestamp="20201108 01:56:30.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:30.969" starttime="20201108 01:56:27.701"></status>
</kw>
<msg timestamp="20201108 01:56:30.970" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201108 01:56:30.970" starttime="20201108 01:56:27.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:30.970" starttime="20201108 01:56:30.970"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:30.970" starttime="20201108 01:56:27.699"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:30.975" level="INFO">Running command 'ozone sh bucket getacl 63305-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:34.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:34.200" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201108 01:56:34.200" starttime="20201108 01:56:30.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:34.202" level="INFO">READ</msg>
<status status="PASS" endtime="20201108 01:56:34.202" starttime="20201108 01:56:34.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:34.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:34.202" starttime="20201108 01:56:34.202"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.203" starttime="20201108 01:56:30.972"></status>
</kw>
<msg timestamp="20201108 01:56:34.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:34.203" starttime="20201108 01:56:30.972"></status>
</kw>
<msg timestamp="20201108 01:56:34.203" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201108 01:56:34.203" starttime="20201108 01:56:30.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:34.204" starttime="20201108 01:56:34.203"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.204" starttime="20201108 01:56:30.971"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:34.204" critical="yes" starttime="20201108 01:56:14.763"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:34.212" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:34.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:34.213" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:34.213" starttime="20201108 01:56:34.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:34.214" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:34.214" starttime="20201108 01:56:34.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:34.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:34.215" starttime="20201108 01:56:34.214"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.215" starttime="20201108 01:56:34.208"></status>
</kw>
<msg timestamp="20201108 01:56:34.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:34.215" starttime="20201108 01:56:34.207"></status>
</kw>
<msg timestamp="20201108 01:56:34.215" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:34.215" starttime="20201108 01:56:34.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:34.216" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:34.216" starttime="20201108 01:56:34.215"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:34.221" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:34.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:34.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:34.231" starttime="20201108 01:56:34.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:34.231" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:34.231" starttime="20201108 01:56:34.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:34.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:34.232" starttime="20201108 01:56:34.232"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.232" starttime="20201108 01:56:34.217"></status>
</kw>
<msg timestamp="20201108 01:56:34.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:34.233" starttime="20201108 01:56:34.217"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.233" starttime="20201108 01:56:34.216"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.233" starttime="20201108 01:56:34.216"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.233" starttime="20201108 01:56:34.207"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:34.233" starttime="20201108 01:56:34.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:34.237" level="INFO">Running command 'ozone sh bucket link 63305-source/bucket2 63305-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:37.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:37.350" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:37.350" starttime="20201108 01:56:34.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:37.352" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:56:37.352" starttime="20201108 01:56:37.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:37.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:37.352" starttime="20201108 01:56:37.352"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:37.353" starttime="20201108 01:56:34.234"></status>
</kw>
<msg timestamp="20201108 01:56:37.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:37.353" starttime="20201108 01:56:34.234"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:37.353" starttime="20201108 01:56:34.233"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:37.357" level="INFO">Running command 'ozone sh bucket create 63305-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:40.499" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:56:40.499" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:40.499" starttime="20201108 01:56:37.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:40.500" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201108 01:56:40.501" starttime="20201108 01:56:40.500"></status>
</kw>
<msg timestamp="20201108 01:56:40.501" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:40.501" starttime="20201108 01:56:37.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:40.502" starttime="20201108 01:56:40.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:40.505" level="INFO">Running command 'ozone sh bucket create 63305-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:43.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:43.761" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:43.761" starttime="20201108 01:56:40.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:43.762" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:56:43.762" starttime="20201108 01:56:43.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:43.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:43.763" starttime="20201108 01:56:43.763"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:43.763" starttime="20201108 01:56:40.503"></status>
</kw>
<msg timestamp="20201108 01:56:43.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:43.764" starttime="20201108 01:56:40.502"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:43.764" starttime="20201108 01:56:40.502"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:43.767" level="INFO">Running command 'ozone sh bucket link 63305-source/bucket1 63305-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:47.098" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:56:47.098" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:47.098" starttime="20201108 01:56:43.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.099" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201108 01:56:47.099" starttime="20201108 01:56:47.099"></status>
</kw>
<msg timestamp="20201108 01:56:47.100" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:47.100" starttime="20201108 01:56:43.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:47.100" starttime="20201108 01:56:47.100"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:47.100" critical="yes" starttime="20201108 01:56:34.205"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:47.107" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:47.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:47.109" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:47.109" starttime="20201108 01:56:47.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.110" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:47.110" starttime="20201108 01:56:47.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:47.111" starttime="20201108 01:56:47.110"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.111" starttime="20201108 01:56:47.104"></status>
</kw>
<msg timestamp="20201108 01:56:47.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:47.111" starttime="20201108 01:56:47.103"></status>
</kw>
<msg timestamp="20201108 01:56:47.112" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:47.112" starttime="20201108 01:56:47.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:47.112" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:47.112" starttime="20201108 01:56:47.112"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:47.117" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:47.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:47.128" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:47.128" starttime="20201108 01:56:47.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.129" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:47.129" starttime="20201108 01:56:47.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:47.129" starttime="20201108 01:56:47.129"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.129" starttime="20201108 01:56:47.114"></status>
</kw>
<msg timestamp="20201108 01:56:47.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:47.130" starttime="20201108 01:56:47.113"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.130" starttime="20201108 01:56:47.113"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.130" starttime="20201108 01:56:47.112"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.130" starttime="20201108 01:56:47.103"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.130" starttime="20201108 01:56:47.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:47.135" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:47.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:47.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:47.139" starttime="20201108 01:56:47.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.140" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:47.140" starttime="20201108 01:56:47.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:47.140" starttime="20201108 01:56:47.140"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.141" starttime="20201108 01:56:47.132"></status>
</kw>
<msg timestamp="20201108 01:56:47.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:47.141" starttime="20201108 01:56:47.132"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.141" starttime="20201108 01:56:47.132"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:47.146" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:47.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:47.147" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:47.147" starttime="20201108 01:56:47.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.148" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:47.148" starttime="20201108 01:56:47.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:47.148" starttime="20201108 01:56:47.148"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.149" starttime="20201108 01:56:47.142"></status>
</kw>
<msg timestamp="20201108 01:56:47.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:47.149" starttime="20201108 01:56:47.142"></status>
</kw>
<msg timestamp="20201108 01:56:47.149" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:47.149" starttime="20201108 01:56:47.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:47.150" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:47.150" starttime="20201108 01:56:47.149"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:47.155" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:47.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:47.176" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:47.176" starttime="20201108 01:56:47.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.177" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:47.177" starttime="20201108 01:56:47.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:47.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:47.178" starttime="20201108 01:56:47.178"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.179" starttime="20201108 01:56:47.151"></status>
</kw>
<msg timestamp="20201108 01:56:47.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:47.179" starttime="20201108 01:56:47.151"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.179" starttime="20201108 01:56:47.150"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.179" starttime="20201108 01:56:47.150"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.179" starttime="20201108 01:56:47.141"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:47.179" starttime="20201108 01:56:47.141"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:47.182" level="INFO">Running command 'ozone sh key list 63305-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:50.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:50.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:50.870" starttime="20201108 01:56:47.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "63305-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-08T01:54:48.469Z",
  "modificationTime" : "2020-11-08T01:54:50.058Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201108 01:56:50.871" starttime="20201108 01:56:50.870"></status>
</kw>
<msg timestamp="20201108 01:56:50.871" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:50.871" starttime="20201108 01:56:47.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:50.872" starttime="20201108 01:56:50.871"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.872" starttime="20201108 01:56:47.131"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.872" starttime="20201108 01:56:47.130"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:50.872" critical="yes" starttime="20201108 01:56:47.101"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:50.878" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:50.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:50.881" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:50.881" starttime="20201108 01:56:50.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.882" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:50.882" starttime="20201108 01:56:50.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:50.882" starttime="20201108 01:56:50.882"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.883" starttime="20201108 01:56:50.876"></status>
</kw>
<msg timestamp="20201108 01:56:50.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:50.883" starttime="20201108 01:56:50.875"></status>
</kw>
<msg timestamp="20201108 01:56:50.883" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:50.883" starttime="20201108 01:56:50.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:50.884" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:50.884" starttime="20201108 01:56:50.883"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:50.888" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:50.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:50.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:50.898" starttime="20201108 01:56:50.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.899" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:50.899" starttime="20201108 01:56:50.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:50.900" starttime="20201108 01:56:50.899"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.900" starttime="20201108 01:56:50.885"></status>
</kw>
<msg timestamp="20201108 01:56:50.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:50.900" starttime="20201108 01:56:50.885"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.900" starttime="20201108 01:56:50.884"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.900" starttime="20201108 01:56:50.884"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.900" starttime="20201108 01:56:50.874"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.900" starttime="20201108 01:56:50.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:50.906" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:50.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:50.908" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:50.908" starttime="20201108 01:56:50.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.909" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:50.909" starttime="20201108 01:56:50.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:50.910" starttime="20201108 01:56:50.909"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.910" starttime="20201108 01:56:50.902"></status>
</kw>
<msg timestamp="20201108 01:56:50.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:50.910" starttime="20201108 01:56:50.902"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.910" starttime="20201108 01:56:50.901"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:50.914" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:50.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:50.916" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:50.916" starttime="20201108 01:56:50.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.917" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:50.917" starttime="20201108 01:56:50.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:50.918" starttime="20201108 01:56:50.917"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.918" starttime="20201108 01:56:50.912"></status>
</kw>
<msg timestamp="20201108 01:56:50.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:50.918" starttime="20201108 01:56:50.912"></status>
</kw>
<msg timestamp="20201108 01:56:50.919" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:50.919" starttime="20201108 01:56:50.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:50.919" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:50.919" starttime="20201108 01:56:50.919"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:50.923" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:50.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:50.933" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:50.933" starttime="20201108 01:56:50.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.934" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:50.934" starttime="20201108 01:56:50.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:50.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:50.934" starttime="20201108 01:56:50.934"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.935" starttime="20201108 01:56:50.921"></status>
</kw>
<msg timestamp="20201108 01:56:50.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:50.935" starttime="20201108 01:56:50.920"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.935" starttime="20201108 01:56:50.920"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.935" starttime="20201108 01:56:50.919"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.935" starttime="20201108 01:56:50.911"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:50.935" starttime="20201108 01:56:50.910"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:50.938" level="INFO">Running command 'ozone sh key list 63305-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:53.769" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:56:53.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:53.769" starttime="20201108 01:56:50.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.770" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201108 01:56:53.770" starttime="20201108 01:56:53.770"></status>
</kw>
<msg timestamp="20201108 01:56:53.771" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:53.771" starttime="20201108 01:56:50.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:53.771" starttime="20201108 01:56:53.771"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.772" starttime="20201108 01:56:50.901"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.772" starttime="20201108 01:56:50.901"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:56:53.772" critical="yes" starttime="20201108 01:56:50.873"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:53.778" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:53.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:53.780" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:53.780" starttime="20201108 01:56:53.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.781" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:53.781" starttime="20201108 01:56:53.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:53.782" starttime="20201108 01:56:53.781"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.782" starttime="20201108 01:56:53.775"></status>
</kw>
<msg timestamp="20201108 01:56:53.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:53.782" starttime="20201108 01:56:53.775"></status>
</kw>
<msg timestamp="20201108 01:56:53.783" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:53.783" starttime="20201108 01:56:53.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:53.783" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:53.783" starttime="20201108 01:56:53.783"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:53.787" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:53.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:53.800" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:53.800" starttime="20201108 01:56:53.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.801" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:53.801" starttime="20201108 01:56:53.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:53.801" starttime="20201108 01:56:53.801"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.802" starttime="20201108 01:56:53.784"></status>
</kw>
<msg timestamp="20201108 01:56:53.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:53.802" starttime="20201108 01:56:53.784"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.802" starttime="20201108 01:56:53.784"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.802" starttime="20201108 01:56:53.783"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.802" starttime="20201108 01:56:53.774"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.802" starttime="20201108 01:56:53.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:53.807" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:53.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:53.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:53.809" starttime="20201108 01:56:53.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.810" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:53.810" starttime="20201108 01:56:53.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:53.811" starttime="20201108 01:56:53.810"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.811" starttime="20201108 01:56:53.804"></status>
</kw>
<msg timestamp="20201108 01:56:53.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:53.811" starttime="20201108 01:56:53.803"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.811" starttime="20201108 01:56:53.803"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:53.816" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:53.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:53.817" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:56:53.817" starttime="20201108 01:56:53.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.818" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:56:53.818" starttime="20201108 01:56:53.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:53.819" starttime="20201108 01:56:53.818"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.819" starttime="20201108 01:56:53.813"></status>
</kw>
<msg timestamp="20201108 01:56:53.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:53.819" starttime="20201108 01:56:53.813"></status>
</kw>
<msg timestamp="20201108 01:56:53.819" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:56:53.819" starttime="20201108 01:56:53.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:56:53.820" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:56:53.820" starttime="20201108 01:56:53.820"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:53.824" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:53.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:53.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:56:53.833" starttime="20201108 01:56:53.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.834" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:56:53.834" starttime="20201108 01:56:53.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:53.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:53.835" starttime="20201108 01:56:53.834"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.835" starttime="20201108 01:56:53.821"></status>
</kw>
<msg timestamp="20201108 01:56:53.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:53.835" starttime="20201108 01:56:53.821"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.836" starttime="20201108 01:56:53.820"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.836" starttime="20201108 01:56:53.820"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.836" starttime="20201108 01:56:53.812"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:53.836" starttime="20201108 01:56:53.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:53.841" level="INFO">Running command 'ozone sh bucket info 63305-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:56:57.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:56:57.077" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:57.077" starttime="20201108 01:56:53.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:56:57.078" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:55:03.136Z",
  "modificationTime" : "2020-11-08T01:55:19.613Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201108 01:56:57.079" starttime="20201108 01:56:57.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:56:57.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:56:57.079" starttime="20201108 01:56:57.079"></status>
</kw>
<status status="PASS" endtime="20201108 01:56:57.080" starttime="20201108 01:56:53.837"></status>
</kw>
<msg timestamp="20201108 01:56:57.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:56:57.080" starttime="20201108 01:56:53.836"></status>
</kw>
<msg timestamp="20201108 01:56:57.080" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:56:57.080" starttime="20201108 01:56:53.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:57.081" starttime="20201108 01:56:57.080"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201108 01:56:57.081" starttime="20201108 01:56:57.081"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:56:57.085" level="INFO">Running command 'ozone sh key list 63305-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:01.212" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:57:01.212" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:01.212" starttime="20201108 01:56:57.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:01.213" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201108 01:57:01.213" starttime="20201108 01:57:01.213"></status>
</kw>
<msg timestamp="20201108 01:57:01.214" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:01.214" starttime="20201108 01:56:57.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201108 01:57:01.214" starttime="20201108 01:57:01.214"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.215" starttime="20201108 01:56:53.803"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.215" starttime="20201108 01:56:53.802"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:57:01.215" critical="yes" starttime="20201108 01:56:53.773"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:01.221" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:01.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:01.223" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:57:01.223" starttime="20201108 01:57:01.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:01.224" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:57:01.224" starttime="20201108 01:57:01.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:01.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:01.225" starttime="20201108 01:57:01.224"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.225" starttime="20201108 01:57:01.218"></status>
</kw>
<msg timestamp="20201108 01:57:01.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:01.225" starttime="20201108 01:57:01.218"></status>
</kw>
<msg timestamp="20201108 01:57:01.225" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:57:01.225" starttime="20201108 01:57:01.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:57:01.226" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:57:01.226" starttime="20201108 01:57:01.226"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:01.230" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:01.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:01.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:57:01.242" starttime="20201108 01:57:01.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:01.243" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:57:01.243" starttime="20201108 01:57:01.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:01.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:01.243" starttime="20201108 01:57:01.243"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.244" starttime="20201108 01:57:01.228"></status>
</kw>
<msg timestamp="20201108 01:57:01.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:01.244" starttime="20201108 01:57:01.227"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.244" starttime="20201108 01:57:01.227"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.244" starttime="20201108 01:57:01.226"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.244" starttime="20201108 01:57:01.217"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:01.244" starttime="20201108 01:57:01.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:01.249" level="INFO">Running command 'ozone sh bucket link 63305-target/loop1 63305-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:04.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:04.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:04.231" starttime="20201108 01:57:01.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:04.233" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:57:04.233" starttime="20201108 01:57:04.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:04.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:04.233" starttime="20201108 01:57:04.233"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:04.234" starttime="20201108 01:57:01.245"></status>
</kw>
<msg timestamp="20201108 01:57:04.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:04.234" starttime="20201108 01:57:01.245"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:04.234" starttime="20201108 01:57:01.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:04.239" level="INFO">Running command 'ozone sh bucket link 63305-target/loop2 63305-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:07.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:07.363" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:07.363" starttime="20201108 01:57:04.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:07.364" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:57:07.364" starttime="20201108 01:57:07.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:07.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:07.365" starttime="20201108 01:57:07.364"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:07.365" starttime="20201108 01:57:04.235"></status>
</kw>
<msg timestamp="20201108 01:57:07.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:07.365" starttime="20201108 01:57:04.235"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:07.365" starttime="20201108 01:57:04.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:07.370" level="INFO">Running command 'ozone sh bucket link 63305-target/loop3 63305-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:10.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:10.929" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:10.929" starttime="20201108 01:57:07.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:10.930" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:57:10.931" starttime="20201108 01:57:10.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:10.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:10.931" starttime="20201108 01:57:10.931"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:10.931" starttime="20201108 01:57:07.366"></status>
</kw>
<msg timestamp="20201108 01:57:10.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:10.932" starttime="20201108 01:57:07.366"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:10.932" starttime="20201108 01:57:07.366"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:10.936" level="INFO">Running command 'ozone sh key list 63305-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:13.851" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:57:13.851" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:13.852" starttime="20201108 01:57:10.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:13.853" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201108 01:57:13.853" starttime="20201108 01:57:13.852"></status>
</kw>
<msg timestamp="20201108 01:57:13.853" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:13.853" starttime="20201108 01:57:10.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201108 01:57:13.854" starttime="20201108 01:57:13.854"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:57:13.854" critical="yes" starttime="20201108 01:57:01.216"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:13.863" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:13.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:13.866" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:57:13.866" starttime="20201108 01:57:13.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:13.867" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:57:13.867" starttime="20201108 01:57:13.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:13.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:13.867" starttime="20201108 01:57:13.867"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:13.867" starttime="20201108 01:57:13.859"></status>
</kw>
<msg timestamp="20201108 01:57:13.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:13.868" starttime="20201108 01:57:13.859"></status>
</kw>
<msg timestamp="20201108 01:57:13.868" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:57:13.868" starttime="20201108 01:57:13.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:57:13.868" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:57:13.869" starttime="20201108 01:57:13.868"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:13.874" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:13.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:13.885" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:57:13.885" starttime="20201108 01:57:13.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:13.886" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:57:13.886" starttime="20201108 01:57:13.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:13.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:13.886" starttime="20201108 01:57:13.886"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:13.887" starttime="20201108 01:57:13.870"></status>
</kw>
<msg timestamp="20201108 01:57:13.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:13.887" starttime="20201108 01:57:13.870"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:13.887" starttime="20201108 01:57:13.869"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:13.887" starttime="20201108 01:57:13.869"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:13.887" starttime="20201108 01:57:13.856"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:13.887" starttime="20201108 01:57:13.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:13.891" level="INFO">Running command 'ozone sh bucket link 63305-source/bucket1 63305-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:17.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:17.114" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:17.114" starttime="20201108 01:57:13.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:17.115" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:57:17.115" starttime="20201108 01:57:17.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:17.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:17.116" starttime="20201108 01:57:17.115"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:17.116" starttime="20201108 01:57:13.889"></status>
</kw>
<msg timestamp="20201108 01:57:17.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:17.116" starttime="20201108 01:57:13.888"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:17.116" starttime="20201108 01:57:13.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:17.120" level="INFO">Running command 'ozone sh key put 63305-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:22.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:22.307" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:22.307" starttime="20201108 01:57:17.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:22.308" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:57:22.308" starttime="20201108 01:57:22.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:22.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:22.309" starttime="20201108 01:57:22.308"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:22.309" starttime="20201108 01:57:17.118"></status>
</kw>
<msg timestamp="20201108 01:57:22.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:22.309" starttime="20201108 01:57:17.117"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:22.310" starttime="20201108 01:57:17.117"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201108 01:57:22.312" level="INFO">${postfix} = 68957</msg>
<status status="PASS" endtime="20201108 01:57:22.312" starttime="20201108 01:57:22.311"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201108 01:57:22.312" level="INFO">${tmpfile} = /tmp/tempkey-68957</msg>
<status status="PASS" endtime="20201108 01:57:22.312" starttime="20201108 01:57:22.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:22.315" level="INFO">Running command 'ozone sh key get -f 63305-target/link1/key3 /tmp/tempkey-68957 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:27.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:27.039" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:27.039" starttime="20201108 01:57:22.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.040" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:57:27.040" starttime="20201108 01:57:27.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:27.041" starttime="20201108 01:57:27.040"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.041" starttime="20201108 01:57:22.313"></status>
</kw>
<msg timestamp="20201108 01:57:27.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:27.041" starttime="20201108 01:57:22.313"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.042" starttime="20201108 01:57:22.312"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201108 01:57:27.044" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-68957 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:27.046" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201108 01:57:27.046" starttime="20201108 01:57:27.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:27.051" level="INFO">Running command 'rm -f /tmp/tempkey-68957 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:27.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:27.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:57:27.053" starttime="20201108 01:57:27.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.054" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:57:27.054" starttime="20201108 01:57:27.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:27.055" starttime="20201108 01:57:27.054"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.055" starttime="20201108 01:57:27.048"></status>
</kw>
<msg timestamp="20201108 01:57:27.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:27.055" starttime="20201108 01:57:27.048"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.055" starttime="20201108 01:57:27.047"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:57:27.056" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201108 01:57:27.056" starttime="20201108 01:57:27.055"></status>
</kw>
<msg timestamp="20201108 01:57:27.056" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201108 01:57:27.056" starttime="20201108 01:57:22.310"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:57:27.057" starttime="20201108 01:57:27.056"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.057" starttime="20201108 01:57:22.310"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:57:27.057" critical="yes" starttime="20201108 01:57:13.855"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:27.062" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:27.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:27.064" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201108 01:57:27.064" starttime="20201108 01:57:27.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.065" level="INFO">scm</msg>
<status status="PASS" endtime="20201108 01:57:27.065" starttime="20201108 01:57:27.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:27.066" starttime="20201108 01:57:27.065"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.067" starttime="20201108 01:57:27.060"></status>
</kw>
<msg timestamp="20201108 01:57:27.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:27.067" starttime="20201108 01:57:27.059"></status>
</kw>
<msg timestamp="20201108 01:57:27.067" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201108 01:57:27.067" starttime="20201108 01:57:27.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:57:27.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:57:27.068" starttime="20201108 01:57:27.067"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:27.073" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:27.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:27.089" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:57:27.089" starttime="20201108 01:57:27.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.090" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:57:27.090" starttime="20201108 01:57:27.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:27.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:27.091" starttime="20201108 01:57:27.091"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.091" starttime="20201108 01:57:27.069"></status>
</kw>
<msg timestamp="20201108 01:57:27.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:27.092" starttime="20201108 01:57:27.069"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.092" starttime="20201108 01:57:27.068"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.092" starttime="20201108 01:57:27.068"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.092" starttime="20201108 01:57:27.059"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:27.092" starttime="20201108 01:57:27.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:27.096" level="INFO">Running command 'ozone sh bucket delete 63305-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:30.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:30.334" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:30.334" starttime="20201108 01:57:27.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:30.336" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:57:30.336" starttime="20201108 01:57:30.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:30.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:30.337" starttime="20201108 01:57:30.337"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:30.337" starttime="20201108 01:57:27.093"></status>
</kw>
<msg timestamp="20201108 01:57:30.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:30.338" starttime="20201108 01:57:27.093"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:30.338" starttime="20201108 01:57:27.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:30.343" level="INFO">Running command 'ozone sh bucket list 63305-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:33.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:33.655" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:33.655" starttime="20201108 01:57:30.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:33.656" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:56:43.677Z",
  "modificationTime" : "2020-11-08T01:56:43.677Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:55:23.118Z",
  "modificationTime" : "2020-11-08T01:55:23.118Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:55:03.136Z",
  "modificationTime" : "2020-11-08T01:55:19.613Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:56:37.254Z",
  "modificationTime" : "2020-11-08T01:56:37.254Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:57:16.834Z",
  "modificationTime" : "2020-11-08T01:57:16.834Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:57:10.844Z",
  "modificationTime" : "2020-11-08T01:57:10.844Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:57:04.048Z",
  "modificationTime" : "2020-11-08T01:57:04.048Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:57:07.198Z",
  "modificationTime" : "2020-11-08T01:57:07.198Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:54:56.707Z",
  "modificationTime" : "2020-11-08T01:55:16.304Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63305-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:54:59.895Z",
  "modificationTime" : "2020-11-08T01:54:59.895Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63305-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201108 01:57:33.656" starttime="20201108 01:57:33.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:33.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:33.657" starttime="20201108 01:57:33.656"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:33.657" starttime="20201108 01:57:30.339"></status>
</kw>
<msg timestamp="20201108 01:57:33.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:33.657" starttime="20201108 01:57:30.339"></status>
</kw>
<msg timestamp="20201108 01:57:33.658" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:57:33.658" starttime="20201108 01:57:30.338"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:57:33.658" starttime="20201108 01:57:33.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:57:33.663" level="INFO">Running command 'ozone sh key list 63305-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:57:36.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:57:36.932" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201108 01:57:36.932" starttime="20201108 01:57:33.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:57:36.934" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201108 01:57:36.934" starttime="20201108 01:57:36.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:57:36.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:57:36.934" starttime="20201108 01:57:36.934"></status>
</kw>
<status status="PASS" endtime="20201108 01:57:36.935" starttime="20201108 01:57:33.659"></status>
</kw>
<msg timestamp="20201108 01:57:36.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:57:36.935" starttime="20201108 01:57:33.659"></status>
</kw>
<msg timestamp="20201108 01:57:36.935" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201108 01:57:36.935" starttime="20201108 01:57:33.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201108 01:57:36.936" starttime="20201108 01:57:36.935"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:57:36.936" critical="yes" starttime="20201108 01:57:27.057"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201108 01:57:36.938" starttime="20201108 01:54:35.437"></status>
</suite>
<status status="PASS" elapsedtime="207821" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
