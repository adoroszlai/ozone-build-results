<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 13:15:58.040" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201116 13:13:08.037" starttime="20201116 13:13:08.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:13:08.042" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:13:08.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:13:08.157" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 16 Nov 2020 13:13:08 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 16 Nov 2020 12:38:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201116 13:13:08.157" starttime="20201116 13:13:08.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:13:08.159" level="INFO">HTTP/1.1 200 OK
Date: Mon, 16 Nov 2020 13:13:08 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 16 Nov 2020 12:38:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201116 13:13:08.159" starttime="20201116 13:13:08.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:13:08.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:13:08.160" starttime="20201116 13:13:08.159"></status>
</kw>
<status status="PASS" endtime="20201116 13:13:08.160" starttime="20201116 13:13:08.038"></status>
</kw>
<msg timestamp="20201116 13:13:08.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:13:08.160" starttime="20201116 13:13:08.038"></status>
</kw>
<msg timestamp="20201116 13:13:08.160" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 16 Nov 2020 13:13:08 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 16 Nov 2020 12:38:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201116 13:13:08.160" starttime="20201116 13:13:08.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201116 13:13:08.161" starttime="20201116 13:13:08.160"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:13:08.161" critical="yes" starttime="20201116 13:13:08.036"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201116 13:13:08.163" starttime="20201116 13:13:08.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:13:08.173" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:14:17.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:14:17.468" level="INFO">${output} = 2020-11-16 13:13:09,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-16 13:13:09,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201116 13:14:17.468" starttime="20201116 13:13:08.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:14:17.469" level="INFO">2020-11-16 13:13:09,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-16 13:13:09,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:13:09,843 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-16 13:13:11,783 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-16 13:13:11,784 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-16 13:13:11,785 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-16 13:13:11,785 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-16 13:13:11,785 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-16 13:13:11,785 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-16 13:13:11,785 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-16 13:13:11,795 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-16 13:13:11,803 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-16 13:13:11,814 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-16 13:13:11,847 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-64404, with hadoop as owner.
2020-11-16 13:13:12,159 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-12242, with hadoop as owner.
2020-11-16 13:13:12,169 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-73523, with hadoop as owner.
2020-11-16 13:13:12,176 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-25205, with hadoop as owner.
2020-11-16 13:13:12,190 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-10682, with hadoop as owner.
2020-11-16 13:13:12,207 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64404/bucket-0-62209, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,302 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12242/bucket-0-89375, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,312 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73523/bucket-0-10207, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,323 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25205/bucket-0-74450, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,334 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10682/bucket-0-68772, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,341 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64404/bucket-1-45330, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,348 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12242/bucket-1-53360, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,355 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73523/bucket-1-79524, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,360 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25205/bucket-1-01990, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,390 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10682/bucket-1-73870, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,397 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64404/bucket-2-83420, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,402 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12242/bucket-2-52759, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,407 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73523/bucket-2-88294, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,420 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25205/bucket-2-27119, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,428 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10682/bucket-2-82905, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,436 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64404/bucket-3-68517, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,444 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12242/bucket-3-87670, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,454 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73523/bucket-3-44748, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,469 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25205/bucket-3-31242, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,479 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10682/bucket-3-21012, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,488 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64404/bucket-4-48168, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,494 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12242/bucket-4-17306, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,504 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73523/bucket-4-69829, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,515 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25205/bucket-4-86500, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,524 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10682/bucket-4-30920, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-16 13:13:12,824 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-16 13:13:13,626 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-16 13:13:13,824 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-16 13:13:13,946 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:13:13,947 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-DB265BED55BA-&gt;eff6e77f-e754-4374-a7ad-7fe18adb23b7
2020-11-16 13:13:13,948 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:13:14,826 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-16 13:13:15,828 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-16 13:13:16,556 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-609C7EB98776-&gt;d74d35f1-eea8-4a20-a52c-4bb2f1e2efd7
2020-11-16 13:13:16,556 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:13:16,832 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-16 13:13:17,832 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-16 13:13:18,843 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-11-16 13:13:19,844 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-11-16 13:13:20,844 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-11-16 13:13:21,845 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-11-16 13:13:22,845 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-11-16 13:13:23,846 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-11-16 13:13:24,847 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-11-16 13:13:25,847 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-11-16 13:13:26,848 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-11-16 13:13:27,849 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-11-16 13:13:28,849 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-11-16 13:13:29,850 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-11-16 13:13:30,850 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-11-16 13:13:31,850 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-11-16 13:13:32,851 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-11-16 13:13:33,852 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-11-16 13:13:34,852 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-11-16 13:13:35,853 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-11-16 13:13:36,854 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-11-16 13:13:37,854 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-11-16 13:13:38,854 [Thread-7] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-11-16 13:13:39,855 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-11-16 13:13:40,856 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-11-16 13:13:41,856 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-11-16 13:13:42,857 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-11-16 13:13:43,858 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-11-16 13:13:44,861 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-16 13:13:45,862 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-11-16 13:13:46,862 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-11-16 13:13:47,863 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-11-16 13:13:48,863 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-11-16 13:13:49,864 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-11-16 13:13:50,864 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-11-16 13:13:51,866 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-11-16 13:13:52,866 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-11-16 13:13:53,867 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-11-16 13:13:54,867 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-11-16 13:13:55,868 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-11-16 13:13:56,868 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-11-16 13:13:57,869 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-11-16 13:13:58,869 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-11-16 13:13:59,870 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-11-16 13:14:00,871 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-16 13:14:01,871 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-16 13:14:02,872 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-16 13:14:03,872 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-11-16 13:14:04,873 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-11-16 13:14:05,874 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-11-16 13:14:06,874 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-16 13:14:07,875 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-16 13:14:08,876 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-16 13:14:09,876 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-11-16 13:14:10,877 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-11-16 13:14:11,878 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-11-16 13:14:12,879 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,356
Average Time spent in bucket creation: 00:00:00,239
Average Time spent in key creation: 00:00:02,331
Average Time spent in key write: 00:00:00,947
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,157
***************************************************</msg>
<status status="PASS" endtime="20201116 13:14:17.469" starttime="20201116 13:14:17.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:14:17.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:14:17.470" starttime="20201116 13:14:17.469"></status>
</kw>
<status status="PASS" endtime="20201116 13:14:17.470" starttime="20201116 13:13:08.166"></status>
</kw>
<msg timestamp="20201116 13:14:17.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:14:17.470" starttime="20201116 13:13:08.164"></status>
</kw>
<msg timestamp="20201116 13:14:17.470" level="INFO">${result} = 2020-11-16 13:13:09,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-16 13:13:09,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201116 13:14:17.470" starttime="20201116 13:13:08.163"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:17.471" starttime="20201116 13:14:17.471"></status>
</kw>
<status status="PASS" endtime="20201116 13:14:17.471" starttime="20201116 13:14:17.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:17.472" starttime="20201116 13:14:17.472"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:14:17.472" critical="yes" starttime="20201116 13:13:08.162"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201116 13:14:17.473" starttime="20201116 13:13:07.996"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:14:21.586" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:14:23.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:14:23.801" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201116 13:14:23.801" starttime="20201116 13:14:21.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:14:23.802" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20201116 13:14:23.802" starttime="20201116 13:14:23.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:14:23.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:14:23.803" starttime="20201116 13:14:23.803"></status>
</kw>
<status status="PASS" endtime="20201116 13:14:23.803" starttime="20201116 13:14:21.582"></status>
</kw>
<msg timestamp="20201116 13:14:23.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:14:23.803" starttime="20201116 13:14:21.582"></status>
</kw>
<msg timestamp="20201116 13:14:23.804" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201116 13:14:23.804" starttime="20201116 13:14:21.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:23.804" starttime="20201116 13:14:23.804"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:14:23.804" critical="yes" starttime="20201116 13:14:21.581"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:14:23.810" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:14:25.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:14:25.868" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201116 13:14:25.868" starttime="20201116 13:14:23.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:14:25.869" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201116 13:14:25.869" starttime="20201116 13:14:25.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:14:25.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:14:25.869" starttime="20201116 13:14:25.869"></status>
</kw>
<status status="PASS" endtime="20201116 13:14:25.870" starttime="20201116 13:14:23.806"></status>
</kw>
<msg timestamp="20201116 13:14:25.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:14:25.870" starttime="20201116 13:14:23.806"></status>
</kw>
<msg timestamp="20201116 13:14:25.870" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201116 13:14:25.870" starttime="20201116 13:14:23.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:25.871" starttime="20201116 13:14:25.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:25.871" starttime="20201116 13:14:25.871"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:14:25.871" critical="yes" starttime="20201116 13:14:23.805"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201116 13:14:25.873" starttime="20201116 13:14:21.538"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:14:29.978" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:14:32.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:14:32.587" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:14:32.587" starttime="20201116 13:14:29.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:14:32.588" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:14:32.588" starttime="20201116 13:14:32.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:14:32.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:14:32.589" starttime="20201116 13:14:32.589"></status>
</kw>
<status status="PASS" endtime="20201116 13:14:32.589" starttime="20201116 13:14:29.973"></status>
</kw>
<msg timestamp="20201116 13:14:32.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:14:32.590" starttime="20201116 13:14:29.973"></status>
</kw>
<msg timestamp="20201116 13:14:32.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:14:32.590" starttime="20201116 13:14:29.973"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:32.590" starttime="20201116 13:14:32.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:14:32.595" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:14:35.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:14:35.098" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:14:35.098" starttime="20201116 13:14:32.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:14:35.099" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:14:35.099" starttime="20201116 13:14:35.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:14:35.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:14:35.100" starttime="20201116 13:14:35.099"></status>
</kw>
<status status="PASS" endtime="20201116 13:14:35.100" starttime="20201116 13:14:32.591"></status>
</kw>
<msg timestamp="20201116 13:14:35.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:14:35.100" starttime="20201116 13:14:32.591"></status>
</kw>
<msg timestamp="20201116 13:14:35.100" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:14:35.100" starttime="20201116 13:14:32.590"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:35.101" starttime="20201116 13:14:35.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:14:35.104" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:14:39.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:14:39.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:14:39.823" starttime="20201116 13:14:35.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:14:39.824" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:14:39.824" starttime="20201116 13:14:39.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:14:39.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:14:39.825" starttime="20201116 13:14:39.824"></status>
</kw>
<status status="PASS" endtime="20201116 13:14:39.825" starttime="20201116 13:14:35.102"></status>
</kw>
<msg timestamp="20201116 13:14:39.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:14:39.825" starttime="20201116 13:14:35.102"></status>
</kw>
<msg timestamp="20201116 13:14:39.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:14:39.826" starttime="20201116 13:14:35.101"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:14:39.826" starttime="20201116 13:14:39.826"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:14:39.826" critical="yes" starttime="20201116 13:14:29.972"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201116 13:14:39.827" starttime="20201116 13:14:29.931"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:15:48.125" level="INFO">${random} = 87987</msg>
<status status="PASS" endtime="20201116 13:15:48.125" starttime="20201116 13:15:48.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:15:48.130" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-87987 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:15:52.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:15:52.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:15:52.342" starttime="20201116 13:15:48.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:15:52.343" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:15:52.343" starttime="20201116 13:15:52.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:15:52.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:15:52.343" starttime="20201116 13:15:52.343"></status>
</kw>
<status status="PASS" endtime="20201116 13:15:52.343" starttime="20201116 13:15:48.126"></status>
</kw>
<msg timestamp="20201116 13:15:52.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:15:52.344" starttime="20201116 13:15:48.126"></status>
</kw>
<msg timestamp="20201116 13:15:52.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:15:52.344" starttime="20201116 13:15:48.125"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:15:52.344" starttime="20201116 13:15:52.344"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:15:52.345" critical="yes" starttime="20201116 13:15:48.124"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201116 13:15:52.346" starttime="20201116 13:15:48.076"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:14:45.569" level="INFO">${random} = 58972</msg>
<status status="PASS" endtime="20201116 13:14:45.569" starttime="20201116 13:14:45.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:14:45.575" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-58972 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:15:19.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:15:19.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:15:19.576" starttime="20201116 13:14:45.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:15:19.577" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:15:19.577" starttime="20201116 13:15:19.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:15:19.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:15:19.578" starttime="20201116 13:15:19.577"></status>
</kw>
<status status="PASS" endtime="20201116 13:15:19.578" starttime="20201116 13:14:45.570"></status>
</kw>
<msg timestamp="20201116 13:15:19.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:15:19.578" starttime="20201116 13:14:45.570"></status>
</kw>
<msg timestamp="20201116 13:15:19.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:15:19.578" starttime="20201116 13:14:45.569"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:15:19.579" starttime="20201116 13:15:19.578"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:15:19.579" critical="yes" starttime="20201116 13:14:45.568"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201116 13:15:19.580" starttime="20201116 13:14:45.523"></status>
</suite>
<status status="PASS" elapsedtime="122035" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
