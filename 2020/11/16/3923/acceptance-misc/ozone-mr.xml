<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 13:06:33.337" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:36.698" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:38.850" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 12:54:38.850" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:54:38.850" starttime="20201116 12:54:36.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:38.851" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:54:38.851" starttime="20201116 12:54:38.850"></status>
</kw>
<msg timestamp="20201116 12:54:38.851" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:54:38.851" starttime="20201116 12:54:36.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:38.858" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:40.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:54:40.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:54:40.618" starttime="20201116 12:54:38.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:40.619" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:54:40.619" starttime="20201116 12:54:40.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:54:40.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:54:40.620" starttime="20201116 12:54:40.620"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:40.620" starttime="20201116 12:54:38.853"></status>
</kw>
<msg timestamp="20201116 12:54:40.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:54:40.621" starttime="20201116 12:54:38.853"></status>
</kw>
<msg timestamp="20201116 12:54:40.621" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 12:54:40.621" starttime="20201116 12:54:38.852"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 12:54:40.621" starttime="20201116 12:54:40.621"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:40.621" starttime="20201116 12:54:38.852"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:40.621" starttime="20201116 12:54:38.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:40.625" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:42.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:54:42.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:54:42.556" starttime="20201116 12:54:40.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:42.557" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:54:42.557" starttime="20201116 12:54:42.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:54:42.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:54:42.558" starttime="20201116 12:54:42.557"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:42.558" starttime="20201116 12:54:40.623"></status>
</kw>
<msg timestamp="20201116 12:54:42.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:54:42.559" starttime="20201116 12:54:40.623"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:42.559" starttime="20201116 12:54:40.622"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:42.559" starttime="20201116 12:54:40.622"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:42.559" starttime="20201116 12:54:40.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 12:54:42.559" starttime="20201116 12:54:42.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:42.568" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:44.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:54:44.527" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:54:42.514Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 12:54:44.528" starttime="20201116 12:54:42.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:44.529" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:54:42.514Z",
  "modificationTime" : "2020-11-16T12:54:42.514Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 12:54:44.529" starttime="20201116 12:54:44.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:54:44.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:54:44.529" starttime="20201116 12:54:44.529"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:44.529" starttime="20201116 12:54:42.560"></status>
</kw>
<msg timestamp="20201116 12:54:44.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:54:44.530" starttime="20201116 12:54:42.560"></status>
</kw>
<msg timestamp="20201116 12:54:44.530" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:54:42.514Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 12:54:44.530" starttime="20201116 12:54:42.559"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 12:54:44.530" starttime="20201116 12:54:44.530"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:54:44.534" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:54:44.535" starttime="20201116 12:54:44.534"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:54:44.535" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:54:44.535" starttime="20201116 12:54:44.535"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:44.535" starttime="20201116 12:54:44.534"></status>
</kw>
<msg timestamp="20201116 12:54:44.535" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:54:44.535" starttime="20201116 12:54:44.533"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:44.535" starttime="20201116 12:54:44.532"></status>
</kw>
<msg timestamp="20201116 12:54:44.535" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 12:54:44.536" starttime="20201116 12:54:44.532"></status>
</kw>
<msg timestamp="20201116 12:54:44.536" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 12:54:44.536" starttime="20201116 12:54:44.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:44.540" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:46.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:54:46.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:54:46.422" starttime="20201116 12:54:44.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:46.423" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:54:46.423" starttime="20201116 12:54:46.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:54:46.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:54:46.423" starttime="20201116 12:54:46.423"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:46.423" starttime="20201116 12:54:44.536"></status>
</kw>
<msg timestamp="20201116 12:54:46.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:54:46.424" starttime="20201116 12:54:44.536"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:46.424" starttime="20201116 12:54:44.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:46.428" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:51.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:54:51.652" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:54:51.652" starttime="20201116 12:54:46.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:51.653" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:54:51.653" starttime="20201116 12:54:51.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:54:51.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:54:51.653" starttime="20201116 12:54:51.653"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:51.654" starttime="20201116 12:54:46.425"></status>
</kw>
<msg timestamp="20201116 12:54:51.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:54:51.654" starttime="20201116 12:54:46.425"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:51.654" starttime="20201116 12:54:46.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:51.657" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:55.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:54:55.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:54:55.056" starttime="20201116 12:54:51.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:55.057" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:54:55.057" starttime="20201116 12:54:55.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:54:55.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:54:55.058" starttime="20201116 12:54:55.057"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:55.058" starttime="20201116 12:54:51.655"></status>
</kw>
<msg timestamp="20201116 12:54:55.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:54:55.058" starttime="20201116 12:54:51.654"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:55.058" starttime="20201116 12:54:51.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:55.062" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:54:58.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:54:58.409" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:54:58.409" starttime="20201116 12:54:55.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:54:58.410" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:54:58.411" starttime="20201116 12:54:58.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:54:58.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:54:58.411" starttime="20201116 12:54:58.411"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:58.411" starttime="20201116 12:54:55.059"></status>
</kw>
<msg timestamp="20201116 12:54:58.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:54:58.411" starttime="20201116 12:54:55.059"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:58.412" starttime="20201116 12:54:55.058"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 12:54:58.412" critical="yes" starttime="20201116 12:54:36.692"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:54:58.416" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:54:58.416" starttime="20201116 12:54:58.415"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:54:58.416" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:54:58.416" starttime="20201116 12:54:58.416"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:58.417" starttime="20201116 12:54:58.415"></status>
</kw>
<msg timestamp="20201116 12:54:58.417" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:54:58.417" starttime="20201116 12:54:58.415"></status>
</kw>
<status status="PASS" endtime="20201116 12:54:58.417" starttime="20201116 12:54:58.414"></status>
</kw>
<msg timestamp="20201116 12:54:58.417" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:54:58.417" starttime="20201116 12:54:58.414"></status>
</kw>
<msg timestamp="20201116 12:54:58.417" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:54:58.417" starttime="20201116 12:54:58.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:54:58.420" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:55:00.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:55:00.307" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:55:00.307" starttime="20201116 12:54:58.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:55:00.308" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:55:00.308" starttime="20201116 12:55:00.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:55:00.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:55:00.309" starttime="20201116 12:55:00.308"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:00.309" starttime="20201116 12:54:58.418"></status>
</kw>
<msg timestamp="20201116 12:55:00.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:55:00.309" starttime="20201116 12:54:58.418"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:00.309" starttime="20201116 12:54:58.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:55:00.313" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:55:02.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:55:02.178" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:55:02.178" starttime="20201116 12:55:00.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:55:02.179" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:55:02.179" starttime="20201116 12:55:02.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:55:02.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:55:02.180" starttime="20201116 12:55:02.179"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:02.180" starttime="20201116 12:55:00.310"></status>
</kw>
<msg timestamp="20201116 12:55:02.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:55:02.180" starttime="20201116 12:55:00.310"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:02.180" starttime="20201116 12:55:00.309"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 12:55:02.180" critical="yes" starttime="20201116 12:54:58.412"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 12:55:02.181" starttime="20201116 12:54:36.647"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 12:56:25.201" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 12:56:25.201" starttime="20201116 12:56:25.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:56:25.201" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 12:56:25.201" starttime="20201116 12:56:25.201"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:25.201" starttime="20201116 12:56:25.200"></status>
</kw>
<msg timestamp="20201116 12:56:25.201" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 12:56:25.201" starttime="20201116 12:56:25.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:56:25.202" starttime="20201116 12:56:25.202"></status>
</kw>
<msg timestamp="20201116 12:56:25.202" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 12:56:25.202" starttime="20201116 12:56:25.201"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:25.202" starttime="20201116 12:56:25.199"></status>
</kw>
<msg timestamp="20201116 12:56:25.202" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:56:25.202" starttime="20201116 12:56:25.198"></status>
</kw>
<msg timestamp="20201116 12:56:25.203" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:56:25.203" starttime="20201116 12:56:25.192"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:56:25.203" level="INFO">${random} = 91277</msg>
<status status="PASS" endtime="20201116 12:56:25.203" starttime="20201116 12:56:25.203"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:56:25.207" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-91277 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:56:28.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:56:28.221" level="INFO">${output} = 2020-11-16 12:56:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:56:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:56:28.221" starttime="20201116 12:56:25.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:56:28.222" level="INFO">2020-11-16 12:56:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:56:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:56:26 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:56:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:56:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0D7171887E3F-&gt;67eda888-f4bf-43cb-9ea1-3749f1566c24
2020-11-16 12:56:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 12:56:28.222" starttime="20201116 12:56:28.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:56:28.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:56:28.223" starttime="20201116 12:56:28.222"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:28.223" starttime="20201116 12:56:25.204"></status>
</kw>
<msg timestamp="20201116 12:56:28.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:56:28.223" starttime="20201116 12:56:25.204"></status>
</kw>
<msg timestamp="20201116 12:56:28.223" level="INFO">${result} = 2020-11-16 12:56:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:56:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:56:28.223" starttime="20201116 12:56:25.203"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:56:28.229" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:56:29.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:56:29.709" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:55 ofs://om/volume1/bucket1/ozone-70748
-rw-...</msg>
<status status="PASS" endtime="20201116 12:56:29.709" starttime="20201116 12:56:28.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:56:29.710" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:55 ofs://om/volume1/bucket1/ozone-70748
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:56 ofs://om/volume1/bucket1/ozone-91277
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:55 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:55 ofs://om/volume1/bucket1/wordcount-32.txt</msg>
<status status="PASS" endtime="20201116 12:56:29.710" starttime="20201116 12:56:29.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:56:29.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:56:29.710" starttime="20201116 12:56:29.710"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:29.711" starttime="20201116 12:56:28.225"></status>
</kw>
<msg timestamp="20201116 12:56:29.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:56:29.711" starttime="20201116 12:56:28.225"></status>
</kw>
<msg timestamp="20201116 12:56:29.711" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:55 ofs://om/volume1/bucket1/ozone-70748
-rw-...</msg>
<status status="PASS" endtime="20201116 12:56:29.711" starttime="20201116 12:56:28.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:56:29.712" starttime="20201116 12:56:29.711"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 12:56:29.712" critical="yes" starttime="20201116 12:56:25.191"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 12:56:29.713" starttime="20201116 12:56:25.145"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:55:06.636" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:55:06.636" starttime="20201116 12:55:06.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:55:06.637" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:55:06.637" starttime="20201116 12:55:06.636"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:06.637" starttime="20201116 12:55:06.635"></status>
</kw>
<msg timestamp="20201116 12:55:06.637" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:55:06.637" starttime="20201116 12:55:06.635"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:06.637" starttime="20201116 12:55:06.635"></status>
</kw>
<msg timestamp="20201116 12:55:06.637" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:55:06.637" starttime="20201116 12:55:06.634"></status>
</kw>
<msg timestamp="20201116 12:55:06.638" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:55:06.638" starttime="20201116 12:55:06.633"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:55:06.638" level="INFO">${random} = 70748</msg>
<status status="PASS" endtime="20201116 12:55:06.638" starttime="20201116 12:55:06.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:55:06.644" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-70748 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:55:09.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:55:09.779" level="INFO">${output} = 2020-11-16 12:55:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:55:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:55:09.779" starttime="20201116 12:55:06.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:55:09.779" level="INFO">2020-11-16 12:55:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:55:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:55:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:55:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:55:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-118A9FC64E9F-&gt;67eda888-f4bf-43cb-9ea1-3749f1566c24
2020-11-16 12:55:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 12:55:09.780" starttime="20201116 12:55:09.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:55:09.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:55:09.780" starttime="20201116 12:55:09.780"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:09.780" starttime="20201116 12:55:06.639"></status>
</kw>
<msg timestamp="20201116 12:55:09.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:55:09.780" starttime="20201116 12:55:06.639"></status>
</kw>
<msg timestamp="20201116 12:55:09.781" level="INFO">${result} = 2020-11-16 12:55:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:55:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:55:09.781" starttime="20201116 12:55:06.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:55:09.785" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:55:11.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:55:11.346" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:55 o3fs://bucket1.volume1.om/ozone-70748
dr...</msg>
<status status="PASS" endtime="20201116 12:55:11.347" starttime="20201116 12:55:09.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:55:11.348" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:55 o3fs://bucket1.volume1.om/ozone-70748
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:55 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:55:11.348" starttime="20201116 12:55:11.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:55:11.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:55:11.349" starttime="20201116 12:55:11.348"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:11.349" starttime="20201116 12:55:09.782"></status>
</kw>
<msg timestamp="20201116 12:55:11.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:55:11.349" starttime="20201116 12:55:09.781"></status>
</kw>
<msg timestamp="20201116 12:55:11.349" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:55 o3fs://bucket1.volume1.om/ozone-70748
dr...</msg>
<status status="PASS" endtime="20201116 12:55:11.349" starttime="20201116 12:55:09.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:55:11.350" starttime="20201116 12:55:11.350"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 12:55:11.350" critical="yes" starttime="20201116 12:55:06.632"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 12:55:11.352" starttime="20201116 12:55:06.590"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:56:33.932" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:56:33.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:56:33.938" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:56:33.938" starttime="20201116 12:56:33.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:56:33.939" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:56:33.939" starttime="20201116 12:56:33.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:56:33.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:56:33.940" starttime="20201116 12:56:33.939"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:33.940" starttime="20201116 12:56:33.928"></status>
</kw>
<msg timestamp="20201116 12:56:33.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:56:33.940" starttime="20201116 12:56:33.927"></status>
</kw>
<msg timestamp="20201116 12:56:33.940" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:56:33.940" starttime="20201116 12:56:33.927"></status>
</kw>
<msg timestamp="20201116 12:56:33.941" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:56:33.941" starttime="20201116 12:56:33.927"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 12:56:33.945" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 12:56:33.945" starttime="20201116 12:56:33.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:56:33.946" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 12:56:33.946" starttime="20201116 12:56:33.946"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:33.946" starttime="20201116 12:56:33.943"></status>
</kw>
<msg timestamp="20201116 12:56:33.946" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 12:56:33.946" starttime="20201116 12:56:33.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:56:33.947" starttime="20201116 12:56:33.947"></status>
</kw>
<msg timestamp="20201116 12:56:33.947" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 12:56:33.947" starttime="20201116 12:56:33.946"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:33.948" starttime="20201116 12:56:33.942"></status>
</kw>
<msg timestamp="20201116 12:56:33.948" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:56:33.948" starttime="20201116 12:56:33.942"></status>
</kw>
<msg timestamp="20201116 12:56:33.948" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:56:33.948" starttime="20201116 12:56:33.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:56:33.952" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:11.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:11.115" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:56:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:56:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 12:57:11.115" starttime="20201116 12:56:33.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:11.116" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:56:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:56:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:56:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:56:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:56:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A9CB75314BDD-&gt;67eda888-f4bf-43cb-9ea1-3749f1566c24
2020-11-16 12:56:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 12:56:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:56:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 12:56:37 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 12:56:39 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 12:56:39 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531240704_0003
2020-11-16 12:56:40 INFO  YarnClientImpl:273 - Submitted application application_1605531240704_0003
2020-11-16 12:56:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531240704_0003/
2020-11-16 12:56:40 INFO  Job:1339 - Running job: job_1605531240704_0003
2020-11-16 12:56:46 INFO  Job:1360 - Job job_1605531240704_0003 running in uber mode : false
2020-11-16 12:56:46 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 12:56:52 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 12:56:57 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 12:57:01 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 12:57:04 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 12:57:10 INFO  Job:1378 - Job job_1605531240704_0003 completed successfully
2020-11-16 12:57:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33800
		Total time spent by all reduces in occupied slots (ms)=12668
		Total time spent by all map tasks (ms)=8450
		Total time spent by all reduce tasks (ms)=3167
		Total vcore-milliseconds taken by all map tasks=8450
		Total vcore-milliseconds taken by all reduce tasks=3167
		Total megabyte-milliseconds taken by all map tasks=34611200
		Total megabyte-milliseconds taken by all reduce tasks=12972032
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=525
		CPU time spent (ms)=6030
		Physical memory (bytes) snapshot=1150992384
		Virtual memory (bytes) snapshot=15783006208
		Total committed heap usage (bytes)=1055391744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.776 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 12:57:11.117" starttime="20201116 12:57:11.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:11.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:11.117" starttime="20201116 12:57:11.117"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.117" starttime="20201116 12:56:33.949"></status>
</kw>
<msg timestamp="20201116 12:57:11.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:11.117" starttime="20201116 12:56:33.949"></status>
</kw>
<msg timestamp="20201116 12:57:11.118" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:56:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:56:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 12:57:11.118" starttime="20201116 12:56:33.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 12:57:11.118" starttime="20201116 12:57:11.118"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 12:57:11.119" critical="yes" starttime="20201116 12:56:33.926"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:11.124" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:11.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:11.130" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:57:11.130" starttime="20201116 12:57:11.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:11.131" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:57:11.131" starttime="20201116 12:57:11.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:11.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:11.132" starttime="20201116 12:57:11.131"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.132" starttime="20201116 12:57:11.122"></status>
</kw>
<msg timestamp="20201116 12:57:11.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:11.132" starttime="20201116 12:57:11.122"></status>
</kw>
<msg timestamp="20201116 12:57:11.133" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:57:11.133" starttime="20201116 12:57:11.121"></status>
</kw>
<msg timestamp="20201116 12:57:11.133" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:57:11.133" starttime="20201116 12:57:11.121"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:57:11.133" level="INFO">${random} = 91</msg>
<status status="PASS" endtime="20201116 12:57:11.133" starttime="20201116 12:57:11.133"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 12:57:11.136" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 12:57:11.136" starttime="20201116 12:57:11.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:57:11.137" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 12:57:11.137" starttime="20201116 12:57:11.137"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.137" starttime="20201116 12:57:11.136"></status>
</kw>
<msg timestamp="20201116 12:57:11.137" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 12:57:11.137" starttime="20201116 12:57:11.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:57:11.139" starttime="20201116 12:57:11.138"></status>
</kw>
<msg timestamp="20201116 12:57:11.139" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 12:57:11.139" starttime="20201116 12:57:11.137"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.139" starttime="20201116 12:57:11.135"></status>
</kw>
<msg timestamp="20201116 12:57:11.139" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:57:11.139" starttime="20201116 12:57:11.134"></status>
</kw>
<msg timestamp="20201116 12:57:11.139" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:57:11.139" starttime="20201116 12:57:11.133"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 12:57:11.142" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 12:57:11.142" starttime="20201116 12:57:11.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:57:11.143" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 12:57:11.143" starttime="20201116 12:57:11.142"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.143" starttime="20201116 12:57:11.141"></status>
</kw>
<msg timestamp="20201116 12:57:11.143" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 12:57:11.143" starttime="20201116 12:57:11.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:57:11.144" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 12:57:11.144" starttime="20201116 12:57:11.144"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:57:11.145" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 12:57:11.145" starttime="20201116 12:57:11.144"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.145" starttime="20201116 12:57:11.143"></status>
</kw>
<msg timestamp="20201116 12:57:11.145" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 12:57:11.145" starttime="20201116 12:57:11.143"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.145" starttime="20201116 12:57:11.140"></status>
</kw>
<msg timestamp="20201116 12:57:11.145" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 12:57:11.145" starttime="20201116 12:57:11.140"></status>
</kw>
<msg timestamp="20201116 12:57:11.145" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 12:57:11.145" starttime="20201116 12:57:11.139"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 12:57:11.148" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 12:57:11.148" starttime="20201116 12:57:11.147"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:57:11.149" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 12:57:11.149" starttime="20201116 12:57:11.148"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.149" starttime="20201116 12:57:11.147"></status>
</kw>
<msg timestamp="20201116 12:57:11.149" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 12:57:11.149" starttime="20201116 12:57:11.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:57:11.150" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 12:57:11.150" starttime="20201116 12:57:11.150"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:57:11.151" level="INFO">${result} = /wordcount-91.txt</msg>
<status status="PASS" endtime="20201116 12:57:11.151" starttime="20201116 12:57:11.151"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.151" starttime="20201116 12:57:11.149"></status>
</kw>
<msg timestamp="20201116 12:57:11.151" level="INFO">${path_with_leading} = /wordcount-91.txt</msg>
<status status="PASS" endtime="20201116 12:57:11.151" starttime="20201116 12:57:11.149"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:11.151" starttime="20201116 12:57:11.146"></status>
</kw>
<msg timestamp="20201116 12:57:11.151" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201116 12:57:11.152" starttime="20201116 12:57:11.146"></status>
</kw>
<msg timestamp="20201116 12:57:11.152" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201116 12:57:11.152" starttime="20201116 12:57:11.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:11.155" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-91.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:43.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:43.503" level="INFO">${output} = 2020-11-16 12:57:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:57:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 12:57:43.503" starttime="20201116 12:57:11.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:43.504" level="INFO">2020-11-16 12:57:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:57:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 12:57:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:57:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:57:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:57:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:57:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F07B27CBF23D-&gt;67eda888-f4bf-43cb-9ea1-3749f1566c24
2020-11-16 12:57:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 12:57:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 12:57:14 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 12:57:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531240704_0004
2020-11-16 12:57:14 INFO  YarnClientImpl:273 - Submitted application application_1605531240704_0004
2020-11-16 12:57:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531240704_0004/
2020-11-16 12:57:14 INFO  Job:1339 - Running job: job_1605531240704_0004
2020-11-16 12:57:22 INFO  Job:1360 - Job job_1605531240704_0004 running in uber mode : false
2020-11-16 12:57:22 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 12:57:28 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 12:57:33 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 12:57:39 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 12:57:42 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 12:57:43 INFO  Job:1378 - Job job_1605531240704_0004 completed successfully
2020-11-16 12:57:43 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34800
		Total time spent by all reduces in occupied slots (ms)=13140
		Total time spent by all map tasks (ms)=8700
		Total time spent by all reduce tasks (ms)=3285
		Total vcore-milliseconds taken by all map tasks=8700
		Total vcore-milliseconds taken by all reduce tasks=3285
		Total megabyte-milliseconds taken by all map tasks=35635200
		Total megabyte-milliseconds taken by all reduce tasks=13455360
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=521
		CPU time spent (ms)=6070
		Physical memory (bytes) snapshot=1129046016
		Virtual memory (bytes) snapshot=15768322048
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 12:57:43.504" starttime="20201116 12:57:43.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:43.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:43.505" starttime="20201116 12:57:43.504"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:43.505" starttime="20201116 12:57:11.153"></status>
</kw>
<msg timestamp="20201116 12:57:43.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:43.505" starttime="20201116 12:57:11.152"></status>
</kw>
<msg timestamp="20201116 12:57:43.506" level="INFO">${output} = 2020-11-16 12:57:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:57:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 12:57:43.506" starttime="20201116 12:57:11.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 12:57:43.506" starttime="20201116 12:57:43.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 12:57:43.507" starttime="20201116 12:57:43.506"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 12:57:43.507" critical="yes" starttime="20201116 12:57:11.120"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 12:57:43.508" starttime="20201116 12:56:33.879"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:55:15.504" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:55:15.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:55:15.510" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:15.510" starttime="20201116 12:55:15.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:55:15.511" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:15.511" starttime="20201116 12:55:15.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:55:15.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:55:15.511" starttime="20201116 12:55:15.511"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:15.511" starttime="20201116 12:55:15.500"></status>
</kw>
<msg timestamp="20201116 12:55:15.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:55:15.512" starttime="20201116 12:55:15.500"></status>
</kw>
<msg timestamp="20201116 12:55:15.512" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:15.512" starttime="20201116 12:55:15.499"></status>
</kw>
<msg timestamp="20201116 12:55:15.512" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:15.512" starttime="20201116 12:55:15.499"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:55:15.516" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:55:15.516" starttime="20201116 12:55:15.515"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:55:15.516" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:55:15.516" starttime="20201116 12:55:15.516"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:15.516" starttime="20201116 12:55:15.514"></status>
</kw>
<msg timestamp="20201116 12:55:15.517" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:55:15.517" starttime="20201116 12:55:15.514"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:15.517" starttime="20201116 12:55:15.513"></status>
</kw>
<msg timestamp="20201116 12:55:15.517" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:55:15.517" starttime="20201116 12:55:15.513"></status>
</kw>
<msg timestamp="20201116 12:55:15.517" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:55:15.517" starttime="20201116 12:55:15.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:55:15.520" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:55:48.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:55:48.441" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:55:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:55:17 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 12:55:48.442" starttime="20201116 12:55:15.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:55:48.442" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:55:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:55:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:55:17 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:55:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:55:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3C8C4A2BC702-&gt;67eda888-f4bf-43cb-9ea1-3749f1566c24
2020-11-16 12:55:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 12:55:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:55:18 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 12:55:18 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 12:55:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531240704_0001
2020-11-16 12:55:19 INFO  YarnClientImpl:273 - Submitted application application_1605531240704_0001
2020-11-16 12:55:19 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531240704_0001/
2020-11-16 12:55:19 INFO  Job:1339 - Running job: job_1605531240704_0001
2020-11-16 12:55:28 INFO  Job:1360 - Job job_1605531240704_0001 running in uber mode : false
2020-11-16 12:55:28 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 12:55:34 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 12:55:39 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 12:55:43 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 12:55:46 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 12:55:47 INFO  Job:1378 - Job job_1605531240704_0001 completed successfully
2020-11-16 12:55:47 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610893
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=804
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34132
		Total time spent by all reduces in occupied slots (ms)=13184
		Total time spent by all map tasks (ms)=8533
		Total time spent by all reduce tasks (ms)=3296
		Total vcore-milliseconds taken by all map tasks=8533
		Total vcore-milliseconds taken by all reduce tasks=3296
		Total megabyte-milliseconds taken by all map tasks=34951168
		Total megabyte-milliseconds taken by all reduce tasks=13500416
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=450
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=527
		CPU time spent (ms)=5990
		Physical memory (bytes) snapshot=1177792512
		Virtual memory (bytes) snapshot=15796617216
		Total committed heap usage (bytes)=1037041664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.762 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 12:55:48.443" starttime="20201116 12:55:48.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:55:48.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:55:48.443" starttime="20201116 12:55:48.443"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.444" starttime="20201116 12:55:15.518"></status>
</kw>
<msg timestamp="20201116 12:55:48.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:55:48.444" starttime="20201116 12:55:15.518"></status>
</kw>
<msg timestamp="20201116 12:55:48.444" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:55:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:55:17 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 12:55:48.444" starttime="20201116 12:55:15.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 12:55:48.445" starttime="20201116 12:55:48.444"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 12:55:48.445" critical="yes" starttime="20201116 12:55:15.498"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:55:48.449" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:55:48.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:55:48.455" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:48.455" starttime="20201116 12:55:48.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:55:48.456" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:48.456" starttime="20201116 12:55:48.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:55:48.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:55:48.456" starttime="20201116 12:55:48.456"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.456" starttime="20201116 12:55:48.447"></status>
</kw>
<msg timestamp="20201116 12:55:48.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:55:48.457" starttime="20201116 12:55:48.447"></status>
</kw>
<msg timestamp="20201116 12:55:48.457" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:48.457" starttime="20201116 12:55:48.446"></status>
</kw>
<msg timestamp="20201116 12:55:48.457" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:55:48.457" starttime="20201116 12:55:48.446"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:55:48.458" level="INFO">${random} = 32</msg>
<status status="PASS" endtime="20201116 12:55:48.458" starttime="20201116 12:55:48.457"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:55:48.461" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:55:48.461" starttime="20201116 12:55:48.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:55:48.462" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:55:48.462" starttime="20201116 12:55:48.461"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.462" starttime="20201116 12:55:48.460"></status>
</kw>
<msg timestamp="20201116 12:55:48.462" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:55:48.462" starttime="20201116 12:55:48.460"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.462" starttime="20201116 12:55:48.459"></status>
</kw>
<msg timestamp="20201116 12:55:48.462" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:55:48.462" starttime="20201116 12:55:48.458"></status>
</kw>
<msg timestamp="20201116 12:55:48.463" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:55:48.463" starttime="20201116 12:55:48.458"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:55:48.466" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:55:48.466" starttime="20201116 12:55:48.466"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:55:48.466" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:55:48.466" starttime="20201116 12:55:48.466"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.467" starttime="20201116 12:55:48.465"></status>
</kw>
<msg timestamp="20201116 12:55:48.467" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:55:48.467" starttime="20201116 12:55:48.465"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.467" starttime="20201116 12:55:48.464"></status>
</kw>
<msg timestamp="20201116 12:55:48.467" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 12:55:48.467" starttime="20201116 12:55:48.464"></status>
</kw>
<msg timestamp="20201116 12:55:48.467" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 12:55:48.467" starttime="20201116 12:55:48.463"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:55:48.470" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:55:48.470" starttime="20201116 12:55:48.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:55:48.471" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:55:48.471" starttime="20201116 12:55:48.470"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.471" starttime="20201116 12:55:48.469"></status>
</kw>
<msg timestamp="20201116 12:55:48.471" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:55:48.471" starttime="20201116 12:55:48.469"></status>
</kw>
<status status="PASS" endtime="20201116 12:55:48.471" starttime="20201116 12:55:48.468"></status>
</kw>
<msg timestamp="20201116 12:55:48.471" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201116 12:55:48.471" starttime="20201116 12:55:48.468"></status>
</kw>
<msg timestamp="20201116 12:55:48.471" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201116 12:55:48.472" starttime="20201116 12:55:48.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:55:48.475" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-32.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:56:20.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:56:20.843" level="INFO">${output} = 2020-11-16 12:55:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:55:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 12:56:20.843" starttime="20201116 12:55:48.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:56:20.845" level="INFO">2020-11-16 12:55:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:55:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 12:55:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:55:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:55:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:55:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:55:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79DD256310CD-&gt;67eda888-f4bf-43cb-9ea1-3749f1566c24
2020-11-16 12:55:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 12:55:51 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 12:55:51 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 12:55:51 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531240704_0002
2020-11-16 12:55:52 INFO  YarnClientImpl:273 - Submitted application application_1605531240704_0002
2020-11-16 12:55:52 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531240704_0002/
2020-11-16 12:55:52 INFO  Job:1339 - Running job: job_1605531240704_0002
2020-11-16 12:56:00 INFO  Job:1360 - Job job_1605531240704_0002 running in uber mode : false
2020-11-16 12:56:00 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 12:56:06 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 12:56:10 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 12:56:14 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 12:56:17 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 12:56:20 INFO  Job:1378 - Job job_1605531240704_0002 completed successfully
2020-11-16 12:56:20 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34008
		Total time spent by all reduces in occupied slots (ms)=13096
		Total time spent by all map tasks (ms)=8502
		Total time spent by all reduce tasks (ms)=3274
		Total vcore-milliseconds taken by all map tasks=8502
		Total vcore-milliseconds taken by all reduce tasks=3274
		Total megabyte-milliseconds taken by all map tasks=34824192
		Total megabyte-milliseconds taken by all reduce tasks=13410304
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=5890
		Physical memory (bytes) snapshot=1152798720
		Virtual memory (bytes) snapshot=15779753984
		Total committed heap usage (bytes)=1040711680
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 12:56:20.845" starttime="20201116 12:56:20.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:56:20.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:56:20.846" starttime="20201116 12:56:20.845"></status>
</kw>
<status status="PASS" endtime="20201116 12:56:20.846" starttime="20201116 12:55:48.473"></status>
</kw>
<msg timestamp="20201116 12:56:20.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:56:20.846" starttime="20201116 12:55:48.472"></status>
</kw>
<msg timestamp="20201116 12:56:20.846" level="INFO">${output} = 2020-11-16 12:55:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 12:55:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 12:56:20.846" starttime="20201116 12:55:48.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 12:56:20.847" starttime="20201116 12:56:20.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 12:56:20.848" starttime="20201116 12:56:20.847"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 12:56:20.848" critical="yes" starttime="20201116 12:55:48.446"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 12:56:20.849" starttime="20201116 12:55:15.451"></status>
</suite>
<status status="PASS" elapsedtime="169891" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:43.884" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:45.792" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 12:58:45.792" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:58:45.792" starttime="20201116 12:58:43.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:45.793" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:58:45.793" starttime="20201116 12:58:45.792"></status>
</kw>
<msg timestamp="20201116 12:58:45.793" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:58:45.793" starttime="20201116 12:58:43.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:45.800" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:47.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:47.685" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:58:47.685" starttime="20201116 12:58:45.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:47.686" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:58:47.686" starttime="20201116 12:58:47.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:47.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:47.687" starttime="20201116 12:58:47.687"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:47.687" starttime="20201116 12:58:45.795"></status>
</kw>
<msg timestamp="20201116 12:58:47.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:47.687" starttime="20201116 12:58:45.795"></status>
</kw>
<msg timestamp="20201116 12:58:47.688" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 12:58:47.688" starttime="20201116 12:58:45.795"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 12:58:47.688" starttime="20201116 12:58:47.688"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:47.688" starttime="20201116 12:58:45.794"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:47.688" starttime="20201116 12:58:45.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:47.692" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:49.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:49.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:58:49.568" starttime="20201116 12:58:47.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:49.569" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:58:49.569" starttime="20201116 12:58:49.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:49.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:49.569" starttime="20201116 12:58:49.569"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:49.570" starttime="20201116 12:58:47.690"></status>
</kw>
<msg timestamp="20201116 12:58:49.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:49.570" starttime="20201116 12:58:47.690"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:49.570" starttime="20201116 12:58:47.689"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:49.570" starttime="20201116 12:58:47.689"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:49.570" starttime="20201116 12:58:47.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 12:58:49.571" starttime="20201116 12:58:49.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:49.574" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:51.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:51.432" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:58:49.435Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 12:58:51.433" starttime="20201116 12:58:49.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:51.434" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:58:49.435Z",
  "modificationTime" : "2020-11-16T12:58:49.435Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 12:58:51.434" starttime="20201116 12:58:51.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:51.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:51.434" starttime="20201116 12:58:51.434"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:51.435" starttime="20201116 12:58:49.571"></status>
</kw>
<msg timestamp="20201116 12:58:51.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:51.435" starttime="20201116 12:58:49.571"></status>
</kw>
<msg timestamp="20201116 12:58:51.435" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:58:49.435Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 12:58:51.435" starttime="20201116 12:58:49.571"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 12:58:51.436" starttime="20201116 12:58:51.435"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:58:51.439" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:58:51.439" starttime="20201116 12:58:51.439"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:58:51.440" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:58:51.440" starttime="20201116 12:58:51.440"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:51.440" starttime="20201116 12:58:51.438"></status>
</kw>
<msg timestamp="20201116 12:58:51.440" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:58:51.440" starttime="20201116 12:58:51.438"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:51.441" starttime="20201116 12:58:51.437"></status>
</kw>
<msg timestamp="20201116 12:58:51.441" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 12:58:51.441" starttime="20201116 12:58:51.436"></status>
</kw>
<msg timestamp="20201116 12:58:51.441" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 12:58:51.441" starttime="20201116 12:58:51.436"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:51.446" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:53.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:53.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:58:53.515" starttime="20201116 12:58:51.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:53.516" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:58:53.516" starttime="20201116 12:58:53.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:53.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:53.516" starttime="20201116 12:58:53.516"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:53.516" starttime="20201116 12:58:51.442"></status>
</kw>
<msg timestamp="20201116 12:58:53.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:53.517" starttime="20201116 12:58:51.442"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:53.517" starttime="20201116 12:58:51.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:53.520" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:58.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:58.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:58:58.222" starttime="20201116 12:58:53.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:58.223" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:58:58.224" starttime="20201116 12:58:58.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:58.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:58.224" starttime="20201116 12:58:58.224"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:58.225" starttime="20201116 12:58:53.518"></status>
</kw>
<msg timestamp="20201116 12:58:58.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:58.225" starttime="20201116 12:58:53.517"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:58.225" starttime="20201116 12:58:53.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:58.229" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:01.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:01.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:59:01.556" starttime="20201116 12:58:58.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:01.557" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:59:01.557" starttime="20201116 12:59:01.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:01.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:01.558" starttime="20201116 12:59:01.557"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.558" starttime="20201116 12:58:58.226"></status>
</kw>
<msg timestamp="20201116 12:59:01.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:01.558" starttime="20201116 12:58:58.226"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.558" starttime="20201116 12:58:58.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:01.562" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:05.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:05.033" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:59:05.033" starttime="20201116 12:59:01.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:05.034" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:59:05.034" starttime="20201116 12:59:05.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:05.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:05.035" starttime="20201116 12:59:05.034"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:05.035" starttime="20201116 12:59:01.559"></status>
</kw>
<msg timestamp="20201116 12:59:05.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:05.036" starttime="20201116 12:59:01.559"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:05.036" starttime="20201116 12:59:01.558"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 12:59:05.036" critical="yes" starttime="20201116 12:58:43.877"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:05.041" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:05.041" starttime="20201116 12:59:05.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:05.042" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:05.042" starttime="20201116 12:59:05.042"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:05.042" starttime="20201116 12:59:05.040"></status>
</kw>
<msg timestamp="20201116 12:59:05.042" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:05.042" starttime="20201116 12:59:05.040"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:05.043" starttime="20201116 12:59:05.039"></status>
</kw>
<msg timestamp="20201116 12:59:05.043" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:59:05.043" starttime="20201116 12:59:05.039"></status>
</kw>
<msg timestamp="20201116 12:59:05.043" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:59:05.043" starttime="20201116 12:59:05.038"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:05.047" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:07.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:07.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:59:07.052" starttime="20201116 12:59:05.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:07.053" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:59:07.053" starttime="20201116 12:59:07.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:07.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:07.054" starttime="20201116 12:59:07.053"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:07.054" starttime="20201116 12:59:05.044"></status>
</kw>
<msg timestamp="20201116 12:59:07.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:07.054" starttime="20201116 12:59:05.044"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:07.055" starttime="20201116 12:59:05.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:07.058" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:08.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:08.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:59:08.780" starttime="20201116 12:59:07.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:08.781" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:59:08.781" starttime="20201116 12:59:08.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:08.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:08.781" starttime="20201116 12:59:08.781"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:08.781" starttime="20201116 12:59:07.056"></status>
</kw>
<msg timestamp="20201116 12:59:08.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:08.782" starttime="20201116 12:59:07.055"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:08.782" starttime="20201116 12:59:07.055"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 12:59:08.782" critical="yes" starttime="20201116 12:59:05.037"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 12:59:08.783" starttime="20201116 12:58:43.833"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:00:39.947" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:00:39.947" starttime="20201116 13:00:39.946"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:00:39.947" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:00:39.947" starttime="20201116 13:00:39.947"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:39.947" starttime="20201116 13:00:39.946"></status>
</kw>
<msg timestamp="20201116 13:00:39.947" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:00:39.947" starttime="20201116 13:00:39.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:00:39.948" starttime="20201116 13:00:39.948"></status>
</kw>
<msg timestamp="20201116 13:00:39.948" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:00:39.948" starttime="20201116 13:00:39.948"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:39.949" starttime="20201116 13:00:39.945"></status>
</kw>
<msg timestamp="20201116 13:00:39.949" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:00:39.949" starttime="20201116 13:00:39.945"></status>
</kw>
<msg timestamp="20201116 13:00:39.949" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:00:39.949" starttime="20201116 13:00:39.944"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:00:39.949" level="INFO">${random} = 73196</msg>
<status status="PASS" endtime="20201116 13:00:39.949" starttime="20201116 13:00:39.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:00:39.955" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-73196 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:00:43.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:00:43.211" level="INFO">${output} = 2020-11-16 13:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:00:43.211" starttime="20201116 13:00:39.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:00:43.212" level="INFO">2020-11-16 13:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:41 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:00:41 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:00:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:00:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:00:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:00:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-24099124D982-&gt;515a5219-29cf-4014-b1ff-4a6f5b3f6de5
2020-11-16 13:00:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:00:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:00:43.212" starttime="20201116 13:00:43.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:00:43.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:00:43.213" starttime="20201116 13:00:43.213"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:43.213" starttime="20201116 13:00:39.950"></status>
</kw>
<msg timestamp="20201116 13:00:43.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:00:43.214" starttime="20201116 13:00:39.950"></status>
</kw>
<msg timestamp="20201116 13:00:43.214" level="INFO">${result} = 2020-11-16 13:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:00:43.214" starttime="20201116 13:00:39.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:00:43.218" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:00:44.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:00:44.861" level="INFO">${output} = 2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:00:44.861" starttime="20201116 13:00:43.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:00:44.862" level="INFO">2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 13:00 ofs://om/volume1/bucket1/ozone-73196
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 12:59 ofs://om/volume1/bucket1/ozone-87283
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:00 ofs://om/volume1/bucket1/wordcount-52.txt
2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:00:44.862" starttime="20201116 13:00:44.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:00:44.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:00:44.863" starttime="20201116 13:00:44.862"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:44.863" starttime="20201116 13:00:43.216"></status>
</kw>
<msg timestamp="20201116 13:00:44.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:00:44.863" starttime="20201116 13:00:43.216"></status>
</kw>
<msg timestamp="20201116 13:00:44.863" level="INFO">${result} = 2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:00:44.863" starttime="20201116 13:00:43.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:00:44.864" starttime="20201116 13:00:44.863"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:00:44.864" critical="yes" starttime="20201116 13:00:39.943"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:00:44.865" starttime="20201116 13:00:39.901"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:12.988" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:12.988" starttime="20201116 12:59:12.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:12.988" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:12.988" starttime="20201116 12:59:12.988"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:12.988" starttime="20201116 12:59:12.987"></status>
</kw>
<msg timestamp="20201116 12:59:12.988" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:12.989" starttime="20201116 12:59:12.986"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:12.989" starttime="20201116 12:59:12.986"></status>
</kw>
<msg timestamp="20201116 12:59:12.989" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:12.989" starttime="20201116 12:59:12.985"></status>
</kw>
<msg timestamp="20201116 12:59:12.989" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:12.989" starttime="20201116 12:59:12.985"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:59:12.989" level="INFO">${random} = 87283</msg>
<status status="PASS" endtime="20201116 12:59:12.990" starttime="20201116 12:59:12.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:12.994" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-87283 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:16.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:16.379" level="INFO">${output} = 2020-11-16 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 12:59:16.379" starttime="20201116 12:59:12.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:16.380" level="INFO">2020-11-16 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:14 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 12:59:14 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 12:59:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 12:59:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:59:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7E5121B86AF3-&gt;515a5219-29cf-4014-b1ff-4a6f5b3f6de5
2020-11-16 12:59:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 12:59:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 12:59:16.380" starttime="20201116 12:59:16.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:16.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:16.380" starttime="20201116 12:59:16.380"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:16.381" starttime="20201116 12:59:12.990"></status>
</kw>
<msg timestamp="20201116 12:59:16.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:16.381" starttime="20201116 12:59:12.990"></status>
</kw>
<msg timestamp="20201116 12:59:16.381" level="INFO">${result} = 2020-11-16 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 12:59:16.381" starttime="20201116 12:59:12.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:16.388" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:18.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:18.080" level="INFO">${output} = 2020-11-16 12:59:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 12:59:18.080" starttime="20201116 12:59:16.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:18.081" level="INFO">2020-11-16 12:59:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:17 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 12:59 o3fs://bucket1.volume1.om/ozone-87283
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:59 o3fs://bucket1.volume1.om/user
2020-11-16 12:59:18 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 12:59:18.081" starttime="20201116 12:59:18.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:18.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:18.081" starttime="20201116 12:59:18.081"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:18.082" starttime="20201116 12:59:16.383"></status>
</kw>
<msg timestamp="20201116 12:59:18.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:18.082" starttime="20201116 12:59:16.382"></status>
</kw>
<msg timestamp="20201116 12:59:18.082" level="INFO">${result} = 2020-11-16 12:59:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 12:59:18.082" starttime="20201116 12:59:16.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:18.083" starttime="20201116 12:59:18.082"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 12:59:18.083" critical="yes" starttime="20201116 12:59:12.984"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 12:59:18.083" starttime="20201116 12:59:12.940"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:00:49.187" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:00:49.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:00:49.193" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:00:49.193" starttime="20201116 13:00:49.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:00:49.194" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:00:49.194" starttime="20201116 13:00:49.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:00:49.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:00:49.195" starttime="20201116 13:00:49.194"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:49.195" starttime="20201116 13:00:49.182"></status>
</kw>
<msg timestamp="20201116 13:00:49.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:00:49.195" starttime="20201116 13:00:49.182"></status>
</kw>
<msg timestamp="20201116 13:00:49.196" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:00:49.196" starttime="20201116 13:00:49.181"></status>
</kw>
<msg timestamp="20201116 13:00:49.196" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:00:49.196" starttime="20201116 13:00:49.181"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:00:49.200" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:00:49.201" starttime="20201116 13:00:49.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:00:49.201" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:00:49.201" starttime="20201116 13:00:49.201"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:49.201" starttime="20201116 13:00:49.199"></status>
</kw>
<msg timestamp="20201116 13:00:49.201" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:00:49.201" starttime="20201116 13:00:49.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:00:49.202" starttime="20201116 13:00:49.202"></status>
</kw>
<msg timestamp="20201116 13:00:49.202" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:00:49.202" starttime="20201116 13:00:49.202"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:49.203" starttime="20201116 13:00:49.198"></status>
</kw>
<msg timestamp="20201116 13:00:49.203" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:00:49.203" starttime="20201116 13:00:49.197"></status>
</kw>
<msg timestamp="20201116 13:00:49.203" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:00:49.203" starttime="20201116 13:00:49.196"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:00:49.206" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:01:24.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:01:24.297" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00...</msg>
<status status="PASS" endtime="20201116 13:01:24.297" starttime="20201116 13:00:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:01:24.298" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:00:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:00:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:00:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:00:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:00:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-39814BBDE6B2-&gt;515a5219-29cf-4014-b1ff-4a6f5b3f6de5
2020-11-16 13:00:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:00:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-16 13:00:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:00:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:00:52 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:00:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531502419_0003
2020-11-16 13:00:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:00:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:53 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 13:00:53 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 13:00:53 INFO  YarnClientImpl:324 - Submitted application application_1605531502419_0003
2020-11-16 13:00:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531502419_0003/
2020-11-16 13:00:53 INFO  Job:1619 - Running job: job_1605531502419_0003
2020-11-16 13:01:00 INFO  Job:1640 - Job job_1605531502419_0003 running in uber mode : false
2020-11-16 13:01:00 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:01:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:01:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:01:16 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:01:20 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:01:23 INFO  Job:1658 - Job job_1605531502419_0003 completed successfully
2020-11-16 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016129
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34888
		Total time spent by all reduces in occupied slots (ms)=13932
		Total time spent by all map tasks (ms)=8722
		Total time spent by all reduce tasks (ms)=3483
		Total vcore-milliseconds taken by all map tasks=8722
		Total vcore-milliseconds taken by all reduce tasks=3483
		Total megabyte-milliseconds taken by all map tasks=35725312
		Total megabyte-milliseconds taken by all reduce tasks=14266368
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=6370
		Physical memory (bytes) snapshot=1222680576
		Virtual memory (bytes) snapshot=15808798720
		Total committed heap usage (bytes)=1074266112
		Peak Map Physical memory (bytes)=313069568
		Peak Map Virtual memory (bytes)=3953106944
		Peak Reduce Physical memory (bytes)=298528768
		Peak Reduce Virtual memory (bytes)=3969187840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.597 seconds
2020-11-16 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:01:24.298" starttime="20201116 13:01:24.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:01:24.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:01:24.299" starttime="20201116 13:01:24.298"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.299" starttime="20201116 13:00:49.204"></status>
</kw>
<msg timestamp="20201116 13:01:24.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:01:24.300" starttime="20201116 13:00:49.204"></status>
</kw>
<msg timestamp="20201116 13:01:24.300" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00...</msg>
<status status="PASS" endtime="20201116 13:01:24.300" starttime="20201116 13:00:49.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:01:24.301" starttime="20201116 13:01:24.300"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:01:24.301" critical="yes" starttime="20201116 13:00:49.180"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:01:24.306" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:01:24.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:01:24.313" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:01:24.313" starttime="20201116 13:01:24.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:01:24.314" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:01:24.314" starttime="20201116 13:01:24.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:01:24.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:01:24.315" starttime="20201116 13:01:24.314"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.315" starttime="20201116 13:01:24.303"></status>
</kw>
<msg timestamp="20201116 13:01:24.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:01:24.315" starttime="20201116 13:01:24.303"></status>
</kw>
<msg timestamp="20201116 13:01:24.315" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:01:24.315" starttime="20201116 13:01:24.303"></status>
</kw>
<msg timestamp="20201116 13:01:24.315" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:01:24.315" starttime="20201116 13:01:24.302"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:01:24.316" level="INFO">${random} = 85</msg>
<status status="PASS" endtime="20201116 13:01:24.316" starttime="20201116 13:01:24.316"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:01:24.319" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:01:24.319" starttime="20201116 13:01:24.319"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:01:24.320" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:01:24.320" starttime="20201116 13:01:24.319"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.320" starttime="20201116 13:01:24.318"></status>
</kw>
<msg timestamp="20201116 13:01:24.320" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:01:24.320" starttime="20201116 13:01:24.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:01:24.321" starttime="20201116 13:01:24.320"></status>
</kw>
<msg timestamp="20201116 13:01:24.321" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:01:24.321" starttime="20201116 13:01:24.320"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.321" starttime="20201116 13:01:24.317"></status>
</kw>
<msg timestamp="20201116 13:01:24.321" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:01:24.321" starttime="20201116 13:01:24.317"></status>
</kw>
<msg timestamp="20201116 13:01:24.321" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:01:24.321" starttime="20201116 13:01:24.316"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:01:24.324" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:01:24.324" starttime="20201116 13:01:24.324"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:01:24.325" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:01:24.325" starttime="20201116 13:01:24.325"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.325" starttime="20201116 13:01:24.323"></status>
</kw>
<msg timestamp="20201116 13:01:24.325" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:01:24.325" starttime="20201116 13:01:24.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:01:24.327" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 13:01:24.327" starttime="20201116 13:01:24.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:01:24.327" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 13:01:24.327" starttime="20201116 13:01:24.327"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.327" starttime="20201116 13:01:24.326"></status>
</kw>
<msg timestamp="20201116 13:01:24.327" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 13:01:24.327" starttime="20201116 13:01:24.325"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.328" starttime="20201116 13:01:24.322"></status>
</kw>
<msg timestamp="20201116 13:01:24.328" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:01:24.328" starttime="20201116 13:01:24.322"></status>
</kw>
<msg timestamp="20201116 13:01:24.328" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:01:24.328" starttime="20201116 13:01:24.321"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:01:24.331" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:01:24.331" starttime="20201116 13:01:24.331"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:01:24.332" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:01:24.332" starttime="20201116 13:01:24.332"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.332" starttime="20201116 13:01:24.331"></status>
</kw>
<msg timestamp="20201116 13:01:24.332" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:01:24.332" starttime="20201116 13:01:24.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:01:24.334" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 13:01:24.334" starttime="20201116 13:01:24.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:01:24.334" level="INFO">${result} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:01:24.334" starttime="20201116 13:01:24.334"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.335" starttime="20201116 13:01:24.333"></status>
</kw>
<msg timestamp="20201116 13:01:24.335" level="INFO">${path_with_leading} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:01:24.335" starttime="20201116 13:01:24.333"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:24.335" starttime="20201116 13:01:24.329"></status>
</kw>
<msg timestamp="20201116 13:01:24.335" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:01:24.335" starttime="20201116 13:01:24.329"></status>
</kw>
<msg timestamp="20201116 13:01:24.335" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:01:24.335" starttime="20201116 13:01:24.328"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:01:24.338" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-85.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:01:58.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:01:58.062" level="INFO">${output} = 2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:01:58.062" starttime="20201116 13:01:24.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:01:58.063" level="INFO">2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-16 13:01:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:01:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:26 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:01:26 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:01:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:01:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:01:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:01:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A21FC6B7DCAB-&gt;515a5219-29cf-4014-b1ff-4a6f5b3f6de5
2020-11-16 13:01:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:01:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:01:27 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:01:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531502419_0004
2020-11-16 13:01:27 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:28 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 13:01:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 13:01:28 INFO  YarnClientImpl:324 - Submitted application application_1605531502419_0004
2020-11-16 13:01:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531502419_0004/
2020-11-16 13:01:28 INFO  Job:1619 - Running job: job_1605531502419_0004
2020-11-16 13:01:36 INFO  Job:1640 - Job job_1605531502419_0004 running in uber mode : false
2020-11-16 13:01:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:01:42 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:01:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:01:52 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:01:56 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:01:57 INFO  Job:1658 - Job job_1605531502419_0004 completed successfully
2020-11-16 13:01:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36836
		Total time spent by all reduces in occupied slots (ms)=12780
		Total time spent by all map tasks (ms)=9209
		Total time spent by all reduce tasks (ms)=3195
		Total vcore-milliseconds taken by all map tasks=9209
		Total vcore-milliseconds taken by all reduce tasks=3195
		Total megabyte-milliseconds taken by all map tasks=37720064
		Total megabyte-milliseconds taken by all reduce tasks=13086720
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=567
		CPU time spent (ms)=6400
		Physical memory (bytes) snapshot=1233338368
		Virtual memory (bytes) snapshot=15808774144
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=313794560
		Peak Map Virtual memory (bytes)=3948486656
		Peak Reduce Physical memory (bytes)=297738240
		Peak Reduce Virtual memory (bytes)=3966386176
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 13:01:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:01:58.063" starttime="20201116 13:01:58.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:01:58.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:01:58.064" starttime="20201116 13:01:58.064"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:58.064" starttime="20201116 13:01:24.336"></status>
</kw>
<msg timestamp="20201116 13:01:58.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:01:58.064" starttime="20201116 13:01:24.336"></status>
</kw>
<msg timestamp="20201116 13:01:58.065" level="INFO">${output} = 2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:01:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:01:58.065" starttime="20201116 13:01:24.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:01:58.066" starttime="20201116 13:01:58.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:01:58.066" starttime="20201116 13:01:58.066"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:01:58.066" critical="yes" starttime="20201116 13:01:24.301"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:01:58.067" starttime="20201116 13:00:49.132"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:22.529" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:22.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:22.535" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:22.535" starttime="20201116 12:59:22.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:22.536" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:22.536" starttime="20201116 12:59:22.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:22.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:22.536" starttime="20201116 12:59:22.536"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:22.537" starttime="20201116 12:59:22.525"></status>
</kw>
<msg timestamp="20201116 12:59:22.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:22.537" starttime="20201116 12:59:22.524"></status>
</kw>
<msg timestamp="20201116 12:59:22.537" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:22.537" starttime="20201116 12:59:22.524"></status>
</kw>
<msg timestamp="20201116 12:59:22.537" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:22.537" starttime="20201116 12:59:22.524"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:22.541" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:22.541" starttime="20201116 12:59:22.541"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:22.542" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:22.542" starttime="20201116 12:59:22.541"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:22.542" starttime="20201116 12:59:22.539"></status>
</kw>
<msg timestamp="20201116 12:59:22.542" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:22.542" starttime="20201116 12:59:22.539"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:22.542" starttime="20201116 12:59:22.538"></status>
</kw>
<msg timestamp="20201116 12:59:22.543" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:22.543" starttime="20201116 12:59:22.538"></status>
</kw>
<msg timestamp="20201116 12:59:22.543" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:22.543" starttime="20201116 12:59:22.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:22.547" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:59.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:59.309" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:59:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59...</msg>
<status status="PASS" endtime="20201116 12:59:59.310" starttime="20201116 12:59:22.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:59.311" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:59:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 12:59:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 12:59:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 12:59:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:59:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BE09C964CCA-&gt;515a5219-29cf-4014-b1ff-4a6f5b3f6de5
2020-11-16 12:59:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-16 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:26 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 12:59:26 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 12:59:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531502419_0001
2020-11-16 12:59:26 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 12:59:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:26 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 12:59:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 12:59:27 INFO  YarnClientImpl:324 - Submitted application application_1605531502419_0001
2020-11-16 12:59:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531502419_0001/
2020-11-16 12:59:27 INFO  Job:1619 - Running job: job_1605531502419_0001
2020-11-16 12:59:36 INFO  Job:1640 - Job job_1605531502419_0001 running in uber mode : false
2020-11-16 12:59:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 12:59:43 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 12:59:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 12:59:52 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 12:59:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 12:59:58 INFO  Job:1658 - Job job_1605531502419_0001 completed successfully
2020-11-16 12:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38172
		Total time spent by all reduces in occupied slots (ms)=14236
		Total time spent by all map tasks (ms)=9543
		Total time spent by all reduce tasks (ms)=3559
		Total vcore-milliseconds taken by all map tasks=9543
		Total vcore-milliseconds taken by all reduce tasks=3559
		Total megabyte-milliseconds taken by all map tasks=39088128
		Total megabyte-milliseconds taken by all reduce tasks=14577664
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=6310
		Physical memory (bytes) snapshot=1223229440
		Virtual memory (bytes) snapshot=15804796928
		Total committed heap usage (bytes)=1060634624
		Peak Map Physical memory (bytes)=308658176
		Peak Map Virtual memory (bytes)=3948998656
		Peak Reduce Physical memory (bytes)=300154880
		Peak Reduce Virtual memory (bytes)=3968028672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.136 seconds
2020-11-16 12:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:58 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 12:59:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 12:59:59.311" starttime="20201116 12:59:59.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:59.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:59.312" starttime="20201116 12:59:59.311"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.312" starttime="20201116 12:59:22.544"></status>
</kw>
<msg timestamp="20201116 12:59:59.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:59.312" starttime="20201116 12:59:22.544"></status>
</kw>
<msg timestamp="20201116 12:59:59.313" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:59:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 12:59...</msg>
<status status="PASS" endtime="20201116 12:59:59.313" starttime="20201116 12:59:22.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:59.313" starttime="20201116 12:59:59.313"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 12:59:59.314" critical="yes" starttime="20201116 12:59:22.523"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:59.318" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:59.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:59.324" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:59.324" starttime="20201116 12:59:59.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:59.325" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:59.325" starttime="20201116 12:59:59.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:59.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:59.325" starttime="20201116 12:59:59.325"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.326" starttime="20201116 12:59:59.316"></status>
</kw>
<msg timestamp="20201116 12:59:59.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:59.326" starttime="20201116 12:59:59.315"></status>
</kw>
<msg timestamp="20201116 12:59:59.326" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:59.326" starttime="20201116 12:59:59.315"></status>
</kw>
<msg timestamp="20201116 12:59:59.326" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 12:59:59.326" starttime="20201116 12:59:59.315"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:59:59.327" level="INFO">${random} = 52</msg>
<status status="PASS" endtime="20201116 12:59:59.327" starttime="20201116 12:59:59.327"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:59.330" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:59.331" starttime="20201116 12:59:59.330"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:59.331" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:59.331" starttime="20201116 12:59:59.331"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.331" starttime="20201116 12:59:59.330"></status>
</kw>
<msg timestamp="20201116 12:59:59.331" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:59.331" starttime="20201116 12:59:59.329"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.332" starttime="20201116 12:59:59.328"></status>
</kw>
<msg timestamp="20201116 12:59:59.332" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:59.332" starttime="20201116 12:59:59.328"></status>
</kw>
<msg timestamp="20201116 12:59:59.332" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:59.332" starttime="20201116 12:59:59.327"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:59.335" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:59.335" starttime="20201116 12:59:59.334"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:59.335" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:59.335" starttime="20201116 12:59:59.335"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.335" starttime="20201116 12:59:59.334"></status>
</kw>
<msg timestamp="20201116 12:59:59.335" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:59.335" starttime="20201116 12:59:59.334"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.336" starttime="20201116 12:59:59.333"></status>
</kw>
<msg timestamp="20201116 12:59:59.336" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 12:59:59.336" starttime="20201116 12:59:59.333"></status>
</kw>
<msg timestamp="20201116 12:59:59.336" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 12:59:59.336" starttime="20201116 12:59:59.332"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:59.339" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:59.339" starttime="20201116 12:59:59.339"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:59.340" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:59.340" starttime="20201116 12:59:59.339"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.340" starttime="20201116 12:59:59.338"></status>
</kw>
<msg timestamp="20201116 12:59:59.340" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:59.340" starttime="20201116 12:59:59.338"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:59.340" starttime="20201116 12:59:59.337"></status>
</kw>
<msg timestamp="20201116 12:59:59.340" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20201116 12:59:59.340" starttime="20201116 12:59:59.337"></status>
</kw>
<msg timestamp="20201116 12:59:59.340" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20201116 12:59:59.340" starttime="20201116 12:59:59.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:59.344" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-52.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:00:35.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:00:35.562" level="INFO">${output} = 2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:00:35.562" starttime="20201116 12:59:59.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:00:35.563" level="INFO">2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-16 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:00:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:00:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:00:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:00:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:00:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1BE623DDC0D2-&gt;515a5219-29cf-4014-b1ff-4a6f5b3f6de5
2020-11-16 13:00:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:00:03 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:00:03 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:00:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531502419_0002
2020-11-16 13:00:03 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:00:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:03 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 13:00:03 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 13:00:03 INFO  YarnClientImpl:324 - Submitted application application_1605531502419_0002
2020-11-16 13:00:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531502419_0002/
2020-11-16 13:00:03 INFO  Job:1619 - Running job: job_1605531502419_0002
2020-11-16 13:00:10 INFO  Job:1640 - Job job_1605531502419_0002 running in uber mode : false
2020-11-16 13:00:10 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:00:16 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:00:21 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:00:27 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:00:31 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:00:35 INFO  Job:1658 - Job job_1605531502419_0002 completed successfully
2020-11-16 13:00:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37148
		Total time spent by all reduces in occupied slots (ms)=13292
		Total time spent by all map tasks (ms)=9287
		Total time spent by all reduce tasks (ms)=3323
		Total vcore-milliseconds taken by all map tasks=9287
		Total vcore-milliseconds taken by all reduce tasks=3323
		Total megabyte-milliseconds taken by all map tasks=38039552
		Total megabyte-milliseconds taken by all reduce tasks=13611008
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=528
		CPU time spent (ms)=6290
		Physical memory (bytes) snapshot=1225707520
		Virtual memory (bytes) snapshot=15801921536
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=314003456
		Peak Map Virtual memory (bytes)=3947364352
		Peak Reduce Physical memory (bytes)=291397632
		Peak Reduce Virtual memory (bytes)=3965251584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 13:00:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:00:35.563" starttime="20201116 13:00:35.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:00:35.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:00:35.564" starttime="20201116 13:00:35.563"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.564" starttime="20201116 12:59:59.341"></status>
</kw>
<msg timestamp="20201116 13:00:35.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:00:35.564" starttime="20201116 12:59:59.341"></status>
</kw>
<msg timestamp="20201116 13:00:35.565" level="INFO">${output} = 2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:00:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:00:35.565" starttime="20201116 12:59:59.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:00:35.565" starttime="20201116 13:00:35.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:00:35.566" starttime="20201116 13:00:35.565"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:00:35.566" critical="yes" starttime="20201116 12:59:59.314"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:00:35.567" starttime="20201116 12:59:22.478"></status>
</suite>
<status status="PASS" elapsedtime="177081" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:04.328" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:07.797" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 13:03:07.797" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:03:07.797" starttime="20201116 13:03:04.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:07.798" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:03:07.798" starttime="20201116 13:03:07.797"></status>
</kw>
<msg timestamp="20201116 13:03:07.799" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:03:07.799" starttime="20201116 13:03:04.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:07.807" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:10.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:10.736" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:10.736" starttime="20201116 13:03:07.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:10.737" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:10.737" starttime="20201116 13:03:10.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:10.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:10.737" starttime="20201116 13:03:10.737"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:10.738" starttime="20201116 13:03:07.800"></status>
</kw>
<msg timestamp="20201116 13:03:10.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:10.738" starttime="20201116 13:03:07.800"></status>
</kw>
<msg timestamp="20201116 13:03:10.738" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 13:03:10.738" starttime="20201116 13:03:07.800"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:03:10.738" starttime="20201116 13:03:10.738"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:10.738" starttime="20201116 13:03:07.799"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:10.738" starttime="20201116 13:03:07.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:10.742" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:13.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:13.463" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:13.463" starttime="20201116 13:03:10.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:13.464" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:13.464" starttime="20201116 13:03:13.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:13.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:13.465" starttime="20201116 13:03:13.464"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:13.465" starttime="20201116 13:03:10.740"></status>
</kw>
<msg timestamp="20201116 13:03:13.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:13.465" starttime="20201116 13:03:10.740"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:13.465" starttime="20201116 13:03:10.739"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:13.466" starttime="20201116 13:03:10.739"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:13.466" starttime="20201116 13:03:10.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 13:03:13.466" starttime="20201116 13:03:13.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:13.470" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:16.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:16.135" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:03:13.141Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 13:03:16.135" starttime="20201116 13:03:13.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:16.136" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:03:13.141Z",
  "modificationTime" : "2020-11-16T13:03:13.141Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 13:03:16.137" starttime="20201116 13:03:16.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:16.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:16.137" starttime="20201116 13:03:16.137"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:16.137" starttime="20201116 13:03:13.467"></status>
</kw>
<msg timestamp="20201116 13:03:16.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:16.137" starttime="20201116 13:03:13.467"></status>
</kw>
<msg timestamp="20201116 13:03:16.138" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:03:13.141Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 13:03:16.138" starttime="20201116 13:03:13.466"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 13:03:16.138" starttime="20201116 13:03:16.138"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:16.141" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:16.141" starttime="20201116 13:03:16.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:16.142" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:16.142" starttime="20201116 13:03:16.141"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:16.142" starttime="20201116 13:03:16.141"></status>
</kw>
<msg timestamp="20201116 13:03:16.142" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:16.142" starttime="20201116 13:03:16.140"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:16.142" starttime="20201116 13:03:16.140"></status>
</kw>
<msg timestamp="20201116 13:03:16.142" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:03:16.142" starttime="20201116 13:03:16.139"></status>
</kw>
<msg timestamp="20201116 13:03:16.143" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:03:16.143" starttime="20201116 13:03:16.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:16.146" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:18.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:18.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:18.995" starttime="20201116 13:03:16.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:18.996" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:18.997" starttime="20201116 13:03:18.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:18.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:18.997" starttime="20201116 13:03:18.997"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:18.998" starttime="20201116 13:03:16.143"></status>
</kw>
<msg timestamp="20201116 13:03:18.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:18.998" starttime="20201116 13:03:16.143"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:18.998" starttime="20201116 13:03:16.143"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:19.002" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:25.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:25.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:25.153" starttime="20201116 13:03:19.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:25.154" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:25.154" starttime="20201116 13:03:25.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:25.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:25.155" starttime="20201116 13:03:25.154"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:25.155" starttime="20201116 13:03:18.999"></status>
</kw>
<msg timestamp="20201116 13:03:25.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:25.155" starttime="20201116 13:03:18.999"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:25.155" starttime="20201116 13:03:18.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:25.158" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:29.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:29.671" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:29.671" starttime="20201116 13:03:25.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:29.672" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:29.672" starttime="20201116 13:03:29.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:29.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:29.672" starttime="20201116 13:03:29.672"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:29.673" starttime="20201116 13:03:25.156"></status>
</kw>
<msg timestamp="20201116 13:03:29.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:29.673" starttime="20201116 13:03:25.156"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:29.673" starttime="20201116 13:03:25.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:29.677" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:34.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:34.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:34.133" starttime="20201116 13:03:29.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:34.134" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:34.134" starttime="20201116 13:03:34.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:34.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:34.135" starttime="20201116 13:03:34.134"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:34.135" starttime="20201116 13:03:29.674"></status>
</kw>
<msg timestamp="20201116 13:03:34.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:34.135" starttime="20201116 13:03:29.674"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:34.135" starttime="20201116 13:03:29.673"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:03:34.135" critical="yes" starttime="20201116 13:03:04.323"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:34.140" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:34.140" starttime="20201116 13:03:34.139"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:34.140" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:34.140" starttime="20201116 13:03:34.140"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:34.141" starttime="20201116 13:03:34.139"></status>
</kw>
<msg timestamp="20201116 13:03:34.141" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:34.141" starttime="20201116 13:03:34.139"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:34.141" starttime="20201116 13:03:34.138"></status>
</kw>
<msg timestamp="20201116 13:03:34.141" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:03:34.141" starttime="20201116 13:03:34.138"></status>
</kw>
<msg timestamp="20201116 13:03:34.141" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:03:34.141" starttime="20201116 13:03:34.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:34.144" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:36.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:36.885" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:36.885" starttime="20201116 13:03:34.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:36.886" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:36.886" starttime="20201116 13:03:36.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:36.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:36.887" starttime="20201116 13:03:36.886"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:36.887" starttime="20201116 13:03:34.142"></status>
</kw>
<msg timestamp="20201116 13:03:36.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:36.887" starttime="20201116 13:03:34.142"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:36.887" starttime="20201116 13:03:34.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:36.892" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:39.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:39.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:03:39.731" starttime="20201116 13:03:36.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:39.732" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:03:39.732" starttime="20201116 13:03:39.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:39.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:39.732" starttime="20201116 13:03:39.732"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:39.733" starttime="20201116 13:03:36.888"></status>
</kw>
<msg timestamp="20201116 13:03:39.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:39.733" starttime="20201116 13:03:36.888"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:39.733" starttime="20201116 13:03:36.888"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:03:39.733" critical="yes" starttime="20201116 13:03:34.136"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 13:03:39.734" starttime="20201116 13:03:04.280"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:09.006" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:09.006" starttime="20201116 13:05:09.006"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:09.007" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:09.007" starttime="20201116 13:05:09.006"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:09.007" starttime="20201116 13:05:09.006"></status>
</kw>
<msg timestamp="20201116 13:05:09.007" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:09.007" starttime="20201116 13:05:09.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:09.008" starttime="20201116 13:05:09.008"></status>
</kw>
<msg timestamp="20201116 13:05:09.008" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:05:09.008" starttime="20201116 13:05:09.007"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:09.008" starttime="20201116 13:05:09.005"></status>
</kw>
<msg timestamp="20201116 13:05:09.008" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:09.008" starttime="20201116 13:05:09.004"></status>
</kw>
<msg timestamp="20201116 13:05:09.009" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:09.009" starttime="20201116 13:05:09.003"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:05:09.009" level="INFO">${random} = 31056</msg>
<status status="PASS" endtime="20201116 13:05:09.009" starttime="20201116 13:05:09.009"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:09.014" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-31056 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:12.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:12.312" level="INFO">${output} = 2020-11-16 13:05:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:05:12.312" starttime="20201116 13:05:09.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.313" level="INFO">2020-11-16 13:05:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:05:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:05:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:05:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A45482FB38BE-&gt;f79d4689-42b0-4a35-8f8a-9ac52eea38bf
2020-11-16 13:05:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:05:12.313" starttime="20201116 13:05:12.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:12.313" starttime="20201116 13:05:12.313"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:12.313" starttime="20201116 13:05:09.010"></status>
</kw>
<msg timestamp="20201116 13:05:12.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:12.314" starttime="20201116 13:05:09.010"></status>
</kw>
<msg timestamp="20201116 13:05:12.314" level="INFO">${result} = 2020-11-16 13:05:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:05:12.314" starttime="20201116 13:05:09.009"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:12.318" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:14.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:14.008" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:05 ofs://om/volume1/bucket1/ozone-31056
-rw-...</msg>
<status status="PASS" endtime="20201116 13:05:14.008" starttime="20201116 13:05:12.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.009" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:05 ofs://om/volume1/bucket1/ozone-31056
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:03 ofs://om/volume1/bucket1/ozone-71640
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:04 ofs://om/volume1/bucket1/wordcount-38.txt</msg>
<status status="PASS" endtime="20201116 13:05:14.009" starttime="20201116 13:05:14.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:14.010" starttime="20201116 13:05:14.010"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:14.010" starttime="20201116 13:05:12.316"></status>
</kw>
<msg timestamp="20201116 13:05:14.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:14.011" starttime="20201116 13:05:12.315"></status>
</kw>
<msg timestamp="20201116 13:05:14.011" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:05 ofs://om/volume1/bucket1/ozone-31056
-rw-...</msg>
<status status="PASS" endtime="20201116 13:05:14.011" starttime="20201116 13:05:12.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:14.011" starttime="20201116 13:05:14.011"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:05:14.012" critical="yes" starttime="20201116 13:05:09.003"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:05:14.013" starttime="20201116 13:05:08.947"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:43.866" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:43.866" starttime="20201116 13:03:43.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:43.866" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.866" starttime="20201116 13:03:43.866"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.866" starttime="20201116 13:03:43.865"></status>
</kw>
<msg timestamp="20201116 13:03:43.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.866" starttime="20201116 13:03:43.864"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.866" starttime="20201116 13:03:43.864"></status>
</kw>
<msg timestamp="20201116 13:03:43.867" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:43.867" starttime="20201116 13:03:43.863"></status>
</kw>
<msg timestamp="20201116 13:03:43.867" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:43.867" starttime="20201116 13:03:43.862"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:03:43.867" level="INFO">${random} = 71640</msg>
<status status="PASS" endtime="20201116 13:03:43.867" starttime="20201116 13:03:43.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:43.871" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-71640 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:47.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:47.353" level="INFO">${output} = 2020-11-16 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:03:47.353" starttime="20201116 13:03:43.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:47.354" level="INFO">2020-11-16 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:03:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:03:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:03:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A11870EC49BC-&gt;f79d4689-42b0-4a35-8f8a-9ac52eea38bf
2020-11-16 13:03:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:03:47.354" starttime="20201116 13:03:47.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:47.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:47.354" starttime="20201116 13:03:47.354"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:47.354" starttime="20201116 13:03:43.868"></status>
</kw>
<msg timestamp="20201116 13:03:47.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:47.355" starttime="20201116 13:03:43.868"></status>
</kw>
<msg timestamp="20201116 13:03:47.355" level="INFO">${result} = 2020-11-16 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:03:47.355" starttime="20201116 13:03:43.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:47.359" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:49.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:49.044" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:03 o3fs://bucket1.volume1.om/ozone-71640
dr...</msg>
<status status="PASS" endtime="20201116 13:03:49.044" starttime="20201116 13:03:47.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:49.045" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:03 o3fs://bucket1.volume1.om/ozone-71640
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:03:49.045" starttime="20201116 13:03:49.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:49.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:49.046" starttime="20201116 13:03:49.045"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:49.046" starttime="20201116 13:03:47.357"></status>
</kw>
<msg timestamp="20201116 13:03:49.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:49.046" starttime="20201116 13:03:47.356"></status>
</kw>
<msg timestamp="20201116 13:03:49.047" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:03 o3fs://bucket1.volume1.om/ozone-71640
dr...</msg>
<status status="PASS" endtime="20201116 13:03:49.047" starttime="20201116 13:03:47.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:03:49.047" starttime="20201116 13:03:49.047"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:03:49.047" critical="yes" starttime="20201116 13:03:43.861"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:03:49.048" starttime="20201116 13:03:43.819"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:18.147" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:18.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:18.152" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:18.152" starttime="20201116 13:05:18.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:18.152" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:18.153" starttime="20201116 13:05:18.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:18.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:18.153" starttime="20201116 13:05:18.153"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:18.153" starttime="20201116 13:05:18.142"></status>
</kw>
<msg timestamp="20201116 13:05:18.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:18.154" starttime="20201116 13:05:18.141"></status>
</kw>
<msg timestamp="20201116 13:05:18.154" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:18.154" starttime="20201116 13:05:18.141"></status>
</kw>
<msg timestamp="20201116 13:05:18.154" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:18.154" starttime="20201116 13:05:18.141"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:18.158" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:18.158" starttime="20201116 13:05:18.158"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:18.159" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:18.159" starttime="20201116 13:05:18.158"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:18.159" starttime="20201116 13:05:18.156"></status>
</kw>
<msg timestamp="20201116 13:05:18.159" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:18.159" starttime="20201116 13:05:18.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:18.160" starttime="20201116 13:05:18.160"></status>
</kw>
<msg timestamp="20201116 13:05:18.160" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:05:18.160" starttime="20201116 13:05:18.159"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:18.161" starttime="20201116 13:05:18.156"></status>
</kw>
<msg timestamp="20201116 13:05:18.161" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:18.161" starttime="20201116 13:05:18.155"></status>
</kw>
<msg timestamp="20201116 13:05:18.161" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:18.161" starttime="20201116 13:05:18.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:18.164" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:51.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:51.290" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:05:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:19 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:05:51.290" starttime="20201116 13:05:18.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:51.291" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:05:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:05:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:05:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:05:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E5DBBEF14493-&gt;f79d4689-42b0-4a35-8f8a-9ac52eea38bf
2020-11-16 13:05:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:05:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:05:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:05:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:05:21 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:05:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531758616_0003
2020-11-16 13:05:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:05:22 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:05:22 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:05:22 INFO  YarnClientImpl:329 - Submitted application application_1605531758616_0003
2020-11-16 13:05:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531758616_0003/
2020-11-16 13:05:22 INFO  Job:1619 - Running job: job_1605531758616_0003
2020-11-16 13:05:29 INFO  Job:1640 - Job job_1605531758616_0003 running in uber mode : false
2020-11-16 13:05:29 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:05:35 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:05:40 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:05:44 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:05:49 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:05:50 INFO  Job:1658 - Job job_1605531758616_0003 completed successfully
2020-11-16 13:05:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056241
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35764
		Total time spent by all reduces in occupied slots (ms)=14436
		Total time spent by all map tasks (ms)=8941
		Total time spent by all reduce tasks (ms)=3609
		Total vcore-milliseconds taken by all map tasks=8941
		Total vcore-milliseconds taken by all reduce tasks=3609
		Total megabyte-milliseconds taken by all map tasks=36622336
		Total megabyte-milliseconds taken by all reduce tasks=14782464
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=559
		CPU time spent (ms)=6430
		Physical memory (bytes) snapshot=1169723392
		Virtual memory (bytes) snapshot=15817584640
		Total committed heap usage (bytes)=1014497280
		Peak Map Physical memory (bytes)=296480768
		Peak Map Virtual memory (bytes)=3951431680
		Peak Reduce Physical memory (bytes)=289460224
		Peak Reduce Virtual memory (bytes)=3968897024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.716 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:05:51.292" starttime="20201116 13:05:51.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:51.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:51.292" starttime="20201116 13:05:51.292"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.293" starttime="20201116 13:05:18.162"></status>
</kw>
<msg timestamp="20201116 13:05:51.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:51.293" starttime="20201116 13:05:18.162"></status>
</kw>
<msg timestamp="20201116 13:05:51.293" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:05:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:19 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:05:51.293" starttime="20201116 13:05:18.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:51.294" starttime="20201116 13:05:51.293"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:05:51.294" critical="yes" starttime="20201116 13:05:18.140"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:51.300" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:51.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:51.304" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:51.304" starttime="20201116 13:05:51.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:51.304" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:51.304" starttime="20201116 13:05:51.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:51.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:51.305" starttime="20201116 13:05:51.305"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.305" starttime="20201116 13:05:51.296"></status>
</kw>
<msg timestamp="20201116 13:05:51.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:51.306" starttime="20201116 13:05:51.296"></status>
</kw>
<msg timestamp="20201116 13:05:51.306" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:51.306" starttime="20201116 13:05:51.295"></status>
</kw>
<msg timestamp="20201116 13:05:51.306" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:05:51.306" starttime="20201116 13:05:51.295"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:05:51.306" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201116 13:05:51.306" starttime="20201116 13:05:51.306"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:51.310" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:51.310" starttime="20201116 13:05:51.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:51.310" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:51.310" starttime="20201116 13:05:51.310"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.310" starttime="20201116 13:05:51.309"></status>
</kw>
<msg timestamp="20201116 13:05:51.310" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:51.310" starttime="20201116 13:05:51.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:51.311" starttime="20201116 13:05:51.311"></status>
</kw>
<msg timestamp="20201116 13:05:51.311" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:05:51.311" starttime="20201116 13:05:51.310"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.311" starttime="20201116 13:05:51.308"></status>
</kw>
<msg timestamp="20201116 13:05:51.312" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:51.312" starttime="20201116 13:05:51.307"></status>
</kw>
<msg timestamp="20201116 13:05:51.312" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:51.312" starttime="20201116 13:05:51.307"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:51.315" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:51.315" starttime="20201116 13:05:51.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:51.315" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:51.315" starttime="20201116 13:05:51.315"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.315" starttime="20201116 13:05:51.314"></status>
</kw>
<msg timestamp="20201116 13:05:51.315" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:51.315" starttime="20201116 13:05:51.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:05:51.317" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 13:05:51.317" starttime="20201116 13:05:51.316"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:51.317" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 13:05:51.317" starttime="20201116 13:05:51.317"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.317" starttime="20201116 13:05:51.316"></status>
</kw>
<msg timestamp="20201116 13:05:51.318" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 13:05:51.318" starttime="20201116 13:05:51.315"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.318" starttime="20201116 13:05:51.313"></status>
</kw>
<msg timestamp="20201116 13:05:51.318" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:05:51.318" starttime="20201116 13:05:51.313"></status>
</kw>
<msg timestamp="20201116 13:05:51.318" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:05:51.318" starttime="20201116 13:05:51.312"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:51.321" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:51.321" starttime="20201116 13:05:51.320"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:51.321" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:51.321" starttime="20201116 13:05:51.321"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.321" starttime="20201116 13:05:51.320"></status>
</kw>
<msg timestamp="20201116 13:05:51.321" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:51.322" starttime="20201116 13:05:51.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:05:51.323" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 13:05:51.323" starttime="20201116 13:05:51.322"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:51.323" level="INFO">${result} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201116 13:05:51.323" starttime="20201116 13:05:51.323"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.323" starttime="20201116 13:05:51.322"></status>
</kw>
<msg timestamp="20201116 13:05:51.323" level="INFO">${path_with_leading} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201116 13:05:51.323" starttime="20201116 13:05:51.322"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:51.324" starttime="20201116 13:05:51.319"></status>
</kw>
<msg timestamp="20201116 13:05:51.324" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201116 13:05:51.324" starttime="20201116 13:05:51.319"></status>
</kw>
<msg timestamp="20201116 13:05:51.324" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201116 13:05:51.324" starttime="20201116 13:05:51.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:51.327" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:06:27.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:06:27.042" level="INFO">${output} = 2020-11-16 13:05:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:05:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:06:27.042" starttime="20201116 13:05:51.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:06:27.044" level="INFO">2020-11-16 13:05:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:05:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:05:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:05:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:05:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:05:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-518B52FD9D62-&gt;f79d4689-42b0-4a35-8f8a-9ac52eea38bf
2020-11-16 13:05:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:05:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:05:54 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:05:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531758616_0004
2020-11-16 13:05:54 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:05:55 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:05:55 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:05:55 INFO  YarnClientImpl:329 - Submitted application application_1605531758616_0004
2020-11-16 13:05:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531758616_0004/
2020-11-16 13:05:55 INFO  Job:1619 - Running job: job_1605531758616_0004
2020-11-16 13:06:03 INFO  Job:1640 - Job job_1605531758616_0004 running in uber mode : false
2020-11-16 13:06:03 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:06:09 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:06:13 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:06:18 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:06:23 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:06:26 INFO  Job:1658 - Job job_1605531758616_0004 completed successfully
2020-11-16 13:06:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118611
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35516
		Total time spent by all reduces in occupied slots (ms)=13472
		Total time spent by all map tasks (ms)=8879
		Total time spent by all reduce tasks (ms)=3368
		Total vcore-milliseconds taken by all map tasks=8879
		Total vcore-milliseconds taken by all reduce tasks=3368
		Total megabyte-milliseconds taken by all map tasks=36368384
		Total megabyte-milliseconds taken by all reduce tasks=13795328
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=546
		CPU time spent (ms)=6520
		Physical memory (bytes) snapshot=1177030656
		Virtual memory (bytes) snapshot=15805804544
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=294170624
		Peak Map Virtual memory (bytes)=3947384832
		Peak Reduce Physical memory (bytes)=300236800
		Peak Reduce Virtual memory (bytes)=3972673536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:06:27.044" starttime="20201116 13:06:27.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:06:27.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:06:27.045" starttime="20201116 13:06:27.044"></status>
</kw>
<status status="PASS" endtime="20201116 13:06:27.045" starttime="20201116 13:05:51.325"></status>
</kw>
<msg timestamp="20201116 13:06:27.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:06:27.045" starttime="20201116 13:05:51.325"></status>
</kw>
<msg timestamp="20201116 13:06:27.046" level="INFO">${output} = 2020-11-16 13:05:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:05:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:06:27.046" starttime="20201116 13:05:51.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:06:27.046" starttime="20201116 13:06:27.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:06:27.047" starttime="20201116 13:06:27.046"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:06:27.047" critical="yes" starttime="20201116 13:05:51.294"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:06:27.048" starttime="20201116 13:05:18.099"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:53.193" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:53.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:53.199" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:03:53.199" starttime="20201116 13:03:53.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:53.200" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:03:53.200" starttime="20201116 13:03:53.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:53.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:53.201" starttime="20201116 13:03:53.200"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:53.201" starttime="20201116 13:03:53.190"></status>
</kw>
<msg timestamp="20201116 13:03:53.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:53.201" starttime="20201116 13:03:53.189"></status>
</kw>
<msg timestamp="20201116 13:03:53.202" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:03:53.202" starttime="20201116 13:03:53.189"></status>
</kw>
<msg timestamp="20201116 13:03:53.202" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:03:53.202" starttime="20201116 13:03:53.189"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:53.206" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:53.206" starttime="20201116 13:03:53.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:53.206" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:53.206" starttime="20201116 13:03:53.206"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:53.207" starttime="20201116 13:03:53.204"></status>
</kw>
<msg timestamp="20201116 13:03:53.207" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:53.207" starttime="20201116 13:03:53.204"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:53.207" starttime="20201116 13:03:53.203"></status>
</kw>
<msg timestamp="20201116 13:03:53.207" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:53.207" starttime="20201116 13:03:53.203"></status>
</kw>
<msg timestamp="20201116 13:03:53.207" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:53.207" starttime="20201116 13:03:53.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:53.210" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:04:28.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:04:28.675" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:03:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:55 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:04:28.675" starttime="20201116 13:03:53.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:04:28.676" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:03:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:03:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:03:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:03:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C2A745C91993-&gt;f79d4689-42b0-4a35-8f8a-9ac52eea38bf
2020-11-16 13:03:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:03:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:03:56 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:03:56 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:03:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531758616_0001
2020-11-16 13:03:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:03:57 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:03:57 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:03:57 INFO  YarnClientImpl:329 - Submitted application application_1605531758616_0001
2020-11-16 13:03:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531758616_0001/
2020-11-16 13:03:57 INFO  Job:1619 - Running job: job_1605531758616_0001
2020-11-16 13:04:06 INFO  Job:1640 - Job job_1605531758616_0001 running in uber mode : false
2020-11-16 13:04:06 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:04:12 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:04:17 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:04:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:04:26 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:04:28 INFO  Job:1658 - Job job_1605531758616_0001 completed successfully
2020-11-16 13:04:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36652
		Total time spent by all reduces in occupied slots (ms)=13952
		Total time spent by all map tasks (ms)=9163
		Total time spent by all reduce tasks (ms)=3488
		Total vcore-milliseconds taken by all map tasks=9163
		Total vcore-milliseconds taken by all reduce tasks=3488
		Total megabyte-milliseconds taken by all map tasks=37531648
		Total megabyte-milliseconds taken by all reduce tasks=14286848
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=6410
		Physical memory (bytes) snapshot=1177632768
		Virtual memory (bytes) snapshot=15818121216
		Total committed heap usage (bytes)=1068498944
		Peak Map Physical memory (bytes)=295976960
		Peak Map Virtual memory (bytes)=3950235648
		Peak Reduce Physical memory (bytes)=298217472
		Peak Reduce Virtual memory (bytes)=3971993600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.982 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:04:28.677" starttime="20201116 13:04:28.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:04:28.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:04:28.677" starttime="20201116 13:04:28.677"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.678" starttime="20201116 13:03:53.208"></status>
</kw>
<msg timestamp="20201116 13:04:28.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:04:28.678" starttime="20201116 13:03:53.208"></status>
</kw>
<msg timestamp="20201116 13:04:28.678" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:03:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:55 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:04:28.678" starttime="20201116 13:03:53.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:04:28.679" starttime="20201116 13:04:28.678"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:04:28.679" critical="yes" starttime="20201116 13:03:53.188"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:04:28.684" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:04:28.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:04:28.690" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:04:28.690" starttime="20201116 13:04:28.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:04:28.691" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:04:28.691" starttime="20201116 13:04:28.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:04:28.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:04:28.691" starttime="20201116 13:04:28.691"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.692" starttime="20201116 13:04:28.682"></status>
</kw>
<msg timestamp="20201116 13:04:28.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:04:28.692" starttime="20201116 13:04:28.681"></status>
</kw>
<msg timestamp="20201116 13:04:28.692" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:04:28.692" starttime="20201116 13:04:28.681"></status>
</kw>
<msg timestamp="20201116 13:04:28.692" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:04:28.692" starttime="20201116 13:04:28.681"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:04:28.693" level="INFO">${random} = 38</msg>
<status status="PASS" endtime="20201116 13:04:28.693" starttime="20201116 13:04:28.692"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:04:28.696" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:04:28.696" starttime="20201116 13:04:28.696"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:04:28.697" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:04:28.697" starttime="20201116 13:04:28.697"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.697" starttime="20201116 13:04:28.696"></status>
</kw>
<msg timestamp="20201116 13:04:28.697" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:04:28.697" starttime="20201116 13:04:28.695"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.698" starttime="20201116 13:04:28.694"></status>
</kw>
<msg timestamp="20201116 13:04:28.698" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:04:28.698" starttime="20201116 13:04:28.694"></status>
</kw>
<msg timestamp="20201116 13:04:28.698" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:04:28.698" starttime="20201116 13:04:28.693"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:04:28.701" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:04:28.701" starttime="20201116 13:04:28.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:04:28.702" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:04:28.702" starttime="20201116 13:04:28.702"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.702" starttime="20201116 13:04:28.701"></status>
</kw>
<msg timestamp="20201116 13:04:28.702" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:04:28.702" starttime="20201116 13:04:28.700"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.703" starttime="20201116 13:04:28.700"></status>
</kw>
<msg timestamp="20201116 13:04:28.703" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:04:28.703" starttime="20201116 13:04:28.699"></status>
</kw>
<msg timestamp="20201116 13:04:28.703" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:04:28.703" starttime="20201116 13:04:28.698"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:04:28.706" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:04:28.706" starttime="20201116 13:04:28.706"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:04:28.706" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:04:28.706" starttime="20201116 13:04:28.706"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.707" starttime="20201116 13:04:28.705"></status>
</kw>
<msg timestamp="20201116 13:04:28.707" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:04:28.707" starttime="20201116 13:04:28.705"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:28.707" starttime="20201116 13:04:28.704"></status>
</kw>
<msg timestamp="20201116 13:04:28.707" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-38.txt</msg>
<status status="PASS" endtime="20201116 13:04:28.707" starttime="20201116 13:04:28.704"></status>
</kw>
<msg timestamp="20201116 13:04:28.707" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-38.txt</msg>
<status status="PASS" endtime="20201116 13:04:28.707" starttime="20201116 13:04:28.703"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:04:28.711" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-38.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:04.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:04.726" level="INFO">${output} = 2020-11-16 13:04:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:04:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:05:04.726" starttime="20201116 13:04:28.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.727" level="INFO">2020-11-16 13:04:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:04:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:04:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:04:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:04:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:04:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:04:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2F70DC7DB004-&gt;f79d4689-42b0-4a35-8f8a-9ac52eea38bf
2020-11-16 13:04:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:04:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:04:32 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:04:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531758616_0002
2020-11-16 13:04:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:04:32 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:04:32 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:04:32 INFO  YarnClientImpl:329 - Submitted application application_1605531758616_0002
2020-11-16 13:04:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531758616_0002/
2020-11-16 13:04:32 INFO  Job:1619 - Running job: job_1605531758616_0002
2020-11-16 13:04:41 INFO  Job:1640 - Job job_1605531758616_0002 running in uber mode : false
2020-11-16 13:04:41 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:04:47 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:04:52 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:04:56 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:05:01 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:05:04 INFO  Job:1658 - Job job_1605531758616_0002 completed successfully
2020-11-16 13:05:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35148
		Total time spent by all reduces in occupied slots (ms)=13232
		Total time spent by all map tasks (ms)=8787
		Total time spent by all reduce tasks (ms)=3308
		Total vcore-milliseconds taken by all map tasks=8787
		Total vcore-milliseconds taken by all reduce tasks=3308
		Total megabyte-milliseconds taken by all map tasks=35991552
		Total megabyte-milliseconds taken by all reduce tasks=13549568
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=533
		CPU time spent (ms)=6300
		Physical memory (bytes) snapshot=1164394496
		Virtual memory (bytes) snapshot=15788666880
		Total committed heap usage (bytes)=1058013184
		Peak Map Physical memory (bytes)=300810240
		Peak Map Virtual memory (bytes)=3949539328
		Peak Reduce Physical memory (bytes)=298373120
		Peak Reduce Virtual memory (bytes)=3970539520
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:05:04.727" starttime="20201116 13:05:04.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:04.728" starttime="20201116 13:05:04.727"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:04.728" starttime="20201116 13:04:28.709"></status>
</kw>
<msg timestamp="20201116 13:05:04.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:04.728" starttime="20201116 13:04:28.708"></status>
</kw>
<msg timestamp="20201116 13:05:04.728" level="INFO">${output} = 2020-11-16 13:04:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:04:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:05:04.728" starttime="20201116 13:04:28.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:04.729" starttime="20201116 13:05:04.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:04.729" starttime="20201116 13:05:04.729"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:05:04.730" critical="yes" starttime="20201116 13:04:28.680"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:05:04.731" starttime="20201116 13:03:53.147"></status>
</suite>
<status status="PASS" elapsedtime="186282" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="533254" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
