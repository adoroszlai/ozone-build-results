<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 12:48:19.234" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:06.068" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:06.069" level="INFO">${rc} = 1</msg>
<msg timestamp="20201116 12:48:06.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:06.069" starttime="20201116 12:48:06.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:06.070" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:06.070" starttime="20201116 12:48:06.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:06.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201116 12:48:06.070" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201116 12:48:06.071" starttime="20201116 12:48:06.070"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:06.071" starttime="20201116 12:48:06.064"></status>
</kw>
<msg timestamp="20201116 12:48:06.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201116 12:48:06.071" starttime="20201116 12:48:06.064"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:06.071" starttime="20201116 12:48:06.064"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:06.071" starttime="20201116 12:48:06.063"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:07.079" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:07.080" level="INFO">${rc} = 1</msg>
<msg timestamp="20201116 12:48:07.080" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:07.081" starttime="20201116 12:48:07.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:07.081" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:07.081" starttime="20201116 12:48:07.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:07.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201116 12:48:07.082" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201116 12:48:07.082" starttime="20201116 12:48:07.081"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:07.082" starttime="20201116 12:48:07.074"></status>
</kw>
<msg timestamp="20201116 12:48:07.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201116 12:48:07.082" starttime="20201116 12:48:07.074"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:07.083" starttime="20201116 12:48:07.073"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:07.083" starttime="20201116 12:48:07.072"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:08.088" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:08.090" level="INFO">${rc} = 1</msg>
<msg timestamp="20201116 12:48:08.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:08.090" starttime="20201116 12:48:08.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:08.091" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:08.091" starttime="20201116 12:48:08.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:08.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201116 12:48:08.092" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201116 12:48:08.092" starttime="20201116 12:48:08.091"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:08.092" starttime="20201116 12:48:08.085"></status>
</kw>
<msg timestamp="20201116 12:48:08.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201116 12:48:08.092" starttime="20201116 12:48:08.085"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:08.093" starttime="20201116 12:48:08.084"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:08.093" starttime="20201116 12:48:08.083"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:09.100" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:09.101" level="INFO">${rc} = 1</msg>
<msg timestamp="20201116 12:48:09.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:09.102" starttime="20201116 12:48:09.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:09.103" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:09.103" starttime="20201116 12:48:09.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:09.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201116 12:48:09.104" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201116 12:48:09.104" starttime="20201116 12:48:09.103"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:09.104" starttime="20201116 12:48:09.096"></status>
</kw>
<msg timestamp="20201116 12:48:09.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201116 12:48:09.104" starttime="20201116 12:48:09.095"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:09.105" starttime="20201116 12:48:09.094"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:09.105" starttime="20201116 12:48:09.093"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:10.109" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:10.112" level="INFO">${rc} = 1</msg>
<msg timestamp="20201116 12:48:10.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:10.112" starttime="20201116 12:48:10.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:10.114" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:10.114" starttime="20201116 12:48:10.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:10.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201116 12:48:10.115" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201116 12:48:10.115" starttime="20201116 12:48:10.114"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:10.115" starttime="20201116 12:48:10.106"></status>
</kw>
<msg timestamp="20201116 12:48:10.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201116 12:48:10.116" starttime="20201116 12:48:10.106"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:10.116" starttime="20201116 12:48:10.106"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:10.116" starttime="20201116 12:48:10.105"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:11.121" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:11.122" level="INFO">${rc} = 1</msg>
<msg timestamp="20201116 12:48:11.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:11.122" starttime="20201116 12:48:11.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:11.123" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:11.123" starttime="20201116 12:48:11.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:11.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201116 12:48:11.123" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201116 12:48:11.123" starttime="20201116 12:48:11.123"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:11.124" starttime="20201116 12:48:11.118"></status>
</kw>
<msg timestamp="20201116 12:48:11.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201116 12:48:11.124" starttime="20201116 12:48:11.118"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:11.124" starttime="20201116 12:48:11.117"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:11.124" starttime="20201116 12:48:11.116"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:12.129" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:12.131" level="INFO">${rc} = 1</msg>
<msg timestamp="20201116 12:48:12.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:12.131" starttime="20201116 12:48:12.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:12.132" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:12.132" starttime="20201116 12:48:12.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:12.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201116 12:48:12.132" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201116 12:48:12.132" starttime="20201116 12:48:12.132"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:12.132" starttime="20201116 12:48:12.126"></status>
</kw>
<msg timestamp="20201116 12:48:12.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201116 12:48:12.133" starttime="20201116 12:48:12.126"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:12.133" starttime="20201116 12:48:12.125"></status>
</kw>
<status status="FAIL" endtime="20201116 12:48:12.133" starttime="20201116 12:48:12.124"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:13.138" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:13.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:48:13.140" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:48:13.140" starttime="20201116 12:48:13.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:13.141" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:48:13.141" starttime="20201116 12:48:13.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:13.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:48:13.142" starttime="20201116 12:48:13.142"></status>
</kw>
<status status="PASS" endtime="20201116 12:48:13.142" starttime="20201116 12:48:13.135"></status>
</kw>
<msg timestamp="20201116 12:48:13.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:48:13.143" starttime="20201116 12:48:13.134"></status>
</kw>
<status status="PASS" endtime="20201116 12:48:13.143" starttime="20201116 12:48:13.134"></status>
</kw>
<status status="PASS" endtime="20201116 12:48:13.143" starttime="20201116 12:48:13.133"></status>
</kw>
<status status="PASS" endtime="20201116 12:48:13.143" starttime="20201116 12:48:06.063"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201116 12:48:13.143" critical="yes" starttime="20201116 12:48:06.062"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:48:13.148" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:48:13.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:48:13.443" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201116 12:48:13.443" starttime="20201116 12:48:13.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:48:13.443" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201116 12:48:13.444" starttime="20201116 12:48:13.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:48:13.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:48:13.444" starttime="20201116 12:48:13.444"></status>
</kw>
<status status="PASS" endtime="20201116 12:48:13.444" starttime="20201116 12:48:13.145"></status>
</kw>
<msg timestamp="20201116 12:48:13.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:48:13.444" starttime="20201116 12:48:13.145"></status>
</kw>
<msg timestamp="20201116 12:48:13.445" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201116 12:48:13.445" starttime="20201116 12:48:13.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201116 12:48:13.445" starttime="20201116 12:48:13.445"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201116 12:48:13.445" critical="yes" starttime="20201116 12:48:13.144"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201116 12:48:13.448" starttime="20201116 12:48:06.022"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
