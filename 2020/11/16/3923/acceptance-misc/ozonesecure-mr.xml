<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 13:23:29.414" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:19:45.900" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:19:49.808" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 13:19:49.808" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:19:49.808" starttime="20201116 13:19:45.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:19:49.809" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:19:49.809" starttime="20201116 13:19:49.808"></status>
</kw>
<msg timestamp="20201116 13:19:49.809" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:19:49.809" starttime="20201116 13:19:45.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:19:49.815" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:19:53.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:19:53.514" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:19:53.514" starttime="20201116 13:19:49.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:19:53.515" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:19:53.515" starttime="20201116 13:19:53.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:19:53.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:19:53.516" starttime="20201116 13:19:53.515"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:53.516" starttime="20201116 13:19:49.812"></status>
</kw>
<msg timestamp="20201116 13:19:53.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:19:53.516" starttime="20201116 13:19:49.811"></status>
</kw>
<msg timestamp="20201116 13:19:53.516" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:19:53.516" starttime="20201116 13:19:49.811"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:19:53.517" starttime="20201116 13:19:53.517"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:53.517" starttime="20201116 13:19:49.810"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:53.517" starttime="20201116 13:19:49.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:19:53.522" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:19:56.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:19:56.536" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:19:56.536" starttime="20201116 13:19:53.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:19:56.537" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:19:56.537" starttime="20201116 13:19:56.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:19:56.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:19:56.538" starttime="20201116 13:19:56.537"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:56.538" starttime="20201116 13:19:53.519"></status>
</kw>
<msg timestamp="20201116 13:19:56.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:19:56.538" starttime="20201116 13:19:53.518"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:56.538" starttime="20201116 13:19:53.518"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:56.539" starttime="20201116 13:19:53.517"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:56.539" starttime="20201116 13:19:53.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 13:19:56.539" starttime="20201116 13:19:56.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:19:56.543" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:19:59.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:19:59.884" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:19:59.884" starttime="20201116 13:19:56.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:19:59.885" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:19:56.207Z",
  "modificationTime" : "2020-11-16T13:19:56.207Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 13:19:59.885" starttime="20201116 13:19:59.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:19:59.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:19:59.885" starttime="20201116 13:19:59.885"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:59.886" starttime="20201116 13:19:56.540"></status>
</kw>
<msg timestamp="20201116 13:19:59.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:19:59.886" starttime="20201116 13:19:56.540"></status>
</kw>
<msg timestamp="20201116 13:19:59.886" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:19:59.886" starttime="20201116 13:19:56.539"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 13:19:59.887" starttime="20201116 13:19:59.886"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:19:59.890" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:19:59.890" starttime="20201116 13:19:59.890"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:19:59.891" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:19:59.891" starttime="20201116 13:19:59.891"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:59.891" starttime="20201116 13:19:59.889"></status>
</kw>
<msg timestamp="20201116 13:19:59.891" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:19:59.892" starttime="20201116 13:19:59.889"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:59.892" starttime="20201116 13:19:59.888"></status>
</kw>
<msg timestamp="20201116 13:19:59.892" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:19:59.892" starttime="20201116 13:19:59.887"></status>
</kw>
<msg timestamp="20201116 13:19:59.892" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:19:59.892" starttime="20201116 13:19:59.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:19:59.896" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:03.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:03.270" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:20:03.270" starttime="20201116 13:19:59.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:03.271" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:20:03.272" starttime="20201116 13:20:03.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:03.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:03.272" starttime="20201116 13:20:03.272"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:03.272" starttime="20201116 13:19:59.893"></status>
</kw>
<msg timestamp="20201116 13:20:03.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:03.273" starttime="20201116 13:19:59.893"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:03.273" starttime="20201116 13:19:59.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:03.276" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:10.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:10.672" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:20:10.672" starttime="20201116 13:20:03.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:10.673" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:20:10.674" starttime="20201116 13:20:10.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:10.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:10.674" starttime="20201116 13:20:10.674"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:10.674" starttime="20201116 13:20:03.274"></status>
</kw>
<msg timestamp="20201116 13:20:10.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:10.675" starttime="20201116 13:20:03.273"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:10.675" starttime="20201116 13:20:03.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:10.679" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:15.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:15.800" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:20:15.800" starttime="20201116 13:20:10.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:15.802" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:20:15.802" starttime="20201116 13:20:15.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:15.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:15.802" starttime="20201116 13:20:15.802"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:15.802" starttime="20201116 13:20:10.675"></status>
</kw>
<msg timestamp="20201116 13:20:15.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:15.803" starttime="20201116 13:20:10.675"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:15.803" starttime="20201116 13:20:10.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:15.807" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:20.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:20.545" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:20:20.545" starttime="20201116 13:20:15.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:20.547" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:20:20.547" starttime="20201116 13:20:20.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:20.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:20.548" starttime="20201116 13:20:20.547"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:20.548" starttime="20201116 13:20:15.804"></status>
</kw>
<msg timestamp="20201116 13:20:20.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:20.548" starttime="20201116 13:20:15.804"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:20.548" starttime="20201116 13:20:15.803"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:20:20.548" critical="yes" starttime="20201116 13:19:45.895"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:20:20.553" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:20:20.553" starttime="20201116 13:20:20.553"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:20:20.554" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:20:20.554" starttime="20201116 13:20:20.553"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:20.554" starttime="20201116 13:20:20.552"></status>
</kw>
<msg timestamp="20201116 13:20:20.554" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:20:20.554" starttime="20201116 13:20:20.552"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:20.554" starttime="20201116 13:20:20.551"></status>
</kw>
<msg timestamp="20201116 13:20:20.554" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:20:20.554" starttime="20201116 13:20:20.551"></status>
</kw>
<msg timestamp="20201116 13:20:20.555" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:20:20.555" starttime="20201116 13:20:20.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:20.558" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:23.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:23.483" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:20:23.483" starttime="20201116 13:20:20.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:23.484" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:20:23.484" starttime="20201116 13:20:23.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:23.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:23.485" starttime="20201116 13:20:23.485"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:23.485" starttime="20201116 13:20:20.555"></status>
</kw>
<msg timestamp="20201116 13:20:23.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:23.486" starttime="20201116 13:20:20.555"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:23.486" starttime="20201116 13:20:20.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:23.491" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:26.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:26.575" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:20:26.575" starttime="20201116 13:20:23.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:26.576" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:20:26.576" starttime="20201116 13:20:26.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:26.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:26.577" starttime="20201116 13:20:26.576"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:26.577" starttime="20201116 13:20:23.487"></status>
</kw>
<msg timestamp="20201116 13:20:26.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:26.577" starttime="20201116 13:20:23.486"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:26.577" starttime="20201116 13:20:23.486"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:20:26.578" critical="yes" starttime="20201116 13:20:20.549"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 13:20:26.579" starttime="20201116 13:19:45.846"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:22:07.971" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:22:07.971" starttime="20201116 13:22:07.970"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:22:07.971" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:22:07.971" starttime="20201116 13:22:07.971"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:07.971" starttime="20201116 13:22:07.970"></status>
</kw>
<msg timestamp="20201116 13:22:07.971" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:22:07.972" starttime="20201116 13:22:07.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:22:07.972" starttime="20201116 13:22:07.972"></status>
</kw>
<msg timestamp="20201116 13:22:07.972" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:22:07.972" starttime="20201116 13:22:07.972"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:07.973" starttime="20201116 13:22:07.969"></status>
</kw>
<msg timestamp="20201116 13:22:07.973" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:22:07.973" starttime="20201116 13:22:07.968"></status>
</kw>
<msg timestamp="20201116 13:22:07.973" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:22:07.973" starttime="20201116 13:22:07.968"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:22:07.973" level="INFO">${random} = 48226</msg>
<status status="PASS" endtime="20201116 13:22:07.974" starttime="20201116 13:22:07.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:22:07.980" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-48226 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:22:11.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:22:11.529" level="INFO">${output} = 2020-11-16 13:22:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:22:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:22:11.529" starttime="20201116 13:22:07.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:22:11.530" level="INFO">2020-11-16 13:22:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:22:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:22:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:22:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:22:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5C6A0CADC088-&gt;c0c8e082-a1e2-4e17-bc48-8dc6d2779570
2020-11-16 13:22:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:22:11.530" starttime="20201116 13:22:11.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:22:11.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:22:11.531" starttime="20201116 13:22:11.531"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:11.531" starttime="20201116 13:22:07.974"></status>
</kw>
<msg timestamp="20201116 13:22:11.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:22:11.531" starttime="20201116 13:22:07.974"></status>
</kw>
<msg timestamp="20201116 13:22:11.532" level="INFO">${result} = 2020-11-16 13:22:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:22:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:22:11.532" starttime="20201116 13:22:07.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:22:11.536" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:22:13.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:22:13.534" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:22 ofs://om/volume1/bucket1/ozone-48226
-rw-...</msg>
<status status="PASS" endtime="20201116 13:22:13.534" starttime="20201116 13:22:11.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:22:13.535" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:22 ofs://om/volume1/bucket1/ozone-48226
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:20 ofs://om/volume1/bucket1/ozone-73039
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:21 ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201116 13:22:13.535" starttime="20201116 13:22:13.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:22:13.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:22:13.536" starttime="20201116 13:22:13.535"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:13.536" starttime="20201116 13:22:11.534"></status>
</kw>
<msg timestamp="20201116 13:22:13.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:22:13.536" starttime="20201116 13:22:11.533"></status>
</kw>
<msg timestamp="20201116 13:22:13.536" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:22 ofs://om/volume1/bucket1/ozone-48226
-rw-...</msg>
<status status="PASS" endtime="20201116 13:22:13.537" starttime="20201116 13:22:11.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:22:13.537" starttime="20201116 13:22:13.537"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:22:13.537" critical="yes" starttime="20201116 13:22:07.967"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:22:13.539" starttime="20201116 13:22:07.924"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:20:44.154" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:20:44.154" starttime="20201116 13:20:44.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:20:44.155" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:20:44.155" starttime="20201116 13:20:44.154"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:44.155" starttime="20201116 13:20:44.153"></status>
</kw>
<msg timestamp="20201116 13:20:44.155" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:20:44.155" starttime="20201116 13:20:44.153"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:44.155" starttime="20201116 13:20:44.152"></status>
</kw>
<msg timestamp="20201116 13:20:44.155" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:20:44.155" starttime="20201116 13:20:44.151"></status>
</kw>
<msg timestamp="20201116 13:20:44.155" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:20:44.155" starttime="20201116 13:20:44.151"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:20:44.156" level="INFO">${random} = 73039</msg>
<status status="PASS" endtime="20201116 13:20:44.156" starttime="20201116 13:20:44.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:44.161" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-73039 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:47.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:47.793" level="INFO">${output} = 2020-11-16 13:20:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:20:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:20:47.793" starttime="20201116 13:20:44.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:47.794" level="INFO">2020-11-16 13:20:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:20:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:20:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:20:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:20:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-008D9B551F4F-&gt;c0c8e082-a1e2-4e17-bc48-8dc6d2779570
2020-11-16 13:20:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:20:47.794" starttime="20201116 13:20:47.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:47.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:47.794" starttime="20201116 13:20:47.794"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:47.794" starttime="20201116 13:20:44.157"></status>
</kw>
<msg timestamp="20201116 13:20:47.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:47.795" starttime="20201116 13:20:44.157"></status>
</kw>
<msg timestamp="20201116 13:20:47.795" level="INFO">${result} = 2020-11-16 13:20:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:20:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:20:47.795" starttime="20201116 13:20:44.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:47.799" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:49.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:49.565" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:20 o3fs://bucket1.volume1.om/ozone-73039
dr...</msg>
<status status="PASS" endtime="20201116 13:20:49.565" starttime="20201116 13:20:47.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:49.566" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:20 o3fs://bucket1.volume1.om/ozone-73039
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:20:49.566" starttime="20201116 13:20:49.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:49.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:49.567" starttime="20201116 13:20:49.566"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:49.567" starttime="20201116 13:20:47.797"></status>
</kw>
<msg timestamp="20201116 13:20:49.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:49.567" starttime="20201116 13:20:47.795"></status>
</kw>
<msg timestamp="20201116 13:20:49.567" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:20 o3fs://bucket1.volume1.om/ozone-73039
dr...</msg>
<status status="PASS" endtime="20201116 13:20:49.567" starttime="20201116 13:20:47.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:20:49.568" starttime="20201116 13:20:49.567"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:20:49.568" critical="yes" starttime="20201116 13:20:44.150"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:20:49.569" starttime="20201116 13:20:44.108"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:39.495" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:39.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:39.496" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201116 13:20:39.496" starttime="20201116 13:20:39.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:39.497" level="INFO">rm</msg>
<status status="PASS" endtime="20201116 13:20:39.497" starttime="20201116 13:20:39.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:39.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:39.498" starttime="20201116 13:20:39.497"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:39.498" starttime="20201116 13:20:39.489"></status>
</kw>
<msg timestamp="20201116 13:20:39.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:39.498" starttime="20201116 13:20:39.488"></status>
</kw>
<msg timestamp="20201116 13:20:39.498" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201116 13:20:39.498" starttime="20201116 13:20:39.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 13:20:39.499" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 13:20:39.499" starttime="20201116 13:20:39.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:39.503" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:39.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:39.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:20:39.551" starttime="20201116 13:20:39.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:39.552" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:20:39.552" starttime="20201116 13:20:39.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:39.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:39.553" starttime="20201116 13:20:39.552"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:39.553" starttime="20201116 13:20:39.501"></status>
</kw>
<msg timestamp="20201116 13:20:39.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:39.553" starttime="20201116 13:20:39.500"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:39.553" starttime="20201116 13:20:39.500"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:39.553" starttime="20201116 13:20:39.500"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:39.553" starttime="20201116 13:20:39.487"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:20:39.554" critical="yes" starttime="20201116 13:20:39.486"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 13:20:39.555" starttime="20201116 13:20:39.441"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:19:41.202" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:19:41.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:19:41.204" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201116 13:19:41.204" starttime="20201116 13:19:41.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:19:41.205" level="INFO">om</msg>
<status status="PASS" endtime="20201116 13:19:41.205" starttime="20201116 13:19:41.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:19:41.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:19:41.206" starttime="20201116 13:19:41.205"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:41.206" starttime="20201116 13:19:41.197"></status>
</kw>
<msg timestamp="20201116 13:19:41.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:19:41.206" starttime="20201116 13:19:41.197"></status>
</kw>
<msg timestamp="20201116 13:19:41.206" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201116 13:19:41.206" starttime="20201116 13:19:41.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 13:19:41.207" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 13:19:41.207" starttime="20201116 13:19:41.206"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:19:41.211" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:19:41.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:19:41.228" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:19:41.228" starttime="20201116 13:19:41.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:19:41.229" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:19:41.229" starttime="20201116 13:19:41.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:19:41.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:19:41.229" starttime="20201116 13:19:41.229"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:41.230" starttime="20201116 13:19:41.208"></status>
</kw>
<msg timestamp="20201116 13:19:41.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:19:41.230" starttime="20201116 13:19:41.208"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:41.230" starttime="20201116 13:19:41.207"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:41.230" starttime="20201116 13:19:41.207"></status>
</kw>
<status status="PASS" endtime="20201116 13:19:41.230" starttime="20201116 13:19:41.196"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:19:41.230" critical="yes" starttime="20201116 13:19:41.195"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 13:19:41.231" starttime="20201116 13:19:41.153"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:22:18.204" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:22:18.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:22:18.207" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:18.208" starttime="20201116 13:22:18.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:22:18.208" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:18.208" starttime="20201116 13:22:18.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:22:18.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:22:18.209" starttime="20201116 13:22:18.209"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:18.209" starttime="20201116 13:22:18.199"></status>
</kw>
<msg timestamp="20201116 13:22:18.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:22:18.210" starttime="20201116 13:22:18.199"></status>
</kw>
<msg timestamp="20201116 13:22:18.210" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:18.210" starttime="20201116 13:22:18.198"></status>
</kw>
<msg timestamp="20201116 13:22:18.210" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:18.210" starttime="20201116 13:22:18.198"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:22:18.214" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:22:18.214" starttime="20201116 13:22:18.214"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:22:18.215" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:22:18.215" starttime="20201116 13:22:18.214"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:18.215" starttime="20201116 13:22:18.213"></status>
</kw>
<msg timestamp="20201116 13:22:18.215" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:22:18.215" starttime="20201116 13:22:18.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:22:18.216" starttime="20201116 13:22:18.216"></status>
</kw>
<msg timestamp="20201116 13:22:18.216" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:22:18.216" starttime="20201116 13:22:18.215"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:18.216" starttime="20201116 13:22:18.212"></status>
</kw>
<msg timestamp="20201116 13:22:18.216" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:22:18.216" starttime="20201116 13:22:18.211"></status>
</kw>
<msg timestamp="20201116 13:22:18.217" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:22:18.217" starttime="20201116 13:22:18.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:22:18.220" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:22:52.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:22:52.934" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:22:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:22:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:22:52.934" starttime="20201116 13:22:18.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:22:52.935" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:22:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:22:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:22:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:22:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:22:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2FE855A231E4-&gt;c0c8e082-a1e2-4e17-bc48-8dc6d2779570
2020-11-16 13:22:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:22:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:22:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-11-16 13:22:24 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532944268, maxDate=1606137744268, sequenceNumber=3, masterKeyId=2))
2020-11-16 13:22:24 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 8e e2 89 dd 2e 38 b4 96 94 aa df 2e 40 03 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:22:24 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532944268, maxDate=1606137744268, sequenceNumber=3, masterKeyId=2)
2020-11-16 13:22:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:22:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:22:24 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:22:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605532734253_0003
2020-11-16 13:22:25 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532944268, maxDate=1606137744268, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 8e e2 89 dd 2e 38 b4 96 94 aa df 2e 40 03 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:22:25 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:22:25 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:22:25 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:22:25 INFO  YarnClientImpl:329 - Submitted application application_1605532734253_0003
2020-11-16 13:22:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605532734253_0003/
2020-11-16 13:22:25 INFO  Job:1619 - Running job: job_1605532734253_0003
2020-11-16 13:22:33 INFO  Job:1640 - Job job_1605532734253_0003 running in uber mode : false
2020-11-16 13:22:33 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:22:43 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:22:45 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:22:49 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:22:52 INFO  Job:1658 - Job job_1605532734253_0003 completed successfully
2020-11-16 13:22:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065765
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41982
		Total time spent by all reduces in occupied slots (ms)=6794
		Total time spent by all map tasks (ms)=20991
		Total time spent by all reduce tasks (ms)=3397
		Total vcore-milliseconds taken by all map tasks=20991
		Total vcore-milliseconds taken by all reduce tasks=3397
		Total megabyte-milliseconds taken by all map tasks=42989568
		Total megabyte-milliseconds taken by all reduce tasks=6957056
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1400
		CPU time spent (ms)=7350
		Physical memory (bytes) snapshot=1609089024
		Virtual memory (bytes) snapshot=14056488960
		Total committed heap usage (bytes)=1419771904
		Peak Map Physical memory (bytes)=539979776
		Peak Map Virtual memory (bytes)=3510341632
		Peak Reduce Physical memory (bytes)=299835392
		Peak Reduce Virtual memory (bytes)=3529363456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.575 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:22:52.935" starttime="20201116 13:22:52.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:22:52.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:22:52.936" starttime="20201116 13:22:52.935"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.936" starttime="20201116 13:22:18.217"></status>
</kw>
<msg timestamp="20201116 13:22:52.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:22:52.936" starttime="20201116 13:22:18.217"></status>
</kw>
<msg timestamp="20201116 13:22:52.936" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:22:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:22:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:22:52.937" starttime="20201116 13:22:18.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:22:52.937" starttime="20201116 13:22:52.937"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:22:52.937" critical="yes" starttime="20201116 13:22:18.197"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:22:52.942" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:22:52.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:22:52.947" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:52.947" starttime="20201116 13:22:52.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:22:52.948" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:52.948" starttime="20201116 13:22:52.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:22:52.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:22:52.948" starttime="20201116 13:22:52.948"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.948" starttime="20201116 13:22:52.939"></status>
</kw>
<msg timestamp="20201116 13:22:52.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:22:52.949" starttime="20201116 13:22:52.939"></status>
</kw>
<msg timestamp="20201116 13:22:52.949" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:52.949" starttime="20201116 13:22:52.939"></status>
</kw>
<msg timestamp="20201116 13:22:52.949" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:22:52.949" starttime="20201116 13:22:52.938"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:22:52.950" level="INFO">${random} = 37</msg>
<status status="PASS" endtime="20201116 13:22:52.950" starttime="20201116 13:22:52.949"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:22:52.953" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:22:52.953" starttime="20201116 13:22:52.953"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:22:52.954" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:22:52.954" starttime="20201116 13:22:52.954"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.954" starttime="20201116 13:22:52.952"></status>
</kw>
<msg timestamp="20201116 13:22:52.954" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:22:52.954" starttime="20201116 13:22:52.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:22:52.955" starttime="20201116 13:22:52.955"></status>
</kw>
<msg timestamp="20201116 13:22:52.955" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:22:52.956" starttime="20201116 13:22:52.955"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.956" starttime="20201116 13:22:52.951"></status>
</kw>
<msg timestamp="20201116 13:22:52.956" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:22:52.956" starttime="20201116 13:22:52.950"></status>
</kw>
<msg timestamp="20201116 13:22:52.956" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:22:52.956" starttime="20201116 13:22:52.950"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:22:52.959" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:22:52.959" starttime="20201116 13:22:52.959"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:22:52.960" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:22:52.960" starttime="20201116 13:22:52.959"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.960" starttime="20201116 13:22:52.958"></status>
</kw>
<msg timestamp="20201116 13:22:52.960" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:22:52.960" starttime="20201116 13:22:52.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:22:52.962" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 13:22:52.962" starttime="20201116 13:22:52.961"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:22:52.962" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 13:22:52.962" starttime="20201116 13:22:52.962"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.962" starttime="20201116 13:22:52.961"></status>
</kw>
<msg timestamp="20201116 13:22:52.963" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 13:22:52.963" starttime="20201116 13:22:52.960"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.963" starttime="20201116 13:22:52.957"></status>
</kw>
<msg timestamp="20201116 13:22:52.963" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:22:52.963" starttime="20201116 13:22:52.957"></status>
</kw>
<msg timestamp="20201116 13:22:52.963" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:22:52.963" starttime="20201116 13:22:52.956"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:22:52.966" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:22:52.966" starttime="20201116 13:22:52.966"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:22:52.967" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:22:52.967" starttime="20201116 13:22:52.966"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.967" starttime="20201116 13:22:52.965"></status>
</kw>
<msg timestamp="20201116 13:22:52.967" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:22:52.967" starttime="20201116 13:22:52.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:22:52.968" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 13:22:52.968" starttime="20201116 13:22:52.968"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:22:52.969" level="INFO">${result} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 13:22:52.969" starttime="20201116 13:22:52.969"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.969" starttime="20201116 13:22:52.968"></status>
</kw>
<msg timestamp="20201116 13:22:52.969" level="INFO">${path_with_leading} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 13:22:52.969" starttime="20201116 13:22:52.967"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:52.969" starttime="20201116 13:22:52.964"></status>
</kw>
<msg timestamp="20201116 13:22:52.970" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 13:22:52.970" starttime="20201116 13:22:52.964"></status>
</kw>
<msg timestamp="20201116 13:22:52.970" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 13:22:52.970" starttime="20201116 13:22:52.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:22:52.973" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-37.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:23:21.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:23:21.878" level="INFO">${output} = 2020-11-16 13:22:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:22:54 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201116 13:23:21.878" starttime="20201116 13:22:52.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:23:21.879" level="INFO">2020-11-16 13:22:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:22:54 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-11-16 13:22:55 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532975099, maxDate=1606137775099, sequenceNumber=4, masterKeyId=2))
2020-11-16 13:22:55 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9f ff e3 89 dd 2e 38 9f 87 96 aa df 2e 40 04 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:22:55 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532975099, maxDate=1606137775099, sequenceNumber=4, masterKeyId=2)
2020-11-16 13:22:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:22:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:22:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:22:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:22:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:22:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ADDFC5E28B81-&gt;c0c8e082-a1e2-4e17-bc48-8dc6d2779570
2020-11-16 13:22:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:22:56 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:22:56 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:22:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605532734253_0004
2020-11-16 13:22:57 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532975099, maxDate=1606137775099, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9f ff e3 89 dd 2e 38 9f 87 96 aa df 2e 40 04 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:22:57 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:22:57 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:22:57 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:22:57 INFO  YarnClientImpl:329 - Submitted application application_1605532734253_0004
2020-11-16 13:22:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605532734253_0004/
2020-11-16 13:22:58 INFO  Job:1619 - Running job: job_1605532734253_0004
2020-11-16 13:23:05 INFO  Job:1640 - Job job_1605532734253_0004 running in uber mode : false
2020-11-16 13:23:05 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:23:14 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:23:16 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:23:20 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:23:21 INFO  Job:1658 - Job job_1605532734253_0004 completed successfully
2020-11-16 13:23:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128115
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40274
		Total time spent by all reduces in occupied slots (ms)=6762
		Total time spent by all map tasks (ms)=20137
		Total time spent by all reduce tasks (ms)=3381
		Total vcore-milliseconds taken by all map tasks=20137
		Total vcore-milliseconds taken by all reduce tasks=3381
		Total megabyte-milliseconds taken by all map tasks=41240576
		Total megabyte-milliseconds taken by all reduce tasks=6924288
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=902
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1387409408
		Virtual memory (bytes) snapshot=14051426304
		Total committed heap usage (bytes)=1153433600
		Peak Map Physical memory (bytes)=388775936
		Peak Map Virtual memory (bytes)=3510775808
		Peak Reduce Physical memory (bytes)=296689664
		Peak Reduce Virtual memory (bytes)=3526025216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:23:21.879" starttime="20201116 13:23:21.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:23:21.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:23:21.880" starttime="20201116 13:23:21.879"></status>
</kw>
<status status="PASS" endtime="20201116 13:23:21.880" starttime="20201116 13:22:52.971"></status>
</kw>
<msg timestamp="20201116 13:23:21.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:23:21.880" starttime="20201116 13:22:52.970"></status>
</kw>
<msg timestamp="20201116 13:23:21.881" level="INFO">${output} = 2020-11-16 13:22:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:22:54 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201116 13:23:21.881" starttime="20201116 13:22:52.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:23:21.882" starttime="20201116 13:23:21.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:23:21.882" starttime="20201116 13:23:21.882"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:23:21.882" critical="yes" starttime="20201116 13:22:52.938"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:23:21.883" starttime="20201116 13:22:18.153"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:54.176" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:20:54.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:20:54.181" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:20:54.181" starttime="20201116 13:20:54.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:20:54.182" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:20:54.182" starttime="20201116 13:20:54.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:20:54.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:20:54.183" starttime="20201116 13:20:54.182"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:54.183" starttime="20201116 13:20:54.172"></status>
</kw>
<msg timestamp="20201116 13:20:54.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:20:54.183" starttime="20201116 13:20:54.172"></status>
</kw>
<msg timestamp="20201116 13:20:54.183" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:20:54.183" starttime="20201116 13:20:54.171"></status>
</kw>
<msg timestamp="20201116 13:20:54.184" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:20:54.184" starttime="20201116 13:20:54.171"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:20:54.187" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:20:54.187" starttime="20201116 13:20:54.187"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:20:54.187" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:20:54.187" starttime="20201116 13:20:54.187"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:54.188" starttime="20201116 13:20:54.186"></status>
</kw>
<msg timestamp="20201116 13:20:54.188" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:20:54.188" starttime="20201116 13:20:54.185"></status>
</kw>
<status status="PASS" endtime="20201116 13:20:54.188" starttime="20201116 13:20:54.185"></status>
</kw>
<msg timestamp="20201116 13:20:54.188" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:20:54.188" starttime="20201116 13:20:54.184"></status>
</kw>
<msg timestamp="20201116 13:20:54.188" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:20:54.188" starttime="20201116 13:20:54.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:20:54.192" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:21:27.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:21:27.874" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:20:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:20:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:21:27.875" starttime="20201116 13:20:54.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:21:27.876" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:20:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:20:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:20:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:20:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:20:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F9D50A9166AC-&gt;c0c8e082-a1e2-4e17-bc48-8dc6d2779570
2020-11-16 13:20:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:20:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:20:57 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-11-16 13:20:58 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532857987, maxDate=1606137657987, sequenceNumber=1, masterKeyId=2))
2020-11-16 13:20:58 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ec ea dc 89 dd 2e 38 ec f2 8e aa df 2e 40 01 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:20:58 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532857987, maxDate=1606137657987, sequenceNumber=1, masterKeyId=2)
2020-11-16 13:20:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:20:58 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:20:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605532734253_0001
2020-11-16 13:20:58 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532857987, maxDate=1606137657987, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ec ea dc 89 dd 2e 38 ec f2 8e aa df 2e 40 01 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:20:59 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:20:59 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:20:59 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:21:00 INFO  YarnClientImpl:329 - Submitted application application_1605532734253_0001
2020-11-16 13:21:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605532734253_0001/
2020-11-16 13:21:00 INFO  Job:1619 - Running job: job_1605532734253_0001
2020-11-16 13:21:11 INFO  Job:1640 - Job job_1605532734253_0001 running in uber mode : false
2020-11-16 13:21:11 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:21:20 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:21:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:21:26 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:21:27 INFO  Job:1658 - Job job_1605532734253_0001 completed successfully
2020-11-16 13:21:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065969
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40130
		Total time spent by all reduces in occupied slots (ms)=7224
		Total time spent by all map tasks (ms)=20065
		Total time spent by all reduce tasks (ms)=3612
		Total vcore-milliseconds taken by all map tasks=20065
		Total vcore-milliseconds taken by all reduce tasks=3612
		Total megabyte-milliseconds taken by all map tasks=41093120
		Total megabyte-milliseconds taken by all reduce tasks=7397376
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=943
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1337864192
		Virtual memory (bytes) snapshot=14064852992
		Total committed heap usage (bytes)=1109393408
		Peak Map Physical memory (bytes)=389754880
		Peak Map Virtual memory (bytes)=3516071936
		Peak Reduce Physical memory (bytes)=300986368
		Peak Reduce Virtual memory (bytes)=3527270400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.974 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:21:27.876" starttime="20201116 13:21:27.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:21:27.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:21:27.877" starttime="20201116 13:21:27.876"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.877" starttime="20201116 13:20:54.189"></status>
</kw>
<msg timestamp="20201116 13:21:27.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:21:27.877" starttime="20201116 13:20:54.189"></status>
</kw>
<msg timestamp="20201116 13:21:27.877" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:20:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:20:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:21:27.877" starttime="20201116 13:20:54.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:21:27.878" starttime="20201116 13:21:27.878"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:21:27.878" critical="yes" starttime="20201116 13:20:54.170"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:21:27.885" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:21:27.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:21:27.891" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:21:27.891" starttime="20201116 13:21:27.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:21:27.892" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:21:27.892" starttime="20201116 13:21:27.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:21:27.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:21:27.893" starttime="20201116 13:21:27.892"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.893" starttime="20201116 13:21:27.881"></status>
</kw>
<msg timestamp="20201116 13:21:27.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:21:27.893" starttime="20201116 13:21:27.881"></status>
</kw>
<msg timestamp="20201116 13:21:27.893" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:21:27.893" starttime="20201116 13:21:27.880"></status>
</kw>
<msg timestamp="20201116 13:21:27.893" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:21:27.893" starttime="20201116 13:21:27.880"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:21:27.894" level="INFO">${random} = 73</msg>
<status status="PASS" endtime="20201116 13:21:27.894" starttime="20201116 13:21:27.894"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:21:27.897" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:21:27.897" starttime="20201116 13:21:27.897"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:21:27.898" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:21:27.898" starttime="20201116 13:21:27.897"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.898" starttime="20201116 13:21:27.896"></status>
</kw>
<msg timestamp="20201116 13:21:27.898" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:21:27.898" starttime="20201116 13:21:27.896"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.898" starttime="20201116 13:21:27.895"></status>
</kw>
<msg timestamp="20201116 13:21:27.898" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:21:27.898" starttime="20201116 13:21:27.895"></status>
</kw>
<msg timestamp="20201116 13:21:27.899" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:21:27.899" starttime="20201116 13:21:27.894"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:21:27.902" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:21:27.902" starttime="20201116 13:21:27.901"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:21:27.902" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:21:27.902" starttime="20201116 13:21:27.902"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.902" starttime="20201116 13:21:27.901"></status>
</kw>
<msg timestamp="20201116 13:21:27.902" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:21:27.902" starttime="20201116 13:21:27.900"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.903" starttime="20201116 13:21:27.900"></status>
</kw>
<msg timestamp="20201116 13:21:27.903" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:21:27.903" starttime="20201116 13:21:27.899"></status>
</kw>
<msg timestamp="20201116 13:21:27.903" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:21:27.903" starttime="20201116 13:21:27.899"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:21:27.906" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:21:27.906" starttime="20201116 13:21:27.905"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:21:27.906" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:21:27.906" starttime="20201116 13:21:27.906"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.906" starttime="20201116 13:21:27.905"></status>
</kw>
<msg timestamp="20201116 13:21:27.906" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:21:27.906" starttime="20201116 13:21:27.905"></status>
</kw>
<status status="PASS" endtime="20201116 13:21:27.907" starttime="20201116 13:21:27.904"></status>
</kw>
<msg timestamp="20201116 13:21:27.907" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201116 13:21:27.907" starttime="20201116 13:21:27.904"></status>
</kw>
<msg timestamp="20201116 13:21:27.907" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201116 13:21:27.907" starttime="20201116 13:21:27.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:21:27.911" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-73.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:22:02.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:22:02.555" level="INFO">${output} = 2020-11-16 13:21:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:21:29 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201116 13:22:02.555" starttime="20201116 13:21:27.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:22:02.556" level="INFO">2020-11-16 13:21:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:21:29 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-11-16 13:21:30 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532890185, maxDate=1606137690185, sequenceNumber=2, masterKeyId=2))
2020-11-16 13:21:30 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d0 e7 de 89 dd 2e 38 d0 ef 90 aa df 2e 40 02 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:21:30 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532890185, maxDate=1606137690185, sequenceNumber=2, masterKeyId=2)
2020-11-16 13:21:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:21:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:21:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:21:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:21:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:21:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C783E88B44BA-&gt;c0c8e082-a1e2-4e17-bc48-8dc6d2779570
2020-11-16 13:21:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:21:33 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:21:34 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:21:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605532734253_0002
2020-11-16 13:21:36 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605532890185, maxDate=1606137690185, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d0 e7 de 89 dd 2e 38 d0 ef 90 aa df 2e 40 02 48 01 5a 0d 32 35 34 33 37 39 35 35 32 30 32 32 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:21:37 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:21:37 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:21:37 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:21:37 INFO  YarnClientImpl:329 - Submitted application application_1605532734253_0002
2020-11-16 13:21:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605532734253_0002/
2020-11-16 13:21:37 INFO  Job:1619 - Running job: job_1605532734253_0002
2020-11-16 13:21:44 INFO  Job:1640 - Job job_1605532734253_0002 running in uber mode : false
2020-11-16 13:21:44 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:21:55 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:21:56 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:21:57 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:22:01 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:22:02 INFO  Job:1658 - Job job_1605532734253_0002 completed successfully
2020-11-16 13:22:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128199
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41104
		Total time spent by all reduces in occupied slots (ms)=6664
		Total time spent by all map tasks (ms)=20552
		Total time spent by all reduce tasks (ms)=3332
		Total vcore-milliseconds taken by all map tasks=20552
		Total vcore-milliseconds taken by all reduce tasks=3332
		Total megabyte-milliseconds taken by all map tasks=42090496
		Total megabyte-milliseconds taken by all reduce tasks=6823936
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=998
		CPU time spent (ms)=6690
		Physical memory (bytes) snapshot=1373208576
		Virtual memory (bytes) snapshot=14040838144
		Total committed heap usage (bytes)=1146617856
		Peak Map Physical memory (bytes)=385269760
		Peak Map Virtual memory (bytes)=3509534720
		Peak Reduce Physical memory (bytes)=280305664
		Peak Reduce Virtual memory (bytes)=3514748928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:22:02.556" starttime="20201116 13:22:02.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:22:02.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:22:02.557" starttime="20201116 13:22:02.556"></status>
</kw>
<status status="PASS" endtime="20201116 13:22:02.557" starttime="20201116 13:21:27.908"></status>
</kw>
<msg timestamp="20201116 13:22:02.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:22:02.557" starttime="20201116 13:21:27.908"></status>
</kw>
<msg timestamp="20201116 13:22:02.558" level="INFO">${output} = 2020-11-16 13:21:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-16 13:21:29 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201116 13:22:02.558" starttime="20201116 13:21:27.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:22:02.558" starttime="20201116 13:22:02.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:22:02.558" starttime="20201116 13:22:02.558"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:22:02.558" critical="yes" starttime="20201116 13:21:27.879"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:22:02.559" starttime="20201116 13:20:54.129"></status>
</suite>
<status status="PASS" elapsedtime="184161" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
