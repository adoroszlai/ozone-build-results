<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 13:10:53.890" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:38.641" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:40.851" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 12:57:40.851" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:57:40.852" starttime="20201116 12:57:38.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:40.853" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:57:40.853" starttime="20201116 12:57:40.852"></status>
</kw>
<msg timestamp="20201116 12:57:40.853" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 12:57:40.853" starttime="20201116 12:57:38.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:40.867" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:42.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:42.997" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:57:42.997" starttime="20201116 12:57:40.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:42.998" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:57:42.999" starttime="20201116 12:57:42.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:42.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:42.999" starttime="20201116 12:57:42.999"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:43.000" starttime="20201116 12:57:40.863"></status>
</kw>
<msg timestamp="20201116 12:57:43.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:43.000" starttime="20201116 12:57:40.862"></status>
</kw>
<msg timestamp="20201116 12:57:43.000" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 12:57:43.000" starttime="20201116 12:57:40.861"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 12:57:43.001" starttime="20201116 12:57:43.000"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:43.001" starttime="20201116 12:57:40.854"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:43.001" starttime="20201116 12:57:40.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:43.006" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:44.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:44.997" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:57:44.997" starttime="20201116 12:57:43.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:44.998" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:57:44.998" starttime="20201116 12:57:44.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:44.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:44.999" starttime="20201116 12:57:44.998"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:44.999" starttime="20201116 12:57:43.003"></status>
</kw>
<msg timestamp="20201116 12:57:44.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:44.999" starttime="20201116 12:57:43.003"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:44.999" starttime="20201116 12:57:43.002"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:44.999" starttime="20201116 12:57:43.002"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:45.000" starttime="20201116 12:57:43.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 12:57:45.000" starttime="20201116 12:57:45.000"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:45.007" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:47.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:47.230" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:57:44.967Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 12:57:47.230" starttime="20201116 12:57:45.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:47.231" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:57:44.967Z",
  "modificationTime" : "2020-11-16T12:57:44.967Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 12:57:47.231" starttime="20201116 12:57:47.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:47.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:47.232" starttime="20201116 12:57:47.232"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:47.233" starttime="20201116 12:57:45.001"></status>
</kw>
<msg timestamp="20201116 12:57:47.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:47.233" starttime="20201116 12:57:45.001"></status>
</kw>
<msg timestamp="20201116 12:57:47.233" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T12:57:44.967Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 12:57:47.233" starttime="20201116 12:57:45.000"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 12:57:47.234" starttime="20201116 12:57:47.233"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:57:47.237" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:57:47.238" starttime="20201116 12:57:47.237"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:57:47.238" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:57:47.238" starttime="20201116 12:57:47.238"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:47.238" starttime="20201116 12:57:47.237"></status>
</kw>
<msg timestamp="20201116 12:57:47.238" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:57:47.238" starttime="20201116 12:57:47.236"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:47.239" starttime="20201116 12:57:47.235"></status>
</kw>
<msg timestamp="20201116 12:57:47.239" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 12:57:47.239" starttime="20201116 12:57:47.235"></status>
</kw>
<msg timestamp="20201116 12:57:47.239" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 12:57:47.239" starttime="20201116 12:57:47.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:47.244" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:49.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:49.567" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:57:49.567" starttime="20201116 12:57:47.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:49.568" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:57:49.568" starttime="20201116 12:57:49.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:49.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:49.569" starttime="20201116 12:57:49.568"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:49.569" starttime="20201116 12:57:47.240"></status>
</kw>
<msg timestamp="20201116 12:57:49.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:49.569" starttime="20201116 12:57:47.240"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:49.569" starttime="20201116 12:57:47.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:49.573" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:55.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:55.416" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:57:55.416" starttime="20201116 12:57:49.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:55.417" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:57:55.417" starttime="20201116 12:57:55.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:55.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:55.418" starttime="20201116 12:57:55.417"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:55.418" starttime="20201116 12:57:49.571"></status>
</kw>
<msg timestamp="20201116 12:57:55.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:55.418" starttime="20201116 12:57:49.570"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:55.418" starttime="20201116 12:57:49.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:55.424" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:57:59.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:57:59.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:57:59.073" starttime="20201116 12:57:55.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:57:59.074" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:57:59.074" starttime="20201116 12:57:59.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:57:59.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:57:59.075" starttime="20201116 12:57:59.075"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:59.075" starttime="20201116 12:57:55.420"></status>
</kw>
<msg timestamp="20201116 12:57:59.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:57:59.076" starttime="20201116 12:57:55.419"></status>
</kw>
<status status="PASS" endtime="20201116 12:57:59.076" starttime="20201116 12:57:55.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:57:59.081" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:03.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:03.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:58:03.153" starttime="20201116 12:57:59.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:03.154" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:58:03.155" starttime="20201116 12:58:03.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:03.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:03.155" starttime="20201116 12:58:03.155"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:03.156" starttime="20201116 12:57:59.077"></status>
</kw>
<msg timestamp="20201116 12:58:03.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:03.156" starttime="20201116 12:57:59.077"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:03.156" starttime="20201116 12:57:59.076"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 12:58:03.156" critical="yes" starttime="20201116 12:57:38.634"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:58:03.162" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:58:03.162" starttime="20201116 12:58:03.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:58:03.163" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:58:03.163" starttime="20201116 12:58:03.162"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:03.163" starttime="20201116 12:58:03.161"></status>
</kw>
<msg timestamp="20201116 12:58:03.163" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:58:03.163" starttime="20201116 12:58:03.161"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:03.163" starttime="20201116 12:58:03.160"></status>
</kw>
<msg timestamp="20201116 12:58:03.164" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:58:03.164" starttime="20201116 12:58:03.159"></status>
</kw>
<msg timestamp="20201116 12:58:03.164" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:58:03.164" starttime="20201116 12:58:03.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:03.169" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:05.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:05.440" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:58:05.440" starttime="20201116 12:58:03.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:05.441" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:58:05.441" starttime="20201116 12:58:05.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:05.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:05.442" starttime="20201116 12:58:05.442"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:05.443" starttime="20201116 12:58:03.165"></status>
</kw>
<msg timestamp="20201116 12:58:05.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:05.443" starttime="20201116 12:58:03.164"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:05.443" starttime="20201116 12:58:03.164"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:05.450" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:07.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:07.540" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 12:58:07.540" starttime="20201116 12:58:05.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:07.541" level="INFO"></msg>
<status status="PASS" endtime="20201116 12:58:07.541" starttime="20201116 12:58:07.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:07.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:07.542" starttime="20201116 12:58:07.541"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:07.542" starttime="20201116 12:58:05.445"></status>
</kw>
<msg timestamp="20201116 12:58:07.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:07.542" starttime="20201116 12:58:05.444"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:07.542" starttime="20201116 12:58:05.444"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 12:58:07.543" critical="yes" starttime="20201116 12:58:03.157"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 12:58:07.544" starttime="20201116 12:57:38.583"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 12:59:44.809" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 12:59:44.809" starttime="20201116 12:59:44.809"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:44.810" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 12:59:44.810" starttime="20201116 12:59:44.809"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:44.810" starttime="20201116 12:59:44.808"></status>
</kw>
<msg timestamp="20201116 12:59:44.810" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 12:59:44.810" starttime="20201116 12:59:44.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:44.811" starttime="20201116 12:59:44.811"></status>
</kw>
<msg timestamp="20201116 12:59:44.811" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 12:59:44.811" starttime="20201116 12:59:44.810"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:44.812" starttime="20201116 12:59:44.807"></status>
</kw>
<msg timestamp="20201116 12:59:44.812" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:59:44.812" starttime="20201116 12:59:44.806"></status>
</kw>
<msg timestamp="20201116 12:59:44.812" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:59:44.812" starttime="20201116 12:59:44.806"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:59:44.812" level="INFO">${random} = 12695</msg>
<status status="PASS" endtime="20201116 12:59:44.812" starttime="20201116 12:59:44.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:44.817" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-12695 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:50.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:50.573" level="INFO">${output} = 2020-11-16 12:59:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:59:50.573" starttime="20201116 12:59:44.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:50.574" level="INFO">2020-11-16 12:59:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:59:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:59:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:59:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7DBA83FD7546-&gt;e0a985bd-2d1a-4786-a649-56691504f93b
2020-11-16 12:59:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 12:59:50.574" starttime="20201116 12:59:50.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:50.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:50.575" starttime="20201116 12:59:50.574"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:50.575" starttime="20201116 12:59:44.813"></status>
</kw>
<msg timestamp="20201116 12:59:50.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:50.575" starttime="20201116 12:59:44.813"></status>
</kw>
<msg timestamp="20201116 12:59:50.575" level="INFO">${result} = 2020-11-16 12:59:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:59:50.576" starttime="20201116 12:59:44.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:50.580" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:52.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:52.392" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:59 ofs://om/volume1/bucket1/ozone-12695
-rw-...</msg>
<status status="PASS" endtime="20201116 12:59:52.393" starttime="20201116 12:59:50.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:52.394" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:59 ofs://om/volume1/bucket1/ozone-12695
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:58 ofs://om/volume1/bucket1/ozone-40823
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:58 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:59 ofs://om/volume1/bucket1/wordcount-48.txt</msg>
<status status="PASS" endtime="20201116 12:59:52.394" starttime="20201116 12:59:52.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:52.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:52.394" starttime="20201116 12:59:52.394"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:52.395" starttime="20201116 12:59:50.578"></status>
</kw>
<msg timestamp="20201116 12:59:52.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:52.395" starttime="20201116 12:59:50.577"></status>
</kw>
<msg timestamp="20201116 12:59:52.395" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:59 ofs://om/volume1/bucket1/ozone-12695
-rw-...</msg>
<status status="PASS" endtime="20201116 12:59:52.395" starttime="20201116 12:59:50.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:52.396" starttime="20201116 12:59:52.395"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 12:59:52.396" critical="yes" starttime="20201116 12:59:44.805"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 12:59:52.397" starttime="20201116 12:59:44.753"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:58:12.255" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:58:12.255" starttime="20201116 12:58:12.254"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:58:12.255" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:58:12.255" starttime="20201116 12:58:12.255"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:12.256" starttime="20201116 12:58:12.254"></status>
</kw>
<msg timestamp="20201116 12:58:12.256" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:58:12.256" starttime="20201116 12:58:12.253"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:12.256" starttime="20201116 12:58:12.252"></status>
</kw>
<msg timestamp="20201116 12:58:12.256" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:58:12.256" starttime="20201116 12:58:12.252"></status>
</kw>
<msg timestamp="20201116 12:58:12.256" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:58:12.256" starttime="20201116 12:58:12.251"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:58:12.257" level="INFO">${random} = 40823</msg>
<status status="PASS" endtime="20201116 12:58:12.257" starttime="20201116 12:58:12.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:12.263" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-40823 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:15.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:15.745" level="INFO">${output} = 2020-11-16 12:58:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:58:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:58:15.745" starttime="20201116 12:58:12.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:15.746" level="INFO">2020-11-16 12:58:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:58:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:58:14 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:58:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:58:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-756EFA8D4F34-&gt;e0a985bd-2d1a-4786-a649-56691504f93b
2020-11-16 12:58:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 12:58:15.746" starttime="20201116 12:58:15.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:15.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:15.747" starttime="20201116 12:58:15.746"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:15.747" starttime="20201116 12:58:12.258"></status>
</kw>
<msg timestamp="20201116 12:58:15.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:15.747" starttime="20201116 12:58:12.257"></status>
</kw>
<msg timestamp="20201116 12:58:15.748" level="INFO">${result} = 2020-11-16 12:58:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:58:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 12:58:15.748" starttime="20201116 12:58:12.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:15.753" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:17.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:17.500" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:58 o3fs://bucket1.volume1.om/ozone-40823
dr...</msg>
<status status="PASS" endtime="20201116 12:58:17.500" starttime="20201116 12:58:15.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:17.501" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:58 o3fs://bucket1.volume1.om/ozone-40823
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:58 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 12:58:17.501" starttime="20201116 12:58:17.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:17.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:17.502" starttime="20201116 12:58:17.501"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:17.502" starttime="20201116 12:58:15.750"></status>
</kw>
<msg timestamp="20201116 12:58:17.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:17.502" starttime="20201116 12:58:15.748"></status>
</kw>
<msg timestamp="20201116 12:58:17.502" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 12:58 o3fs://bucket1.volume1.om/ozone-40823
dr...</msg>
<status status="PASS" endtime="20201116 12:58:17.502" starttime="20201116 12:58:15.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:58:17.503" starttime="20201116 12:58:17.503"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 12:58:17.503" critical="yes" starttime="20201116 12:58:12.250"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 12:58:17.504" starttime="20201116 12:58:12.199"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:57.060" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:57.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:57.065" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:57.065" starttime="20201116 12:59:57.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:57.066" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:57.066" starttime="20201116 12:59:57.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:57.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:57.067" starttime="20201116 12:59:57.066"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:57.067" starttime="20201116 12:59:57.055"></status>
</kw>
<msg timestamp="20201116 12:59:57.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:57.067" starttime="20201116 12:59:57.055"></status>
</kw>
<msg timestamp="20201116 12:59:57.067" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:57.067" starttime="20201116 12:59:57.054"></status>
</kw>
<msg timestamp="20201116 12:59:57.067" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:57.068" starttime="20201116 12:59:57.054"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 12:59:57.072" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 12:59:57.072" starttime="20201116 12:59:57.072"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:57.073" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 12:59:57.073" starttime="20201116 12:59:57.072"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:57.073" starttime="20201116 12:59:57.070"></status>
</kw>
<msg timestamp="20201116 12:59:57.073" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 12:59:57.073" starttime="20201116 12:59:57.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:57.074" starttime="20201116 12:59:57.074"></status>
</kw>
<msg timestamp="20201116 12:59:57.074" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 12:59:57.074" starttime="20201116 12:59:57.073"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:57.074" starttime="20201116 12:59:57.069"></status>
</kw>
<msg timestamp="20201116 12:59:57.074" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:59:57.074" starttime="20201116 12:59:57.068"></status>
</kw>
<msg timestamp="20201116 12:59:57.075" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 12:59:57.075" starttime="20201116 12:59:57.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:57.078" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:00:35.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:00:35.009" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:59:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 13:00:35.009" starttime="20201116 12:59:57.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:00:35.010" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:59:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:59:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:59:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:59:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-30292C54DB20-&gt;e0a985bd-2d1a-4786-a649-56691504f93b
2020-11-16 12:59:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:00:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 13:00:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:00:05 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 13:00:05 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 13:00:05 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531424956_0003
2020-11-16 13:00:05 INFO  YarnClientImpl:273 - Submitted application application_1605531424956_0003
2020-11-16 13:00:06 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531424956_0003/
2020-11-16 13:00:06 INFO  Job:1339 - Running job: job_1605531424956_0003
2020-11-16 13:00:13 INFO  Job:1360 - Job job_1605531424956_0003 running in uber mode : false
2020-11-16 13:00:13 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 13:00:19 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 13:00:25 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 13:00:29 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 13:00:34 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 13:00:34 INFO  Job:1378 - Job job_1605531424956_0003 completed successfully
2020-11-16 13:00:34 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40588
		Total time spent by all reduces in occupied slots (ms)=14828
		Total time spent by all map tasks (ms)=10147
		Total time spent by all reduce tasks (ms)=3707
		Total vcore-milliseconds taken by all map tasks=10147
		Total vcore-milliseconds taken by all reduce tasks=3707
		Total megabyte-milliseconds taken by all map tasks=41562112
		Total megabyte-milliseconds taken by all reduce tasks=15183872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=615
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1150005248
		Virtual memory (bytes) snapshot=15779659776
		Total committed heap usage (bytes)=1033895936
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.892 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:00:35.010" starttime="20201116 13:00:35.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:00:35.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:00:35.011" starttime="20201116 13:00:35.010"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.011" starttime="20201116 12:59:57.076"></status>
</kw>
<msg timestamp="20201116 13:00:35.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:00:35.011" starttime="20201116 12:59:57.075"></status>
</kw>
<msg timestamp="20201116 13:00:35.012" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:59:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 13:00:35.012" starttime="20201116 12:59:57.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:00:35.012" starttime="20201116 13:00:35.012"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:00:35.012" critical="yes" starttime="20201116 12:59:57.053"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:00:35.018" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:00:35.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:00:35.024" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 13:00:35.024" starttime="20201116 13:00:35.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:00:35.025" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 13:00:35.025" starttime="20201116 13:00:35.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:00:35.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:00:35.026" starttime="20201116 13:00:35.026"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.026" starttime="20201116 13:00:35.015"></status>
</kw>
<msg timestamp="20201116 13:00:35.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:00:35.027" starttime="20201116 13:00:35.015"></status>
</kw>
<msg timestamp="20201116 13:00:35.027" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 13:00:35.027" starttime="20201116 13:00:35.014"></status>
</kw>
<msg timestamp="20201116 13:00:35.027" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 13:00:35.027" starttime="20201116 13:00:35.014"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:00:35.028" level="INFO">${random} = 38</msg>
<status status="PASS" endtime="20201116 13:00:35.028" starttime="20201116 13:00:35.027"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:00:35.031" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:00:35.031" starttime="20201116 13:00:35.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:00:35.032" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:00:35.032" starttime="20201116 13:00:35.032"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.032" starttime="20201116 13:00:35.031"></status>
</kw>
<msg timestamp="20201116 13:00:35.032" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:00:35.032" starttime="20201116 13:00:35.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:00:35.033" starttime="20201116 13:00:35.033"></status>
</kw>
<msg timestamp="20201116 13:00:35.033" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:00:35.033" starttime="20201116 13:00:35.032"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.034" starttime="20201116 13:00:35.029"></status>
</kw>
<msg timestamp="20201116 13:00:35.034" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:00:35.034" starttime="20201116 13:00:35.029"></status>
</kw>
<msg timestamp="20201116 13:00:35.034" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:00:35.034" starttime="20201116 13:00:35.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:00:35.037" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:00:35.037" starttime="20201116 13:00:35.037"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:00:35.038" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:00:35.038" starttime="20201116 13:00:35.037"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.038" starttime="20201116 13:00:35.036"></status>
</kw>
<msg timestamp="20201116 13:00:35.038" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:00:35.038" starttime="20201116 13:00:35.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:00:35.040" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 13:00:35.040" starttime="20201116 13:00:35.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:00:35.040" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 13:00:35.040" starttime="20201116 13:00:35.040"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.041" starttime="20201116 13:00:35.039"></status>
</kw>
<msg timestamp="20201116 13:00:35.041" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 13:00:35.041" starttime="20201116 13:00:35.038"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.041" starttime="20201116 13:00:35.035"></status>
</kw>
<msg timestamp="20201116 13:00:35.041" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:00:35.041" starttime="20201116 13:00:35.035"></status>
</kw>
<msg timestamp="20201116 13:00:35.041" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:00:35.041" starttime="20201116 13:00:35.034"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:00:35.045" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:00:35.045" starttime="20201116 13:00:35.044"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:00:35.045" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:00:35.045" starttime="20201116 13:00:35.045"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.045" starttime="20201116 13:00:35.044"></status>
</kw>
<msg timestamp="20201116 13:00:35.045" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:00:35.045" starttime="20201116 13:00:35.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:00:35.047" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 13:00:35.047" starttime="20201116 13:00:35.047"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:00:35.047" level="INFO">${result} = /wordcount-38.txt</msg>
<status status="PASS" endtime="20201116 13:00:35.048" starttime="20201116 13:00:35.047"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.048" starttime="20201116 13:00:35.046"></status>
</kw>
<msg timestamp="20201116 13:00:35.048" level="INFO">${path_with_leading} = /wordcount-38.txt</msg>
<status status="PASS" endtime="20201116 13:00:35.048" starttime="20201116 13:00:35.046"></status>
</kw>
<status status="PASS" endtime="20201116 13:00:35.048" starttime="20201116 13:00:35.043"></status>
</kw>
<msg timestamp="20201116 13:00:35.048" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-38.txt</msg>
<status status="PASS" endtime="20201116 13:00:35.048" starttime="20201116 13:00:35.042"></status>
</kw>
<msg timestamp="20201116 13:00:35.049" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-38.txt</msg>
<status status="PASS" endtime="20201116 13:00:35.049" starttime="20201116 13:00:35.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:00:35.053" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-38.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:01:09.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:01:09.996" level="INFO">${output} = 2020-11-16 13:00:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 13:00:36 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 13:01:09.996" starttime="20201116 13:00:35.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:01:09.997" level="INFO">2020-11-16 13:00:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 13:00:36 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:00:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:00:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 13:00:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 13:00:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:00:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EB83004D7099-&gt;e0a985bd-2d1a-4786-a649-56691504f93b
2020-11-16 13:00:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:00:38 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 13:00:40 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 13:00:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531424956_0004
2020-11-16 13:00:41 INFO  YarnClientImpl:273 - Submitted application application_1605531424956_0004
2020-11-16 13:00:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531424956_0004/
2020-11-16 13:00:41 INFO  Job:1339 - Running job: job_1605531424956_0004
2020-11-16 13:00:48 INFO  Job:1360 - Job job_1605531424956_0004 running in uber mode : false
2020-11-16 13:00:48 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 13:00:55 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 13:00:59 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 13:01:04 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 13:01:09 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 13:01:09 INFO  Job:1378 - Job job_1605531424956_0004 completed successfully
2020-11-16 13:01:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39116
		Total time spent by all reduces in occupied slots (ms)=14024
		Total time spent by all map tasks (ms)=9779
		Total time spent by all reduce tasks (ms)=3506
		Total vcore-milliseconds taken by all map tasks=9779
		Total vcore-milliseconds taken by all reduce tasks=3506
		Total megabyte-milliseconds taken by all map tasks=40054784
		Total megabyte-milliseconds taken by all reduce tasks=14360576
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=588
		CPU time spent (ms)=7220
		Physical memory (bytes) snapshot=1161412608
		Virtual memory (bytes) snapshot=15787212800
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:01:09.997" starttime="20201116 13:01:09.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:01:09.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:01:09.998" starttime="20201116 13:01:09.997"></status>
</kw>
<status status="PASS" endtime="20201116 13:01:09.998" starttime="20201116 13:00:35.050"></status>
</kw>
<msg timestamp="20201116 13:01:09.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:01:09.999" starttime="20201116 13:00:35.049"></status>
</kw>
<msg timestamp="20201116 13:01:09.999" level="INFO">${output} = 2020-11-16 13:00:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 13:00:36 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 13:01:09.999" starttime="20201116 13:00:35.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:01:10.000" starttime="20201116 13:01:09.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:01:10.000" starttime="20201116 13:01:10.000"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:01:10.000" critical="yes" starttime="20201116 13:00:35.013"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:01:10.001" starttime="20201116 12:59:57.001"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:22.211" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:58:22.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:58:22.215" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:58:22.215" starttime="20201116 12:58:22.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:58:22.216" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:58:22.216" starttime="20201116 12:58:22.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:58:22.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:58:22.217" starttime="20201116 12:58:22.216"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:22.217" starttime="20201116 12:58:22.205"></status>
</kw>
<msg timestamp="20201116 12:58:22.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:58:22.217" starttime="20201116 12:58:22.204"></status>
</kw>
<msg timestamp="20201116 12:58:22.217" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:58:22.217" starttime="20201116 12:58:22.204"></status>
</kw>
<msg timestamp="20201116 12:58:22.218" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:58:22.218" starttime="20201116 12:58:22.203"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:58:22.223" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:58:22.223" starttime="20201116 12:58:22.222"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:58:22.223" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:58:22.223" starttime="20201116 12:58:22.223"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:22.223" starttime="20201116 12:58:22.220"></status>
</kw>
<msg timestamp="20201116 12:58:22.223" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:58:22.224" starttime="20201116 12:58:22.220"></status>
</kw>
<status status="PASS" endtime="20201116 12:58:22.224" starttime="20201116 12:58:22.219"></status>
</kw>
<msg timestamp="20201116 12:58:22.224" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:58:22.224" starttime="20201116 12:58:22.219"></status>
</kw>
<msg timestamp="20201116 12:58:22.224" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:58:22.224" starttime="20201116 12:58:22.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:58:22.228" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:01.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:01.692" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:58:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:58:24 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 12:59:01.693" starttime="20201116 12:58:22.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:01.694" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:58:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:58:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:58:24 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:58:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:58:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4DDC521F705F-&gt;e0a985bd-2d1a-4786-a649-56691504f93b
2020-11-16 12:58:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 12:58:25 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 12:58:25 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 12:58:26 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 12:58:26 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531424956_0001
2020-11-16 12:58:26 INFO  YarnClientImpl:273 - Submitted application application_1605531424956_0001
2020-11-16 12:58:26 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531424956_0001/
2020-11-16 12:58:26 INFO  Job:1339 - Running job: job_1605531424956_0001
2020-11-16 12:58:36 INFO  Job:1360 - Job job_1605531424956_0001 running in uber mode : false
2020-11-16 12:58:36 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 12:58:42 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 12:58:47 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 12:58:52 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 12:58:57 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 12:59:00 INFO  Job:1378 - Job job_1605531424956_0001 completed successfully
2020-11-16 12:59:01 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39528
		Total time spent by all reduces in occupied slots (ms)=15696
		Total time spent by all map tasks (ms)=9882
		Total time spent by all reduce tasks (ms)=3924
		Total vcore-milliseconds taken by all map tasks=9882
		Total vcore-milliseconds taken by all reduce tasks=3924
		Total megabyte-milliseconds taken by all map tasks=40476672
		Total megabyte-milliseconds taken by all reduce tasks=16072704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=649
		CPU time spent (ms)=6800
		Physical memory (bytes) snapshot=1169625088
		Virtual memory (bytes) snapshot=15792943104
		Total committed heap usage (bytes)=1042808832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.674 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 12:59:01.694" starttime="20201116 12:59:01.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:01.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:01.695" starttime="20201116 12:59:01.694"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.695" starttime="20201116 12:58:22.225"></status>
</kw>
<msg timestamp="20201116 12:59:01.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:01.695" starttime="20201116 12:58:22.225"></status>
</kw>
<msg timestamp="20201116 12:59:01.696" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 12:58:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:58:24 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 12:59:01.696" starttime="20201116 12:58:22.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:01.696" starttime="20201116 12:59:01.696"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 12:59:01.696" critical="yes" starttime="20201116 12:58:22.203"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:01.702" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:01.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:01.708" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:01.708" starttime="20201116 12:59:01.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:01.709" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:01.709" starttime="20201116 12:59:01.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:01.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:01.710" starttime="20201116 12:59:01.709"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.710" starttime="20201116 12:59:01.699"></status>
</kw>
<msg timestamp="20201116 12:59:01.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:01.710" starttime="20201116 12:59:01.699"></status>
</kw>
<msg timestamp="20201116 12:59:01.710" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:01.710" starttime="20201116 12:59:01.698"></status>
</kw>
<msg timestamp="20201116 12:59:01.710" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 12:59:01.711" starttime="20201116 12:59:01.698"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 12:59:01.711" level="INFO">${random} = 48</msg>
<status status="PASS" endtime="20201116 12:59:01.711" starttime="20201116 12:59:01.711"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:01.715" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:01.715" starttime="20201116 12:59:01.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:01.716" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:01.716" starttime="20201116 12:59:01.715"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.716" starttime="20201116 12:59:01.714"></status>
</kw>
<msg timestamp="20201116 12:59:01.716" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:01.716" starttime="20201116 12:59:01.713"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.716" starttime="20201116 12:59:01.713"></status>
</kw>
<msg timestamp="20201116 12:59:01.716" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:01.716" starttime="20201116 12:59:01.712"></status>
</kw>
<msg timestamp="20201116 12:59:01.717" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 12:59:01.717" starttime="20201116 12:59:01.711"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:01.720" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:01.720" starttime="20201116 12:59:01.719"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:01.720" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:01.720" starttime="20201116 12:59:01.720"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.720" starttime="20201116 12:59:01.719"></status>
</kw>
<msg timestamp="20201116 12:59:01.721" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:01.721" starttime="20201116 12:59:01.718"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.721" starttime="20201116 12:59:01.718"></status>
</kw>
<msg timestamp="20201116 12:59:01.721" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 12:59:01.721" starttime="20201116 12:59:01.717"></status>
</kw>
<msg timestamp="20201116 12:59:01.721" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 12:59:01.721" starttime="20201116 12:59:01.717"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 12:59:01.725" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 12:59:01.725" starttime="20201116 12:59:01.724"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 12:59:01.725" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 12:59:01.725" starttime="20201116 12:59:01.725"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.726" starttime="20201116 12:59:01.724"></status>
</kw>
<msg timestamp="20201116 12:59:01.726" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 12:59:01.726" starttime="20201116 12:59:01.723"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:01.726" starttime="20201116 12:59:01.723"></status>
</kw>
<msg timestamp="20201116 12:59:01.726" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20201116 12:59:01.726" starttime="20201116 12:59:01.722"></status>
</kw>
<msg timestamp="20201116 12:59:01.726" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20201116 12:59:01.726" starttime="20201116 12:59:01.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 12:59:01.731" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-48.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 12:59:39.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 12:59:39.990" level="INFO">${output} = 2020-11-16 12:59:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 12:59:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 12:59:39.990" starttime="20201116 12:59:01.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 12:59:39.992" level="INFO">2020-11-16 12:59:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 12:59:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 12:59:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 12:59:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 12:59:04 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 12:59:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 12:59:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C451736FB204-&gt;e0a985bd-2d1a-4786-a649-56691504f93b
2020-11-16 12:59:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 12:59:07 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 12:59:07 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 12:59:07 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605531424956_0002
2020-11-16 12:59:08 INFO  YarnClientImpl:273 - Submitted application application_1605531424956_0002
2020-11-16 12:59:08 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605531424956_0002/
2020-11-16 12:59:08 INFO  Job:1339 - Running job: job_1605531424956_0002
2020-11-16 12:59:15 INFO  Job:1360 - Job job_1605531424956_0002 running in uber mode : false
2020-11-16 12:59:15 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 12:59:22 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 12:59:27 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 12:59:31 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 12:59:36 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 12:59:39 INFO  Job:1378 - Job job_1605531424956_0002 completed successfully
2020-11-16 12:59:39 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38880
		Total time spent by all reduces in occupied slots (ms)=14884
		Total time spent by all map tasks (ms)=9720
		Total time spent by all reduce tasks (ms)=3721
		Total vcore-milliseconds taken by all map tasks=9720
		Total vcore-milliseconds taken by all reduce tasks=3721
		Total megabyte-milliseconds taken by all map tasks=39813120
		Total megabyte-milliseconds taken by all reduce tasks=15241216
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=570
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1177550848
		Virtual memory (bytes) snapshot=15790497792
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 12:59:39.992" starttime="20201116 12:59:39.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 12:59:39.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 12:59:39.993" starttime="20201116 12:59:39.992"></status>
</kw>
<status status="PASS" endtime="20201116 12:59:39.993" starttime="20201116 12:59:01.727"></status>
</kw>
<msg timestamp="20201116 12:59:39.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 12:59:39.993" starttime="20201116 12:59:01.727"></status>
</kw>
<msg timestamp="20201116 12:59:39.994" level="INFO">${output} = 2020-11-16 12:59:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-16 12:59:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 12:59:39.994" starttime="20201116 12:59:01.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:39.994" starttime="20201116 12:59:39.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 12:59:39.995" starttime="20201116 12:59:39.994"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 12:59:39.995" critical="yes" starttime="20201116 12:59:01.697"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 12:59:39.996" starttime="20201116 12:58:22.149"></status>
</suite>
<status status="PASS" elapsedtime="192757" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:16.827" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:19.142" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 13:02:19.142" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:02:19.142" starttime="20201116 13:02:16.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:19.144" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:02:19.144" starttime="20201116 13:02:19.143"></status>
</kw>
<msg timestamp="20201116 13:02:19.144" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:02:19.144" starttime="20201116 13:02:16.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:19.150" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:21.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:21.356" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:21.356" starttime="20201116 13:02:19.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:21.357" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:21.357" starttime="20201116 13:02:21.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:21.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:21.358" starttime="20201116 13:02:21.357"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:21.358" starttime="20201116 13:02:19.146"></status>
</kw>
<msg timestamp="20201116 13:02:21.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:21.358" starttime="20201116 13:02:19.146"></status>
</kw>
<msg timestamp="20201116 13:02:21.358" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 13:02:21.358" starttime="20201116 13:02:19.145"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:02:21.359" starttime="20201116 13:02:21.358"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:21.359" starttime="20201116 13:02:19.145"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:21.359" starttime="20201116 13:02:19.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:21.364" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:23.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:23.299" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:23.299" starttime="20201116 13:02:21.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:23.300" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:23.300" starttime="20201116 13:02:23.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:23.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:23.301" starttime="20201116 13:02:23.300"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:23.301" starttime="20201116 13:02:21.361"></status>
</kw>
<msg timestamp="20201116 13:02:23.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:23.301" starttime="20201116 13:02:21.360"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:23.301" starttime="20201116 13:02:21.360"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:23.301" starttime="20201116 13:02:21.360"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:23.301" starttime="20201116 13:02:21.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 13:02:23.302" starttime="20201116 13:02:23.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:23.306" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:25.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:25.557" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:02:23.263Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 13:02:25.557" starttime="20201116 13:02:23.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:25.558" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:02:23.263Z",
  "modificationTime" : "2020-11-16T13:02:23.263Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 13:02:25.558" starttime="20201116 13:02:25.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:25.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:25.558" starttime="20201116 13:02:25.558"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:25.559" starttime="20201116 13:02:23.303"></status>
</kw>
<msg timestamp="20201116 13:02:25.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:25.559" starttime="20201116 13:02:23.303"></status>
</kw>
<msg timestamp="20201116 13:02:25.559" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:02:23.263Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 13:02:25.559" starttime="20201116 13:02:23.302"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 13:02:25.560" starttime="20201116 13:02:25.559"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:02:25.564" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:02:25.564" starttime="20201116 13:02:25.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:02:25.564" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:02:25.564" starttime="20201116 13:02:25.564"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:25.565" starttime="20201116 13:02:25.563"></status>
</kw>
<msg timestamp="20201116 13:02:25.565" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:02:25.565" starttime="20201116 13:02:25.562"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:25.565" starttime="20201116 13:02:25.562"></status>
</kw>
<msg timestamp="20201116 13:02:25.565" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:02:25.565" starttime="20201116 13:02:25.561"></status>
</kw>
<msg timestamp="20201116 13:02:25.565" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:02:25.565" starttime="20201116 13:02:25.560"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:25.571" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:27.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:27.814" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:27.814" starttime="20201116 13:02:25.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:27.815" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:27.815" starttime="20201116 13:02:27.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:27.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:27.816" starttime="20201116 13:02:27.816"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:27.817" starttime="20201116 13:02:25.567"></status>
</kw>
<msg timestamp="20201116 13:02:27.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:27.817" starttime="20201116 13:02:25.567"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:27.817" starttime="20201116 13:02:25.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:27.821" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:33.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:33.203" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:33.203" starttime="20201116 13:02:27.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:33.205" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:33.205" starttime="20201116 13:02:33.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:33.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:33.206" starttime="20201116 13:02:33.205"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:33.206" starttime="20201116 13:02:27.818"></status>
</kw>
<msg timestamp="20201116 13:02:33.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:33.206" starttime="20201116 13:02:27.818"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:33.206" starttime="20201116 13:02:27.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:33.210" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:37.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:37.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:37.095" starttime="20201116 13:02:33.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:37.096" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:37.096" starttime="20201116 13:02:37.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:37.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:37.097" starttime="20201116 13:02:37.096"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:37.097" starttime="20201116 13:02:33.207"></status>
</kw>
<msg timestamp="20201116 13:02:37.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:37.097" starttime="20201116 13:02:33.207"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:37.098" starttime="20201116 13:02:33.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:37.102" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:40.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:40.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:40.950" starttime="20201116 13:02:37.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:40.951" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:40.951" starttime="20201116 13:02:40.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:40.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:40.952" starttime="20201116 13:02:40.952"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:40.953" starttime="20201116 13:02:37.099"></status>
</kw>
<msg timestamp="20201116 13:02:40.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:40.953" starttime="20201116 13:02:37.098"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:40.953" starttime="20201116 13:02:37.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:02:40.953" critical="yes" starttime="20201116 13:02:16.821"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:02:40.959" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:02:40.959" starttime="20201116 13:02:40.958"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:02:40.960" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:02:40.960" starttime="20201116 13:02:40.959"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:40.960" starttime="20201116 13:02:40.958"></status>
</kw>
<msg timestamp="20201116 13:02:40.960" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:02:40.960" starttime="20201116 13:02:40.957"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:40.961" starttime="20201116 13:02:40.957"></status>
</kw>
<msg timestamp="20201116 13:02:40.961" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:02:40.961" starttime="20201116 13:02:40.956"></status>
</kw>
<msg timestamp="20201116 13:02:40.961" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:02:40.961" starttime="20201116 13:02:40.955"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:40.965" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:43.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:43.091" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:43.091" starttime="20201116 13:02:40.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:43.092" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:43.092" starttime="20201116 13:02:43.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:43.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:43.093" starttime="20201116 13:02:43.092"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:43.093" starttime="20201116 13:02:40.962"></status>
</kw>
<msg timestamp="20201116 13:02:43.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:43.093" starttime="20201116 13:02:40.962"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:43.093" starttime="20201116 13:02:40.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:43.097" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:45.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:45.124" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:02:45.124" starttime="20201116 13:02:43.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:45.125" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:02:45.125" starttime="20201116 13:02:45.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:45.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:45.126" starttime="20201116 13:02:45.125"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:45.126" starttime="20201116 13:02:43.094"></status>
</kw>
<msg timestamp="20201116 13:02:45.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:45.126" starttime="20201116 13:02:43.094"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:45.126" starttime="20201116 13:02:43.094"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:02:45.126" critical="yes" starttime="20201116 13:02:40.954"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 13:02:45.128" starttime="20201116 13:02:16.768"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:04:26.070" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:04:26.070" starttime="20201116 13:04:26.069"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:04:26.071" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:04:26.071" starttime="20201116 13:04:26.070"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:26.071" starttime="20201116 13:04:26.069"></status>
</kw>
<msg timestamp="20201116 13:04:26.071" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:04:26.071" starttime="20201116 13:04:26.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:04:26.072" starttime="20201116 13:04:26.072"></status>
</kw>
<msg timestamp="20201116 13:04:26.072" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:04:26.072" starttime="20201116 13:04:26.071"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:26.072" starttime="20201116 13:04:26.067"></status>
</kw>
<msg timestamp="20201116 13:04:26.072" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:04:26.072" starttime="20201116 13:04:26.066"></status>
</kw>
<msg timestamp="20201116 13:04:26.073" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:04:26.073" starttime="20201116 13:04:26.065"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:04:26.073" level="INFO">${random} = 70179</msg>
<status status="PASS" endtime="20201116 13:04:26.073" starttime="20201116 13:04:26.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:04:26.080" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-70179 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:04:29.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:04:29.589" level="INFO">${output} = 2020-11-16 13:04:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:04:29.589" starttime="20201116 13:04:26.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:04:29.590" level="INFO">2020-11-16 13:04:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:28 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:04:28 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:04:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:04:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:04:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:04:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0418327278C9-&gt;0448621a-c4c1-450a-807d-b13ef51235ae
2020-11-16 13:04:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:04:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:04:29.590" starttime="20201116 13:04:29.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:04:29.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:04:29.591" starttime="20201116 13:04:29.590"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:29.591" starttime="20201116 13:04:26.074"></status>
</kw>
<msg timestamp="20201116 13:04:29.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:04:29.591" starttime="20201116 13:04:26.074"></status>
</kw>
<msg timestamp="20201116 13:04:29.592" level="INFO">${result} = 2020-11-16 13:04:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:04:29.592" starttime="20201116 13:04:26.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:04:29.596" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:04:31.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:04:31.383" level="INFO">${output} = 2020-11-16 13:04:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:04:31.383" starttime="20201116 13:04:29.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:04:31.384" level="INFO">2020-11-16 13:04:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:31 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 13:04 ofs://om/volume1/bucket1/ozone-70179
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 13:02 ofs://om/volume1/bucket1/ozone-71183
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:02 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:03 ofs://om/volume1/bucket1/wordcount-16.txt
2020-11-16 13:04:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:04:31.384" starttime="20201116 13:04:31.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:04:31.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:04:31.385" starttime="20201116 13:04:31.384"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:31.385" starttime="20201116 13:04:29.594"></status>
</kw>
<msg timestamp="20201116 13:04:31.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:04:31.385" starttime="20201116 13:04:29.594"></status>
</kw>
<msg timestamp="20201116 13:04:31.385" level="INFO">${result} = 2020-11-16 13:04:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:04:31.385" starttime="20201116 13:04:29.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:04:31.386" starttime="20201116 13:04:31.386"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:04:31.386" critical="yes" starttime="20201116 13:04:26.065"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:04:31.388" starttime="20201116 13:04:26.009"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:02:49.825" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:02:49.825" starttime="20201116 13:02:49.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:02:49.825" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:02:49.826" starttime="20201116 13:02:49.825"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:49.826" starttime="20201116 13:02:49.824"></status>
</kw>
<msg timestamp="20201116 13:02:49.826" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:02:49.826" starttime="20201116 13:02:49.823"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:49.826" starttime="20201116 13:02:49.823"></status>
</kw>
<msg timestamp="20201116 13:02:49.826" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:02:49.826" starttime="20201116 13:02:49.822"></status>
</kw>
<msg timestamp="20201116 13:02:49.826" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:02:49.826" starttime="20201116 13:02:49.821"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:02:49.827" level="INFO">${random} = 71183</msg>
<status status="PASS" endtime="20201116 13:02:49.827" starttime="20201116 13:02:49.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:49.833" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-71183 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:55.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:55.916" level="INFO">${output} = 2020-11-16 13:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:02:55.916" starttime="20201116 13:02:49.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:55.917" level="INFO">2020-11-16 13:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:02:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:02:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:02:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:02:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:02:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BC6E70382555-&gt;0448621a-c4c1-450a-807d-b13ef51235ae
2020-11-16 13:02:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:02:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:02:55.917" starttime="20201116 13:02:55.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:55.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:55.918" starttime="20201116 13:02:55.917"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:55.918" starttime="20201116 13:02:49.828"></status>
</kw>
<msg timestamp="20201116 13:02:55.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:55.918" starttime="20201116 13:02:49.828"></status>
</kw>
<msg timestamp="20201116 13:02:55.918" level="INFO">${result} = 2020-11-16 13:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:02:55.918" starttime="20201116 13:02:49.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:02:55.925" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:02:57.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:02:57.576" level="INFO">${output} = 2020-11-16 13:02:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:02:57.576" starttime="20201116 13:02:55.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:02:57.577" level="INFO">2020-11-16 13:02:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:57 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 13:02 o3fs://bucket1.volume1.om/ozone-71183
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:02 o3fs://bucket1.volume1.om/user
2020-11-16 13:02:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:02:57.577" starttime="20201116 13:02:57.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:02:57.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:02:57.578" starttime="20201116 13:02:57.577"></status>
</kw>
<status status="PASS" endtime="20201116 13:02:57.578" starttime="20201116 13:02:55.920"></status>
</kw>
<msg timestamp="20201116 13:02:57.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:02:57.578" starttime="20201116 13:02:55.919"></status>
</kw>
<msg timestamp="20201116 13:02:57.578" level="INFO">${result} = 2020-11-16 13:02:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:02:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:02:57.578" starttime="20201116 13:02:55.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:02:57.579" starttime="20201116 13:02:57.578"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:02:57.579" critical="yes" starttime="20201116 13:02:49.821"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:02:57.580" starttime="20201116 13:02:49.770"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:04:36.143" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:04:36.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:04:36.147" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:04:36.147" starttime="20201116 13:04:36.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:04:36.148" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:04:36.148" starttime="20201116 13:04:36.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:04:36.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:04:36.149" starttime="20201116 13:04:36.148"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:36.149" starttime="20201116 13:04:36.137"></status>
</kw>
<msg timestamp="20201116 13:04:36.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:04:36.149" starttime="20201116 13:04:36.136"></status>
</kw>
<msg timestamp="20201116 13:04:36.150" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:04:36.150" starttime="20201116 13:04:36.136"></status>
</kw>
<msg timestamp="20201116 13:04:36.150" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:04:36.150" starttime="20201116 13:04:36.136"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:04:36.154" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:04:36.154" starttime="20201116 13:04:36.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:04:36.155" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:04:36.155" starttime="20201116 13:04:36.155"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:36.155" starttime="20201116 13:04:36.153"></status>
</kw>
<msg timestamp="20201116 13:04:36.155" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:04:36.155" starttime="20201116 13:04:36.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:04:36.156" starttime="20201116 13:04:36.156"></status>
</kw>
<msg timestamp="20201116 13:04:36.157" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:04:36.157" starttime="20201116 13:04:36.156"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:36.157" starttime="20201116 13:04:36.151"></status>
</kw>
<msg timestamp="20201116 13:04:36.157" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:04:36.157" starttime="20201116 13:04:36.151"></status>
</kw>
<msg timestamp="20201116 13:04:36.157" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:04:36.157" starttime="20201116 13:04:36.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:04:36.163" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:15.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:15.183" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04...</msg>
<status status="PASS" endtime="20201116 13:05:15.183" starttime="20201116 13:04:36.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.185" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:04:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:04:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:04:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:04:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:04:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F8D50B3863E9-&gt;0448621a-c4c1-450a-807d-b13ef51235ae
2020-11-16 13:04:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:04:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-16 13:04:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:04:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:04:42 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:04:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531712833_0003
2020-11-16 13:04:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:04:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:43 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 13:04:43 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 13:04:43 INFO  YarnClientImpl:324 - Submitted application application_1605531712833_0003
2020-11-16 13:04:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531712833_0003/
2020-11-16 13:04:43 INFO  Job:1619 - Running job: job_1605531712833_0003
2020-11-16 13:04:50 INFO  Job:1640 - Job job_1605531712833_0003 running in uber mode : false
2020-11-16 13:04:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:04:57 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:05:03 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:05:09 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:05:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:05:14 INFO  Job:1658 - Job job_1605531712833_0003 completed successfully
2020-11-16 13:05:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016137
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41580
		Total time spent by all reduces in occupied slots (ms)=14972
		Total time spent by all map tasks (ms)=10395
		Total time spent by all reduce tasks (ms)=3743
		Total vcore-milliseconds taken by all map tasks=10395
		Total vcore-milliseconds taken by all reduce tasks=3743
		Total megabyte-milliseconds taken by all map tasks=42577920
		Total megabyte-milliseconds taken by all reduce tasks=15331328
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=678
		CPU time spent (ms)=6900
		Physical memory (bytes) snapshot=1221455872
		Virtual memory (bytes) snapshot=15790419968
		Total committed heap usage (bytes)=1138229248
		Peak Map Physical memory (bytes)=311152640
		Peak Map Virtual memory (bytes)=3945275392
		Peak Reduce Physical memory (bytes)=299888640
		Peak Reduce Virtual memory (bytes)=3964497920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.795 seconds
2020-11-16 13:05:14 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 13:05:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:05:15.185" starttime="20201116 13:05:15.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:15.186" starttime="20201116 13:05:15.185"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.186" starttime="20201116 13:04:36.158"></status>
</kw>
<msg timestamp="20201116 13:05:15.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:15.186" starttime="20201116 13:04:36.158"></status>
</kw>
<msg timestamp="20201116 13:05:15.186" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04...</msg>
<status status="PASS" endtime="20201116 13:05:15.186" starttime="20201116 13:04:36.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:15.187" starttime="20201116 13:05:15.187"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:05:15.187" critical="yes" starttime="20201116 13:04:36.135"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:15.192" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:15.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:15.197" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:05:15.197" starttime="20201116 13:05:15.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.198" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:05:15.198" starttime="20201116 13:05:15.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:15.199" starttime="20201116 13:05:15.199"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.199" starttime="20201116 13:05:15.190"></status>
</kw>
<msg timestamp="20201116 13:05:15.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:15.200" starttime="20201116 13:05:15.189"></status>
</kw>
<msg timestamp="20201116 13:05:15.200" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:05:15.200" starttime="20201116 13:05:15.189"></status>
</kw>
<msg timestamp="20201116 13:05:15.200" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:05:15.200" starttime="20201116 13:05:15.189"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:05:15.201" level="INFO">${random} = 13</msg>
<status status="PASS" endtime="20201116 13:05:15.201" starttime="20201116 13:05:15.200"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:15.204" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:15.204" starttime="20201116 13:05:15.204"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:15.205" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:15.205" starttime="20201116 13:05:15.205"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.205" starttime="20201116 13:05:15.204"></status>
</kw>
<msg timestamp="20201116 13:05:15.205" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:15.205" starttime="20201116 13:05:15.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:15.206" starttime="20201116 13:05:15.206"></status>
</kw>
<msg timestamp="20201116 13:05:15.206" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:05:15.206" starttime="20201116 13:05:15.206"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.207" starttime="20201116 13:05:15.202"></status>
</kw>
<msg timestamp="20201116 13:05:15.207" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:15.207" starttime="20201116 13:05:15.201"></status>
</kw>
<msg timestamp="20201116 13:05:15.207" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:05:15.207" starttime="20201116 13:05:15.201"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:15.210" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:15.210" starttime="20201116 13:05:15.210"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:15.211" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:15.211" starttime="20201116 13:05:15.210"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.211" starttime="20201116 13:05:15.209"></status>
</kw>
<msg timestamp="20201116 13:05:15.211" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:15.211" starttime="20201116 13:05:15.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:05:15.212" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 13:05:15.212" starttime="20201116 13:05:15.212"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:15.213" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 13:05:15.213" starttime="20201116 13:05:15.213"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.213" starttime="20201116 13:05:15.212"></status>
</kw>
<msg timestamp="20201116 13:05:15.213" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 13:05:15.213" starttime="20201116 13:05:15.211"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.214" starttime="20201116 13:05:15.208"></status>
</kw>
<msg timestamp="20201116 13:05:15.214" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:05:15.214" starttime="20201116 13:05:15.208"></status>
</kw>
<msg timestamp="20201116 13:05:15.214" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:05:15.214" starttime="20201116 13:05:15.207"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:05:15.217" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:05:15.217" starttime="20201116 13:05:15.217"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:15.218" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:05:15.218" starttime="20201116 13:05:15.217"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.218" starttime="20201116 13:05:15.216"></status>
</kw>
<msg timestamp="20201116 13:05:15.218" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:05:15.218" starttime="20201116 13:05:15.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:05:15.220" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 13:05:15.220" starttime="20201116 13:05:15.219"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:05:15.220" level="INFO">${result} = /wordcount-13.txt</msg>
<status status="PASS" endtime="20201116 13:05:15.220" starttime="20201116 13:05:15.220"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.220" starttime="20201116 13:05:15.219"></status>
</kw>
<msg timestamp="20201116 13:05:15.220" level="INFO">${path_with_leading} = /wordcount-13.txt</msg>
<status status="PASS" endtime="20201116 13:05:15.220" starttime="20201116 13:05:15.218"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:15.221" starttime="20201116 13:05:15.215"></status>
</kw>
<msg timestamp="20201116 13:05:15.221" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-13.txt</msg>
<status status="PASS" endtime="20201116 13:05:15.221" starttime="20201116 13:05:15.215"></status>
</kw>
<msg timestamp="20201116 13:05:15.221" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-13.txt</msg>
<status status="PASS" endtime="20201116 13:05:15.221" starttime="20201116 13:05:15.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:05:15.226" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-13.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:05:49.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:05:49.265" level="INFO">${output} = 2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:05:49.265" starttime="20201116 13:05:15.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.266" level="INFO">2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-16 13:05:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:05:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:17 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:05:17 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:05:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:05:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:05:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:05:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8018357BBBFB-&gt;0448621a-c4c1-450a-807d-b13ef51235ae
2020-11-16 13:05:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:05:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:05:18 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:05:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531712833_0004
2020-11-16 13:05:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:05:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:19 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 13:05:19 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 13:05:19 INFO  YarnClientImpl:324 - Submitted application application_1605531712833_0004
2020-11-16 13:05:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531712833_0004/
2020-11-16 13:05:19 INFO  Job:1619 - Running job: job_1605531712833_0004
2020-11-16 13:05:26 INFO  Job:1640 - Job job_1605531712833_0004 running in uber mode : false
2020-11-16 13:05:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:05:33 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:05:38 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:05:43 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:05:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:05:48 INFO  Job:1658 - Job job_1605531712833_0004 completed successfully
2020-11-16 13:05:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39972
		Total time spent by all reduces in occupied slots (ms)=14636
		Total time spent by all map tasks (ms)=9993
		Total time spent by all reduce tasks (ms)=3659
		Total vcore-milliseconds taken by all map tasks=9993
		Total vcore-milliseconds taken by all reduce tasks=3659
		Total megabyte-milliseconds taken by all map tasks=40931328
		Total megabyte-milliseconds taken by all reduce tasks=14987264
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=6860
		Physical memory (bytes) snapshot=1206665216
		Virtual memory (bytes) snapshot=15780372480
		Total committed heap usage (bytes)=1065877504
		Peak Map Physical memory (bytes)=318402560
		Peak Map Virtual memory (bytes)=3943944192
		Peak Reduce Physical memory (bytes)=298082304
		Peak Reduce Virtual memory (bytes)=3970465792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 13:05:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:05:49.267" starttime="20201116 13:05:49.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:05:49.267" starttime="20201116 13:05:49.267"></status>
</kw>
<status status="PASS" endtime="20201116 13:05:49.268" starttime="20201116 13:05:15.222"></status>
</kw>
<msg timestamp="20201116 13:05:49.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:05:49.268" starttime="20201116 13:05:15.222"></status>
</kw>
<msg timestamp="20201116 13:05:49.268" level="INFO">${output} = 2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:05:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:05:49.268" starttime="20201116 13:05:15.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:49.269" starttime="20201116 13:05:49.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:05:49.269" starttime="20201116 13:05:49.269"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:05:49.270" critical="yes" starttime="20201116 13:05:15.188"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:05:49.271" starttime="20201116 13:04:36.078"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:02.295" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:02.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:02.301" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:02.301" starttime="20201116 13:03:02.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:02.302" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:02.302" starttime="20201116 13:03:02.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:02.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:02.303" starttime="20201116 13:03:02.302"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:02.303" starttime="20201116 13:03:02.290"></status>
</kw>
<msg timestamp="20201116 13:03:02.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:02.303" starttime="20201116 13:03:02.290"></status>
</kw>
<msg timestamp="20201116 13:03:02.304" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:02.304" starttime="20201116 13:03:02.290"></status>
</kw>
<msg timestamp="20201116 13:03:02.304" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:02.304" starttime="20201116 13:03:02.289"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:02.309" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:02.309" starttime="20201116 13:03:02.308"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:02.309" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:02.309" starttime="20201116 13:03:02.309"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:02.310" starttime="20201116 13:03:02.307"></status>
</kw>
<msg timestamp="20201116 13:03:02.310" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:02.310" starttime="20201116 13:03:02.306"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:02.310" starttime="20201116 13:03:02.306"></status>
</kw>
<msg timestamp="20201116 13:03:02.310" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:02.310" starttime="20201116 13:03:02.305"></status>
</kw>
<msg timestamp="20201116 13:03:02.311" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:02.311" starttime="20201116 13:03:02.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:02.315" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:43.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:43.589" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03...</msg>
<status status="PASS" endtime="20201116 13:03:43.589" starttime="20201116 13:03:02.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:43.590" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:03:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:03:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:03:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:03:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9D12AA87CF4A-&gt;0448621a-c4c1-450a-807d-b13ef51235ae
2020-11-16 13:03:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:03:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-16 13:03:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:03:06 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:03:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531712833_0001
2020-11-16 13:03:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:03:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:07 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 13:03:07 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 13:03:07 INFO  YarnClientImpl:324 - Submitted application application_1605531712833_0001
2020-11-16 13:03:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531712833_0001/
2020-11-16 13:03:07 INFO  Job:1619 - Running job: job_1605531712833_0001
2020-11-16 13:03:17 INFO  Job:1640 - Job job_1605531712833_0001 running in uber mode : false
2020-11-16 13:03:17 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:03:24 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:03:29 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:03:34 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:03:41 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:03:42 INFO  Job:1658 - Job job_1605531712833_0001 completed successfully
2020-11-16 13:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40052
		Total time spent by all reduces in occupied slots (ms)=24992
		Total time spent by all map tasks (ms)=10013
		Total time spent by all reduce tasks (ms)=6248
		Total vcore-milliseconds taken by all map tasks=10013
		Total vcore-milliseconds taken by all reduce tasks=6248
		Total megabyte-milliseconds taken by all map tasks=41013248
		Total megabyte-milliseconds taken by all reduce tasks=25591808
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=580
		CPU time spent (ms)=6470
		Physical memory (bytes) snapshot=1218322432
		Virtual memory (bytes) snapshot=15794417664
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=312209408
		Peak Map Virtual memory (bytes)=3946807296
		Peak Reduce Physical memory (bytes)=295550976
		Peak Reduce Virtual memory (bytes)=3963797504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.392 seconds
2020-11-16 13:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:43 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 13:03:43 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:03:43.590" starttime="20201116 13:03:43.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:43.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:43.591" starttime="20201116 13:03:43.590"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.591" starttime="20201116 13:03:02.312"></status>
</kw>
<msg timestamp="20201116 13:03:43.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:43.591" starttime="20201116 13:03:02.311"></status>
</kw>
<msg timestamp="20201116 13:03:43.592" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03...</msg>
<status status="PASS" endtime="20201116 13:03:43.592" starttime="20201116 13:03:02.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:03:43.592" starttime="20201116 13:03:43.592"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:03:43.593" critical="yes" starttime="20201116 13:03:02.288"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:43.597" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:03:43.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:03:43.604" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:43.604" starttime="20201116 13:03:43.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:03:43.605" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:43.605" starttime="20201116 13:03:43.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:03:43.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:03:43.606" starttime="20201116 13:03:43.605"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.606" starttime="20201116 13:03:43.595"></status>
</kw>
<msg timestamp="20201116 13:03:43.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:03:43.606" starttime="20201116 13:03:43.595"></status>
</kw>
<msg timestamp="20201116 13:03:43.606" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:43.606" starttime="20201116 13:03:43.594"></status>
</kw>
<msg timestamp="20201116 13:03:43.606" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 13:03:43.606" starttime="20201116 13:03:43.594"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:03:43.607" level="INFO">${random} = 16</msg>
<status status="PASS" endtime="20201116 13:03:43.607" starttime="20201116 13:03:43.607"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:43.611" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:43.611" starttime="20201116 13:03:43.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:43.612" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.612" starttime="20201116 13:03:43.611"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.612" starttime="20201116 13:03:43.610"></status>
</kw>
<msg timestamp="20201116 13:03:43.612" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.612" starttime="20201116 13:03:43.609"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.612" starttime="20201116 13:03:43.609"></status>
</kw>
<msg timestamp="20201116 13:03:43.612" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:43.612" starttime="20201116 13:03:43.608"></status>
</kw>
<msg timestamp="20201116 13:03:43.613" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:03:43.613" starttime="20201116 13:03:43.607"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:43.616" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:43.616" starttime="20201116 13:03:43.616"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:43.617" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.617" starttime="20201116 13:03:43.616"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.617" starttime="20201116 13:03:43.615"></status>
</kw>
<msg timestamp="20201116 13:03:43.617" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.617" starttime="20201116 13:03:43.615"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.617" starttime="20201116 13:03:43.614"></status>
</kw>
<msg timestamp="20201116 13:03:43.617" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:03:43.617" starttime="20201116 13:03:43.613"></status>
</kw>
<msg timestamp="20201116 13:03:43.618" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:03:43.618" starttime="20201116 13:03:43.613"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:03:43.621" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:03:43.621" starttime="20201116 13:03:43.621"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:03:43.622" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.622" starttime="20201116 13:03:43.621"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.622" starttime="20201116 13:03:43.620"></status>
</kw>
<msg timestamp="20201116 13:03:43.622" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:03:43.622" starttime="20201116 13:03:43.620"></status>
</kw>
<status status="PASS" endtime="20201116 13:03:43.622" starttime="20201116 13:03:43.619"></status>
</kw>
<msg timestamp="20201116 13:03:43.622" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-16.txt</msg>
<status status="PASS" endtime="20201116 13:03:43.623" starttime="20201116 13:03:43.619"></status>
</kw>
<msg timestamp="20201116 13:03:43.623" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-16.txt</msg>
<status status="PASS" endtime="20201116 13:03:43.623" starttime="20201116 13:03:43.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:03:43.627" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-16.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:04:21.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:04:21.112" level="INFO">${output} = 2020-11-16 13:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:04:21.112" starttime="20201116 13:03:43.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:04:21.113" level="INFO">2020-11-16 13:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 13:03:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:03:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:03:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:03:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C24C8873576C-&gt;0448621a-c4c1-450a-807d-b13ef51235ae
2020-11-16 13:03:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:03:47 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:03:49 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:03:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531712833_0002
2020-11-16 13:03:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:03:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:50 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 13:03:50 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 13:03:50 INFO  YarnClientImpl:324 - Submitted application application_1605531712833_0002
2020-11-16 13:03:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531712833_0002/
2020-11-16 13:03:50 INFO  Job:1619 - Running job: job_1605531712833_0002
2020-11-16 13:03:57 INFO  Job:1640 - Job job_1605531712833_0002 running in uber mode : false
2020-11-16 13:03:57 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:04:04 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:04:10 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:04:15 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:04:19 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:04:20 INFO  Job:1658 - Job job_1605531712833_0002 completed successfully
2020-11-16 13:04:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:04:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39616
		Total time spent by all reduces in occupied slots (ms)=14272
		Total time spent by all map tasks (ms)=9904
		Total time spent by all reduce tasks (ms)=3568
		Total vcore-milliseconds taken by all map tasks=9904
		Total vcore-milliseconds taken by all reduce tasks=3568
		Total megabyte-milliseconds taken by all map tasks=40566784
		Total megabyte-milliseconds taken by all reduce tasks=14614528
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=578
		CPU time spent (ms)=6960
		Physical memory (bytes) snapshot=1226850304
		Virtual memory (bytes) snapshot=15808208896
		Total committed heap usage (bytes)=1069023232
		Peak Map Physical memory (bytes)=313503744
		Peak Map Virtual memory (bytes)=3949010944
		Peak Reduce Physical memory (bytes)=298184704
		Peak Reduce Virtual memory (bytes)=3970113536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 13:04:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 13:04:21.114" starttime="20201116 13:04:21.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:04:21.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:04:21.114" starttime="20201116 13:04:21.114"></status>
</kw>
<status status="PASS" endtime="20201116 13:04:21.115" starttime="20201116 13:03:43.624"></status>
</kw>
<msg timestamp="20201116 13:04:21.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:04:21.115" starttime="20201116 13:03:43.624"></status>
</kw>
<msg timestamp="20201116 13:04:21.115" level="INFO">${output} = 2020-11-16 13:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 13:03:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 13:04:21.115" starttime="20201116 13:03:43.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:04:21.116" starttime="20201116 13:04:21.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:04:21.117" starttime="20201116 13:04:21.116"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:04:21.117" critical="yes" starttime="20201116 13:03:43.593"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:04:21.119" starttime="20201116 13:03:02.233"></status>
</suite>
<status status="PASS" elapsedtime="193628" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:06:58.647" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:02.955" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 13:07:02.955" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:07:02.955" starttime="20201116 13:06:58.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:02.956" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:07:02.956" starttime="20201116 13:07:02.955"></status>
</kw>
<msg timestamp="20201116 13:07:02.956" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:07:02.956" starttime="20201116 13:06:58.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:02.962" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:06.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:06.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:06.243" starttime="20201116 13:07:02.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:06.244" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:06.244" starttime="20201116 13:07:06.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:06.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:06.244" starttime="20201116 13:07:06.244"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:06.245" starttime="20201116 13:07:02.958"></status>
</kw>
<msg timestamp="20201116 13:07:06.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:06.245" starttime="20201116 13:07:02.958"></status>
</kw>
<msg timestamp="20201116 13:07:06.245" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 13:07:06.245" starttime="20201116 13:07:02.958"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:07:06.246" starttime="20201116 13:07:06.245"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:06.246" starttime="20201116 13:07:02.957"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:06.246" starttime="20201116 13:07:02.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:06.250" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:09.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:09.038" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:09.038" starttime="20201116 13:07:06.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:09.039" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:09.039" starttime="20201116 13:07:09.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:09.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:09.040" starttime="20201116 13:07:09.040"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:09.040" starttime="20201116 13:07:06.248"></status>
</kw>
<msg timestamp="20201116 13:07:09.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:09.041" starttime="20201116 13:07:06.248"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:09.041" starttime="20201116 13:07:06.247"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:09.041" starttime="20201116 13:07:06.246"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:09.041" starttime="20201116 13:07:06.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 13:07:09.041" starttime="20201116 13:07:09.041"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:09.045" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:12.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:12.527" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:07:08.809Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 13:07:12.527" starttime="20201116 13:07:09.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:12.528" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:07:08.809Z",
  "modificationTime" : "2020-11-16T13:07:08.809Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 13:07:12.528" starttime="20201116 13:07:12.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:12.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:12.529" starttime="20201116 13:07:12.528"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:12.529" starttime="20201116 13:07:09.043"></status>
</kw>
<msg timestamp="20201116 13:07:12.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:12.529" starttime="20201116 13:07:09.042"></status>
</kw>
<msg timestamp="20201116 13:07:12.530" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:07:08.809Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 13:07:12.530" starttime="20201116 13:07:09.042"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 13:07:12.530" starttime="20201116 13:07:12.530"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:07:12.534" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:07:12.534" starttime="20201116 13:07:12.534"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:07:12.535" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:07:12.535" starttime="20201116 13:07:12.534"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:12.535" starttime="20201116 13:07:12.533"></status>
</kw>
<msg timestamp="20201116 13:07:12.535" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:07:12.535" starttime="20201116 13:07:12.533"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:12.535" starttime="20201116 13:07:12.532"></status>
</kw>
<msg timestamp="20201116 13:07:12.536" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:07:12.536" starttime="20201116 13:07:12.531"></status>
</kw>
<msg timestamp="20201116 13:07:12.536" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:07:12.536" starttime="20201116 13:07:12.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:12.540" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:15.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:15.485" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:15.485" starttime="20201116 13:07:12.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:15.486" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:15.486" starttime="20201116 13:07:15.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:15.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:15.487" starttime="20201116 13:07:15.487"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:15.487" starttime="20201116 13:07:12.537"></status>
</kw>
<msg timestamp="20201116 13:07:15.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:15.488" starttime="20201116 13:07:12.536"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:15.488" starttime="20201116 13:07:12.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:15.492" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:22.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:22.766" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:22.766" starttime="20201116 13:07:15.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:22.767" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:22.767" starttime="20201116 13:07:22.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:22.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:22.768" starttime="20201116 13:07:22.767"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:22.768" starttime="20201116 13:07:15.489"></status>
</kw>
<msg timestamp="20201116 13:07:22.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:22.768" starttime="20201116 13:07:15.489"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:22.768" starttime="20201116 13:07:15.488"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:22.772" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:27.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:27.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:27.801" starttime="20201116 13:07:22.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:27.802" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:27.802" starttime="20201116 13:07:27.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:27.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:27.803" starttime="20201116 13:07:27.802"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:27.803" starttime="20201116 13:07:22.770"></status>
</kw>
<msg timestamp="20201116 13:07:27.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:27.803" starttime="20201116 13:07:22.769"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:27.804" starttime="20201116 13:07:22.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:27.808" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:32.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:32.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:32.974" starttime="20201116 13:07:27.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:32.976" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:32.976" starttime="20201116 13:07:32.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:32.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:32.977" starttime="20201116 13:07:32.976"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:32.977" starttime="20201116 13:07:27.805"></status>
</kw>
<msg timestamp="20201116 13:07:32.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:32.978" starttime="20201116 13:07:27.804"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:32.978" starttime="20201116 13:07:27.804"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:07:32.979" critical="yes" starttime="20201116 13:06:58.635"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:07:32.985" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:07:32.985" starttime="20201116 13:07:32.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:07:32.986" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:07:32.986" starttime="20201116 13:07:32.985"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:32.986" starttime="20201116 13:07:32.984"></status>
</kw>
<msg timestamp="20201116 13:07:32.986" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:07:32.986" starttime="20201116 13:07:32.984"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:32.986" starttime="20201116 13:07:32.983"></status>
</kw>
<msg timestamp="20201116 13:07:32.986" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:07:32.987" starttime="20201116 13:07:32.982"></status>
</kw>
<msg timestamp="20201116 13:07:32.987" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:07:32.987" starttime="20201116 13:07:32.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:32.990" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:35.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:35.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:35.932" starttime="20201116 13:07:32.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:35.933" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:35.933" starttime="20201116 13:07:35.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:35.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:35.934" starttime="20201116 13:07:35.933"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:35.934" starttime="20201116 13:07:32.988"></status>
</kw>
<msg timestamp="20201116 13:07:35.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:35.934" starttime="20201116 13:07:32.987"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:35.934" starttime="20201116 13:07:32.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:35.938" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:38.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:38.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:07:38.974" starttime="20201116 13:07:35.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:38.976" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:07:38.976" starttime="20201116 13:07:38.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:38.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:38.976" starttime="20201116 13:07:38.976"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:38.977" starttime="20201116 13:07:35.935"></status>
</kw>
<msg timestamp="20201116 13:07:38.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:38.977" starttime="20201116 13:07:35.935"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:38.977" starttime="20201116 13:07:35.934"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:07:38.977" critical="yes" starttime="20201116 13:07:32.980"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 13:07:38.978" starttime="20201116 13:06:58.567"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:09:20.948" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:09:20.948" starttime="20201116 13:09:20.948"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:09:20.949" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:09:20.949" starttime="20201116 13:09:20.948"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:20.949" starttime="20201116 13:09:20.947"></status>
</kw>
<msg timestamp="20201116 13:09:20.949" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:09:20.949" starttime="20201116 13:09:20.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:09:20.950" starttime="20201116 13:09:20.950"></status>
</kw>
<msg timestamp="20201116 13:09:20.950" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:09:20.950" starttime="20201116 13:09:20.949"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:20.951" starttime="20201116 13:09:20.946"></status>
</kw>
<msg timestamp="20201116 13:09:20.951" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:09:20.951" starttime="20201116 13:09:20.946"></status>
</kw>
<msg timestamp="20201116 13:09:20.951" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:09:20.951" starttime="20201116 13:09:20.945"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:09:20.951" level="INFO">${random} = 06327</msg>
<status status="PASS" endtime="20201116 13:09:20.952" starttime="20201116 13:09:20.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:09:20.957" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-06327 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:09:24.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:09:24.589" level="INFO">${output} = 2020-11-16 13:09:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:09:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:09:24.589" starttime="20201116 13:09:20.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.590" level="INFO">2020-11-16 13:09:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:09:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:09:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:09:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:09:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2A95ACB8E7C4-&gt;5c2e6b78-acdd-4be3-b0aa-5f5a2a919212
2020-11-16 13:09:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:09:24.591" starttime="20201116 13:09:24.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:09:24.591" starttime="20201116 13:09:24.591"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:24.592" starttime="20201116 13:09:20.952"></status>
</kw>
<msg timestamp="20201116 13:09:24.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:09:24.592" starttime="20201116 13:09:20.952"></status>
</kw>
<msg timestamp="20201116 13:09:24.592" level="INFO">${result} = 2020-11-16 13:09:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:09:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:09:24.592" starttime="20201116 13:09:20.952"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:09:24.597" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:09:26.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:09:26.504" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:09 ofs://om/volume1/bucket1/ozone-06327
-rw-...</msg>
<status status="PASS" endtime="20201116 13:09:26.504" starttime="20201116 13:09:24.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.506" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:09 ofs://om/volume1/bucket1/ozone-06327
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:07 ofs://om/volume1/bucket1/ozone-12936
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:08 ofs://om/volume1/bucket1/wordcount-68.txt</msg>
<status status="PASS" endtime="20201116 13:09:26.506" starttime="20201116 13:09:26.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:09:26.507" starttime="20201116 13:09:26.506"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:26.507" starttime="20201116 13:09:24.594"></status>
</kw>
<msg timestamp="20201116 13:09:26.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:09:26.507" starttime="20201116 13:09:24.594"></status>
</kw>
<msg timestamp="20201116 13:09:26.508" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:09 ofs://om/volume1/bucket1/ozone-06327
-rw-...</msg>
<status status="PASS" endtime="20201116 13:09:26.508" starttime="20201116 13:09:24.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:09:26.508" starttime="20201116 13:09:26.508"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:09:26.509" critical="yes" starttime="20201116 13:09:20.944"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:09:26.509" starttime="20201116 13:09:20.892"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:07:43.749" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:07:43.749" starttime="20201116 13:07:43.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:07:43.749" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:07:43.750" starttime="20201116 13:07:43.749"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:43.750" starttime="20201116 13:07:43.748"></status>
</kw>
<msg timestamp="20201116 13:07:43.750" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:07:43.750" starttime="20201116 13:07:43.747"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:43.750" starttime="20201116 13:07:43.746"></status>
</kw>
<msg timestamp="20201116 13:07:43.750" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:07:43.750" starttime="20201116 13:07:43.746"></status>
</kw>
<msg timestamp="20201116 13:07:43.751" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:07:43.751" starttime="20201116 13:07:43.745"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:07:43.751" level="INFO">${random} = 12936</msg>
<status status="PASS" endtime="20201116 13:07:43.751" starttime="20201116 13:07:43.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:43.757" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12936 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:47.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:47.428" level="INFO">${output} = 2020-11-16 13:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:07:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:07:47.428" starttime="20201116 13:07:43.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:47.429" level="INFO">2020-11-16 13:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:07:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:07:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:07:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:07:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-362266773066-&gt;5c2e6b78-acdd-4be3-b0aa-5f5a2a919212
2020-11-16 13:07:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:07:47.429" starttime="20201116 13:07:47.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:47.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:47.430" starttime="20201116 13:07:47.429"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:47.430" starttime="20201116 13:07:43.752"></status>
</kw>
<msg timestamp="20201116 13:07:47.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:47.430" starttime="20201116 13:07:43.752"></status>
</kw>
<msg timestamp="20201116 13:07:47.430" level="INFO">${result} = 2020-11-16 13:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:07:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:07:47.430" starttime="20201116 13:07:43.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:47.435" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:49.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:49.287" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:07 o3fs://bucket1.volume1.om/ozone-12936
dr...</msg>
<status status="PASS" endtime="20201116 13:07:49.287" starttime="20201116 13:07:47.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:49.288" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:07 o3fs://bucket1.volume1.om/ozone-12936
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:07:49.288" starttime="20201116 13:07:49.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:49.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:49.289" starttime="20201116 13:07:49.288"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:49.289" starttime="20201116 13:07:47.433"></status>
</kw>
<msg timestamp="20201116 13:07:49.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:49.289" starttime="20201116 13:07:47.431"></status>
</kw>
<msg timestamp="20201116 13:07:49.289" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:07 o3fs://bucket1.volume1.om/ozone-12936
dr...</msg>
<status status="PASS" endtime="20201116 13:07:49.289" starttime="20201116 13:07:47.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:07:49.290" starttime="20201116 13:07:49.290"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:07:49.290" critical="yes" starttime="20201116 13:07:43.744"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:07:49.291" starttime="20201116 13:07:43.689"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:09:31.318" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:09:31.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:09:31.319" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:09:31.319" starttime="20201116 13:09:31.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.320" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:09:31.320" starttime="20201116 13:09:31.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:09:31.321" starttime="20201116 13:09:31.320"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:31.321" starttime="20201116 13:09:31.306"></status>
</kw>
<msg timestamp="20201116 13:09:31.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:09:31.321" starttime="20201116 13:09:31.306"></status>
</kw>
<msg timestamp="20201116 13:09:31.322" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:09:31.322" starttime="20201116 13:09:31.306"></status>
</kw>
<msg timestamp="20201116 13:09:31.322" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:09:31.322" starttime="20201116 13:09:31.305"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:09:31.327" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:09:31.327" starttime="20201116 13:09:31.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:09:31.327" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:09:31.328" starttime="20201116 13:09:31.327"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:31.328" starttime="20201116 13:09:31.325"></status>
</kw>
<msg timestamp="20201116 13:09:31.328" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:09:31.328" starttime="20201116 13:09:31.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:09:31.329" starttime="20201116 13:09:31.329"></status>
</kw>
<msg timestamp="20201116 13:09:31.329" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:09:31.329" starttime="20201116 13:09:31.328"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:31.329" starttime="20201116 13:09:31.324"></status>
</kw>
<msg timestamp="20201116 13:09:31.330" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:09:31.330" starttime="20201116 13:09:31.323"></status>
</kw>
<msg timestamp="20201116 13:09:31.330" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:09:31.330" starttime="20201116 13:09:31.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:09:31.334" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:10:08.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:10:08.937" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:09:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:09:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:10:08.937" starttime="20201116 13:09:31.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.938" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:09:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:09:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:09:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:09:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:09:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-866CF80AFE01-&gt;5c2e6b78-acdd-4be3-b0aa-5f5a2a919212
2020-11-16 13:09:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:09:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:09:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:09:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:09:35 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:09:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531994130_0003
2020-11-16 13:09:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:09:35 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:09:35 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:09:35 INFO  YarnClientImpl:329 - Submitted application application_1605531994130_0003
2020-11-16 13:09:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531994130_0003/
2020-11-16 13:09:35 INFO  Job:1619 - Running job: job_1605531994130_0003
2020-11-16 13:09:43 INFO  Job:1640 - Job job_1605531994130_0003 running in uber mode : false
2020-11-16 13:09:43 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:09:50 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:09:56 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:10:01 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:10:07 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:10:08 INFO  Job:1658 - Job job_1605531994130_0003 completed successfully
2020-11-16 13:10:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056241
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40280
		Total time spent by all reduces in occupied slots (ms)=24656
		Total time spent by all map tasks (ms)=10070
		Total time spent by all reduce tasks (ms)=6164
		Total vcore-milliseconds taken by all map tasks=10070
		Total vcore-milliseconds taken by all reduce tasks=6164
		Total megabyte-milliseconds taken by all map tasks=41246720
		Total megabyte-milliseconds taken by all reduce tasks=25247744
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=672
		CPU time spent (ms)=7170
		Physical memory (bytes) snapshot=1188597760
		Virtual memory (bytes) snapshot=15819149312
		Total committed heap usage (bytes)=1059061760
		Peak Map Physical memory (bytes)=298115072
		Peak Map Virtual memory (bytes)=3953197056
		Peak Reduce Physical memory (bytes)=299585536
		Peak Reduce Virtual memory (bytes)=3967062016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.682 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:10:08.938" starttime="20201116 13:10:08.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:10:08.939" starttime="20201116 13:10:08.939"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.940" starttime="20201116 13:09:31.331"></status>
</kw>
<msg timestamp="20201116 13:10:08.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:10:08.940" starttime="20201116 13:09:31.331"></status>
</kw>
<msg timestamp="20201116 13:10:08.940" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:09:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:09:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:10:08.940" starttime="20201116 13:09:31.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:10:08.941" starttime="20201116 13:10:08.940"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:10:08.941" critical="yes" starttime="20201116 13:09:31.304"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:10:08.946" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:10:08.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:10:08.952" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:10:08.952" starttime="20201116 13:10:08.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.953" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:10:08.953" starttime="20201116 13:10:08.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:10:08.954" starttime="20201116 13:10:08.953"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.954" starttime="20201116 13:10:08.943"></status>
</kw>
<msg timestamp="20201116 13:10:08.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:10:08.954" starttime="20201116 13:10:08.943"></status>
</kw>
<msg timestamp="20201116 13:10:08.954" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:10:08.954" starttime="20201116 13:10:08.943"></status>
</kw>
<msg timestamp="20201116 13:10:08.954" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:10:08.955" starttime="20201116 13:10:08.942"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:10:08.955" level="INFO">${random} = 85</msg>
<status status="PASS" endtime="20201116 13:10:08.955" starttime="20201116 13:10:08.955"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:10:08.959" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:10:08.959" starttime="20201116 13:10:08.959"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:10:08.960" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:10:08.960" starttime="20201116 13:10:08.959"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.960" starttime="20201116 13:10:08.958"></status>
</kw>
<msg timestamp="20201116 13:10:08.960" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:10:08.960" starttime="20201116 13:10:08.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:10:08.961" starttime="20201116 13:10:08.961"></status>
</kw>
<msg timestamp="20201116 13:10:08.961" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:10:08.961" starttime="20201116 13:10:08.960"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.962" starttime="20201116 13:10:08.957"></status>
</kw>
<msg timestamp="20201116 13:10:08.962" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:10:08.962" starttime="20201116 13:10:08.956"></status>
</kw>
<msg timestamp="20201116 13:10:08.962" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:10:08.962" starttime="20201116 13:10:08.955"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:10:08.966" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:10:08.966" starttime="20201116 13:10:08.965"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:10:08.966" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:10:08.966" starttime="20201116 13:10:08.966"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.967" starttime="20201116 13:10:08.964"></status>
</kw>
<msg timestamp="20201116 13:10:08.967" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:10:08.967" starttime="20201116 13:10:08.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:10:08.968" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 13:10:08.968" starttime="20201116 13:10:08.968"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:10:08.969" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 13:10:08.969" starttime="20201116 13:10:08.969"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.969" starttime="20201116 13:10:08.967"></status>
</kw>
<msg timestamp="20201116 13:10:08.969" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 13:10:08.969" starttime="20201116 13:10:08.967"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.970" starttime="20201116 13:10:08.963"></status>
</kw>
<msg timestamp="20201116 13:10:08.970" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:10:08.970" starttime="20201116 13:10:08.963"></status>
</kw>
<msg timestamp="20201116 13:10:08.970" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:10:08.970" starttime="20201116 13:10:08.962"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:10:08.974" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:10:08.974" starttime="20201116 13:10:08.973"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:10:08.974" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:10:08.974" starttime="20201116 13:10:08.974"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.975" starttime="20201116 13:10:08.973"></status>
</kw>
<msg timestamp="20201116 13:10:08.975" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:10:08.975" starttime="20201116 13:10:08.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:10:08.976" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 13:10:08.976" starttime="20201116 13:10:08.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:10:08.977" level="INFO">${result} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:10:08.977" starttime="20201116 13:10:08.977"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.977" starttime="20201116 13:10:08.975"></status>
</kw>
<msg timestamp="20201116 13:10:08.977" level="INFO">${path_with_leading} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:10:08.977" starttime="20201116 13:10:08.975"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:08.978" starttime="20201116 13:10:08.972"></status>
</kw>
<msg timestamp="20201116 13:10:08.978" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:10:08.978" starttime="20201116 13:10:08.971"></status>
</kw>
<msg timestamp="20201116 13:10:08.978" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:10:08.978" starttime="20201116 13:10:08.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:10:08.985" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-85.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:10:46.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:10:46.581" level="INFO">${output} = 2020-11-16 13:10:10 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:10:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:10:46.581" starttime="20201116 13:10:08.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:10:46.582" level="INFO">2020-11-16 13:10:10 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:10:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:10:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:10:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:10:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:10:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:10:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2E1ABE400292-&gt;5c2e6b78-acdd-4be3-b0aa-5f5a2a919212
2020-11-16 13:10:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:10:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:10:15 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:10:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531994130_0004
2020-11-16 13:10:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:10:15 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:10:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:10:15 INFO  YarnClientImpl:329 - Submitted application application_1605531994130_0004
2020-11-16 13:10:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531994130_0004/
2020-11-16 13:10:15 INFO  Job:1619 - Running job: job_1605531994130_0004
2020-11-16 13:10:23 INFO  Job:1640 - Job job_1605531994130_0004 running in uber mode : false
2020-11-16 13:10:23 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:10:29 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:10:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:10:41 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:10:45 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:10:46 INFO  Job:1658 - Job job_1605531994130_0004 completed successfully
2020-11-16 13:10:46 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118611
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39236
		Total time spent by all reduces in occupied slots (ms)=14444
		Total time spent by all map tasks (ms)=9809
		Total time spent by all reduce tasks (ms)=3611
		Total vcore-milliseconds taken by all map tasks=9809
		Total vcore-milliseconds taken by all reduce tasks=3611
		Total megabyte-milliseconds taken by all map tasks=40177664
		Total megabyte-milliseconds taken by all reduce tasks=14790656
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=629
		CPU time spent (ms)=7120
		Physical memory (bytes) snapshot=1153589248
		Virtual memory (bytes) snapshot=15796723712
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=296009728
		Peak Map Virtual memory (bytes)=3954176000
		Peak Reduce Physical memory (bytes)=294559744
		Peak Reduce Virtual memory (bytes)=3968401408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:10:46.582" starttime="20201116 13:10:46.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:10:46.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:10:46.583" starttime="20201116 13:10:46.582"></status>
</kw>
<status status="PASS" endtime="20201116 13:10:46.583" starttime="20201116 13:10:08.979"></status>
</kw>
<msg timestamp="20201116 13:10:46.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:10:46.584" starttime="20201116 13:10:08.979"></status>
</kw>
<msg timestamp="20201116 13:10:46.584" level="INFO">${output} = 2020-11-16 13:10:10 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:10:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:10:46.584" starttime="20201116 13:10:08.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:10:46.585" starttime="20201116 13:10:46.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:10:46.585" starttime="20201116 13:10:46.585"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:10:46.585" critical="yes" starttime="20201116 13:10:08.942"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:10:46.586" starttime="20201116 13:09:31.252"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:54.083" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:07:54.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:07:54.088" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:07:54.088" starttime="20201116 13:07:54.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:07:54.089" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:07:54.089" starttime="20201116 13:07:54.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:07:54.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:07:54.090" starttime="20201116 13:07:54.089"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:54.090" starttime="20201116 13:07:54.069"></status>
</kw>
<msg timestamp="20201116 13:07:54.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:07:54.090" starttime="20201116 13:07:54.069"></status>
</kw>
<msg timestamp="20201116 13:07:54.090" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:07:54.091" starttime="20201116 13:07:54.068"></status>
</kw>
<msg timestamp="20201116 13:07:54.091" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:07:54.091" starttime="20201116 13:07:54.068"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:07:54.095" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:07:54.095" starttime="20201116 13:07:54.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:07:54.096" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:07:54.096" starttime="20201116 13:07:54.095"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:54.096" starttime="20201116 13:07:54.093"></status>
</kw>
<msg timestamp="20201116 13:07:54.096" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:07:54.096" starttime="20201116 13:07:54.093"></status>
</kw>
<status status="PASS" endtime="20201116 13:07:54.097" starttime="20201116 13:07:54.092"></status>
</kw>
<msg timestamp="20201116 13:07:54.097" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:07:54.097" starttime="20201116 13:07:54.092"></status>
</kw>
<msg timestamp="20201116 13:07:54.097" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:07:54.097" starttime="20201116 13:07:54.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:07:54.100" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:08:37.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:08:37.088" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:07:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:07:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:08:37.088" starttime="20201116 13:07:54.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:08:37.089" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:07:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:07:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:07:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:07:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:07:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8CA1B80A980A-&gt;5c2e6b78-acdd-4be3-b0aa-5f5a2a919212
2020-11-16 13:07:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:08:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:08:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:08:00 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:08:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531994130_0001
2020-11-16 13:08:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:08:01 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:08:01 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:08:01 INFO  YarnClientImpl:329 - Submitted application application_1605531994130_0001
2020-11-16 13:08:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531994130_0001/
2020-11-16 13:08:01 INFO  Job:1619 - Running job: job_1605531994130_0001
2020-11-16 13:08:12 INFO  Job:1640 - Job job_1605531994130_0001 running in uber mode : false
2020-11-16 13:08:12 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:08:18 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:08:23 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:08:28 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:08:32 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:08:36 INFO  Job:1658 - Job job_1605531994130_0001 completed successfully
2020-11-16 13:08:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39456
		Total time spent by all reduces in occupied slots (ms)=15964
		Total time spent by all map tasks (ms)=9864
		Total time spent by all reduce tasks (ms)=3991
		Total vcore-milliseconds taken by all map tasks=9864
		Total vcore-milliseconds taken by all reduce tasks=3991
		Total megabyte-milliseconds taken by all map tasks=40402944
		Total megabyte-milliseconds taken by all reduce tasks=16347136
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=6980
		Physical memory (bytes) snapshot=1254801408
		Virtual memory (bytes) snapshot=15800745984
		Total committed heap usage (bytes)=1172307968
		Peak Map Physical memory (bytes)=294227968
		Peak Map Virtual memory (bytes)=3948634112
		Peak Reduce Physical memory (bytes)=386908160
		Peak Reduce Virtual memory (bytes)=3968847872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.653 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:08:37.090" starttime="20201116 13:08:37.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:08:37.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:08:37.090" starttime="20201116 13:08:37.090"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.091" starttime="20201116 13:07:54.098"></status>
</kw>
<msg timestamp="20201116 13:08:37.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:08:37.091" starttime="20201116 13:07:54.098"></status>
</kw>
<msg timestamp="20201116 13:08:37.091" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:07:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:07:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:08:37.091" starttime="20201116 13:07:54.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:08:37.092" starttime="20201116 13:08:37.092"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:08:37.092" critical="yes" starttime="20201116 13:07:54.067"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:08:37.100" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:08:37.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:08:37.105" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:08:37.105" starttime="20201116 13:08:37.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:08:37.106" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:08:37.106" starttime="20201116 13:08:37.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:08:37.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:08:37.107" starttime="20201116 13:08:37.106"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.107" starttime="20201116 13:08:37.095"></status>
</kw>
<msg timestamp="20201116 13:08:37.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:08:37.107" starttime="20201116 13:08:37.094"></status>
</kw>
<msg timestamp="20201116 13:08:37.107" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:08:37.107" starttime="20201116 13:08:37.094"></status>
</kw>
<msg timestamp="20201116 13:08:37.108" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:08:37.108" starttime="20201116 13:08:37.093"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:08:37.108" level="INFO">${random} = 68</msg>
<status status="PASS" endtime="20201116 13:08:37.108" starttime="20201116 13:08:37.108"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:08:37.112" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:08:37.112" starttime="20201116 13:08:37.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:08:37.113" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:08:37.113" starttime="20201116 13:08:37.112"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.113" starttime="20201116 13:08:37.111"></status>
</kw>
<msg timestamp="20201116 13:08:37.113" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:08:37.113" starttime="20201116 13:08:37.110"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.113" starttime="20201116 13:08:37.110"></status>
</kw>
<msg timestamp="20201116 13:08:37.113" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:08:37.113" starttime="20201116 13:08:37.109"></status>
</kw>
<msg timestamp="20201116 13:08:37.113" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:08:37.114" starttime="20201116 13:08:37.108"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:08:37.117" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:08:37.117" starttime="20201116 13:08:37.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:08:37.118" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:08:37.118" starttime="20201116 13:08:37.117"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.118" starttime="20201116 13:08:37.116"></status>
</kw>
<msg timestamp="20201116 13:08:37.118" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:08:37.118" starttime="20201116 13:08:37.116"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.119" starttime="20201116 13:08:37.115"></status>
</kw>
<msg timestamp="20201116 13:08:37.119" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:08:37.119" starttime="20201116 13:08:37.114"></status>
</kw>
<msg timestamp="20201116 13:08:37.119" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:08:37.119" starttime="20201116 13:08:37.114"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:08:37.122" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:08:37.122" starttime="20201116 13:08:37.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:08:37.123" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:08:37.123" starttime="20201116 13:08:37.122"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.123" starttime="20201116 13:08:37.121"></status>
</kw>
<msg timestamp="20201116 13:08:37.123" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:08:37.123" starttime="20201116 13:08:37.121"></status>
</kw>
<status status="PASS" endtime="20201116 13:08:37.123" starttime="20201116 13:08:37.120"></status>
</kw>
<msg timestamp="20201116 13:08:37.123" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-68.txt</msg>
<status status="PASS" endtime="20201116 13:08:37.124" starttime="20201116 13:08:37.120"></status>
</kw>
<msg timestamp="20201116 13:08:37.124" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-68.txt</msg>
<status status="PASS" endtime="20201116 13:08:37.124" starttime="20201116 13:08:37.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:08:37.129" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-68.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:09:16.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:09:16.137" level="INFO">${output} = 2020-11-16 13:08:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:08:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:09:16.137" starttime="20201116 13:08:37.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:09:16.138" level="INFO">2020-11-16 13:08:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:08:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:08:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:08:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:08:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:08:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:08:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD456233F2D3-&gt;5c2e6b78-acdd-4be3-b0aa-5f5a2a919212
2020-11-16 13:08:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:08:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:08:43 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:08:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605531994130_0002
2020-11-16 13:08:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 13:08:44 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:08:44 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:08:44 INFO  YarnClientImpl:329 - Submitted application application_1605531994130_0002
2020-11-16 13:08:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605531994130_0002/
2020-11-16 13:08:44 INFO  Job:1619 - Running job: job_1605531994130_0002
2020-11-16 13:08:52 INFO  Job:1640 - Job job_1605531994130_0002 running in uber mode : false
2020-11-16 13:08:52 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:08:59 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:09:04 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:09:10 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:09:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:09:15 INFO  Job:1658 - Job job_1605531994130_0002 completed successfully
2020-11-16 13:09:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40512
		Total time spent by all reduces in occupied slots (ms)=14968
		Total time spent by all map tasks (ms)=10128
		Total time spent by all reduce tasks (ms)=3742
		Total vcore-milliseconds taken by all map tasks=10128
		Total vcore-milliseconds taken by all reduce tasks=3742
		Total megabyte-milliseconds taken by all map tasks=41484288
		Total megabyte-milliseconds taken by all reduce tasks=15327232
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=632
		CPU time spent (ms)=7260
		Physical memory (bytes) snapshot=1269575680
		Virtual memory (bytes) snapshot=15800610816
		Total committed heap usage (bytes)=1089994752
		Peak Map Physical memory (bytes)=295550976
		Peak Map Virtual memory (bytes)=3948019712
		Peak Reduce Physical memory (bytes)=388726784
		Peak Reduce Virtual memory (bytes)=3967619072
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:09:16.138" starttime="20201116 13:09:16.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:09:16.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:09:16.139" starttime="20201116 13:09:16.138"></status>
</kw>
<status status="PASS" endtime="20201116 13:09:16.139" starttime="20201116 13:08:37.125"></status>
</kw>
<msg timestamp="20201116 13:09:16.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:09:16.139" starttime="20201116 13:08:37.125"></status>
</kw>
<msg timestamp="20201116 13:09:16.140" level="INFO">${output} = 2020-11-16 13:08:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-16 13:08:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 13:09:16.140" starttime="20201116 13:08:37.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:09:16.140" starttime="20201116 13:09:16.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:09:16.141" starttime="20201116 13:09:16.140"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:09:16.141" critical="yes" starttime="20201116 13:08:37.093"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:09:16.142" starttime="20201116 13:07:54.017"></status>
</suite>
<status status="PASS" elapsedtime="209089" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="595474" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
