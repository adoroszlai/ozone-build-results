<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 13:28:38.379" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:36.337" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:24:40.534" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 13:24:40.534" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:40.534" starttime="20201116 13:24:36.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:24:40.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 13:24:40.535" starttime="20201116 13:24:40.534"></status>
</kw>
<msg timestamp="20201116 13:24:40.535" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:40.536" starttime="20201116 13:24:36.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:40.543" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:24:44.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:24:44.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:44.058" starttime="20201116 13:24:40.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:24:44.060" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:24:44.060" starttime="20201116 13:24:44.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:24:44.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:24:44.060" starttime="20201116 13:24:44.060"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:44.061" starttime="20201116 13:24:40.538"></status>
</kw>
<msg timestamp="20201116 13:24:44.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:24:44.061" starttime="20201116 13:24:40.537"></status>
</kw>
<msg timestamp="20201116 13:24:44.061" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:44.061" starttime="20201116 13:24:40.537"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 13:24:44.062" starttime="20201116 13:24:44.061"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:44.062" starttime="20201116 13:24:40.536"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:44.062" starttime="20201116 13:24:40.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:44.066" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:24:47.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:24:47.493" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:47.493" starttime="20201116 13:24:44.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:24:47.494" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:24:47.494" starttime="20201116 13:24:47.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:24:47.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:24:47.495" starttime="20201116 13:24:47.495"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:47.496" starttime="20201116 13:24:44.064"></status>
</kw>
<msg timestamp="20201116 13:24:47.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:24:47.496" starttime="20201116 13:24:44.063"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:47.496" starttime="20201116 13:24:44.063"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:47.496" starttime="20201116 13:24:44.062"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:47.496" starttime="20201116 13:24:44.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 13:24:47.497" starttime="20201116 13:24:47.496"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:47.501" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:24:51.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:24:51.522" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:51.522" starttime="20201116 13:24:47.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:24:51.523" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T13:24:47.303Z",
  "modificationTime" : "2020-11-16T13:24:47.303Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 13:24:51.523" starttime="20201116 13:24:51.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:24:51.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:24:51.524" starttime="20201116 13:24:51.523"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:51.524" starttime="20201116 13:24:47.498"></status>
</kw>
<msg timestamp="20201116 13:24:51.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:24:51.524" starttime="20201116 13:24:47.497"></status>
</kw>
<msg timestamp="20201116 13:24:51.525" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:51.525" starttime="20201116 13:24:47.497"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 13:24:51.525" starttime="20201116 13:24:51.525"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:24:51.529" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:24:51.529" starttime="20201116 13:24:51.529"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:24:51.530" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:24:51.530" starttime="20201116 13:24:51.529"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:51.530" starttime="20201116 13:24:51.528"></status>
</kw>
<msg timestamp="20201116 13:24:51.530" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:24:51.530" starttime="20201116 13:24:51.528"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:51.531" starttime="20201116 13:24:51.527"></status>
</kw>
<msg timestamp="20201116 13:24:51.531" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:24:51.531" starttime="20201116 13:24:51.526"></status>
</kw>
<msg timestamp="20201116 13:24:51.531" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 13:24:51.531" starttime="20201116 13:24:51.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:51.536" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:24:55.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:24:55.347" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:24:55.347" starttime="20201116 13:24:51.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:24:55.348" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:24:55.348" starttime="20201116 13:24:55.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:24:55.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:24:55.349" starttime="20201116 13:24:55.348"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:55.349" starttime="20201116 13:24:51.532"></status>
</kw>
<msg timestamp="20201116 13:24:55.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:24:55.349" starttime="20201116 13:24:51.532"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:55.350" starttime="20201116 13:24:51.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:55.353" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:03.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:03.563" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:25:03.563" starttime="20201116 13:24:55.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:03.564" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:25:03.565" starttime="20201116 13:25:03.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:03.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:03.565" starttime="20201116 13:25:03.565"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:03.566" starttime="20201116 13:24:55.351"></status>
</kw>
<msg timestamp="20201116 13:25:03.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:03.566" starttime="20201116 13:24:55.350"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:03.566" starttime="20201116 13:24:55.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:03.571" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:09.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:09.054" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:25:09.054" starttime="20201116 13:25:03.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:09.055" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:25:09.055" starttime="20201116 13:25:09.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:09.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:09.056" starttime="20201116 13:25:09.055"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:09.056" starttime="20201116 13:25:03.567"></status>
</kw>
<msg timestamp="20201116 13:25:09.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:09.056" starttime="20201116 13:25:03.567"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:09.056" starttime="20201116 13:25:03.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:09.060" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:14.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:14.144" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:25:14.144" starttime="20201116 13:25:09.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:14.145" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:25:14.145" starttime="20201116 13:25:14.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:14.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:14.146" starttime="20201116 13:25:14.145"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:14.146" starttime="20201116 13:25:09.057"></status>
</kw>
<msg timestamp="20201116 13:25:14.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:14.146" starttime="20201116 13:25:09.057"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:14.146" starttime="20201116 13:25:09.057"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:25:14.147" critical="yes" starttime="20201116 13:24:36.329"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:25:14.152" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:25:14.152" starttime="20201116 13:25:14.151"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:25:14.152" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:25:14.152" starttime="20201116 13:25:14.152"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:14.153" starttime="20201116 13:25:14.151"></status>
</kw>
<msg timestamp="20201116 13:25:14.153" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:25:14.153" starttime="20201116 13:25:14.150"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:14.153" starttime="20201116 13:25:14.150"></status>
</kw>
<msg timestamp="20201116 13:25:14.153" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:25:14.153" starttime="20201116 13:25:14.149"></status>
</kw>
<msg timestamp="20201116 13:25:14.153" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:25:14.153" starttime="20201116 13:25:14.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:14.158" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:17.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:17.532" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:25:17.532" starttime="20201116 13:25:14.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:17.533" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:25:17.534" starttime="20201116 13:25:17.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:17.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:17.534" starttime="20201116 13:25:17.534"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:17.535" starttime="20201116 13:25:14.154"></status>
</kw>
<msg timestamp="20201116 13:25:17.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:17.535" starttime="20201116 13:25:14.154"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:17.535" starttime="20201116 13:25:14.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:17.539" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:20.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:20.811" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 13:25:20.811" starttime="20201116 13:25:17.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:20.812" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 13:25:20.812" starttime="20201116 13:25:20.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:20.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:20.813" starttime="20201116 13:25:20.812"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:20.813" starttime="20201116 13:25:17.536"></status>
</kw>
<msg timestamp="20201116 13:25:20.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:20.813" starttime="20201116 13:25:17.536"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:20.814" starttime="20201116 13:25:17.535"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:25:20.814" critical="yes" starttime="20201116 13:25:14.148"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 13:25:20.815" starttime="20201116 13:24:36.275"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:27:11.406" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:27:11.406" starttime="20201116 13:27:11.406"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:27:11.407" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:27:11.407" starttime="20201116 13:27:11.406"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:11.407" starttime="20201116 13:27:11.405"></status>
</kw>
<msg timestamp="20201116 13:27:11.407" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:27:11.407" starttime="20201116 13:27:11.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:27:11.408" starttime="20201116 13:27:11.408"></status>
</kw>
<msg timestamp="20201116 13:27:11.408" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:27:11.408" starttime="20201116 13:27:11.407"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:11.409" starttime="20201116 13:27:11.404"></status>
</kw>
<msg timestamp="20201116 13:27:11.409" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:27:11.409" starttime="20201116 13:27:11.404"></status>
</kw>
<msg timestamp="20201116 13:27:11.409" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:27:11.409" starttime="20201116 13:27:11.403"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:27:11.410" level="INFO">${random} = 05931</msg>
<status status="PASS" endtime="20201116 13:27:11.410" starttime="20201116 13:27:11.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:27:11.416" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-05931 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:27:15.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:27:15.203" level="INFO">${output} = 2020-11-16 13:27:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:27:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:27:15.203" starttime="20201116 13:27:11.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:27:15.204" level="INFO">2020-11-16 13:27:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:27:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:27:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:27:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:27:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-14F13CDBD2AF-&gt;5ee9fc43-0bb7-47e1-bfdf-dc90c613a905
2020-11-16 13:27:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:27:15.204" starttime="20201116 13:27:15.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:27:15.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:27:15.205" starttime="20201116 13:27:15.204"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:15.205" starttime="20201116 13:27:11.411"></status>
</kw>
<msg timestamp="20201116 13:27:15.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:27:15.205" starttime="20201116 13:27:11.411"></status>
</kw>
<msg timestamp="20201116 13:27:15.205" level="INFO">${result} = 2020-11-16 13:27:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:27:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:27:15.205" starttime="20201116 13:27:11.410"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:27:15.210" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:27:17.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:27:17.461" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:27 ofs://om/volume1/bucket1/ozone-05931
-rw-...</msg>
<status status="PASS" endtime="20201116 13:27:17.461" starttime="20201116 13:27:15.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:27:17.462" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:27 ofs://om/volume1/bucket1/ozone-05931
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:25 ofs://om/volume1/bucket1/ozone-82171
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:25 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:26 ofs://om/volume1/bucket1/wordcount-96.txt</msg>
<status status="PASS" endtime="20201116 13:27:17.462" starttime="20201116 13:27:17.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:27:17.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:27:17.463" starttime="20201116 13:27:17.462"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:17.463" starttime="20201116 13:27:15.208"></status>
</kw>
<msg timestamp="20201116 13:27:17.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:27:17.463" starttime="20201116 13:27:15.207"></status>
</kw>
<msg timestamp="20201116 13:27:17.464" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:27 ofs://om/volume1/bucket1/ozone-05931
-rw-...</msg>
<status status="PASS" endtime="20201116 13:27:17.464" starttime="20201116 13:27:15.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:27:17.464" starttime="20201116 13:27:17.464"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:27:17.464" critical="yes" starttime="20201116 13:27:11.402"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:27:17.466" starttime="20201116 13:27:11.351"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:25:45.247" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:25:45.247" starttime="20201116 13:25:45.247"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:25:45.248" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:25:45.248" starttime="20201116 13:25:45.247"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:45.248" starttime="20201116 13:25:45.246"></status>
</kw>
<msg timestamp="20201116 13:25:45.248" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:25:45.248" starttime="20201116 13:25:45.246"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:45.248" starttime="20201116 13:25:45.245"></status>
</kw>
<msg timestamp="20201116 13:25:45.248" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:25:45.248" starttime="20201116 13:25:45.245"></status>
</kw>
<msg timestamp="20201116 13:25:45.249" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:25:45.249" starttime="20201116 13:25:45.244"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:25:45.249" level="INFO">${random} = 82171</msg>
<status status="PASS" endtime="20201116 13:25:45.249" starttime="20201116 13:25:45.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:45.254" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-82171 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:49.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:49.286" level="INFO">${output} = 2020-11-16 13:25:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:25:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:25:49.286" starttime="20201116 13:25:45.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:49.287" level="INFO">2020-11-16 13:25:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:25:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:25:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:25:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:25:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-049890803481-&gt;5ee9fc43-0bb7-47e1-bfdf-dc90c613a905
2020-11-16 13:25:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 13:25:49.287" starttime="20201116 13:25:49.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:49.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:49.288" starttime="20201116 13:25:49.287"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:49.288" starttime="20201116 13:25:45.250"></status>
</kw>
<msg timestamp="20201116 13:25:49.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:49.289" starttime="20201116 13:25:45.250"></status>
</kw>
<msg timestamp="20201116 13:25:49.289" level="INFO">${result} = 2020-11-16 13:25:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:25:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 13:25:49.289" starttime="20201116 13:25:45.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:49.294" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:51.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:51.383" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:25 o3fs://bucket1.volume1.om/ozone-82171
dr...</msg>
<status status="PASS" endtime="20201116 13:25:51.383" starttime="20201116 13:25:49.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:51.384" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:25 o3fs://bucket1.volume1.om/ozone-82171
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:25 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 13:25:51.384" starttime="20201116 13:25:51.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:51.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:51.385" starttime="20201116 13:25:51.385"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:51.385" starttime="20201116 13:25:49.291"></status>
</kw>
<msg timestamp="20201116 13:25:51.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:51.386" starttime="20201116 13:25:49.290"></status>
</kw>
<msg timestamp="20201116 13:25:51.386" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 13:25 o3fs://bucket1.volume1.om/ozone-82171
dr...</msg>
<status status="PASS" endtime="20201116 13:25:51.386" starttime="20201116 13:25:49.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:25:51.386" starttime="20201116 13:25:51.386"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 13:25:51.387" critical="yes" starttime="20201116 13:25:45.243"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 13:25:51.388" starttime="20201116 13:25:45.193"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:40.087" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:40.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:40.089" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201116 13:25:40.089" starttime="20201116 13:25:40.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:40.090" level="INFO">rm</msg>
<status status="PASS" endtime="20201116 13:25:40.090" starttime="20201116 13:25:40.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:40.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:40.091" starttime="20201116 13:25:40.091"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:40.092" starttime="20201116 13:25:40.082"></status>
</kw>
<msg timestamp="20201116 13:25:40.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:40.092" starttime="20201116 13:25:40.082"></status>
</kw>
<msg timestamp="20201116 13:25:40.092" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201116 13:25:40.092" starttime="20201116 13:25:40.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 13:25:40.093" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 13:25:40.094" starttime="20201116 13:25:40.092"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:40.098" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:40.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:40.124" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:25:40.124" starttime="20201116 13:25:40.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:40.125" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:25:40.125" starttime="20201116 13:25:40.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:40.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:40.125" starttime="20201116 13:25:40.125"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:40.126" starttime="20201116 13:25:40.095"></status>
</kw>
<msg timestamp="20201116 13:25:40.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:40.126" starttime="20201116 13:25:40.095"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:40.126" starttime="20201116 13:25:40.094"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:40.126" starttime="20201116 13:25:40.094"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:40.126" starttime="20201116 13:25:40.081"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:25:40.126" critical="yes" starttime="20201116 13:25:40.080"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 13:25:40.127" starttime="20201116 13:25:40.032"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:31.150" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:24:31.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:24:31.152" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201116 13:24:31.152" starttime="20201116 13:24:31.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:24:31.153" level="INFO">om</msg>
<status status="PASS" endtime="20201116 13:24:31.153" starttime="20201116 13:24:31.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:24:31.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:24:31.153" starttime="20201116 13:24:31.153"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:31.154" starttime="20201116 13:24:31.145"></status>
</kw>
<msg timestamp="20201116 13:24:31.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:24:31.154" starttime="20201116 13:24:31.145"></status>
</kw>
<msg timestamp="20201116 13:24:31.154" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201116 13:24:31.154" starttime="20201116 13:24:31.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 13:24:31.155" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 13:24:31.155" starttime="20201116 13:24:31.154"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:24:31.159" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:24:31.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:24:31.175" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 13:24:31.175" starttime="20201116 13:24:31.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:24:31.176" level="INFO"></msg>
<status status="PASS" endtime="20201116 13:24:31.176" starttime="20201116 13:24:31.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:24:31.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:24:31.177" starttime="20201116 13:24:31.176"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:31.177" starttime="20201116 13:24:31.156"></status>
</kw>
<msg timestamp="20201116 13:24:31.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:24:31.177" starttime="20201116 13:24:31.156"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:31.178" starttime="20201116 13:24:31.155"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:31.178" starttime="20201116 13:24:31.155"></status>
</kw>
<status status="PASS" endtime="20201116 13:24:31.178" starttime="20201116 13:24:31.143"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 13:24:31.178" critical="yes" starttime="20201116 13:24:31.142"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 13:24:31.179" starttime="20201116 13:24:31.092"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:27:22.660" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:27:22.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:27:22.665" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:22.665" starttime="20201116 13:27:22.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:27:22.666" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:22.666" starttime="20201116 13:27:22.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:27:22.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:27:22.667" starttime="20201116 13:27:22.666"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:22.667" starttime="20201116 13:27:22.654"></status>
</kw>
<msg timestamp="20201116 13:27:22.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:27:22.667" starttime="20201116 13:27:22.653"></status>
</kw>
<msg timestamp="20201116 13:27:22.668" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:22.668" starttime="20201116 13:27:22.653"></status>
</kw>
<msg timestamp="20201116 13:27:22.668" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:22.668" starttime="20201116 13:27:22.652"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:27:22.672" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:27:22.672" starttime="20201116 13:27:22.672"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:27:22.673" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:27:22.673" starttime="20201116 13:27:22.673"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:22.673" starttime="20201116 13:27:22.670"></status>
</kw>
<msg timestamp="20201116 13:27:22.673" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:27:22.673" starttime="20201116 13:27:22.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:27:22.674" starttime="20201116 13:27:22.674"></status>
</kw>
<msg timestamp="20201116 13:27:22.674" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:27:22.674" starttime="20201116 13:27:22.674"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:22.675" starttime="20201116 13:27:22.669"></status>
</kw>
<msg timestamp="20201116 13:27:22.675" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:27:22.675" starttime="20201116 13:27:22.669"></status>
</kw>
<msg timestamp="20201116 13:27:22.675" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:27:22.675" starttime="20201116 13:27:22.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:27:22.682" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:27:58.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:27:58.353" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:27:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:27:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:27:58.353" starttime="20201116 13:27:22.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:27:58.354" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:27:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:27:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:27:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:27:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:27:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0993B9AA9FFE-&gt;5ee9fc43-0bb7-47e1-bfdf-dc90c613a905
2020-11-16 13:27:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:27:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:27:29 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 13:27:29 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533249622, maxDate=1606138049622, sequenceNumber=3, masterKeyId=2))
2020-11-16 13:27:29 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 df f4 89 dd 2e 38 e5 e7 a6 aa df 2e 40 03 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:27:29 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533249622, maxDate=1606138049622, sequenceNumber=3, masterKeyId=2)
2020-11-16 13:27:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:27:30 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:27:30 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:27:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605533024218_0003
2020-11-16 13:27:30 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533249622, maxDate=1606138049622, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 df f4 89 dd 2e 38 e5 e7 a6 aa df 2e 40 03 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:27:30 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:27:30 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:27:30 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:27:31 INFO  YarnClientImpl:329 - Submitted application application_1605533024218_0003
2020-11-16 13:27:31 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605533024218_0003/
2020-11-16 13:27:31 INFO  Job:1619 - Running job: job_1605533024218_0003
2020-11-16 13:27:38 INFO  Job:1640 - Job job_1605533024218_0003 running in uber mode : false
2020-11-16 13:27:38 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:27:48 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:27:50 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:27:51 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:27:54 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:27:57 INFO  Job:1658 - Job job_1605533024218_0003 completed successfully
2020-11-16 13:27:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065769
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43404
		Total time spent by all reduces in occupied slots (ms)=7962
		Total time spent by all map tasks (ms)=21702
		Total time spent by all reduce tasks (ms)=3981
		Total vcore-milliseconds taken by all map tasks=21702
		Total vcore-milliseconds taken by all reduce tasks=3981
		Total megabyte-milliseconds taken by all map tasks=44445696
		Total megabyte-milliseconds taken by all reduce tasks=8153088
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1047
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1472057344
		Virtual memory (bytes) snapshot=14057721856
		Total committed heap usage (bytes)=1252524032
		Peak Map Physical memory (bytes)=396967936
		Peak Map Virtual memory (bytes)=3512143872
		Peak Reduce Physical memory (bytes)=299945984
		Peak Reduce Virtual memory (bytes)=3526184960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.711 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:27:58.354" starttime="20201116 13:27:58.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:27:58.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:27:58.355" starttime="20201116 13:27:58.354"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.355" starttime="20201116 13:27:22.677"></status>
</kw>
<msg timestamp="20201116 13:27:58.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:27:58.355" starttime="20201116 13:27:22.677"></status>
</kw>
<msg timestamp="20201116 13:27:58.356" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:27:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:27:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:27:58.356" starttime="20201116 13:27:22.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:27:58.356" starttime="20201116 13:27:58.356"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:27:58.357" critical="yes" starttime="20201116 13:27:22.652"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:27:58.362" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:27:58.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:27:58.368" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:58.368" starttime="20201116 13:27:58.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:27:58.369" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:58.369" starttime="20201116 13:27:58.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:27:58.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:27:58.370" starttime="20201116 13:27:58.369"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.370" starttime="20201116 13:27:58.359"></status>
</kw>
<msg timestamp="20201116 13:27:58.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:27:58.370" starttime="20201116 13:27:58.359"></status>
</kw>
<msg timestamp="20201116 13:27:58.370" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:58.370" starttime="20201116 13:27:58.358"></status>
</kw>
<msg timestamp="20201116 13:27:58.370" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:27:58.370" starttime="20201116 13:27:58.358"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:27:58.371" level="INFO">${random} = 85</msg>
<status status="PASS" endtime="20201116 13:27:58.371" starttime="20201116 13:27:58.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:27:58.375" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:27:58.375" starttime="20201116 13:27:58.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:27:58.375" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:27:58.375" starttime="20201116 13:27:58.375"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.376" starttime="20201116 13:27:58.374"></status>
</kw>
<msg timestamp="20201116 13:27:58.376" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:27:58.376" starttime="20201116 13:27:58.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 13:27:58.377" starttime="20201116 13:27:58.376"></status>
</kw>
<msg timestamp="20201116 13:27:58.377" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 13:27:58.377" starttime="20201116 13:27:58.376"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.377" starttime="20201116 13:27:58.372"></status>
</kw>
<msg timestamp="20201116 13:27:58.377" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:27:58.377" starttime="20201116 13:27:58.372"></status>
</kw>
<msg timestamp="20201116 13:27:58.378" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 13:27:58.378" starttime="20201116 13:27:58.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:27:58.381" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:27:58.381" starttime="20201116 13:27:58.380"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:27:58.381" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:27:58.382" starttime="20201116 13:27:58.381"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.382" starttime="20201116 13:27:58.380"></status>
</kw>
<msg timestamp="20201116 13:27:58.382" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:27:58.382" starttime="20201116 13:27:58.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:27:58.383" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 13:27:58.383" starttime="20201116 13:27:58.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:27:58.384" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 13:27:58.384" starttime="20201116 13:27:58.383"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.384" starttime="20201116 13:27:58.382"></status>
</kw>
<msg timestamp="20201116 13:27:58.384" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 13:27:58.384" starttime="20201116 13:27:58.382"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.385" starttime="20201116 13:27:58.379"></status>
</kw>
<msg timestamp="20201116 13:27:58.385" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:27:58.385" starttime="20201116 13:27:58.378"></status>
</kw>
<msg timestamp="20201116 13:27:58.385" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 13:27:58.385" starttime="20201116 13:27:58.378"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 13:27:58.388" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 13:27:58.388" starttime="20201116 13:27:58.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:27:58.389" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 13:27:58.389" starttime="20201116 13:27:58.388"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.389" starttime="20201116 13:27:58.387"></status>
</kw>
<msg timestamp="20201116 13:27:58.389" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 13:27:58.389" starttime="20201116 13:27:58.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:27:58.390" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 13:27:58.391" starttime="20201116 13:27:58.390"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:27:58.391" level="INFO">${result} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:27:58.391" starttime="20201116 13:27:58.391"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.391" starttime="20201116 13:27:58.390"></status>
</kw>
<msg timestamp="20201116 13:27:58.391" level="INFO">${path_with_leading} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:27:58.391" starttime="20201116 13:27:58.389"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:58.392" starttime="20201116 13:27:58.386"></status>
</kw>
<msg timestamp="20201116 13:27:58.392" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:27:58.392" starttime="20201116 13:27:58.386"></status>
</kw>
<msg timestamp="20201116 13:27:58.392" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201116 13:27:58.392" starttime="20201116 13:27:58.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:27:58.395" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-85.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:28:30.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:28:30.326" level="INFO">${output} = 2020-11-16 13:28:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:28:00 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
20...</msg>
<status status="PASS" endtime="20201116 13:28:30.326" starttime="20201116 13:27:58.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:28:30.327" level="INFO">2020-11-16 13:28:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:28:00 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 13:28:00 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533280720, maxDate=1606138080720, sequenceNumber=4, masterKeyId=2))
2020-11-16 13:28:00 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee d2 f6 89 dd 2e 38 ee da a8 aa df 2e 40 04 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:28:00 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533280720, maxDate=1606138080720, sequenceNumber=4, masterKeyId=2)
2020-11-16 13:28:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:28:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:28:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:28:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:28:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:28:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-88986D697C34-&gt;5ee9fc43-0bb7-47e1-bfdf-dc90c613a905
2020-11-16 13:28:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:28:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:28:04 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:28:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605533024218_0004
2020-11-16 13:28:04 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533280720, maxDate=1606138080720, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee d2 f6 89 dd 2e 38 ee da a8 aa df 2e 40 04 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:28:04 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:28:04 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:28:04 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:28:05 INFO  YarnClientImpl:329 - Submitted application application_1605533024218_0004
2020-11-16 13:28:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605533024218_0004/
2020-11-16 13:28:05 INFO  Job:1619 - Running job: job_1605533024218_0004
2020-11-16 13:28:13 INFO  Job:1640 - Job job_1605533024218_0004 running in uber mode : false
2020-11-16 13:28:13 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:28:22 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:28:24 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:28:25 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:28:29 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:28:29 INFO  Job:1658 - Job job_1605533024218_0004 completed successfully
2020-11-16 13:28:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128119
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46230
		Total time spent by all reduces in occupied slots (ms)=7450
		Total time spent by all map tasks (ms)=23115
		Total time spent by all reduce tasks (ms)=3725
		Total vcore-milliseconds taken by all map tasks=23115
		Total vcore-milliseconds taken by all reduce tasks=3725
		Total megabyte-milliseconds taken by all map tasks=47339520
		Total megabyte-milliseconds taken by all reduce tasks=7628800
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1461
		CPU time spent (ms)=7810
		Physical memory (bytes) snapshot=1522405376
		Virtual memory (bytes) snapshot=14038900736
		Total committed heap usage (bytes)=1415577600
		Peak Map Physical memory (bytes)=538750976
		Peak Map Virtual memory (bytes)=3510964224
		Peak Reduce Physical memory (bytes)=272752640
		Peak Reduce Virtual memory (bytes)=3509657600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:28:30.327" starttime="20201116 13:28:30.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:28:30.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:28:30.328" starttime="20201116 13:28:30.328"></status>
</kw>
<status status="PASS" endtime="20201116 13:28:30.328" starttime="20201116 13:27:58.393"></status>
</kw>
<msg timestamp="20201116 13:28:30.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:28:30.329" starttime="20201116 13:27:58.393"></status>
</kw>
<msg timestamp="20201116 13:28:30.329" level="INFO">${output} = 2020-11-16 13:28:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:28:00 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
20...</msg>
<status status="PASS" endtime="20201116 13:28:30.329" starttime="20201116 13:27:58.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:28:30.330" starttime="20201116 13:28:30.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:28:30.330" starttime="20201116 13:28:30.330"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:28:30.330" critical="yes" starttime="20201116 13:27:58.357"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:28:30.332" starttime="20201116 13:27:22.599"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:56.593" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:25:56.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:25:56.601" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:25:56.601" starttime="20201116 13:25:56.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:25:56.602" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:25:56.602" starttime="20201116 13:25:56.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:25:56.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:25:56.603" starttime="20201116 13:25:56.603"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:56.604" starttime="20201116 13:25:56.589"></status>
</kw>
<msg timestamp="20201116 13:25:56.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:25:56.604" starttime="20201116 13:25:56.589"></status>
</kw>
<msg timestamp="20201116 13:25:56.604" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:25:56.604" starttime="20201116 13:25:56.588"></status>
</kw>
<msg timestamp="20201116 13:25:56.604" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:25:56.605" starttime="20201116 13:25:56.588"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:25:56.611" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:25:56.611" starttime="20201116 13:25:56.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:25:56.611" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:25:56.611" starttime="20201116 13:25:56.611"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:56.612" starttime="20201116 13:25:56.608"></status>
</kw>
<msg timestamp="20201116 13:25:56.612" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:25:56.612" starttime="20201116 13:25:56.607"></status>
</kw>
<status status="PASS" endtime="20201116 13:25:56.612" starttime="20201116 13:25:56.606"></status>
</kw>
<msg timestamp="20201116 13:25:56.612" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:25:56.612" starttime="20201116 13:25:56.606"></status>
</kw>
<msg timestamp="20201116 13:25:56.612" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:25:56.612" starttime="20201116 13:25:56.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:25:56.617" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:26:33.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:26:33.381" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:25:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:25:58 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:26:33.381" starttime="20201116 13:25:56.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:26:33.382" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:25:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:25:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:25:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:25:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:25:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5B5C9774BA21-&gt;5ee9fc43-0bb7-47e1-bfdf-dc90c613a905
2020-11-16 13:25:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 13:26:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:26:00 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 13:26:00 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533160896, maxDate=1606137960896, sequenceNumber=1, masterKeyId=2))
2020-11-16 13:26:00 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a4 a9 ef 89 dd 2e 38 a4 b1 a1 aa df 2e 40 01 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:26:01 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533160896, maxDate=1606137960896, sequenceNumber=1, masterKeyId=2)
2020-11-16 13:26:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:26:01 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:26:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605533024218_0001
2020-11-16 13:26:01 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533160896, maxDate=1606137960896, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a4 a9 ef 89 dd 2e 38 a4 b1 a1 aa df 2e 40 01 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:26:02 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:26:02 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:26:02 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:26:03 INFO  YarnClientImpl:329 - Submitted application application_1605533024218_0001
2020-11-16 13:26:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605533024218_0001/
2020-11-16 13:26:03 INFO  Job:1619 - Running job: job_1605533024218_0001
2020-11-16 13:26:15 INFO  Job:1640 - Job job_1605533024218_0001 running in uber mode : false
2020-11-16 13:26:15 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:26:24 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:26:26 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:26:27 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:26:31 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:26:32 INFO  Job:1658 - Job job_1605533024218_0001 completed successfully
2020-11-16 13:26:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065973
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43234
		Total time spent by all reduces in occupied slots (ms)=8402
		Total time spent by all map tasks (ms)=21617
		Total time spent by all reduce tasks (ms)=4201
		Total vcore-milliseconds taken by all map tasks=21617
		Total vcore-milliseconds taken by all reduce tasks=4201
		Total megabyte-milliseconds taken by all map tasks=44271616
		Total megabyte-milliseconds taken by all reduce tasks=8603648
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1172
		CPU time spent (ms)=7370
		Physical memory (bytes) snapshot=1377755136
		Virtual memory (bytes) snapshot=14049497088
		Total committed heap usage (bytes)=1132462080
		Peak Map Physical memory (bytes)=386928640
		Peak Map Virtual memory (bytes)=3513233408
		Peak Reduce Physical memory (bytes)=294514688
		Peak Reduce Virtual memory (bytes)=3526963200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.547 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 13:26:33.382" starttime="20201116 13:26:33.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:26:33.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:26:33.383" starttime="20201116 13:26:33.382"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.383" starttime="20201116 13:25:56.613"></status>
</kw>
<msg timestamp="20201116 13:26:33.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:26:33.384" starttime="20201116 13:25:56.613"></status>
</kw>
<msg timestamp="20201116 13:26:33.384" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 13:25:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:25:58 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 13:26:33.384" starttime="20201116 13:25:56.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:26:33.384" starttime="20201116 13:26:33.384"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:26:33.385" critical="yes" starttime="20201116 13:25:56.587"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:26:33.390" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:26:33.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:26:33.396" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:26:33.396" starttime="20201116 13:26:33.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:26:33.397" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:26:33.397" starttime="20201116 13:26:33.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:26:33.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:26:33.397" starttime="20201116 13:26:33.397"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.398" starttime="20201116 13:26:33.387"></status>
</kw>
<msg timestamp="20201116 13:26:33.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:26:33.398" starttime="20201116 13:26:33.387"></status>
</kw>
<msg timestamp="20201116 13:26:33.398" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:26:33.398" starttime="20201116 13:26:33.387"></status>
</kw>
<msg timestamp="20201116 13:26:33.398" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 13:26:33.398" starttime="20201116 13:26:33.386"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 13:26:33.399" level="INFO">${random} = 96</msg>
<status status="PASS" endtime="20201116 13:26:33.399" starttime="20201116 13:26:33.398"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:26:33.402" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:26:33.402" starttime="20201116 13:26:33.402"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:26:33.403" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:26:33.403" starttime="20201116 13:26:33.403"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.403" starttime="20201116 13:26:33.402"></status>
</kw>
<msg timestamp="20201116 13:26:33.404" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:26:33.404" starttime="20201116 13:26:33.401"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.404" starttime="20201116 13:26:33.400"></status>
</kw>
<msg timestamp="20201116 13:26:33.404" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:26:33.404" starttime="20201116 13:26:33.400"></status>
</kw>
<msg timestamp="20201116 13:26:33.404" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 13:26:33.404" starttime="20201116 13:26:33.399"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:26:33.407" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:26:33.407" starttime="20201116 13:26:33.407"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:26:33.408" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:26:33.408" starttime="20201116 13:26:33.408"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.408" starttime="20201116 13:26:33.407"></status>
</kw>
<msg timestamp="20201116 13:26:33.408" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:26:33.409" starttime="20201116 13:26:33.406"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.409" starttime="20201116 13:26:33.406"></status>
</kw>
<msg timestamp="20201116 13:26:33.409" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:26:33.409" starttime="20201116 13:26:33.405"></status>
</kw>
<msg timestamp="20201116 13:26:33.409" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 13:26:33.409" starttime="20201116 13:26:33.404"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 13:26:33.412" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 13:26:33.412" starttime="20201116 13:26:33.412"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 13:26:33.413" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 13:26:33.413" starttime="20201116 13:26:33.413"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.413" starttime="20201116 13:26:33.411"></status>
</kw>
<msg timestamp="20201116 13:26:33.413" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 13:26:33.413" starttime="20201116 13:26:33.411"></status>
</kw>
<status status="PASS" endtime="20201116 13:26:33.414" starttime="20201116 13:26:33.410"></status>
</kw>
<msg timestamp="20201116 13:26:33.414" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-96.txt</msg>
<status status="PASS" endtime="20201116 13:26:33.414" starttime="20201116 13:26:33.410"></status>
</kw>
<msg timestamp="20201116 13:26:33.414" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-96.txt</msg>
<status status="PASS" endtime="20201116 13:26:33.414" starttime="20201116 13:26:33.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 13:26:33.418" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-96.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 13:27:05.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 13:27:05.645" level="INFO">${output} = 2020-11-16 13:26:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:26:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
20...</msg>
<status status="PASS" endtime="20201116 13:27:05.645" starttime="20201116 13:26:33.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 13:27:05.646" level="INFO">2020-11-16 13:26:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:26:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 13:26:35 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533195887, maxDate=1606137995887, sequenceNumber=2, masterKeyId=2))
2020-11-16 13:26:35 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 91 bc f1 89 dd 2e 38 91 c4 a3 aa df 2e 40 02 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 13:26:35 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533195887, maxDate=1606137995887, sequenceNumber=2, masterKeyId=2)
2020-11-16 13:26:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 13:26:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 13:26:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 13:26:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 13:26:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 13:26:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9DC786CAF407-&gt;5ee9fc43-0bb7-47e1-bfdf-dc90c613a905
2020-11-16 13:26:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 13:26:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 13:26:37 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 13:26:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605533024218_0002
2020-11-16 13:26:38 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605533195887, maxDate=1606137995887, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 91 bc f1 89 dd 2e 38 91 c4 a3 aa df 2e 40 02 48 01 5a 0d 33 31 37 33 36 31 34 39 31 37 37 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-16 13:26:38 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 13:26:38 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 13:26:38 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 13:26:39 INFO  YarnClientImpl:329 - Submitted application application_1605533024218_0002
2020-11-16 13:26:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605533024218_0002/
2020-11-16 13:26:39 INFO  Job:1619 - Running job: job_1605533024218_0002
2020-11-16 13:26:48 INFO  Job:1640 - Job job_1605533024218_0002 running in uber mode : false
2020-11-16 13:26:48 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 13:26:58 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 13:26:59 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 13:27:00 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 13:27:04 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 13:27:05 INFO  Job:1658 - Job job_1605533024218_0002 completed successfully
2020-11-16 13:27:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128203
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45384
		Total time spent by all reduces in occupied slots (ms)=7564
		Total time spent by all map tasks (ms)=22692
		Total time spent by all reduce tasks (ms)=3782
		Total vcore-milliseconds taken by all map tasks=22692
		Total vcore-milliseconds taken by all reduce tasks=3782
		Total megabyte-milliseconds taken by all map tasks=46473216
		Total megabyte-milliseconds taken by all reduce tasks=7745536
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1564
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1511649280
		Virtual memory (bytes) snapshot=14031663104
		Total committed heap usage (bytes)=1357381632
		Peak Map Physical memory (bytes)=509579264
		Peak Map Virtual memory (bytes)=3508244480
		Peak Reduce Physical memory (bytes)=296398848
		Peak Reduce Virtual memory (bytes)=3528470528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 13:27:05.647" starttime="20201116 13:27:05.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 13:27:05.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 13:27:05.647" starttime="20201116 13:27:05.647"></status>
</kw>
<status status="PASS" endtime="20201116 13:27:05.648" starttime="20201116 13:26:33.415"></status>
</kw>
<msg timestamp="20201116 13:27:05.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 13:27:05.648" starttime="20201116 13:26:33.415"></status>
</kw>
<msg timestamp="20201116 13:27:05.648" level="INFO">${output} = 2020-11-16 13:26:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-16 13:26:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
20...</msg>
<status status="PASS" endtime="20201116 13:27:05.648" starttime="20201116 13:26:33.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 13:27:05.649" starttime="20201116 13:27:05.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 13:27:05.649" starttime="20201116 13:27:05.649"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 13:27:05.650" critical="yes" starttime="20201116 13:26:33.385"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 13:27:05.651" starttime="20201116 13:25:56.536"></status>
</suite>
<status status="PASS" elapsedtime="193880" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
