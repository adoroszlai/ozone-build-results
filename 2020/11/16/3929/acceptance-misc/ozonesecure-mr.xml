<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 17:51:57.438" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:26.067" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:30.958" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 17:47:30.958" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:30.958" starttime="20201116 17:47:26.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:30.960" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:47:30.960" starttime="20201116 17:47:30.959"></status>
</kw>
<msg timestamp="20201116 17:47:30.960" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:30.960" starttime="20201116 17:47:26.060"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:30.967" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:35.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:35.425" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:35.425" starttime="20201116 17:47:30.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:35.427" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:47:35.427" starttime="20201116 17:47:35.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:35.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:35.428" starttime="20201116 17:47:35.427"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:35.428" starttime="20201116 17:47:30.963"></status>
</kw>
<msg timestamp="20201116 17:47:35.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:35.428" starttime="20201116 17:47:30.963"></status>
</kw>
<msg timestamp="20201116 17:47:35.428" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:35.429" starttime="20201116 17:47:30.962"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:35.429" starttime="20201116 17:47:35.429"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:35.429" starttime="20201116 17:47:30.961"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:35.430" starttime="20201116 17:47:30.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:35.435" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:40.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:40.090" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:40.090" starttime="20201116 17:47:35.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:40.098" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:47:40.098" starttime="20201116 17:47:40.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:40.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:40.099" starttime="20201116 17:47:40.098"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:40.100" starttime="20201116 17:47:35.432"></status>
</kw>
<msg timestamp="20201116 17:47:40.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:40.100" starttime="20201116 17:47:35.431"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:40.100" starttime="20201116 17:47:35.431"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:40.100" starttime="20201116 17:47:35.430"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:40.101" starttime="20201116 17:47:35.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:40.101" starttime="20201116 17:47:40.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:40.106" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:44.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:44.371" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:44.371" starttime="20201116 17:47:40.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:44.372" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:47:39.720Z",
  "modificationTime" : "2020-11-16T17:47:39.720Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 17:47:44.372" starttime="20201116 17:47:44.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:44.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:44.373" starttime="20201116 17:47:44.372"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:44.373" starttime="20201116 17:47:40.103"></status>
</kw>
<msg timestamp="20201116 17:47:44.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:44.373" starttime="20201116 17:47:40.102"></status>
</kw>
<msg timestamp="20201116 17:47:44.374" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:44.374" starttime="20201116 17:47:40.102"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:44.374" starttime="20201116 17:47:44.374"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:47:44.379" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:47:44.379" starttime="20201116 17:47:44.379"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:47:44.380" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:47:44.380" starttime="20201116 17:47:44.380"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:44.380" starttime="20201116 17:47:44.378"></status>
</kw>
<msg timestamp="20201116 17:47:44.381" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:47:44.381" starttime="20201116 17:47:44.377"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:44.381" starttime="20201116 17:47:44.377"></status>
</kw>
<msg timestamp="20201116 17:47:44.381" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:47:44.381" starttime="20201116 17:47:44.376"></status>
</kw>
<msg timestamp="20201116 17:47:44.382" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:47:44.382" starttime="20201116 17:47:44.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:44.387" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:48.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:48.556" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:48.556" starttime="20201116 17:47:44.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:48.558" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:47:48.558" starttime="20201116 17:47:48.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:48.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:48.559" starttime="20201116 17:47:48.558"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:48.559" starttime="20201116 17:47:44.383"></status>
</kw>
<msg timestamp="20201116 17:47:48.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:48.559" starttime="20201116 17:47:44.382"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:48.560" starttime="20201116 17:47:44.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:48.564" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:58.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:58.478" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:47:58.478" starttime="20201116 17:47:48.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:58.479" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:47:58.479" starttime="20201116 17:47:58.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:58.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:58.480" starttime="20201116 17:47:58.480"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:58.480" starttime="20201116 17:47:48.561"></status>
</kw>
<msg timestamp="20201116 17:47:58.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:58.481" starttime="20201116 17:47:48.561"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:58.481" starttime="20201116 17:47:48.560"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:58.486" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:04.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:04.835" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:48:04.835" starttime="20201116 17:47:58.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:04.836" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:48:04.836" starttime="20201116 17:48:04.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:04.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:04.838" starttime="20201116 17:48:04.837"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:04.838" starttime="20201116 17:47:58.482"></status>
</kw>
<msg timestamp="20201116 17:48:04.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:04.838" starttime="20201116 17:47:58.482"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:04.839" starttime="20201116 17:47:58.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:04.843" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:11.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:11.303" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:48:11.303" starttime="20201116 17:48:04.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:11.305" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:48:11.305" starttime="20201116 17:48:11.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:11.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:11.305" starttime="20201116 17:48:11.305"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:11.306" starttime="20201116 17:48:04.840"></status>
</kw>
<msg timestamp="20201116 17:48:11.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:11.306" starttime="20201116 17:48:04.840"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:11.306" starttime="20201116 17:48:04.839"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:48:11.307" critical="yes" starttime="20201116 17:47:26.059"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:48:11.313" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:48:11.313" starttime="20201116 17:48:11.312"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:11.314" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:48:11.314" starttime="20201116 17:48:11.313"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:11.314" starttime="20201116 17:48:11.312"></status>
</kw>
<msg timestamp="20201116 17:48:11.314" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:48:11.314" starttime="20201116 17:48:11.311"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:11.314" starttime="20201116 17:48:11.310"></status>
</kw>
<msg timestamp="20201116 17:48:11.314" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:48:11.315" starttime="20201116 17:48:11.309"></status>
</kw>
<msg timestamp="20201116 17:48:11.315" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:48:11.315" starttime="20201116 17:48:11.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:11.320" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:15.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:15.399" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:48:15.399" starttime="20201116 17:48:11.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:15.400" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:48:15.401" starttime="20201116 17:48:15.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:15.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:15.401" starttime="20201116 17:48:15.401"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:15.402" starttime="20201116 17:48:11.316"></status>
</kw>
<msg timestamp="20201116 17:48:15.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:15.402" starttime="20201116 17:48:11.316"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:15.402" starttime="20201116 17:48:11.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:15.408" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:19.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:19.617" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 17:48:19.617" starttime="20201116 17:48:15.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:19.618" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 17:48:19.618" starttime="20201116 17:48:19.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:19.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:19.619" starttime="20201116 17:48:19.619"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:19.619" starttime="20201116 17:48:15.404"></status>
</kw>
<msg timestamp="20201116 17:48:19.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:19.620" starttime="20201116 17:48:15.403"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:19.620" starttime="20201116 17:48:15.403"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:48:19.620" critical="yes" starttime="20201116 17:48:11.308"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 17:48:19.622" starttime="20201116 17:47:25.989"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:50:22.179" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:50:22.179" starttime="20201116 17:50:22.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:50:22.180" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:50:22.180" starttime="20201116 17:50:22.180"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:22.180" starttime="20201116 17:50:22.178"></status>
</kw>
<msg timestamp="20201116 17:50:22.180" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:50:22.181" starttime="20201116 17:50:22.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:50:22.182" starttime="20201116 17:50:22.181"></status>
</kw>
<msg timestamp="20201116 17:50:22.182" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:50:22.182" starttime="20201116 17:50:22.181"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:22.182" starttime="20201116 17:50:22.177"></status>
</kw>
<msg timestamp="20201116 17:50:22.183" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:50:22.183" starttime="20201116 17:50:22.176"></status>
</kw>
<msg timestamp="20201116 17:50:22.183" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:50:22.183" starttime="20201116 17:50:22.175"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:50:22.184" level="INFO">${random} = 35350</msg>
<status status="PASS" endtime="20201116 17:50:22.184" starttime="20201116 17:50:22.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:50:22.191" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-35350 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:50:26.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:50:26.705" level="INFO">${output} = 2020-11-16 17:50:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:50:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:50:26.705" starttime="20201116 17:50:22.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:50:26.706" level="INFO">2020-11-16 17:50:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:50:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:50:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:50:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:50:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A11865B0A771-&gt;801f46ab-720a-4138-98d4-45a1dfede4d8
2020-11-16 17:50:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:50:26.706" starttime="20201116 17:50:26.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:50:26.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:50:26.707" starttime="20201116 17:50:26.707"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:26.707" starttime="20201116 17:50:22.185"></status>
</kw>
<msg timestamp="20201116 17:50:26.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:50:26.708" starttime="20201116 17:50:22.185"></status>
</kw>
<msg timestamp="20201116 17:50:26.708" level="INFO">${result} = 2020-11-16 17:50:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:50:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:50:26.708" starttime="20201116 17:50:22.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:50:26.719" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:50:29.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:50:29.137" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:47 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:50 ofs://om/volume1/bucket1/ozone-35350
-rw-...</msg>
<status status="PASS" endtime="20201116 17:50:29.137" starttime="20201116 17:50:26.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:50:29.138" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:47 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:50 ofs://om/volume1/bucket1/ozone-35350
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:48 ofs://om/volume1/bucket1/ozone-40036
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:48 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:49 ofs://om/volume1/bucket1/wordcount-81.txt</msg>
<status status="PASS" endtime="20201116 17:50:29.138" starttime="20201116 17:50:29.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:50:29.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:50:29.139" starttime="20201116 17:50:29.138"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:29.139" starttime="20201116 17:50:26.710"></status>
</kw>
<msg timestamp="20201116 17:50:29.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:50:29.140" starttime="20201116 17:50:26.710"></status>
</kw>
<msg timestamp="20201116 17:50:29.140" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:47 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:50 ofs://om/volume1/bucket1/ozone-35350
-rw-...</msg>
<status status="PASS" endtime="20201116 17:50:29.140" starttime="20201116 17:50:26.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:50:29.142" starttime="20201116 17:50:29.140"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:50:29.142" critical="yes" starttime="20201116 17:50:22.174"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:50:29.143" starttime="20201116 17:50:22.100"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:48:41.192" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:48:41.192" starttime="20201116 17:48:41.191"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:41.192" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:48:41.192" starttime="20201116 17:48:41.192"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:41.193" starttime="20201116 17:48:41.191"></status>
</kw>
<msg timestamp="20201116 17:48:41.193" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:48:41.193" starttime="20201116 17:48:41.190"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:41.193" starttime="20201116 17:48:41.189"></status>
</kw>
<msg timestamp="20201116 17:48:41.193" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:48:41.193" starttime="20201116 17:48:41.189"></status>
</kw>
<msg timestamp="20201116 17:48:41.194" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:48:41.194" starttime="20201116 17:48:41.188"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:48:41.194" level="INFO">${random} = 40036</msg>
<status status="PASS" endtime="20201116 17:48:41.194" starttime="20201116 17:48:41.194"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:41.200" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-40036 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:45.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:45.867" level="INFO">${output} = 2020-11-16 17:48:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:48:45.867" starttime="20201116 17:48:41.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:45.868" level="INFO">2020-11-16 17:48:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:48:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:48:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:48:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AADFB795910A-&gt;801f46ab-720a-4138-98d4-45a1dfede4d8
2020-11-16 17:48:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:48:45.868" starttime="20201116 17:48:45.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:45.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:45.869" starttime="20201116 17:48:45.869"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:45.869" starttime="20201116 17:48:41.195"></status>
</kw>
<msg timestamp="20201116 17:48:45.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:45.870" starttime="20201116 17:48:41.195"></status>
</kw>
<msg timestamp="20201116 17:48:45.873" level="INFO">${result} = 2020-11-16 17:48:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:48:45.873" starttime="20201116 17:48:41.194"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:45.886" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:48.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:48.242" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:47 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:48 o3fs://bucket1.volume1.om/ozone-40036
dr...</msg>
<status status="PASS" endtime="20201116 17:48:48.242" starttime="20201116 17:48:45.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:48.243" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:47 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:48 o3fs://bucket1.volume1.om/ozone-40036
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:48 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:48:48.243" starttime="20201116 17:48:48.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:48.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:48.244" starttime="20201116 17:48:48.243"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:48.244" starttime="20201116 17:48:45.877"></status>
</kw>
<msg timestamp="20201116 17:48:48.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:48.245" starttime="20201116 17:48:45.875"></status>
</kw>
<msg timestamp="20201116 17:48:48.245" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:47 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:48 o3fs://bucket1.volume1.om/ozone-40036
dr...</msg>
<status status="PASS" endtime="20201116 17:48:48.245" starttime="20201116 17:48:45.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:48:48.246" starttime="20201116 17:48:48.245"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:48:48.246" critical="yes" starttime="20201116 17:48:41.187"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:48:48.247" starttime="20201116 17:48:41.120"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:35.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:35.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:35.232" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201116 17:48:35.232" starttime="20201116 17:48:35.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:35.244" level="INFO">rm</msg>
<status status="PASS" endtime="20201116 17:48:35.244" starttime="20201116 17:48:35.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:35.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:35.245" starttime="20201116 17:48:35.244"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:35.246" starttime="20201116 17:48:35.224"></status>
</kw>
<msg timestamp="20201116 17:48:35.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:35.246" starttime="20201116 17:48:35.224"></status>
</kw>
<msg timestamp="20201116 17:48:35.246" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201116 17:48:35.246" starttime="20201116 17:48:35.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 17:48:35.248" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 17:48:35.248" starttime="20201116 17:48:35.246"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:35.252" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:35.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:35.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:48:35.282" starttime="20201116 17:48:35.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:35.283" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:48:35.284" starttime="20201116 17:48:35.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:35.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:35.284" starttime="20201116 17:48:35.284"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:35.285" starttime="20201116 17:48:35.249"></status>
</kw>
<msg timestamp="20201116 17:48:35.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:35.285" starttime="20201116 17:48:35.249"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:35.285" starttime="20201116 17:48:35.248"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:35.285" starttime="20201116 17:48:35.248"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:35.285" starttime="20201116 17:48:35.223"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:48:35.286" critical="yes" starttime="20201116 17:48:35.222"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 17:48:35.287" starttime="20201116 17:48:35.160"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:20.165" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:20.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:20.167" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201116 17:47:20.167" starttime="20201116 17:47:20.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:20.169" level="INFO">om</msg>
<status status="PASS" endtime="20201116 17:47:20.169" starttime="20201116 17:47:20.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:20.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:20.170" starttime="20201116 17:47:20.170"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:20.171" starttime="20201116 17:47:20.159"></status>
</kw>
<msg timestamp="20201116 17:47:20.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:20.171" starttime="20201116 17:47:20.158"></status>
</kw>
<msg timestamp="20201116 17:47:20.171" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201116 17:47:20.171" starttime="20201116 17:47:20.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 17:47:20.172" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 17:47:20.172" starttime="20201116 17:47:20.172"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:20.177" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:20.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:20.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:47:20.191" starttime="20201116 17:47:20.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:20.192" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:47:20.192" starttime="20201116 17:47:20.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:20.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:20.193" starttime="20201116 17:47:20.192"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:20.193" starttime="20201116 17:47:20.174"></status>
</kw>
<msg timestamp="20201116 17:47:20.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:20.193" starttime="20201116 17:47:20.174"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:20.193" starttime="20201116 17:47:20.173"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:20.193" starttime="20201116 17:47:20.172"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:20.194" starttime="20201116 17:47:20.157"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:47:20.194" critical="yes" starttime="20201116 17:47:20.156"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 17:47:20.195" starttime="20201116 17:47:20.091"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:50:35.117" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:50:35.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:50:35.123" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:50:35.123" starttime="20201116 17:50:35.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:50:35.125" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:50:35.125" starttime="20201116 17:50:35.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:50:35.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:50:35.126" starttime="20201116 17:50:35.125"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:35.126" starttime="20201116 17:50:35.113"></status>
</kw>
<msg timestamp="20201116 17:50:35.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:50:35.126" starttime="20201116 17:50:35.112"></status>
</kw>
<msg timestamp="20201116 17:50:35.127" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:50:35.127" starttime="20201116 17:50:35.112"></status>
</kw>
<msg timestamp="20201116 17:50:35.127" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:50:35.127" starttime="20201116 17:50:35.111"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:50:35.133" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:50:35.133" starttime="20201116 17:50:35.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:50:35.134" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:50:35.134" starttime="20201116 17:50:35.133"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:35.134" starttime="20201116 17:50:35.131"></status>
</kw>
<msg timestamp="20201116 17:50:35.134" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:50:35.134" starttime="20201116 17:50:35.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:50:35.135" starttime="20201116 17:50:35.135"></status>
</kw>
<msg timestamp="20201116 17:50:35.135" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:50:35.135" starttime="20201116 17:50:35.134"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:35.136" starttime="20201116 17:50:35.129"></status>
</kw>
<msg timestamp="20201116 17:50:35.136" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:50:35.136" starttime="20201116 17:50:35.128"></status>
</kw>
<msg timestamp="20201116 17:50:35.136" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:50:35.136" starttime="20201116 17:50:35.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:50:35.141" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:51:12.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:51:12.018" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:50:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:50:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:51:12.019" starttime="20201116 17:50:35.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:51:12.020" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:50:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:50:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:50:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:50:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:50:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A5D0A9E512A4-&gt;801f46ab-720a-4138-98d4-45a1dfede4d8
2020-11-16 17:50:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:50:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:50:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 17:50:39 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605549039796, maxDate=1606153839796, sequenceNumber=3, masterKeyId=2))
2020-11-16 17:50:39 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 c0 b8 91 dd 2e 38 99 c8 ea b1 df 2e 40 03 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 17:50:39 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605549039796, maxDate=1606153839796, sequenceNumber=3, masterKeyId=2)
2020-11-16 17:50:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:50:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:50:40 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:50:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548793063_0003
2020-11-16 17:50:40 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 c0 b8 91 dd 2e 38 99 c8 ea b1 df 2e 40 03 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605549039796, maxDate=1606153839796, sequenceNumber=3, masterKeyId=2)]
2020-11-16 17:50:41 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:50:41 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:50:41 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 17:50:41 INFO  YarnClientImpl:329 - Submitted application application_1605548793063_0003
2020-11-16 17:50:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548793063_0003/
2020-11-16 17:50:41 INFO  Job:1619 - Running job: job_1605548793063_0003
2020-11-16 17:50:50 INFO  Job:1640 - Job job_1605548793063_0003 running in uber mode : false
2020-11-16 17:50:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:51:02 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:51:04 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:51:10 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:51:11 INFO  Job:1658 - Job job_1605548793063_0003 completed successfully
2020-11-16 17:51:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065757
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57280
		Total time spent by all reduces in occupied slots (ms)=9002
		Total time spent by all map tasks (ms)=28640
		Total time spent by all reduce tasks (ms)=4501
		Total vcore-milliseconds taken by all map tasks=28640
		Total vcore-milliseconds taken by all reduce tasks=4501
		Total megabyte-milliseconds taken by all map tasks=58654720
		Total megabyte-milliseconds taken by all reduce tasks=9218048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1138
		CPU time spent (ms)=9070
		Physical memory (bytes) snapshot=1396228096
		Virtual memory (bytes) snapshot=14066839552
		Total committed heap usage (bytes)=1174405120
		Peak Map Physical memory (bytes)=389087232
		Peak Map Virtual memory (bytes)=3512827904
		Peak Reduce Physical memory (bytes)=300191744
		Peak Reduce Virtual memory (bytes)=3532058624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.226 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:51:12.020" starttime="20201116 17:51:12.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:51:12.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:51:12.021" starttime="20201116 17:51:12.021"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.021" starttime="20201116 17:50:35.138"></status>
</kw>
<msg timestamp="20201116 17:51:12.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:51:12.022" starttime="20201116 17:50:35.137"></status>
</kw>
<msg timestamp="20201116 17:51:12.022" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:50:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:50:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:51:12.022" starttime="20201116 17:50:35.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:51:12.023" starttime="20201116 17:51:12.023"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:51:12.023" critical="yes" starttime="20201116 17:50:35.110"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:51:12.030" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:51:12.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:51:12.037" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:51:12.037" starttime="20201116 17:51:12.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:51:12.038" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:51:12.038" starttime="20201116 17:51:12.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:51:12.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:51:12.039" starttime="20201116 17:51:12.038"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.039" starttime="20201116 17:51:12.027"></status>
</kw>
<msg timestamp="20201116 17:51:12.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:51:12.039" starttime="20201116 17:51:12.027"></status>
</kw>
<msg timestamp="20201116 17:51:12.040" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:51:12.040" starttime="20201116 17:51:12.026"></status>
</kw>
<msg timestamp="20201116 17:51:12.040" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:51:12.040" starttime="20201116 17:51:12.025"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:51:12.041" level="INFO">${random} = 37</msg>
<status status="PASS" endtime="20201116 17:51:12.041" starttime="20201116 17:51:12.040"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:51:12.046" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:51:12.046" starttime="20201116 17:51:12.045"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:51:12.047" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:51:12.047" starttime="20201116 17:51:12.046"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.048" starttime="20201116 17:51:12.045"></status>
</kw>
<msg timestamp="20201116 17:51:12.048" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:51:12.048" starttime="20201116 17:51:12.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:51:12.049" starttime="20201116 17:51:12.049"></status>
</kw>
<msg timestamp="20201116 17:51:12.049" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:51:12.049" starttime="20201116 17:51:12.048"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.050" starttime="20201116 17:51:12.043"></status>
</kw>
<msg timestamp="20201116 17:51:12.050" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:51:12.050" starttime="20201116 17:51:12.042"></status>
</kw>
<msg timestamp="20201116 17:51:12.050" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:51:12.050" starttime="20201116 17:51:12.041"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:51:12.054" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:51:12.054" starttime="20201116 17:51:12.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:51:12.055" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:51:12.055" starttime="20201116 17:51:12.054"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.055" starttime="20201116 17:51:12.053"></status>
</kw>
<msg timestamp="20201116 17:51:12.055" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:51:12.055" starttime="20201116 17:51:12.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:51:12.057" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 17:51:12.057" starttime="20201116 17:51:12.056"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:51:12.058" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 17:51:12.058" starttime="20201116 17:51:12.057"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.058" starttime="20201116 17:51:12.056"></status>
</kw>
<msg timestamp="20201116 17:51:12.058" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 17:51:12.058" starttime="20201116 17:51:12.055"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.059" starttime="20201116 17:51:12.051"></status>
</kw>
<msg timestamp="20201116 17:51:12.059" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:51:12.059" starttime="20201116 17:51:12.051"></status>
</kw>
<msg timestamp="20201116 17:51:12.059" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:51:12.059" starttime="20201116 17:51:12.050"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:51:12.063" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:51:12.063" starttime="20201116 17:51:12.063"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:51:12.064" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:51:12.064" starttime="20201116 17:51:12.063"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.064" starttime="20201116 17:51:12.062"></status>
</kw>
<msg timestamp="20201116 17:51:12.064" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:51:12.064" starttime="20201116 17:51:12.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:51:12.066" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 17:51:12.066" starttime="20201116 17:51:12.066"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:51:12.067" level="INFO">${result} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 17:51:12.067" starttime="20201116 17:51:12.066"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.067" starttime="20201116 17:51:12.065"></status>
</kw>
<msg timestamp="20201116 17:51:12.068" level="INFO">${path_with_leading} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 17:51:12.068" starttime="20201116 17:51:12.065"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:12.068" starttime="20201116 17:51:12.061"></status>
</kw>
<msg timestamp="20201116 17:51:12.068" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 17:51:12.068" starttime="20201116 17:51:12.060"></status>
</kw>
<msg timestamp="20201116 17:51:12.068" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201116 17:51:12.069" starttime="20201116 17:51:12.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:51:12.073" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-37.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:51:48.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:51:48.003" level="INFO">${output} = 2020-11-16 17:51:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:51:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201116 17:51:48.003" starttime="20201116 17:51:12.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:51:48.004" level="INFO">2020-11-16 17:51:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:51:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 17:51:15 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605549074968, maxDate=1606153874968, sequenceNumber=4, masterKeyId=2))
2020-11-16 17:51:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9d d3 ba 91 dd 2e 38 9d db ec b1 df 2e 40 04 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 17:51:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605549074968, maxDate=1606153874968, sequenceNumber=4, masterKeyId=2)
2020-11-16 17:51:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:51:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:51:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:51:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:51:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:51:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8A79F380C51D-&gt;801f46ab-720a-4138-98d4-45a1dfede4d8
2020-11-16 17:51:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:51:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:51:17 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:51:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548793063_0004
2020-11-16 17:51:17 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9d d3 ba 91 dd 2e 38 9d db ec b1 df 2e 40 04 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605549074968, maxDate=1606153874968, sequenceNumber=4, masterKeyId=2)]
2020-11-16 17:51:18 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:51:18 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:51:18 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 17:51:18 INFO  YarnClientImpl:329 - Submitted application application_1605548793063_0004
2020-11-16 17:51:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548793063_0004/
2020-11-16 17:51:19 INFO  Job:1619 - Running job: job_1605548793063_0004
2020-11-16 17:51:27 INFO  Job:1640 - Job job_1605548793063_0004 running in uber mode : false
2020-11-16 17:51:27 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:51:39 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:51:41 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:51:42 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:51:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:51:47 INFO  Job:1658 - Job job_1605548793063_0004 completed successfully
2020-11-16 17:51:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128115
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57652
		Total time spent by all reduces in occupied slots (ms)=9052
		Total time spent by all map tasks (ms)=28826
		Total time spent by all reduce tasks (ms)=4526
		Total vcore-milliseconds taken by all map tasks=28826
		Total vcore-milliseconds taken by all reduce tasks=4526
		Total megabyte-milliseconds taken by all map tasks=59035648
		Total megabyte-milliseconds taken by all reduce tasks=9269248
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1758
		CPU time spent (ms)=9700
		Physical memory (bytes) snapshot=1600876544
		Virtual memory (bytes) snapshot=14057533440
		Total committed heap usage (bytes)=1376256000
		Peak Map Physical memory (bytes)=534544384
		Peak Map Virtual memory (bytes)=3510996992
		Peak Reduce Physical memory (bytes)=294391808
		Peak Reduce Virtual memory (bytes)=3528675328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:51:48.005" starttime="20201116 17:51:48.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:51:48.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:51:48.005" starttime="20201116 17:51:48.005"></status>
</kw>
<status status="PASS" endtime="20201116 17:51:48.006" starttime="20201116 17:51:12.070"></status>
</kw>
<msg timestamp="20201116 17:51:48.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:51:48.006" starttime="20201116 17:51:12.069"></status>
</kw>
<msg timestamp="20201116 17:51:48.007" level="INFO">${output} = 2020-11-16 17:51:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:51:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201116 17:51:48.007" starttime="20201116 17:51:12.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:51:48.007" starttime="20201116 17:51:48.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:51:48.008" starttime="20201116 17:51:48.007"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:51:48.008" critical="yes" starttime="20201116 17:51:12.024"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:51:48.010" starttime="20201116 17:50:35.041"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:54.380" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:54.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:54.388" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:54.388" starttime="20201116 17:48:54.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:54.389" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:54.389" starttime="20201116 17:48:54.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:54.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:54.390" starttime="20201116 17:48:54.389"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:54.390" starttime="20201116 17:48:54.373"></status>
</kw>
<msg timestamp="20201116 17:48:54.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:54.391" starttime="20201116 17:48:54.373"></status>
</kw>
<msg timestamp="20201116 17:48:54.391" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:54.391" starttime="20201116 17:48:54.372"></status>
</kw>
<msg timestamp="20201116 17:48:54.391" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:54.391" starttime="20201116 17:48:54.372"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:48:54.397" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:48:54.397" starttime="20201116 17:48:54.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:54.399" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:48:54.399" starttime="20201116 17:48:54.398"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:54.399" starttime="20201116 17:48:54.394"></status>
</kw>
<msg timestamp="20201116 17:48:54.399" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:48:54.399" starttime="20201116 17:48:54.394"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:54.399" starttime="20201116 17:48:54.393"></status>
</kw>
<msg timestamp="20201116 17:48:54.400" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:48:54.400" starttime="20201116 17:48:54.392"></status>
</kw>
<msg timestamp="20201116 17:48:54.400" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:48:54.400" starttime="20201116 17:48:54.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:54.405" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:49:37.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:49:37.474" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:48:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:49:37.474" starttime="20201116 17:48:54.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:49:37.475" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:48:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:48:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:48:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:48:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7B541992E662-&gt;801f46ab-720a-4138-98d4-45a1dfede4d8
2020-11-16 17:48:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:48:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:48:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 17:48:59 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605548939693, maxDate=1606153739693, sequenceNumber=1, masterKeyId=2))
2020-11-16 17:48:59 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 b0 b2 91 dd 2e 38 e5 b8 e4 b1 df 2e 40 01 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 17:48:59 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605548939693, maxDate=1606153739693, sequenceNumber=1, masterKeyId=2)
2020-11-16 17:49:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:49:00 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:49:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548793063_0001
2020-11-16 17:49:00 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 b0 b2 91 dd 2e 38 e5 b8 e4 b1 df 2e 40 01 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605548939693, maxDate=1606153739693, sequenceNumber=1, masterKeyId=2)]
2020-11-16 17:49:01 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:49:01 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:49:01 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 17:49:02 INFO  YarnClientImpl:329 - Submitted application application_1605548793063_0001
2020-11-16 17:49:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548793063_0001/
2020-11-16 17:49:03 INFO  Job:1619 - Running job: job_1605548793063_0001
2020-11-16 17:49:15 INFO  Job:1640 - Job job_1605548793063_0001 running in uber mode : false
2020-11-16 17:49:15 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:49:27 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:49:28 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:49:29 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:49:35 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:49:36 INFO  Job:1658 - Job job_1605548793063_0001 completed successfully
2020-11-16 17:49:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065969
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54474
		Total time spent by all reduces in occupied slots (ms)=9000
		Total time spent by all map tasks (ms)=27237
		Total time spent by all reduce tasks (ms)=4500
		Total vcore-milliseconds taken by all map tasks=27237
		Total vcore-milliseconds taken by all reduce tasks=4500
		Total megabyte-milliseconds taken by all map tasks=55781376
		Total megabyte-milliseconds taken by all reduce tasks=9216000
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1253
		CPU time spent (ms)=8600
		Physical memory (bytes) snapshot=1362329600
		Virtual memory (bytes) snapshot=14064984064
		Total committed heap usage (bytes)=1144520704
		Peak Map Physical memory (bytes)=374296576
		Peak Map Virtual memory (bytes)=3512594432
		Peak Reduce Physical memory (bytes)=304148480
		Peak Reduce Virtual memory (bytes)=3529580544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.974 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:49:37.475" starttime="20201116 17:49:37.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:49:37.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:49:37.476" starttime="20201116 17:49:37.476"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.477" starttime="20201116 17:48:54.401"></status>
</kw>
<msg timestamp="20201116 17:49:37.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:49:37.477" starttime="20201116 17:48:54.401"></status>
</kw>
<msg timestamp="20201116 17:49:37.477" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:48:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:49:37.478" starttime="20201116 17:48:54.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:49:37.478" starttime="20201116 17:49:37.478"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:49:37.478" critical="yes" starttime="20201116 17:48:54.371"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:49:37.486" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:49:37.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:49:37.493" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:49:37.493" starttime="20201116 17:49:37.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:49:37.496" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:49:37.496" starttime="20201116 17:49:37.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:49:37.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:49:37.498" starttime="20201116 17:49:37.497"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.498" starttime="20201116 17:49:37.482"></status>
</kw>
<msg timestamp="20201116 17:49:37.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:49:37.498" starttime="20201116 17:49:37.481"></status>
</kw>
<msg timestamp="20201116 17:49:37.499" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:49:37.499" starttime="20201116 17:49:37.481"></status>
</kw>
<msg timestamp="20201116 17:49:37.499" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:49:37.499" starttime="20201116 17:49:37.480"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:49:37.500" level="INFO">${random} = 81</msg>
<status status="PASS" endtime="20201116 17:49:37.500" starttime="20201116 17:49:37.499"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:49:37.505" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:49:37.505" starttime="20201116 17:49:37.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:49:37.506" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:49:37.506" starttime="20201116 17:49:37.505"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.506" starttime="20201116 17:49:37.504"></status>
</kw>
<msg timestamp="20201116 17:49:37.506" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:49:37.506" starttime="20201116 17:49:37.503"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.506" starttime="20201116 17:49:37.502"></status>
</kw>
<msg timestamp="20201116 17:49:37.506" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:49:37.507" starttime="20201116 17:49:37.501"></status>
</kw>
<msg timestamp="20201116 17:49:37.507" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:49:37.507" starttime="20201116 17:49:37.500"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:49:37.511" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:49:37.511" starttime="20201116 17:49:37.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:49:37.512" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:49:37.512" starttime="20201116 17:49:37.511"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.512" starttime="20201116 17:49:37.510"></status>
</kw>
<msg timestamp="20201116 17:49:37.512" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:49:37.512" starttime="20201116 17:49:37.509"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.513" starttime="20201116 17:49:37.509"></status>
</kw>
<msg timestamp="20201116 17:49:37.513" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:49:37.513" starttime="20201116 17:49:37.508"></status>
</kw>
<msg timestamp="20201116 17:49:37.513" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:49:37.513" starttime="20201116 17:49:37.507"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:49:37.518" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:49:37.518" starttime="20201116 17:49:37.517"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:49:37.518" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:49:37.518" starttime="20201116 17:49:37.518"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.519" starttime="20201116 17:49:37.516"></status>
</kw>
<msg timestamp="20201116 17:49:37.519" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:49:37.519" starttime="20201116 17:49:37.516"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:37.519" starttime="20201116 17:49:37.515"></status>
</kw>
<msg timestamp="20201116 17:49:37.519" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-81.txt</msg>
<status status="PASS" endtime="20201116 17:49:37.519" starttime="20201116 17:49:37.514"></status>
</kw>
<msg timestamp="20201116 17:49:37.520" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-81.txt</msg>
<status status="PASS" endtime="20201116 17:49:37.520" starttime="20201116 17:49:37.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:49:37.525" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-81.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:50:15.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:50:15.315" level="INFO">${output} = 2020-11-16 17:49:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:49:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201116 17:50:15.315" starttime="20201116 17:49:37.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:50:15.316" level="INFO">2020-11-16 17:49:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:49:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-16 17:49:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605548980587, maxDate=1606153780587, sequenceNumber=2, masterKeyId=2))
2020-11-16 17:49:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc f1 b4 91 dd 2e 38 fc f9 e6 b1 df 2e 40 02 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 17:49:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605548980587, maxDate=1606153780587, sequenceNumber=2, masterKeyId=2)
2020-11-16 17:49:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:49:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:49:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:49:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:49:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:49:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CA2075165812-&gt;801f46ab-720a-4138-98d4-45a1dfede4d8
2020-11-16 17:49:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:49:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:49:42 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:49:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548793063_0002
2020-11-16 17:49:43 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc f1 b4 91 dd 2e 38 fc f9 e6 b1 df 2e 40 02 48 01 5a 0d 33 33 37 35 34 39 30 32 38 39 30 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605548980587, maxDate=1606153780587, sequenceNumber=2, masterKeyId=2)]
2020-11-16 17:49:44 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:49:44 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:49:44 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 17:49:45 INFO  YarnClientImpl:329 - Submitted application application_1605548793063_0002
2020-11-16 17:49:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548793063_0002/
2020-11-16 17:49:45 INFO  Job:1619 - Running job: job_1605548793063_0002
2020-11-16 17:49:54 INFO  Job:1640 - Job job_1605548793063_0002 running in uber mode : false
2020-11-16 17:49:54 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:50:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:50:07 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:50:08 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:50:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:50:14 INFO  Job:1658 - Job job_1605548793063_0002 completed successfully
2020-11-16 17:50:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128199
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55660
		Total time spent by all reduces in occupied slots (ms)=8608
		Total time spent by all map tasks (ms)=27830
		Total time spent by all reduce tasks (ms)=4304
		Total vcore-milliseconds taken by all map tasks=27830
		Total vcore-milliseconds taken by all reduce tasks=4304
		Total megabyte-milliseconds taken by all map tasks=56995840
		Total megabyte-milliseconds taken by all reduce tasks=8814592
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1620
		CPU time spent (ms)=8790
		Physical memory (bytes) snapshot=1571491840
		Virtual memory (bytes) snapshot=14026768384
		Total committed heap usage (bytes)=1426587648
		Peak Map Physical memory (bytes)=515182592
		Peak Map Virtual memory (bytes)=3509116928
		Peak Reduce Physical memory (bytes)=285409280
		Peak Reduce Virtual memory (bytes)=3520929792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:50:15.316" starttime="20201116 17:50:15.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:50:15.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:50:15.317" starttime="20201116 17:50:15.317"></status>
</kw>
<status status="PASS" endtime="20201116 17:50:15.317" starttime="20201116 17:49:37.521"></status>
</kw>
<msg timestamp="20201116 17:50:15.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:50:15.318" starttime="20201116 17:49:37.521"></status>
</kw>
<msg timestamp="20201116 17:50:15.318" level="INFO">${output} = 2020-11-16 17:49:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-16 17:49:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201116 17:50:15.318" starttime="20201116 17:49:37.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:50:15.319" starttime="20201116 17:50:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:50:15.319" starttime="20201116 17:50:15.319"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:50:15.320" critical="yes" starttime="20201116 17:49:37.479"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:50:15.321" starttime="20201116 17:48:54.306"></status>
</suite>
<status status="PASS" elapsedtime="222018" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
