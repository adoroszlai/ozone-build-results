<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 17:31:45.952" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:16:48.297" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:16:52.182" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 17:16:52.182" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:16:52.182" starttime="20201116 17:16:48.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:16:52.183" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:16:52.183" starttime="20201116 17:16:52.183"></status>
</kw>
<msg timestamp="20201116 17:16:52.184" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:16:52.184" starttime="20201116 17:16:48.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:16:52.191" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:16:54.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:16:54.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:16:54.802" starttime="20201116 17:16:52.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:16:54.804" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:16:54.804" starttime="20201116 17:16:54.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:16:54.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:16:54.805" starttime="20201116 17:16:54.804"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:54.805" starttime="20201116 17:16:52.186"></status>
</kw>
<msg timestamp="20201116 17:16:54.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:16:54.805" starttime="20201116 17:16:52.186"></status>
</kw>
<msg timestamp="20201116 17:16:54.806" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 17:16:54.806" starttime="20201116 17:16:52.185"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 17:16:54.806" starttime="20201116 17:16:54.806"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:54.806" starttime="20201116 17:16:52.185"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:54.806" starttime="20201116 17:16:52.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:16:54.812" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:16:57.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:16:57.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:16:57.095" starttime="20201116 17:16:54.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:16:57.096" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:16:57.096" starttime="20201116 17:16:57.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:16:57.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:16:57.097" starttime="20201116 17:16:57.096"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:57.097" starttime="20201116 17:16:54.809"></status>
</kw>
<msg timestamp="20201116 17:16:57.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:16:57.098" starttime="20201116 17:16:54.808"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:57.098" starttime="20201116 17:16:54.808"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:57.098" starttime="20201116 17:16:54.807"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:57.098" starttime="20201116 17:16:54.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 17:16:57.099" starttime="20201116 17:16:57.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:16:57.105" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:16:59.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:16:59.566" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:16:57.051Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:16:59.566" starttime="20201116 17:16:57.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:16:59.567" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:16:57.051Z",
  "modificationTime" : "2020-11-16T17:16:57.051Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 17:16:59.567" starttime="20201116 17:16:59.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:16:59.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:16:59.568" starttime="20201116 17:16:59.568"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:59.569" starttime="20201116 17:16:57.102"></status>
</kw>
<msg timestamp="20201116 17:16:59.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:16:59.569" starttime="20201116 17:16:57.101"></status>
</kw>
<msg timestamp="20201116 17:16:59.569" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:16:57.051Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:16:59.569" starttime="20201116 17:16:57.099"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 17:16:59.570" starttime="20201116 17:16:59.570"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:16:59.575" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:16:59.575" starttime="20201116 17:16:59.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:16:59.575" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:16:59.575" starttime="20201116 17:16:59.575"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:59.576" starttime="20201116 17:16:59.573"></status>
</kw>
<msg timestamp="20201116 17:16:59.576" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:16:59.576" starttime="20201116 17:16:59.573"></status>
</kw>
<status status="PASS" endtime="20201116 17:16:59.576" starttime="20201116 17:16:59.572"></status>
</kw>
<msg timestamp="20201116 17:16:59.576" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:16:59.576" starttime="20201116 17:16:59.571"></status>
</kw>
<msg timestamp="20201116 17:16:59.577" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:16:59.577" starttime="20201116 17:16:59.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:16:59.582" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:02.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:02.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:17:02.137" starttime="20201116 17:16:59.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:02.138" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:17:02.139" starttime="20201116 17:17:02.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:02.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:02.139" starttime="20201116 17:17:02.139"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:02.140" starttime="20201116 17:16:59.578"></status>
</kw>
<msg timestamp="20201116 17:17:02.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:02.140" starttime="20201116 17:16:59.577"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:02.140" starttime="20201116 17:16:59.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:02.144" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:08.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:08.312" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:17:08.312" starttime="20201116 17:17:02.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:08.313" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:17:08.313" starttime="20201116 17:17:08.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:08.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:08.314" starttime="20201116 17:17:08.314"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:08.315" starttime="20201116 17:17:02.142"></status>
</kw>
<msg timestamp="20201116 17:17:08.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:08.315" starttime="20201116 17:17:02.141"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:08.315" starttime="20201116 17:17:02.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:08.319" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:13.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:13.355" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:17:13.355" starttime="20201116 17:17:08.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:13.356" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:17:13.356" starttime="20201116 17:17:13.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:13.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:13.357" starttime="20201116 17:17:13.356"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:13.357" starttime="20201116 17:17:08.316"></status>
</kw>
<msg timestamp="20201116 17:17:13.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:13.358" starttime="20201116 17:17:08.316"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:13.358" starttime="20201116 17:17:08.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:13.362" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:18.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:18.045" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:17:18.045" starttime="20201116 17:17:13.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:18.046" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:17:18.046" starttime="20201116 17:17:18.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:18.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:18.047" starttime="20201116 17:17:18.046"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:18.047" starttime="20201116 17:17:13.359"></status>
</kw>
<msg timestamp="20201116 17:17:18.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:18.048" starttime="20201116 17:17:13.359"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:18.048" starttime="20201116 17:17:13.358"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:17:18.048" critical="yes" starttime="20201116 17:16:48.289"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:17:18.054" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:17:18.055" starttime="20201116 17:17:18.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:17:18.056" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:17:18.056" starttime="20201116 17:17:18.055"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:18.056" starttime="20201116 17:17:18.053"></status>
</kw>
<msg timestamp="20201116 17:17:18.056" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:17:18.056" starttime="20201116 17:17:18.052"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:18.057" starttime="20201116 17:17:18.051"></status>
</kw>
<msg timestamp="20201116 17:17:18.057" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:17:18.057" starttime="20201116 17:17:18.051"></status>
</kw>
<msg timestamp="20201116 17:17:18.057" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:17:18.058" starttime="20201116 17:17:18.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:18.063" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:20.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:20.655" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:17:20.655" starttime="20201116 17:17:18.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:20.656" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:17:20.656" starttime="20201116 17:17:20.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:20.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:20.657" starttime="20201116 17:17:20.656"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:20.657" starttime="20201116 17:17:18.059"></status>
</kw>
<msg timestamp="20201116 17:17:20.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:20.658" starttime="20201116 17:17:18.058"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:20.658" starttime="20201116 17:17:18.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:20.662" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:23.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:23.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:17:23.092" starttime="20201116 17:17:20.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:23.094" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:17:23.094" starttime="20201116 17:17:23.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:23.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:23.094" starttime="20201116 17:17:23.094"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:23.095" starttime="20201116 17:17:20.659"></status>
</kw>
<msg timestamp="20201116 17:17:23.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:23.095" starttime="20201116 17:17:20.659"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:23.095" starttime="20201116 17:17:20.658"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:17:23.095" critical="yes" starttime="20201116 17:17:18.049"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 17:17:23.098" starttime="20201116 17:16:48.208"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:19:05.258" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:19:05.259" starttime="20201116 17:19:05.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:19:05.259" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:19:05.259" starttime="20201116 17:19:05.259"></status>
</kw>
<status status="PASS" endtime="20201116 17:19:05.259" starttime="20201116 17:19:05.257"></status>
</kw>
<msg timestamp="20201116 17:19:05.260" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:19:05.260" starttime="20201116 17:19:05.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:19:05.261" starttime="20201116 17:19:05.260"></status>
</kw>
<msg timestamp="20201116 17:19:05.261" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:19:05.261" starttime="20201116 17:19:05.260"></status>
</kw>
<status status="PASS" endtime="20201116 17:19:05.261" starttime="20201116 17:19:05.255"></status>
</kw>
<msg timestamp="20201116 17:19:05.261" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:19:05.262" starttime="20201116 17:19:05.255"></status>
</kw>
<msg timestamp="20201116 17:19:05.262" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:19:05.262" starttime="20201116 17:19:05.253"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:19:05.262" level="INFO">${random} = 33913</msg>
<status status="PASS" endtime="20201116 17:19:05.263" starttime="20201116 17:19:05.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:19:05.269" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-33913 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:19:09.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:19:09.169" level="INFO">${output} = 2020-11-16 17:19:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:19:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:19:09.169" starttime="20201116 17:19:05.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:19:09.170" level="INFO">2020-11-16 17:19:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:19:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:19:07 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:19:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:19:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB07D5788949-&gt;b0bea178-b9be-4ad0-93ce-b3f1aafe62b6
2020-11-16 17:19:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:19:09.170" starttime="20201116 17:19:09.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:19:09.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:19:09.171" starttime="20201116 17:19:09.170"></status>
</kw>
<status status="PASS" endtime="20201116 17:19:09.171" starttime="20201116 17:19:05.264"></status>
</kw>
<msg timestamp="20201116 17:19:09.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:19:09.171" starttime="20201116 17:19:05.263"></status>
</kw>
<msg timestamp="20201116 17:19:09.171" level="INFO">${result} = 2020-11-16 17:19:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:19:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:19:09.171" starttime="20201116 17:19:05.263"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:19:09.176" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:19:11.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:19:11.162" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:19 ofs://om/volume1/bucket1/ozone-33913
-rw-...</msg>
<status status="PASS" endtime="20201116 17:19:11.162" starttime="20201116 17:19:09.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:19:11.163" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:19 ofs://om/volume1/bucket1/ozone-33913
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:17 ofs://om/volume1/bucket1/ozone-82070
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:18 ofs://om/volume1/bucket1/wordcount-35.txt</msg>
<status status="PASS" endtime="20201116 17:19:11.164" starttime="20201116 17:19:11.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:19:11.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:19:11.164" starttime="20201116 17:19:11.164"></status>
</kw>
<status status="PASS" endtime="20201116 17:19:11.165" starttime="20201116 17:19:09.174"></status>
</kw>
<msg timestamp="20201116 17:19:11.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:19:11.165" starttime="20201116 17:19:09.173"></status>
</kw>
<msg timestamp="20201116 17:19:11.165" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:19 ofs://om/volume1/bucket1/ozone-33913
-rw-...</msg>
<status status="PASS" endtime="20201116 17:19:11.165" starttime="20201116 17:19:09.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:19:11.166" starttime="20201116 17:19:11.166"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:19:11.166" critical="yes" starttime="20201116 17:19:05.253"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:19:11.167" starttime="20201116 17:19:05.187"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:17:28.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:17:28.386" starttime="20201116 17:17:28.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:17:28.386" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:17:28.386" starttime="20201116 17:17:28.386"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:28.387" starttime="20201116 17:17:28.384"></status>
</kw>
<msg timestamp="20201116 17:17:28.387" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:17:28.387" starttime="20201116 17:17:28.384"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:28.387" starttime="20201116 17:17:28.383"></status>
</kw>
<msg timestamp="20201116 17:17:28.387" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:17:28.387" starttime="20201116 17:17:28.382"></status>
</kw>
<msg timestamp="20201116 17:17:28.387" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:17:28.388" starttime="20201116 17:17:28.381"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:17:28.388" level="INFO">${random} = 82070</msg>
<status status="PASS" endtime="20201116 17:17:28.388" starttime="20201116 17:17:28.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:28.400" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-82070 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:32.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:32.411" level="INFO">${output} = 2020-11-16 17:17:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:17:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:17:32.411" starttime="20201116 17:17:28.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:32.412" level="INFO">2020-11-16 17:17:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:17:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:17:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:17:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:17:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BED57B31F23C-&gt;b0bea178-b9be-4ad0-93ce-b3f1aafe62b6
2020-11-16 17:17:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:17:32.412" starttime="20201116 17:17:32.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:32.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:32.413" starttime="20201116 17:17:32.412"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:32.413" starttime="20201116 17:17:28.389"></status>
</kw>
<msg timestamp="20201116 17:17:32.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:32.413" starttime="20201116 17:17:28.389"></status>
</kw>
<msg timestamp="20201116 17:17:32.414" level="INFO">${result} = 2020-11-16 17:17:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:17:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:17:32.414" starttime="20201116 17:17:28.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:32.419" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:34.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:34.570" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:17 o3fs://bucket1.volume1.om/ozone-82070
dr...</msg>
<status status="PASS" endtime="20201116 17:17:34.570" starttime="20201116 17:17:32.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:34.572" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:17 o3fs://bucket1.volume1.om/ozone-82070
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:17:34.572" starttime="20201116 17:17:34.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:34.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:34.572" starttime="20201116 17:17:34.572"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:34.573" starttime="20201116 17:17:32.416"></status>
</kw>
<msg timestamp="20201116 17:17:34.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:34.573" starttime="20201116 17:17:32.415"></status>
</kw>
<msg timestamp="20201116 17:17:34.573" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:17 o3fs://bucket1.volume1.om/ozone-82070
dr...</msg>
<status status="PASS" endtime="20201116 17:17:34.573" starttime="20201116 17:17:32.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:17:34.574" starttime="20201116 17:17:34.574"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:17:34.574" critical="yes" starttime="20201116 17:17:28.380"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:17:34.576" starttime="20201116 17:17:28.317"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:19:16.446" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:19:16.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:19:16.449" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:19:16.450" starttime="20201116 17:19:16.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:19:16.451" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:19:16.451" starttime="20201116 17:19:16.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:19:16.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:19:16.451" starttime="20201116 17:19:16.451"></status>
</kw>
<status status="PASS" endtime="20201116 17:19:16.452" starttime="20201116 17:19:16.438"></status>
</kw>
<msg timestamp="20201116 17:19:16.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:19:16.452" starttime="20201116 17:19:16.438"></status>
</kw>
<msg timestamp="20201116 17:19:16.452" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:19:16.453" starttime="20201116 17:19:16.437"></status>
</kw>
<msg timestamp="20201116 17:19:16.453" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:19:16.453" starttime="20201116 17:19:16.437"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:19:16.458" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:19:16.458" starttime="20201116 17:19:16.458"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:19:16.459" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:19:16.459" starttime="20201116 17:19:16.458"></status>
</kw>
<status status="PASS" endtime="20201116 17:19:16.459" starttime="20201116 17:19:16.456"></status>
</kw>
<msg timestamp="20201116 17:19:16.459" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:19:16.460" starttime="20201116 17:19:16.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:19:16.461" starttime="20201116 17:19:16.461"></status>
</kw>
<msg timestamp="20201116 17:19:16.462" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:19:16.462" starttime="20201116 17:19:16.460"></status>
</kw>
<status status="PASS" endtime="20201116 17:19:16.462" starttime="20201116 17:19:16.455"></status>
</kw>
<msg timestamp="20201116 17:19:16.462" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:19:16.462" starttime="20201116 17:19:16.454"></status>
</kw>
<msg timestamp="20201116 17:19:16.463" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:19:16.463" starttime="20201116 17:19:16.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:19:16.467" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:20:03.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:20:03.795" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:19:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:19:18 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:20:03.795" starttime="20201116 17:19:16.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:20:03.796" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:19:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:19:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:19:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:19:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:19:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5D9A69FABDCD-&gt;b0bea178-b9be-4ad0-93ce-b3f1aafe62b6
2020-11-16 17:19:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:19:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:19:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:19:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:19:25 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:19:28 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605546969478_0003
2020-11-16 17:19:28 INFO  YarnClientImpl:273 - Submitted application application_1605546969478_0003
2020-11-16 17:19:28 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605546969478_0003/
2020-11-16 17:19:28 INFO  Job:1339 - Running job: job_1605546969478_0003
2020-11-16 17:19:37 INFO  Job:1360 - Job job_1605546969478_0003 running in uber mode : false
2020-11-16 17:19:37 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:19:44 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:19:50 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:19:55 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:20:02 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:20:03 INFO  Job:1378 - Job job_1605546969478_0003 completed successfully
2020-11-16 17:20:03 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45108
		Total time spent by all reduces in occupied slots (ms)=26852
		Total time spent by all map tasks (ms)=11277
		Total time spent by all reduce tasks (ms)=6713
		Total vcore-milliseconds taken by all map tasks=11277
		Total vcore-milliseconds taken by all reduce tasks=6713
		Total megabyte-milliseconds taken by all map tasks=46190592
		Total megabyte-milliseconds taken by all reduce tasks=27496448
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=607
		CPU time spent (ms)=8300
		Physical memory (bytes) snapshot=1163706368
		Virtual memory (bytes) snapshot=15791501312
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.646 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:20:03.797" starttime="20201116 17:20:03.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:20:03.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:20:03.797" starttime="20201116 17:20:03.797"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.798" starttime="20201116 17:19:16.464"></status>
</kw>
<msg timestamp="20201116 17:20:03.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:20:03.798" starttime="20201116 17:19:16.463"></status>
</kw>
<msg timestamp="20201116 17:20:03.798" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:19:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:19:18 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:20:03.799" starttime="20201116 17:19:16.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:20:03.799" starttime="20201116 17:20:03.799"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:20:03.799" critical="yes" starttime="20201116 17:19:16.436"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:20:03.807" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:20:03.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:20:03.813" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:20:03.813" starttime="20201116 17:20:03.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:20:03.815" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:20:03.815" starttime="20201116 17:20:03.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:20:03.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:20:03.815" starttime="20201116 17:20:03.815"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.816" starttime="20201116 17:20:03.802"></status>
</kw>
<msg timestamp="20201116 17:20:03.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:20:03.816" starttime="20201116 17:20:03.802"></status>
</kw>
<msg timestamp="20201116 17:20:03.816" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:20:03.816" starttime="20201116 17:20:03.802"></status>
</kw>
<msg timestamp="20201116 17:20:03.817" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:20:03.817" starttime="20201116 17:20:03.801"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:20:03.817" level="INFO">${random} = 94</msg>
<status status="PASS" endtime="20201116 17:20:03.817" starttime="20201116 17:20:03.817"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:20:03.823" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:20:03.823" starttime="20201116 17:20:03.822"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:20:03.823" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:20:03.823" starttime="20201116 17:20:03.823"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.824" starttime="20201116 17:20:03.822"></status>
</kw>
<msg timestamp="20201116 17:20:03.824" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:20:03.824" starttime="20201116 17:20:03.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:20:03.825" starttime="20201116 17:20:03.824"></status>
</kw>
<msg timestamp="20201116 17:20:03.825" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:20:03.825" starttime="20201116 17:20:03.824"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.825" starttime="20201116 17:20:03.820"></status>
</kw>
<msg timestamp="20201116 17:20:03.826" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:20:03.826" starttime="20201116 17:20:03.819"></status>
</kw>
<msg timestamp="20201116 17:20:03.826" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:20:03.826" starttime="20201116 17:20:03.818"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:20:03.830" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:20:03.830" starttime="20201116 17:20:03.829"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:20:03.830" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:20:03.830" starttime="20201116 17:20:03.830"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.831" starttime="20201116 17:20:03.829"></status>
</kw>
<msg timestamp="20201116 17:20:03.831" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:20:03.831" starttime="20201116 17:20:03.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:20:03.833" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 17:20:03.833" starttime="20201116 17:20:03.832"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:20:03.834" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 17:20:03.834" starttime="20201116 17:20:03.833"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.834" starttime="20201116 17:20:03.832"></status>
</kw>
<msg timestamp="20201116 17:20:03.834" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 17:20:03.834" starttime="20201116 17:20:03.831"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.834" starttime="20201116 17:20:03.827"></status>
</kw>
<msg timestamp="20201116 17:20:03.835" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:20:03.835" starttime="20201116 17:20:03.827"></status>
</kw>
<msg timestamp="20201116 17:20:03.835" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:20:03.835" starttime="20201116 17:20:03.826"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:20:03.839" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:20:03.839" starttime="20201116 17:20:03.838"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:20:03.839" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:20:03.840" starttime="20201116 17:20:03.839"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.840" starttime="20201116 17:20:03.838"></status>
</kw>
<msg timestamp="20201116 17:20:03.840" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:20:03.840" starttime="20201116 17:20:03.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:20:03.842" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 17:20:03.842" starttime="20201116 17:20:03.841"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:20:03.842" level="INFO">${result} = /wordcount-94.txt</msg>
<status status="PASS" endtime="20201116 17:20:03.842" starttime="20201116 17:20:03.842"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.843" starttime="20201116 17:20:03.841"></status>
</kw>
<msg timestamp="20201116 17:20:03.843" level="INFO">${path_with_leading} = /wordcount-94.txt</msg>
<status status="PASS" endtime="20201116 17:20:03.843" starttime="20201116 17:20:03.840"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:03.843" starttime="20201116 17:20:03.836"></status>
</kw>
<msg timestamp="20201116 17:20:03.843" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-94.txt</msg>
<status status="PASS" endtime="20201116 17:20:03.843" starttime="20201116 17:20:03.836"></status>
</kw>
<msg timestamp="20201116 17:20:03.844" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-94.txt</msg>
<status status="PASS" endtime="20201116 17:20:03.844" starttime="20201116 17:20:03.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:20:03.849" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-94.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:20:41.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:20:41.334" level="INFO">${output} = 2020-11-16 17:20:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:20:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:20:41.335" starttime="20201116 17:20:03.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:20:41.336" level="INFO">2020-11-16 17:20:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:20:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:20:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:20:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:20:06 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:20:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:20:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-99D6B7AD906A-&gt;b0bea178-b9be-4ad0-93ce-b3f1aafe62b6
2020-11-16 17:20:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:20:07 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:20:07 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:20:08 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605546969478_0004
2020-11-16 17:20:08 INFO  YarnClientImpl:273 - Submitted application application_1605546969478_0004
2020-11-16 17:20:08 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605546969478_0004/
2020-11-16 17:20:08 INFO  Job:1339 - Running job: job_1605546969478_0004
2020-11-16 17:20:16 INFO  Job:1360 - Job job_1605546969478_0004 running in uber mode : false
2020-11-16 17:20:16 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:20:23 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:20:29 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:20:34 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:20:39 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:20:40 INFO  Job:1378 - Job job_1605546969478_0004 completed successfully
2020-11-16 17:20:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47324
		Total time spent by all reduces in occupied slots (ms)=16020
		Total time spent by all map tasks (ms)=11831
		Total time spent by all reduce tasks (ms)=4005
		Total vcore-milliseconds taken by all map tasks=11831
		Total vcore-milliseconds taken by all reduce tasks=4005
		Total megabyte-milliseconds taken by all map tasks=48459776
		Total megabyte-milliseconds taken by all reduce tasks=16404480
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=874
		CPU time spent (ms)=8690
		Physical memory (bytes) snapshot=1351770112
		Virtual memory (bytes) snapshot=15787352064
		Total committed heap usage (bytes)=1215823872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:20:41.336" starttime="20201116 17:20:41.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:20:41.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:20:41.337" starttime="20201116 17:20:41.337"></status>
</kw>
<status status="PASS" endtime="20201116 17:20:41.338" starttime="20201116 17:20:03.845"></status>
</kw>
<msg timestamp="20201116 17:20:41.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:20:41.338" starttime="20201116 17:20:03.845"></status>
</kw>
<msg timestamp="20201116 17:20:41.338" level="INFO">${output} = 2020-11-16 17:20:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:20:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:20:41.338" starttime="20201116 17:20:03.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:20:41.339" starttime="20201116 17:20:41.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:20:41.340" starttime="20201116 17:20:41.339"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:20:41.340" critical="yes" starttime="20201116 17:20:03.800"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:20:41.341" starttime="20201116 17:19:16.367"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:40.017" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:17:40.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:17:40.026" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:17:40.026" starttime="20201116 17:17:40.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:17:40.028" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:17:40.028" starttime="20201116 17:17:40.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:17:40.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:17:40.029" starttime="20201116 17:17:40.028"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:40.029" starttime="20201116 17:17:40.012"></status>
</kw>
<msg timestamp="20201116 17:17:40.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:17:40.029" starttime="20201116 17:17:40.012"></status>
</kw>
<msg timestamp="20201116 17:17:40.030" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:17:40.030" starttime="20201116 17:17:40.011"></status>
</kw>
<msg timestamp="20201116 17:17:40.030" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:17:40.030" starttime="20201116 17:17:40.011"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:17:40.035" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:17:40.036" starttime="20201116 17:17:40.035"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:17:40.036" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:17:40.037" starttime="20201116 17:17:40.036"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:40.037" starttime="20201116 17:17:40.033"></status>
</kw>
<msg timestamp="20201116 17:17:40.037" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:17:40.037" starttime="20201116 17:17:40.033"></status>
</kw>
<status status="PASS" endtime="20201116 17:17:40.037" starttime="20201116 17:17:40.032"></status>
</kw>
<msg timestamp="20201116 17:17:40.038" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:17:40.038" starttime="20201116 17:17:40.031"></status>
</kw>
<msg timestamp="20201116 17:17:40.038" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:17:40.038" starttime="20201116 17:17:40.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:17:40.044" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:18:19.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:18:19.990" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:17:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:17:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:18:19.990" starttime="20201116 17:17:40.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:18:19.991" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:17:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:17:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:17:42 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:17:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:17:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-175694693F03-&gt;b0bea178-b9be-4ad0-93ce-b3f1aafe62b6
2020-11-16 17:17:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:17:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:17:44 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:17:44 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:17:44 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605546969478_0001
2020-11-16 17:17:45 INFO  YarnClientImpl:273 - Submitted application application_1605546969478_0001
2020-11-16 17:17:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605546969478_0001/
2020-11-16 17:17:45 INFO  Job:1339 - Running job: job_1605546969478_0001
2020-11-16 17:17:56 INFO  Job:1360 - Job job_1605546969478_0001 running in uber mode : false
2020-11-16 17:17:56 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:18:03 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:18:09 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:18:14 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:18:19 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:18:19 INFO  Job:1378 - Job job_1605546969478_0001 completed successfully
2020-11-16 17:18:19 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45572
		Total time spent by all reduces in occupied slots (ms)=17088
		Total time spent by all map tasks (ms)=11393
		Total time spent by all reduce tasks (ms)=4272
		Total vcore-milliseconds taken by all map tasks=11393
		Total vcore-milliseconds taken by all reduce tasks=4272
		Total megabyte-milliseconds taken by all map tasks=46665728
		Total megabyte-milliseconds taken by all reduce tasks=17498112
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=618
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1129496576
		Virtual memory (bytes) snapshot=15785377792
		Total committed heap usage (bytes)=980418560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.485 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:18:19.992" starttime="20201116 17:18:19.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:18:19.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:18:19.993" starttime="20201116 17:18:19.992"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:19.993" starttime="20201116 17:17:40.039"></status>
</kw>
<msg timestamp="20201116 17:18:19.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:18:19.993" starttime="20201116 17:17:40.039"></status>
</kw>
<msg timestamp="20201116 17:18:19.994" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:17:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:17:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:18:19.994" starttime="20201116 17:17:40.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:18:19.994" starttime="20201116 17:18:19.994"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:18:19.995" critical="yes" starttime="20201116 17:17:40.010"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:18:20.000" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:18:20.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:18:20.006" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:18:20.006" starttime="20201116 17:18:19.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:18:20.007" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:18:20.007" starttime="20201116 17:18:20.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:18:20.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:18:20.008" starttime="20201116 17:18:20.007"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:20.008" starttime="20201116 17:18:19.998"></status>
</kw>
<msg timestamp="20201116 17:18:20.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:18:20.009" starttime="20201116 17:18:19.997"></status>
</kw>
<msg timestamp="20201116 17:18:20.009" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:18:20.009" starttime="20201116 17:18:19.997"></status>
</kw>
<msg timestamp="20201116 17:18:20.009" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:18:20.009" starttime="20201116 17:18:19.996"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:18:20.010" level="INFO">${random} = 35</msg>
<status status="PASS" endtime="20201116 17:18:20.010" starttime="20201116 17:18:20.010"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:18:20.015" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:18:20.015" starttime="20201116 17:18:20.014"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:18:20.015" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:18:20.015" starttime="20201116 17:18:20.015"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:20.016" starttime="20201116 17:18:20.013"></status>
</kw>
<msg timestamp="20201116 17:18:20.016" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:18:20.016" starttime="20201116 17:18:20.013"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:20.016" starttime="20201116 17:18:20.012"></status>
</kw>
<msg timestamp="20201116 17:18:20.016" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:18:20.017" starttime="20201116 17:18:20.011"></status>
</kw>
<msg timestamp="20201116 17:18:20.017" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:18:20.017" starttime="20201116 17:18:20.010"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:18:20.021" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:18:20.021" starttime="20201116 17:18:20.020"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:18:20.021" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:18:20.022" starttime="20201116 17:18:20.021"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:20.022" starttime="20201116 17:18:20.020"></status>
</kw>
<msg timestamp="20201116 17:18:20.022" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:18:20.022" starttime="20201116 17:18:20.019"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:20.023" starttime="20201116 17:18:20.018"></status>
</kw>
<msg timestamp="20201116 17:18:20.023" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:18:20.023" starttime="20201116 17:18:20.018"></status>
</kw>
<msg timestamp="20201116 17:18:20.023" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:18:20.023" starttime="20201116 17:18:20.017"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:18:20.027" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:18:20.027" starttime="20201116 17:18:20.026"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:18:20.028" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:18:20.028" starttime="20201116 17:18:20.027"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:20.028" starttime="20201116 17:18:20.026"></status>
</kw>
<msg timestamp="20201116 17:18:20.028" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:18:20.028" starttime="20201116 17:18:20.025"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:20.028" starttime="20201116 17:18:20.024"></status>
</kw>
<msg timestamp="20201116 17:18:20.029" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201116 17:18:20.029" starttime="20201116 17:18:20.024"></status>
</kw>
<msg timestamp="20201116 17:18:20.029" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201116 17:18:20.029" starttime="20201116 17:18:20.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:18:20.035" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-35.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:18:59.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:18:59.843" level="INFO">${output} = 2020-11-16 17:18:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:18:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:18:59.844" starttime="20201116 17:18:20.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:18:59.845" level="INFO">2020-11-16 17:18:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:18:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:18:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:18:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:18:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:18:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:18:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FF725D47E713-&gt;b0bea178-b9be-4ad0-93ce-b3f1aafe62b6
2020-11-16 17:18:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:18:24 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:18:24 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:18:24 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605546969478_0002
2020-11-16 17:18:24 INFO  YarnClientImpl:273 - Submitted application application_1605546969478_0002
2020-11-16 17:18:24 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605546969478_0002/
2020-11-16 17:18:24 INFO  Job:1339 - Running job: job_1605546969478_0002
2020-11-16 17:18:34 INFO  Job:1360 - Job job_1605546969478_0002 running in uber mode : false
2020-11-16 17:18:34 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:18:41 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:18:46 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:18:51 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:18:56 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:18:59 INFO  Job:1378 - Job job_1605546969478_0002 completed successfully
2020-11-16 17:18:59 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45432
		Total time spent by all reduces in occupied slots (ms)=16600
		Total time spent by all map tasks (ms)=11358
		Total time spent by all reduce tasks (ms)=4150
		Total vcore-milliseconds taken by all map tasks=11358
		Total vcore-milliseconds taken by all reduce tasks=4150
		Total megabyte-milliseconds taken by all map tasks=46522368
		Total megabyte-milliseconds taken by all reduce tasks=16998400
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=8050
		Physical memory (bytes) snapshot=1167228928
		Virtual memory (bytes) snapshot=15785926656
		Total committed heap usage (bytes)=1046478848
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:18:59.845" starttime="20201116 17:18:59.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:18:59.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:18:59.846" starttime="20201116 17:18:59.845"></status>
</kw>
<status status="PASS" endtime="20201116 17:18:59.846" starttime="20201116 17:18:20.030"></status>
</kw>
<msg timestamp="20201116 17:18:59.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:18:59.847" starttime="20201116 17:18:20.030"></status>
</kw>
<msg timestamp="20201116 17:18:59.847" level="INFO">${output} = 2020-11-16 17:18:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-16 17:18:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:18:59.847" starttime="20201116 17:18:20.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:18:59.848" starttime="20201116 17:18:59.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:18:59.852" starttime="20201116 17:18:59.848"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:18:59.852" critical="yes" starttime="20201116 17:18:19.995"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:18:59.853" starttime="20201116 17:17:39.941"></status>
</suite>
<status status="PASS" elapsedtime="212015" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:21:54.056" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:21:56.950" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 17:21:56.951" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:21:56.951" starttime="20201116 17:21:54.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:21:56.952" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:21:56.952" starttime="20201116 17:21:56.951"></status>
</kw>
<msg timestamp="20201116 17:21:56.952" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:21:56.952" starttime="20201116 17:21:54.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:21:56.958" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:21:59.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:21:59.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:21:59.420" starttime="20201116 17:21:56.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:21:59.422" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:21:59.422" starttime="20201116 17:21:59.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:21:59.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:21:59.423" starttime="20201116 17:21:59.422"></status>
</kw>
<status status="PASS" endtime="20201116 17:21:59.423" starttime="20201116 17:21:56.955"></status>
</kw>
<msg timestamp="20201116 17:21:59.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:21:59.423" starttime="20201116 17:21:56.954"></status>
</kw>
<msg timestamp="20201116 17:21:59.424" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 17:21:59.424" starttime="20201116 17:21:56.954"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 17:21:59.424" starttime="20201116 17:21:59.424"></status>
</kw>
<status status="PASS" endtime="20201116 17:21:59.425" starttime="20201116 17:21:56.953"></status>
</kw>
<status status="PASS" endtime="20201116 17:21:59.425" starttime="20201116 17:21:56.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:21:59.430" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:02.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:02.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:22:02.080" starttime="20201116 17:21:59.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:02.081" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:22:02.081" starttime="20201116 17:22:02.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:02.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:02.082" starttime="20201116 17:22:02.081"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:02.082" starttime="20201116 17:21:59.427"></status>
</kw>
<msg timestamp="20201116 17:22:02.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:02.082" starttime="20201116 17:21:59.427"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:02.082" starttime="20201116 17:21:59.426"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:02.083" starttime="20201116 17:21:59.426"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:02.083" starttime="20201116 17:21:59.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 17:22:02.083" starttime="20201116 17:22:02.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:02.088" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:04.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:04.613" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:22:01.932Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:22:04.613" starttime="20201116 17:22:02.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:04.614" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:22:01.932Z",
  "modificationTime" : "2020-11-16T17:22:01.932Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 17:22:04.614" starttime="20201116 17:22:04.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:04.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:04.615" starttime="20201116 17:22:04.615"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:04.616" starttime="20201116 17:22:02.085"></status>
</kw>
<msg timestamp="20201116 17:22:04.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:04.616" starttime="20201116 17:22:02.084"></status>
</kw>
<msg timestamp="20201116 17:22:04.616" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:22:01.932Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:22:04.616" starttime="20201116 17:22:02.083"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 17:22:04.617" starttime="20201116 17:22:04.616"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:22:04.621" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:22:04.622" starttime="20201116 17:22:04.621"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:22:04.622" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:22:04.622" starttime="20201116 17:22:04.622"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:04.622" starttime="20201116 17:22:04.620"></status>
</kw>
<msg timestamp="20201116 17:22:04.623" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:22:04.623" starttime="20201116 17:22:04.620"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:04.623" starttime="20201116 17:22:04.619"></status>
</kw>
<msg timestamp="20201116 17:22:04.623" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:22:04.623" starttime="20201116 17:22:04.618"></status>
</kw>
<msg timestamp="20201116 17:22:04.623" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:22:04.623" starttime="20201116 17:22:04.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:04.629" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:07.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:07.394" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:22:07.394" starttime="20201116 17:22:04.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:07.395" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:22:07.395" starttime="20201116 17:22:07.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:07.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:07.396" starttime="20201116 17:22:07.395"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:07.396" starttime="20201116 17:22:04.624"></status>
</kw>
<msg timestamp="20201116 17:22:07.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:07.396" starttime="20201116 17:22:04.624"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:07.397" starttime="20201116 17:22:04.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:07.402" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:13.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:13.583" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:22:13.583" starttime="20201116 17:22:07.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:13.584" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:22:13.584" starttime="20201116 17:22:13.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:13.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:13.585" starttime="20201116 17:22:13.584"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:13.586" starttime="20201116 17:22:07.398"></status>
</kw>
<msg timestamp="20201116 17:22:13.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:13.586" starttime="20201116 17:22:07.398"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:13.586" starttime="20201116 17:22:07.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:13.590" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:18.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:18.042" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:22:18.042" starttime="20201116 17:22:13.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:18.043" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:22:18.043" starttime="20201116 17:22:18.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:18.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:18.044" starttime="20201116 17:22:18.043"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:18.044" starttime="20201116 17:22:13.587"></status>
</kw>
<msg timestamp="20201116 17:22:18.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:18.045" starttime="20201116 17:22:13.587"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:18.045" starttime="20201116 17:22:13.586"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:18.050" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:22.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:22.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:22:22.595" starttime="20201116 17:22:18.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:22.597" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:22:22.597" starttime="20201116 17:22:22.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:22.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:22.598" starttime="20201116 17:22:22.597"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:22.598" starttime="20201116 17:22:18.047"></status>
</kw>
<msg timestamp="20201116 17:22:22.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:22.598" starttime="20201116 17:22:18.046"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:22.598" starttime="20201116 17:22:18.046"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:22:22.599" critical="yes" starttime="20201116 17:21:54.046"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:22:22.605" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:22:22.605" starttime="20201116 17:22:22.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:22:22.606" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:22:22.606" starttime="20201116 17:22:22.605"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:22.606" starttime="20201116 17:22:22.604"></status>
</kw>
<msg timestamp="20201116 17:22:22.606" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:22:22.606" starttime="20201116 17:22:22.603"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:22.607" starttime="20201116 17:22:22.602"></status>
</kw>
<msg timestamp="20201116 17:22:22.607" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:22:22.607" starttime="20201116 17:22:22.602"></status>
</kw>
<msg timestamp="20201116 17:22:22.607" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:22:22.607" starttime="20201116 17:22:22.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:22.613" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:25.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:25.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:22:25.035" starttime="20201116 17:22:22.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:25.036" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:22:25.036" starttime="20201116 17:22:25.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:25.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:25.037" starttime="20201116 17:22:25.037"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:25.038" starttime="20201116 17:22:22.608"></status>
</kw>
<msg timestamp="20201116 17:22:25.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:25.038" starttime="20201116 17:22:22.608"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:25.038" starttime="20201116 17:22:22.607"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:25.044" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:27.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:27.647" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:22:27.647" starttime="20201116 17:22:25.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:27.649" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:22:27.649" starttime="20201116 17:22:27.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:27.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:27.650" starttime="20201116 17:22:27.649"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:27.650" starttime="20201116 17:22:25.040"></status>
</kw>
<msg timestamp="20201116 17:22:27.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:27.650" starttime="20201116 17:22:25.039"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:27.651" starttime="20201116 17:22:25.038"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:22:27.651" critical="yes" starttime="20201116 17:22:22.600"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 17:22:27.652" starttime="20201116 17:21:53.967"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:24:23.633" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:24:23.633" starttime="20201116 17:24:23.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:24:23.633" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:24:23.634" starttime="20201116 17:24:23.633"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:23.634" starttime="20201116 17:24:23.632"></status>
</kw>
<msg timestamp="20201116 17:24:23.634" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:24:23.634" starttime="20201116 17:24:23.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:24:23.635" starttime="20201116 17:24:23.635"></status>
</kw>
<msg timestamp="20201116 17:24:23.635" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:24:23.635" starttime="20201116 17:24:23.634"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:23.636" starttime="20201116 17:24:23.630"></status>
</kw>
<msg timestamp="20201116 17:24:23.636" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:24:23.636" starttime="20201116 17:24:23.629"></status>
</kw>
<msg timestamp="20201116 17:24:23.636" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:24:23.636" starttime="20201116 17:24:23.628"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:24:23.637" level="INFO">${random} = 31116</msg>
<status status="PASS" endtime="20201116 17:24:23.637" starttime="20201116 17:24:23.636"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:24:23.643" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-31116 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:24:27.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:24:27.660" level="INFO">${output} = 2020-11-16 17:24:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:24:27.660" starttime="20201116 17:24:23.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:24:27.661" level="INFO">2020-11-16 17:24:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:24:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:24:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:24:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:24:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:24:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-82B2B57F9281-&gt;a7472010-beb7-4953-b5fd-6c816e652024
2020-11-16 17:24:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:24:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:24:27.662" starttime="20201116 17:24:27.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:24:27.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:24:27.662" starttime="20201116 17:24:27.662"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:27.663" starttime="20201116 17:24:23.638"></status>
</kw>
<msg timestamp="20201116 17:24:27.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:24:27.663" starttime="20201116 17:24:23.638"></status>
</kw>
<msg timestamp="20201116 17:24:27.663" level="INFO">${result} = 2020-11-16 17:24:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:24:27.663" starttime="20201116 17:24:23.637"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:24:27.669" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:24:29.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:24:29.827" level="INFO">${output} = 2020-11-16 17:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:24:29.827" starttime="20201116 17:24:27.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:24:29.828" level="INFO">2020-11-16 17:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:29 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 17:24 ofs://om/volume1/bucket1/ozone-31116
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 17:22 ofs://om/volume1/bucket1/ozone-40443
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:22 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:23 ofs://om/volume1/bucket1/wordcount-36.txt
2020-11-16 17:24:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:24:29.828" starttime="20201116 17:24:29.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:24:29.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:24:29.829" starttime="20201116 17:24:29.828"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:29.829" starttime="20201116 17:24:27.666"></status>
</kw>
<msg timestamp="20201116 17:24:29.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:24:29.830" starttime="20201116 17:24:27.666"></status>
</kw>
<msg timestamp="20201116 17:24:29.830" level="INFO">${result} = 2020-11-16 17:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:24:29.830" starttime="20201116 17:24:27.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:24:29.831" starttime="20201116 17:24:29.830"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:24:29.831" critical="yes" starttime="20201116 17:24:23.627"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:24:29.832" starttime="20201116 17:24:23.553"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:22:33.065" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:22:33.065" starttime="20201116 17:22:33.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:22:33.067" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:22:33.067" starttime="20201116 17:22:33.065"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:33.067" starttime="20201116 17:22:33.064"></status>
</kw>
<msg timestamp="20201116 17:22:33.067" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:22:33.067" starttime="20201116 17:22:33.063"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:33.067" starttime="20201116 17:22:33.062"></status>
</kw>
<msg timestamp="20201116 17:22:33.068" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:22:33.068" starttime="20201116 17:22:33.061"></status>
</kw>
<msg timestamp="20201116 17:22:33.068" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:22:33.068" starttime="20201116 17:22:33.060"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:22:33.068" level="INFO">${random} = 40443</msg>
<status status="PASS" endtime="20201116 17:22:33.069" starttime="20201116 17:22:33.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:33.074" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-40443 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:37.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:37.259" level="INFO">${output} = 2020-11-16 17:22:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:22:37.259" starttime="20201116 17:22:33.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:37.260" level="INFO">2020-11-16 17:22:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:22:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:22:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:22:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:22:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:22:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3193DC483E48-&gt;a7472010-beb7-4953-b5fd-6c816e652024
2020-11-16 17:22:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:22:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:22:37.260" starttime="20201116 17:22:37.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:37.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:37.261" starttime="20201116 17:22:37.261"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:37.262" starttime="20201116 17:22:33.070"></status>
</kw>
<msg timestamp="20201116 17:22:37.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:37.262" starttime="20201116 17:22:33.069"></status>
</kw>
<msg timestamp="20201116 17:22:37.262" level="INFO">${result} = 2020-11-16 17:22:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:22:37.262" starttime="20201116 17:22:33.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:37.267" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:39.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:39.418" level="INFO">${output} = 2020-11-16 17:22:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:22:39.418" starttime="20201116 17:22:37.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:39.420" level="INFO">2020-11-16 17:22:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:39 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 17:22 o3fs://bucket1.volume1.om/ozone-40443
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:22 o3fs://bucket1.volume1.om/user
2020-11-16 17:22:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:22:39.420" starttime="20201116 17:22:39.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:39.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:39.421" starttime="20201116 17:22:39.420"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:39.421" starttime="20201116 17:22:37.264"></status>
</kw>
<msg timestamp="20201116 17:22:39.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:39.421" starttime="20201116 17:22:37.263"></status>
</kw>
<msg timestamp="20201116 17:22:39.421" level="INFO">${result} = 2020-11-16 17:22:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:22:39.422" starttime="20201116 17:22:37.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:22:39.422" starttime="20201116 17:22:39.422"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:22:39.422" critical="yes" starttime="20201116 17:22:33.057"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:22:39.424" starttime="20201116 17:22:32.987"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:24:35.310" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:24:35.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:24:35.318" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:24:35.318" starttime="20201116 17:24:35.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:24:35.319" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:24:35.319" starttime="20201116 17:24:35.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:24:35.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:24:35.320" starttime="20201116 17:24:35.320"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:35.320" starttime="20201116 17:24:35.295"></status>
</kw>
<msg timestamp="20201116 17:24:35.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:24:35.321" starttime="20201116 17:24:35.295"></status>
</kw>
<msg timestamp="20201116 17:24:35.325" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:24:35.325" starttime="20201116 17:24:35.293"></status>
</kw>
<msg timestamp="20201116 17:24:35.326" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:24:35.326" starttime="20201116 17:24:35.293"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:24:35.339" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:24:35.340" starttime="20201116 17:24:35.336"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:24:35.340" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:24:35.340" starttime="20201116 17:24:35.340"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:35.341" starttime="20201116 17:24:35.335"></status>
</kw>
<msg timestamp="20201116 17:24:35.341" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:24:35.341" starttime="20201116 17:24:35.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:24:35.348" starttime="20201116 17:24:35.348"></status>
</kw>
<msg timestamp="20201116 17:24:35.350" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:24:35.350" starttime="20201116 17:24:35.347"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:35.351" starttime="20201116 17:24:35.333"></status>
</kw>
<msg timestamp="20201116 17:24:35.351" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:24:35.351" starttime="20201116 17:24:35.333"></status>
</kw>
<msg timestamp="20201116 17:24:35.351" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:24:35.352" starttime="20201116 17:24:35.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:24:35.361" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:25:14.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:25:14.942" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:24:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24...</msg>
<status status="PASS" endtime="20201116 17:25:14.942" starttime="20201116 17:24:35.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:25:14.944" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:24:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:24:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:24:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:24:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:24:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:24:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-491AA00BA4D6-&gt;a7472010-beb7-4953-b5fd-6c816e652024
2020-11-16 17:24:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-16 17:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:24:39 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:24:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547289806_0003
2020-11-16 17:24:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:24:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:40 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:24:40 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:24:40 INFO  YarnClientImpl:324 - Submitted application application_1605547289806_0003
2020-11-16 17:24:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547289806_0003/
2020-11-16 17:24:40 INFO  Job:1619 - Running job: job_1605547289806_0003
2020-11-16 17:24:49 INFO  Job:1640 - Job job_1605547289806_0003 running in uber mode : false
2020-11-16 17:24:49 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:24:56 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:25:02 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:25:08 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:25:14 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:25:14 INFO  Job:1658 - Job job_1605547289806_0003 completed successfully
2020-11-16 17:25:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016137
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46592
		Total time spent by all reduces in occupied slots (ms)=16928
		Total time spent by all map tasks (ms)=11648
		Total time spent by all reduce tasks (ms)=4232
		Total vcore-milliseconds taken by all map tasks=11648
		Total vcore-milliseconds taken by all reduce tasks=4232
		Total megabyte-milliseconds taken by all map tasks=47710208
		Total megabyte-milliseconds taken by all reduce tasks=17334272
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=657
		CPU time spent (ms)=8110
		Physical memory (bytes) snapshot=1226076160
		Virtual memory (bytes) snapshot=15811809280
		Total committed heap usage (bytes)=1065877504
		Peak Map Physical memory (bytes)=310038528
		Peak Map Virtual memory (bytes)=3947941888
		Peak Reduce Physical memory (bytes)=302374912
		Peak Reduce Virtual memory (bytes)=3973214208
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.254 seconds
2020-11-16 17:25:14 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 17:25:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:25:14.944" starttime="20201116 17:25:14.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:25:14.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:25:14.945" starttime="20201116 17:25:14.944"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:14.945" starttime="20201116 17:24:35.358"></status>
</kw>
<msg timestamp="20201116 17:25:14.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:25:14.945" starttime="20201116 17:24:35.357"></status>
</kw>
<msg timestamp="20201116 17:25:14.946" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:24:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24...</msg>
<status status="PASS" endtime="20201116 17:25:14.946" starttime="20201116 17:24:35.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:25:14.947" starttime="20201116 17:25:14.947"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:25:14.947" critical="yes" starttime="20201116 17:24:35.292"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:25:14.965" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:25:14.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:25:14.972" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:25:14.972" starttime="20201116 17:25:14.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:25:14.973" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:25:14.973" starttime="20201116 17:25:14.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:25:14.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:25:14.974" starttime="20201116 17:25:14.973"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:14.975" starttime="20201116 17:25:14.952"></status>
</kw>
<msg timestamp="20201116 17:25:14.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:25:14.975" starttime="20201116 17:25:14.952"></status>
</kw>
<msg timestamp="20201116 17:25:14.975" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:25:14.975" starttime="20201116 17:25:14.951"></status>
</kw>
<msg timestamp="20201116 17:25:14.976" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:25:14.976" starttime="20201116 17:25:14.950"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:25:14.977" level="INFO">${random} = 07</msg>
<status status="PASS" endtime="20201116 17:25:14.977" starttime="20201116 17:25:14.976"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:25:14.983" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:25:14.983" starttime="20201116 17:25:14.982"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:25:14.984" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:25:14.984" starttime="20201116 17:25:14.983"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:14.984" starttime="20201116 17:25:14.982"></status>
</kw>
<msg timestamp="20201116 17:25:14.984" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:25:14.984" starttime="20201116 17:25:14.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:25:14.986" starttime="20201116 17:25:14.985"></status>
</kw>
<msg timestamp="20201116 17:25:14.986" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:25:14.986" starttime="20201116 17:25:14.984"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:14.986" starttime="20201116 17:25:14.979"></status>
</kw>
<msg timestamp="20201116 17:25:14.987" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:25:14.987" starttime="20201116 17:25:14.979"></status>
</kw>
<msg timestamp="20201116 17:25:14.987" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:25:14.987" starttime="20201116 17:25:14.977"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:25:14.992" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:25:14.992" starttime="20201116 17:25:14.991"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:25:14.992" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:25:14.992" starttime="20201116 17:25:14.992"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:14.993" starttime="20201116 17:25:14.991"></status>
</kw>
<msg timestamp="20201116 17:25:14.993" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:25:14.993" starttime="20201116 17:25:14.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:25:14.995" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 17:25:14.995" starttime="20201116 17:25:14.994"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:25:14.996" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 17:25:14.996" starttime="20201116 17:25:14.995"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:14.996" starttime="20201116 17:25:14.994"></status>
</kw>
<msg timestamp="20201116 17:25:14.996" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 17:25:14.996" starttime="20201116 17:25:14.993"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:14.997" starttime="20201116 17:25:14.989"></status>
</kw>
<msg timestamp="20201116 17:25:14.997" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:25:14.997" starttime="20201116 17:25:14.988"></status>
</kw>
<msg timestamp="20201116 17:25:14.997" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:25:14.997" starttime="20201116 17:25:14.987"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:25:15.001" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:25:15.001" starttime="20201116 17:25:15.001"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:25:15.002" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:25:15.002" starttime="20201116 17:25:15.001"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:15.002" starttime="20201116 17:25:15.000"></status>
</kw>
<msg timestamp="20201116 17:25:15.003" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:25:15.003" starttime="20201116 17:25:15.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:25:15.005" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 17:25:15.005" starttime="20201116 17:25:15.004"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:25:15.005" level="INFO">${result} = /wordcount-07.txt</msg>
<status status="PASS" endtime="20201116 17:25:15.006" starttime="20201116 17:25:15.005"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:15.006" starttime="20201116 17:25:15.003"></status>
</kw>
<msg timestamp="20201116 17:25:15.006" level="INFO">${path_with_leading} = /wordcount-07.txt</msg>
<status status="PASS" endtime="20201116 17:25:15.006" starttime="20201116 17:25:15.003"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:15.006" starttime="20201116 17:25:14.999"></status>
</kw>
<msg timestamp="20201116 17:25:15.006" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-07.txt</msg>
<status status="PASS" endtime="20201116 17:25:15.006" starttime="20201116 17:25:14.998"></status>
</kw>
<msg timestamp="20201116 17:25:15.007" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-07.txt</msg>
<status status="PASS" endtime="20201116 17:25:15.007" starttime="20201116 17:25:14.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:25:15.011" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-07.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:25:54.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:25:54.171" level="INFO">${output} = 2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:25:54.171" starttime="20201116 17:25:15.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:25:54.172" level="INFO">2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-16 17:25:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:25:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:17 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:25:17 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:25:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:25:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:25:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:25:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DB1D3C3A77FA-&gt;a7472010-beb7-4953-b5fd-6c816e652024
2020-11-16 17:25:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:25:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:25:19 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:25:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547289806_0004
2020-11-16 17:25:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:25:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:19 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:25:19 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:25:20 INFO  YarnClientImpl:324 - Submitted application application_1605547289806_0004
2020-11-16 17:25:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547289806_0004/
2020-11-16 17:25:20 INFO  Job:1619 - Running job: job_1605547289806_0004
2020-11-16 17:25:29 INFO  Job:1640 - Job job_1605547289806_0004 running in uber mode : false
2020-11-16 17:25:29 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:25:36 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:25:41 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:25:47 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:25:53 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:25:53 INFO  Job:1658 - Job job_1605547289806_0004 completed successfully
2020-11-16 17:25:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46864
		Total time spent by all reduces in occupied slots (ms)=17472
		Total time spent by all map tasks (ms)=11716
		Total time spent by all reduce tasks (ms)=4368
		Total vcore-milliseconds taken by all map tasks=11716
		Total vcore-milliseconds taken by all reduce tasks=4368
		Total megabyte-milliseconds taken by all map tasks=47988736
		Total megabyte-milliseconds taken by all reduce tasks=17891328
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=660
		CPU time spent (ms)=8320
		Physical memory (bytes) snapshot=1237008384
		Virtual memory (bytes) snapshot=15810478080
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=320065536
		Peak Map Virtual memory (bytes)=3955478528
		Peak Reduce Physical memory (bytes)=301481984
		Peak Reduce Virtual memory (bytes)=3971215360
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 17:25:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:25:54.172" starttime="20201116 17:25:54.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:25:54.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:25:54.173" starttime="20201116 17:25:54.172"></status>
</kw>
<status status="PASS" endtime="20201116 17:25:54.173" starttime="20201116 17:25:15.008"></status>
</kw>
<msg timestamp="20201116 17:25:54.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:25:54.174" starttime="20201116 17:25:15.008"></status>
</kw>
<msg timestamp="20201116 17:25:54.174" level="INFO">${output} = 2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:25:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:25:54.174" starttime="20201116 17:25:15.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:25:54.175" starttime="20201116 17:25:54.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:25:54.176" starttime="20201116 17:25:54.175"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:25:54.176" critical="yes" starttime="20201116 17:25:14.949"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:25:54.177" starttime="20201116 17:24:35.216"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:44.812" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:22:44.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:22:44.816" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:22:44.816" starttime="20201116 17:22:44.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:22:44.817" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:22:44.817" starttime="20201116 17:22:44.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:22:44.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:22:44.818" starttime="20201116 17:22:44.817"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:44.818" starttime="20201116 17:22:44.805"></status>
</kw>
<msg timestamp="20201116 17:22:44.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:22:44.818" starttime="20201116 17:22:44.804"></status>
</kw>
<msg timestamp="20201116 17:22:44.819" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:22:44.819" starttime="20201116 17:22:44.804"></status>
</kw>
<msg timestamp="20201116 17:22:44.819" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:22:44.819" starttime="20201116 17:22:44.803"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:22:44.824" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:22:44.824" starttime="20201116 17:22:44.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:22:44.825" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:22:44.825" starttime="20201116 17:22:44.825"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:44.826" starttime="20201116 17:22:44.822"></status>
</kw>
<msg timestamp="20201116 17:22:44.826" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:22:44.826" starttime="20201116 17:22:44.821"></status>
</kw>
<status status="PASS" endtime="20201116 17:22:44.826" starttime="20201116 17:22:44.821"></status>
</kw>
<msg timestamp="20201116 17:22:44.826" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:22:44.826" starttime="20201116 17:22:44.820"></status>
</kw>
<msg timestamp="20201116 17:22:44.827" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:22:44.827" starttime="20201116 17:22:44.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:22:44.831" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:23:37.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:23:37.605" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:22:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22...</msg>
<status status="PASS" endtime="20201116 17:23:37.605" starttime="20201116 17:22:44.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:23:37.606" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:22:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:46 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:22:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:22:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:22:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:22:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:22:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DE977772F01B-&gt;a7472010-beb7-4953-b5fd-6c816e652024
2020-11-16 17:22:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-16 17:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:22:51 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:22:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547289806_0001
2020-11-16 17:22:54 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:22:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:54 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:22:54 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:22:55 INFO  YarnClientImpl:324 - Submitted application application_1605547289806_0001
2020-11-16 17:22:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547289806_0001/
2020-11-16 17:22:55 INFO  Job:1619 - Running job: job_1605547289806_0001
2020-11-16 17:23:06 INFO  Job:1640 - Job job_1605547289806_0001 running in uber mode : false
2020-11-16 17:23:06 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:23:13 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:23:19 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:23:25 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:23:31 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:23:36 INFO  Job:1658 - Job job_1605547289806_0001 completed successfully
2020-11-16 17:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47388
		Total time spent by all reduces in occupied slots (ms)=18252
		Total time spent by all map tasks (ms)=11847
		Total time spent by all reduce tasks (ms)=4563
		Total vcore-milliseconds taken by all map tasks=11847
		Total vcore-milliseconds taken by all reduce tasks=4563
		Total megabyte-milliseconds taken by all map tasks=48525312
		Total megabyte-milliseconds taken by all reduce tasks=18690048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=720
		CPU time spent (ms)=7930
		Physical memory (bytes) snapshot=1305608192
		Virtual memory (bytes) snapshot=15809081344
		Total committed heap usage (bytes)=1114112000
		Peak Map Physical memory (bytes)=382361600
		Peak Map Virtual memory (bytes)=3947614208
		Peak Reduce Physical memory (bytes)=300785664
		Peak Reduce Virtual memory (bytes)=3970760704
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 48.464 seconds
2020-11-16 17:23:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:36 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 17:23:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:23:37.606" starttime="20201116 17:23:37.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:23:37.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:23:37.607" starttime="20201116 17:23:37.607"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.608" starttime="20201116 17:22:44.828"></status>
</kw>
<msg timestamp="20201116 17:23:37.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:23:37.608" starttime="20201116 17:22:44.828"></status>
</kw>
<msg timestamp="20201116 17:23:37.609" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:22:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:22...</msg>
<status status="PASS" endtime="20201116 17:23:37.609" starttime="20201116 17:22:44.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:23:37.609" starttime="20201116 17:23:37.609"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:23:37.610" critical="yes" starttime="20201116 17:22:44.802"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:23:37.617" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:23:37.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:23:37.622" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:23:37.622" starttime="20201116 17:23:37.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:23:37.624" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:23:37.624" starttime="20201116 17:23:37.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:23:37.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:23:37.625" starttime="20201116 17:23:37.624"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.625" starttime="20201116 17:23:37.613"></status>
</kw>
<msg timestamp="20201116 17:23:37.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:23:37.625" starttime="20201116 17:23:37.612"></status>
</kw>
<msg timestamp="20201116 17:23:37.626" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:23:37.626" starttime="20201116 17:23:37.612"></status>
</kw>
<msg timestamp="20201116 17:23:37.626" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:23:37.626" starttime="20201116 17:23:37.611"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:23:37.627" level="INFO">${random} = 36</msg>
<status status="PASS" endtime="20201116 17:23:37.627" starttime="20201116 17:23:37.626"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:23:37.633" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:23:37.633" starttime="20201116 17:23:37.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:23:37.634" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:23:37.634" starttime="20201116 17:23:37.634"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.635" starttime="20201116 17:23:37.631"></status>
</kw>
<msg timestamp="20201116 17:23:37.635" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:23:37.635" starttime="20201116 17:23:37.630"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.635" starttime="20201116 17:23:37.629"></status>
</kw>
<msg timestamp="20201116 17:23:37.635" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:23:37.635" starttime="20201116 17:23:37.628"></status>
</kw>
<msg timestamp="20201116 17:23:37.636" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:23:37.636" starttime="20201116 17:23:37.627"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:23:37.640" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:23:37.640" starttime="20201116 17:23:37.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:23:37.640" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:23:37.641" starttime="20201116 17:23:37.640"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.641" starttime="20201116 17:23:37.639"></status>
</kw>
<msg timestamp="20201116 17:23:37.641" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:23:37.641" starttime="20201116 17:23:37.638"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.641" starttime="20201116 17:23:37.637"></status>
</kw>
<msg timestamp="20201116 17:23:37.641" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:23:37.641" starttime="20201116 17:23:37.637"></status>
</kw>
<msg timestamp="20201116 17:23:37.642" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:23:37.642" starttime="20201116 17:23:37.636"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:23:37.646" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:23:37.646" starttime="20201116 17:23:37.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:23:37.646" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:23:37.647" starttime="20201116 17:23:37.646"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.647" starttime="20201116 17:23:37.644"></status>
</kw>
<msg timestamp="20201116 17:23:37.647" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:23:37.647" starttime="20201116 17:23:37.644"></status>
</kw>
<status status="PASS" endtime="20201116 17:23:37.647" starttime="20201116 17:23:37.643"></status>
</kw>
<msg timestamp="20201116 17:23:37.647" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-36.txt</msg>
<status status="PASS" endtime="20201116 17:23:37.647" starttime="20201116 17:23:37.643"></status>
</kw>
<msg timestamp="20201116 17:23:37.648" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-36.txt</msg>
<status status="PASS" endtime="20201116 17:23:37.648" starttime="20201116 17:23:37.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:23:37.652" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-36.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:24:18.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:24:18.105" level="INFO">${output} = 2020-11-16 17:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:24:18.105" starttime="20201116 17:23:37.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:24:18.106" level="INFO">2020-11-16 17:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-16 17:23:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:23:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:23:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:23:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:23:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:23:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:23:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0C31A733FDF9-&gt;a7472010-beb7-4953-b5fd-6c816e652024
2020-11-16 17:23:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:23:41 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:23:42 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:23:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547289806_0002
2020-11-16 17:23:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:23:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:42 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:23:42 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:23:42 INFO  YarnClientImpl:324 - Submitted application application_1605547289806_0002
2020-11-16 17:23:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547289806_0002/
2020-11-16 17:23:42 INFO  Job:1619 - Running job: job_1605547289806_0002
2020-11-16 17:23:52 INFO  Job:1640 - Job job_1605547289806_0002 running in uber mode : false
2020-11-16 17:23:52 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:23:59 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:24:05 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:24:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:24:16 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:24:17 INFO  Job:1658 - Job job_1605547289806_0002 completed successfully
2020-11-16 17:24:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:24:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47848
		Total time spent by all reduces in occupied slots (ms)=16124
		Total time spent by all map tasks (ms)=11962
		Total time spent by all reduce tasks (ms)=4031
		Total vcore-milliseconds taken by all map tasks=11962
		Total vcore-milliseconds taken by all reduce tasks=4031
		Total megabyte-milliseconds taken by all map tasks=48996352
		Total megabyte-milliseconds taken by all reduce tasks=16510976
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=893
		CPU time spent (ms)=8170
		Physical memory (bytes) snapshot=1492357120
		Virtual memory (bytes) snapshot=15782834176
		Total committed heap usage (bytes)=1401421824
		Peak Map Physical memory (bytes)=521007104
		Peak Map Virtual memory (bytes)=3943235584
		Peak Reduce Physical memory (bytes)=296566784
		Peak Reduce Virtual memory (bytes)=3969228800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 17:24:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:24:18.107" starttime="20201116 17:24:18.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:24:18.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:24:18.108" starttime="20201116 17:24:18.107"></status>
</kw>
<status status="PASS" endtime="20201116 17:24:18.108" starttime="20201116 17:23:37.649"></status>
</kw>
<msg timestamp="20201116 17:24:18.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:24:18.108" starttime="20201116 17:23:37.649"></status>
</kw>
<msg timestamp="20201116 17:24:18.109" level="INFO">${output} = 2020-11-16 17:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:23:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:24:18.109" starttime="20201116 17:23:37.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:24:18.109" starttime="20201116 17:24:18.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:24:18.110" starttime="20201116 17:24:18.109"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:24:18.110" critical="yes" starttime="20201116 17:23:37.610"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:24:18.111" starttime="20201116 17:22:44.735"></status>
</suite>
<status status="PASS" elapsedtime="218738" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:13.405" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:19.575" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 17:27:19.575" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:27:19.575" starttime="20201116 17:27:13.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:19.576" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:27:19.576" starttime="20201116 17:27:19.575"></status>
</kw>
<msg timestamp="20201116 17:27:19.576" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:27:19.576" starttime="20201116 17:27:13.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:19.583" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:23.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:23.918" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:27:23.919" starttime="20201116 17:27:19.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:23.920" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:27:23.920" starttime="20201116 17:27:23.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:23.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:23.921" starttime="20201116 17:27:23.920"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:23.921" starttime="20201116 17:27:19.579"></status>
</kw>
<msg timestamp="20201116 17:27:23.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:23.921" starttime="20201116 17:27:19.579"></status>
</kw>
<msg timestamp="20201116 17:27:23.921" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 17:27:23.921" starttime="20201116 17:27:19.578"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 17:27:23.922" starttime="20201116 17:27:23.922"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:23.922" starttime="20201116 17:27:19.577"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:23.922" starttime="20201116 17:27:19.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:23.927" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:27.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:27.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:27:27.560" starttime="20201116 17:27:23.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:27.561" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:27:27.561" starttime="20201116 17:27:27.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:27.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:27.562" starttime="20201116 17:27:27.561"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:27.562" starttime="20201116 17:27:23.924"></status>
</kw>
<msg timestamp="20201116 17:27:27.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:27.562" starttime="20201116 17:27:23.924"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:27.562" starttime="20201116 17:27:23.923"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:27.563" starttime="20201116 17:27:23.923"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:27.563" starttime="20201116 17:27:23.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 17:27:27.563" starttime="20201116 17:27:27.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:27.569" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:31.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:31.358" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:27:27.407Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:27:31.358" starttime="20201116 17:27:27.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:31.359" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:27:27.407Z",
  "modificationTime" : "2020-11-16T17:27:27.407Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 17:27:31.359" starttime="20201116 17:27:31.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:31.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:31.360" starttime="20201116 17:27:31.359"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:31.360" starttime="20201116 17:27:27.565"></status>
</kw>
<msg timestamp="20201116 17:27:31.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:31.360" starttime="20201116 17:27:27.564"></status>
</kw>
<msg timestamp="20201116 17:27:31.361" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:27:27.407Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:27:31.361" starttime="20201116 17:27:27.564"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 17:27:31.361" starttime="20201116 17:27:31.361"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:27:31.366" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:27:31.366" starttime="20201116 17:27:31.365"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:27:31.367" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:27:31.367" starttime="20201116 17:27:31.366"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:31.367" starttime="20201116 17:27:31.365"></status>
</kw>
<msg timestamp="20201116 17:27:31.367" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:27:31.367" starttime="20201116 17:27:31.364"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:31.367" starttime="20201116 17:27:31.363"></status>
</kw>
<msg timestamp="20201116 17:27:31.368" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:27:31.368" starttime="20201116 17:27:31.362"></status>
</kw>
<msg timestamp="20201116 17:27:31.368" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:27:31.368" starttime="20201116 17:27:31.361"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:31.383" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:35.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:35.298" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:27:35.298" starttime="20201116 17:27:31.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:35.299" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:27:35.300" starttime="20201116 17:27:35.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:35.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:35.301" starttime="20201116 17:27:35.300"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:35.301" starttime="20201116 17:27:31.379"></status>
</kw>
<msg timestamp="20201116 17:27:35.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:35.301" starttime="20201116 17:27:31.378"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:35.302" starttime="20201116 17:27:31.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:35.306" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:43.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:43.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:27:43.758" starttime="20201116 17:27:35.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:43.760" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:27:43.760" starttime="20201116 17:27:43.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:43.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:43.761" starttime="20201116 17:27:43.760"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:43.761" starttime="20201116 17:27:35.303"></status>
</kw>
<msg timestamp="20201116 17:27:43.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:43.761" starttime="20201116 17:27:35.303"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:43.762" starttime="20201116 17:27:35.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:43.767" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:49.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:49.764" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:27:49.764" starttime="20201116 17:27:43.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:49.765" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:27:49.766" starttime="20201116 17:27:49.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:49.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:49.766" starttime="20201116 17:27:49.766"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:49.767" starttime="20201116 17:27:43.763"></status>
</kw>
<msg timestamp="20201116 17:27:49.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:49.767" starttime="20201116 17:27:43.762"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:49.767" starttime="20201116 17:27:43.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:49.772" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:55.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:55.762" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:27:55.763" starttime="20201116 17:27:49.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:55.764" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:27:55.764" starttime="20201116 17:27:55.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:55.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:55.765" starttime="20201116 17:27:55.764"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:55.765" starttime="20201116 17:27:49.768"></status>
</kw>
<msg timestamp="20201116 17:27:55.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:55.765" starttime="20201116 17:27:49.768"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:55.766" starttime="20201116 17:27:49.767"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:27:55.766" critical="yes" starttime="20201116 17:27:13.397"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:27:55.772" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:27:55.772" starttime="20201116 17:27:55.771"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:27:55.773" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:27:55.773" starttime="20201116 17:27:55.772"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:55.773" starttime="20201116 17:27:55.771"></status>
</kw>
<msg timestamp="20201116 17:27:55.773" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:27:55.773" starttime="20201116 17:27:55.770"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:55.773" starttime="20201116 17:27:55.769"></status>
</kw>
<msg timestamp="20201116 17:27:55.774" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:27:55.774" starttime="20201116 17:27:55.769"></status>
</kw>
<msg timestamp="20201116 17:27:55.774" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:27:55.774" starttime="20201116 17:27:55.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:55.781" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:27:59.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:27:59.532" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:27:59.532" starttime="20201116 17:27:55.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:27:59.534" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:27:59.534" starttime="20201116 17:27:59.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:27:59.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:27:59.535" starttime="20201116 17:27:59.534"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:59.535" starttime="20201116 17:27:55.775"></status>
</kw>
<msg timestamp="20201116 17:27:59.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:27:59.535" starttime="20201116 17:27:55.775"></status>
</kw>
<status status="PASS" endtime="20201116 17:27:59.535" starttime="20201116 17:27:55.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:27:59.540" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:28:03.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:28:03.367" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:28:03.367" starttime="20201116 17:27:59.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:28:03.368" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:28:03.368" starttime="20201116 17:28:03.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:28:03.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:28:03.369" starttime="20201116 17:28:03.368"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:03.369" starttime="20201116 17:27:59.537"></status>
</kw>
<msg timestamp="20201116 17:28:03.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:28:03.370" starttime="20201116 17:27:59.536"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:03.370" starttime="20201116 17:27:59.536"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:28:03.370" critical="yes" starttime="20201116 17:27:55.767"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 17:28:03.371" starttime="20201116 17:27:13.284"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:29:54.763" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:29:54.763" starttime="20201116 17:29:54.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:29:54.763" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:29:54.763" starttime="20201116 17:29:54.763"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:54.764" starttime="20201116 17:29:54.761"></status>
</kw>
<msg timestamp="20201116 17:29:54.764" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:29:54.764" starttime="20201116 17:29:54.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:29:54.765" starttime="20201116 17:29:54.765"></status>
</kw>
<msg timestamp="20201116 17:29:54.765" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:29:54.765" starttime="20201116 17:29:54.764"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:54.766" starttime="20201116 17:29:54.760"></status>
</kw>
<msg timestamp="20201116 17:29:54.766" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:29:54.766" starttime="20201116 17:29:54.759"></status>
</kw>
<msg timestamp="20201116 17:29:54.766" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:29:54.766" starttime="20201116 17:29:54.758"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:29:54.767" level="INFO">${random} = 64060</msg>
<status status="PASS" endtime="20201116 17:29:54.767" starttime="20201116 17:29:54.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:29:54.773" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-64060 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:30:01.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:30:01.445" level="INFO">${output} = 2020-11-16 17:29:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:29:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:30:01.445" starttime="20201116 17:29:54.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:30:01.446" level="INFO">2020-11-16 17:29:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:29:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:29:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:29:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:29:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4E5D757D39E1-&gt;8e02b5c8-3ef4-4367-a040-9182a7ccace3
2020-11-16 17:29:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:30:01.446" starttime="20201116 17:30:01.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:30:01.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:30:01.456" starttime="20201116 17:30:01.447"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:01.456" starttime="20201116 17:29:54.768"></status>
</kw>
<msg timestamp="20201116 17:30:01.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:30:01.457" starttime="20201116 17:29:54.768"></status>
</kw>
<msg timestamp="20201116 17:30:01.457" level="INFO">${result} = 2020-11-16 17:29:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:29:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:30:01.457" starttime="20201116 17:29:54.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:30:01.462" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:30:03.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:30:03.648" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:28 ofs://om/volume1/bucket1/ozone-50343
-rw-...</msg>
<status status="PASS" endtime="20201116 17:30:03.648" starttime="20201116 17:30:01.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:30:03.649" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:28 ofs://om/volume1/bucket1/ozone-50343
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:30 ofs://om/volume1/bucket1/ozone-64060
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:29 ofs://om/volume1/bucket1/wordcount-34.txt</msg>
<status status="PASS" endtime="20201116 17:30:03.650" starttime="20201116 17:30:03.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:30:03.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:30:03.650" starttime="20201116 17:30:03.650"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:03.651" starttime="20201116 17:30:01.459"></status>
</kw>
<msg timestamp="20201116 17:30:03.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:30:03.651" starttime="20201116 17:30:01.459"></status>
</kw>
<msg timestamp="20201116 17:30:03.651" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:28 ofs://om/volume1/bucket1/ozone-50343
-rw-...</msg>
<status status="PASS" endtime="20201116 17:30:03.651" starttime="20201116 17:30:01.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:30:03.652" starttime="20201116 17:30:03.652"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:30:03.652" critical="yes" starttime="20201116 17:29:54.757"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:30:03.654" starttime="20201116 17:29:54.686"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:28:08.718" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:28:08.718" starttime="20201116 17:28:08.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:28:08.719" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:28:08.719" starttime="20201116 17:28:08.718"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:08.719" starttime="20201116 17:28:08.717"></status>
</kw>
<msg timestamp="20201116 17:28:08.719" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:28:08.719" starttime="20201116 17:28:08.716"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:08.720" starttime="20201116 17:28:08.715"></status>
</kw>
<msg timestamp="20201116 17:28:08.720" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:28:08.720" starttime="20201116 17:28:08.715"></status>
</kw>
<msg timestamp="20201116 17:28:08.720" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:28:08.720" starttime="20201116 17:28:08.714"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:28:08.721" level="INFO">${random} = 50343</msg>
<status status="PASS" endtime="20201116 17:28:08.721" starttime="20201116 17:28:08.720"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:28:08.728" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-50343 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:28:12.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:28:12.968" level="INFO">${output} = 2020-11-16 17:28:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:28:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:28:12.968" starttime="20201116 17:28:08.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:28:12.969" level="INFO">2020-11-16 17:28:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:28:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:28:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:28:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:28:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1641010B6D07-&gt;8e02b5c8-3ef4-4367-a040-9182a7ccace3
2020-11-16 17:28:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:28:12.970" starttime="20201116 17:28:12.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:28:12.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:28:12.970" starttime="20201116 17:28:12.970"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:12.971" starttime="20201116 17:28:08.722"></status>
</kw>
<msg timestamp="20201116 17:28:12.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:28:12.971" starttime="20201116 17:28:08.721"></status>
</kw>
<msg timestamp="20201116 17:28:12.971" level="INFO">${result} = 2020-11-16 17:28:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:28:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:28:12.971" starttime="20201116 17:28:08.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:28:12.976" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:28:15.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:28:15.169" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:28 o3fs://bucket1.volume1.om/ozone-50343
dr...</msg>
<status status="PASS" endtime="20201116 17:28:15.169" starttime="20201116 17:28:12.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:28:15.170" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:28 o3fs://bucket1.volume1.om/ozone-50343
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:28:15.170" starttime="20201116 17:28:15.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:28:15.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:28:15.171" starttime="20201116 17:28:15.171"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:15.172" starttime="20201116 17:28:12.973"></status>
</kw>
<msg timestamp="20201116 17:28:15.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:28:15.172" starttime="20201116 17:28:12.972"></status>
</kw>
<msg timestamp="20201116 17:28:15.172" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:28 o3fs://bucket1.volume1.om/ozone-50343
dr...</msg>
<status status="PASS" endtime="20201116 17:28:15.172" starttime="20201116 17:28:12.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:28:15.173" starttime="20201116 17:28:15.172"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:28:15.173" critical="yes" starttime="20201116 17:28:08.713"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:28:15.174" starttime="20201116 17:28:08.647"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:30:09.004" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:30:09.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:30:09.009" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:09.009" starttime="20201116 17:30:08.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:30:09.010" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:09.010" starttime="20201116 17:30:09.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:30:09.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:30:09.011" starttime="20201116 17:30:09.011"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:09.012" starttime="20201116 17:30:08.998"></status>
</kw>
<msg timestamp="20201116 17:30:09.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:30:09.012" starttime="20201116 17:30:08.998"></status>
</kw>
<msg timestamp="20201116 17:30:09.012" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:09.012" starttime="20201116 17:30:08.997"></status>
</kw>
<msg timestamp="20201116 17:30:09.013" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:09.013" starttime="20201116 17:30:08.997"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:30:09.018" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:30:09.018" starttime="20201116 17:30:09.017"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:30:09.019" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:30:09.019" starttime="20201116 17:30:09.018"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:09.019" starttime="20201116 17:30:09.016"></status>
</kw>
<msg timestamp="20201116 17:30:09.019" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:30:09.019" starttime="20201116 17:30:09.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:30:09.020" starttime="20201116 17:30:09.020"></status>
</kw>
<msg timestamp="20201116 17:30:09.020" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:30:09.021" starttime="20201116 17:30:09.019"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:09.021" starttime="20201116 17:30:09.015"></status>
</kw>
<msg timestamp="20201116 17:30:09.021" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:30:09.021" starttime="20201116 17:30:09.014"></status>
</kw>
<msg timestamp="20201116 17:30:09.021" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:30:09.021" starttime="20201116 17:30:09.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:30:09.027" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:30:51.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:30:51.553" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:30:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:30:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:30:51.553" starttime="20201116 17:30:09.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:30:51.555" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:30:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:30:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:30:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:30:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:30:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC534ED69972-&gt;8e02b5c8-3ef4-4367-a040-9182a7ccace3
2020-11-16 17:30:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:30:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:30:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:30:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:30:13 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:30:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547604212_0003
2020-11-16 17:30:13 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:30:14 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:30:14 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:30:14 INFO  YarnClientImpl:329 - Submitted application application_1605547604212_0003
2020-11-16 17:30:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547604212_0003/
2020-11-16 17:30:14 INFO  Job:1619 - Running job: job_1605547604212_0003
2020-11-16 17:30:23 INFO  Job:1640 - Job job_1605547604212_0003 running in uber mode : false
2020-11-16 17:30:23 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:30:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:30:35 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:30:41 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:30:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:30:50 INFO  Job:1658 - Job job_1605547604212_0003 completed successfully
2020-11-16 17:30:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44868
		Total time spent by all reduces in occupied slots (ms)=17596
		Total time spent by all map tasks (ms)=11217
		Total time spent by all reduce tasks (ms)=4399
		Total vcore-milliseconds taken by all map tasks=11217
		Total vcore-milliseconds taken by all reduce tasks=4399
		Total megabyte-milliseconds taken by all map tasks=45944832
		Total megabyte-milliseconds taken by all reduce tasks=18018304
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=668
		CPU time spent (ms)=7360
		Physical memory (bytes) snapshot=1238474752
		Virtual memory (bytes) snapshot=15774875648
		Total committed heap usage (bytes)=1256718336
		Peak Map Physical memory (bytes)=284209152
		Peak Map Virtual memory (bytes)=3935981568
		Peak Reduce Physical memory (bytes)=399548416
		Peak Reduce Virtual memory (bytes)=3969892352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.178 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:30:51.555" starttime="20201116 17:30:51.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:30:51.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:30:51.556" starttime="20201116 17:30:51.555"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.556" starttime="20201116 17:30:09.023"></status>
</kw>
<msg timestamp="20201116 17:30:51.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:30:51.556" starttime="20201116 17:30:09.022"></status>
</kw>
<msg timestamp="20201116 17:30:51.557" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:30:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:30:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:30:51.557" starttime="20201116 17:30:09.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:30:51.558" starttime="20201116 17:30:51.557"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:30:51.558" critical="yes" starttime="20201116 17:30:08.996"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:30:51.564" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:30:51.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:30:51.571" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:51.571" starttime="20201116 17:30:51.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:30:51.572" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:51.573" starttime="20201116 17:30:51.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:30:51.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:30:51.574" starttime="20201116 17:30:51.573"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.574" starttime="20201116 17:30:51.562"></status>
</kw>
<msg timestamp="20201116 17:30:51.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:30:51.574" starttime="20201116 17:30:51.561"></status>
</kw>
<msg timestamp="20201116 17:30:51.574" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:51.575" starttime="20201116 17:30:51.561"></status>
</kw>
<msg timestamp="20201116 17:30:51.575" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:30:51.575" starttime="20201116 17:30:51.560"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:30:51.576" level="INFO">${random} = 99</msg>
<status status="PASS" endtime="20201116 17:30:51.576" starttime="20201116 17:30:51.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:30:51.580" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:30:51.580" starttime="20201116 17:30:51.580"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:30:51.581" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:30:51.581" starttime="20201116 17:30:51.580"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.581" starttime="20201116 17:30:51.579"></status>
</kw>
<msg timestamp="20201116 17:30:51.581" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:30:51.581" starttime="20201116 17:30:51.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:30:51.583" starttime="20201116 17:30:51.582"></status>
</kw>
<msg timestamp="20201116 17:30:51.583" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:30:51.583" starttime="20201116 17:30:51.582"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.584" starttime="20201116 17:30:51.577"></status>
</kw>
<msg timestamp="20201116 17:30:51.584" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:30:51.584" starttime="20201116 17:30:51.577"></status>
</kw>
<msg timestamp="20201116 17:30:51.584" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:30:51.584" starttime="20201116 17:30:51.576"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:30:51.588" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:30:51.595" starttime="20201116 17:30:51.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:30:51.596" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:30:51.596" starttime="20201116 17:30:51.595"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.596" starttime="20201116 17:30:51.587"></status>
</kw>
<msg timestamp="20201116 17:30:51.597" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:30:51.597" starttime="20201116 17:30:51.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:30:51.599" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 17:30:51.599" starttime="20201116 17:30:51.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:30:51.604" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 17:30:51.604" starttime="20201116 17:30:51.599"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.604" starttime="20201116 17:30:51.597"></status>
</kw>
<msg timestamp="20201116 17:30:51.604" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 17:30:51.604" starttime="20201116 17:30:51.597"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.604" starttime="20201116 17:30:51.586"></status>
</kw>
<msg timestamp="20201116 17:30:51.605" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:30:51.605" starttime="20201116 17:30:51.585"></status>
</kw>
<msg timestamp="20201116 17:30:51.605" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:30:51.605" starttime="20201116 17:30:51.584"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:30:51.609" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:30:51.609" starttime="20201116 17:30:51.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:30:51.610" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:30:51.610" starttime="20201116 17:30:51.610"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.610" starttime="20201116 17:30:51.608"></status>
</kw>
<msg timestamp="20201116 17:30:51.611" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:30:51.611" starttime="20201116 17:30:51.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:30:51.613" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 17:30:51.613" starttime="20201116 17:30:51.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:30:51.613" level="INFO">${result} = /wordcount-99.txt</msg>
<status status="PASS" endtime="20201116 17:30:51.614" starttime="20201116 17:30:51.613"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.614" starttime="20201116 17:30:51.611"></status>
</kw>
<msg timestamp="20201116 17:30:51.614" level="INFO">${path_with_leading} = /wordcount-99.txt</msg>
<status status="PASS" endtime="20201116 17:30:51.614" starttime="20201116 17:30:51.611"></status>
</kw>
<status status="PASS" endtime="20201116 17:30:51.614" starttime="20201116 17:30:51.607"></status>
</kw>
<msg timestamp="20201116 17:30:51.614" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-99.txt</msg>
<status status="PASS" endtime="20201116 17:30:51.615" starttime="20201116 17:30:51.606"></status>
</kw>
<msg timestamp="20201116 17:30:51.615" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-99.txt</msg>
<status status="PASS" endtime="20201116 17:30:51.615" starttime="20201116 17:30:51.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:30:51.619" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-99.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:31:37.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:31:37.969" level="INFO">${output} = 2020-11-16 17:30:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:30:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:31:37.969" starttime="20201116 17:30:51.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:31:37.970" level="INFO">2020-11-16 17:30:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:30:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:30:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:30:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:30:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:30:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:30:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8F479C7EEE1E-&gt;8e02b5c8-3ef4-4367-a040-9182a7ccace3
2020-11-16 17:30:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:30:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:30:58 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:30:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547604212_0004
2020-11-16 17:30:58 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:30:58 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:30:58 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:30:58 INFO  YarnClientImpl:329 - Submitted application application_1605547604212_0004
2020-11-16 17:30:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547604212_0004/
2020-11-16 17:30:58 INFO  Job:1619 - Running job: job_1605547604212_0004
2020-11-16 17:31:07 INFO  Job:1640 - Job job_1605547604212_0004 running in uber mode : false
2020-11-16 17:31:07 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:31:14 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:31:20 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:31:26 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:31:31 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:31:37 INFO  Job:1658 - Job job_1605547604212_0004 completed successfully
2020-11-16 17:31:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118611
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48784
		Total time spent by all reduces in occupied slots (ms)=17048
		Total time spent by all map tasks (ms)=12196
		Total time spent by all reduce tasks (ms)=4262
		Total vcore-milliseconds taken by all map tasks=12196
		Total vcore-milliseconds taken by all reduce tasks=4262
		Total megabyte-milliseconds taken by all map tasks=49954816
		Total megabyte-milliseconds taken by all reduce tasks=17457152
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=680
		CPU time spent (ms)=8210
		Physical memory (bytes) snapshot=1136357376
		Virtual memory (bytes) snapshot=15776165888
		Total committed heap usage (bytes)=973078528
		Peak Map Physical memory (bytes)=296206336
		Peak Map Virtual memory (bytes)=3948994560
		Peak Reduce Physical memory (bytes)=287502336
		Peak Reduce Virtual memory (bytes)=3959799808
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:31:37.971" starttime="20201116 17:31:37.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:31:37.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:31:37.971" starttime="20201116 17:31:37.971"></status>
</kw>
<status status="PASS" endtime="20201116 17:31:37.972" starttime="20201116 17:30:51.616"></status>
</kw>
<msg timestamp="20201116 17:31:37.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:31:37.972" starttime="20201116 17:30:51.616"></status>
</kw>
<msg timestamp="20201116 17:31:37.972" level="INFO">${output} = 2020-11-16 17:30:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:30:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:31:37.972" starttime="20201116 17:30:51.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:31:37.973" starttime="20201116 17:31:37.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:31:37.974" starttime="20201116 17:31:37.973"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:31:37.974" critical="yes" starttime="20201116 17:30:51.559"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:31:37.975" starttime="20201116 17:30:08.928"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:28:20.643" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:28:20.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:28:20.649" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:28:20.649" starttime="20201116 17:28:20.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:28:20.651" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:28:20.651" starttime="20201116 17:28:20.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:28:20.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:28:20.652" starttime="20201116 17:28:20.651"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:20.652" starttime="20201116 17:28:20.637"></status>
</kw>
<msg timestamp="20201116 17:28:20.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:28:20.652" starttime="20201116 17:28:20.637"></status>
</kw>
<msg timestamp="20201116 17:28:20.653" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:28:20.653" starttime="20201116 17:28:20.636"></status>
</kw>
<msg timestamp="20201116 17:28:20.653" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:28:20.653" starttime="20201116 17:28:20.636"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:28:20.658" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:28:20.658" starttime="20201116 17:28:20.658"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:28:20.659" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:28:20.659" starttime="20201116 17:28:20.659"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:20.659" starttime="20201116 17:28:20.656"></status>
</kw>
<msg timestamp="20201116 17:28:20.659" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:28:20.659" starttime="20201116 17:28:20.656"></status>
</kw>
<status status="PASS" endtime="20201116 17:28:20.660" starttime="20201116 17:28:20.655"></status>
</kw>
<msg timestamp="20201116 17:28:20.660" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:28:20.660" starttime="20201116 17:28:20.654"></status>
</kw>
<msg timestamp="20201116 17:28:20.660" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:28:20.660" starttime="20201116 17:28:20.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:28:20.665" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:29:09.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:29:09.228" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:28:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:28:23 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:29:09.228" starttime="20201116 17:28:20.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:29:09.229" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:28:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:28:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:28:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:28:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:28:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ED66845C2CDA-&gt;8e02b5c8-3ef4-4367-a040-9182a7ccace3
2020-11-16 17:28:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:28:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:28:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:28:27 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:28:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547604212_0001
2020-11-16 17:28:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:28:28 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:28:28 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:28:28 INFO  YarnClientImpl:329 - Submitted application application_1605547604212_0001
2020-11-16 17:28:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547604212_0001/
2020-11-16 17:28:28 INFO  Job:1619 - Running job: job_1605547604212_0001
2020-11-16 17:28:40 INFO  Job:1640 - Job job_1605547604212_0001 running in uber mode : false
2020-11-16 17:28:40 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:28:47 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:28:53 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:28:59 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:29:07 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:29:08 INFO  Job:1658 - Job job_1605547604212_0001 completed successfully
2020-11-16 17:29:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46268
		Total time spent by all reduces in occupied slots (ms)=28888
		Total time spent by all map tasks (ms)=11567
		Total time spent by all reduce tasks (ms)=7222
		Total vcore-milliseconds taken by all map tasks=11567
		Total vcore-milliseconds taken by all reduce tasks=7222
		Total megabyte-milliseconds taken by all map tasks=47378432
		Total megabyte-milliseconds taken by all reduce tasks=29581312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=632
		CPU time spent (ms)=7600
		Physical memory (bytes) snapshot=1236815872
		Virtual memory (bytes) snapshot=15784263680
		Total committed heap usage (bytes)=1266679808
		Peak Map Physical memory (bytes)=291610624
		Peak Map Virtual memory (bytes)=3949223936
		Peak Reduce Physical memory (bytes)=388993024
		Peak Reduce Virtual memory (bytes)=3968983040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 44.179 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:29:09.230" starttime="20201116 17:29:09.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:29:09.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:29:09.231" starttime="20201116 17:29:09.230"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.231" starttime="20201116 17:28:20.661"></status>
</kw>
<msg timestamp="20201116 17:29:09.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:29:09.231" starttime="20201116 17:28:20.661"></status>
</kw>
<msg timestamp="20201116 17:29:09.232" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:28:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:28:23 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:29:09.232" starttime="20201116 17:28:20.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:29:09.232" starttime="20201116 17:29:09.232"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:29:09.233" critical="yes" starttime="20201116 17:28:20.635"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:29:09.240" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:29:09.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:29:09.251" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:29:09.252" starttime="20201116 17:29:09.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:29:09.253" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:29:09.253" starttime="20201116 17:29:09.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:29:09.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:29:09.254" starttime="20201116 17:29:09.253"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.254" starttime="20201116 17:29:09.236"></status>
</kw>
<msg timestamp="20201116 17:29:09.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:29:09.254" starttime="20201116 17:29:09.236"></status>
</kw>
<msg timestamp="20201116 17:29:09.254" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:29:09.255" starttime="20201116 17:29:09.235"></status>
</kw>
<msg timestamp="20201116 17:29:09.255" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:29:09.255" starttime="20201116 17:29:09.234"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:29:09.256" level="INFO">${random} = 34</msg>
<status status="PASS" endtime="20201116 17:29:09.256" starttime="20201116 17:29:09.255"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:29:09.261" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:29:09.261" starttime="20201116 17:29:09.260"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:29:09.262" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:29:09.262" starttime="20201116 17:29:09.261"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.262" starttime="20201116 17:29:09.259"></status>
</kw>
<msg timestamp="20201116 17:29:09.262" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:29:09.262" starttime="20201116 17:29:09.258"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.263" starttime="20201116 17:29:09.257"></status>
</kw>
<msg timestamp="20201116 17:29:09.263" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:29:09.263" starttime="20201116 17:29:09.257"></status>
</kw>
<msg timestamp="20201116 17:29:09.263" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:29:09.263" starttime="20201116 17:29:09.256"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:29:09.267" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:29:09.267" starttime="20201116 17:29:09.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:29:09.268" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:29:09.268" starttime="20201116 17:29:09.267"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.268" starttime="20201116 17:29:09.266"></status>
</kw>
<msg timestamp="20201116 17:29:09.268" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:29:09.268" starttime="20201116 17:29:09.266"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.269" starttime="20201116 17:29:09.265"></status>
</kw>
<msg timestamp="20201116 17:29:09.269" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:29:09.269" starttime="20201116 17:29:09.264"></status>
</kw>
<msg timestamp="20201116 17:29:09.269" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:29:09.269" starttime="20201116 17:29:09.263"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:29:09.273" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:29:09.273" starttime="20201116 17:29:09.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:29:09.274" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:29:09.274" starttime="20201116 17:29:09.273"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.274" starttime="20201116 17:29:09.272"></status>
</kw>
<msg timestamp="20201116 17:29:09.274" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:29:09.274" starttime="20201116 17:29:09.272"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:09.275" starttime="20201116 17:29:09.271"></status>
</kw>
<msg timestamp="20201116 17:29:09.275" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-34.txt</msg>
<status status="PASS" endtime="20201116 17:29:09.275" starttime="20201116 17:29:09.270"></status>
</kw>
<msg timestamp="20201116 17:29:09.275" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-34.txt</msg>
<status status="PASS" endtime="20201116 17:29:09.275" starttime="20201116 17:29:09.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:29:09.281" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-34.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:29:49.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:29:49.354" level="INFO">${output} = 2020-11-16 17:29:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:29:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:29:49.354" starttime="20201116 17:29:09.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:29:49.355" level="INFO">2020-11-16 17:29:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:29:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:29:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:29:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:29:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:29:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:29:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A98926AABEE9-&gt;8e02b5c8-3ef4-4367-a040-9182a7ccace3
2020-11-16 17:29:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:29:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:29:13 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:29:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605547604212_0002
2020-11-16 17:29:13 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:29:14 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:29:14 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:29:14 INFO  YarnClientImpl:329 - Submitted application application_1605547604212_0002
2020-11-16 17:29:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605547604212_0002/
2020-11-16 17:29:14 INFO  Job:1619 - Running job: job_1605547604212_0002
2020-11-16 17:29:23 INFO  Job:1640 - Job job_1605547604212_0002 running in uber mode : false
2020-11-16 17:29:23 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:29:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:29:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:29:42 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:29:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:29:48 INFO  Job:1658 - Job job_1605547604212_0002 completed successfully
2020-11-16 17:29:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47508
		Total time spent by all reduces in occupied slots (ms)=17360
		Total time spent by all map tasks (ms)=11877
		Total time spent by all reduce tasks (ms)=4340
		Total vcore-milliseconds taken by all map tasks=11877
		Total vcore-milliseconds taken by all reduce tasks=4340
		Total megabyte-milliseconds taken by all map tasks=48648192
		Total megabyte-milliseconds taken by all reduce tasks=17776640
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=708
		CPU time spent (ms)=7850
		Physical memory (bytes) snapshot=1170321408
		Virtual memory (bytes) snapshot=15802880000
		Total committed heap usage (bytes)=1024458752
		Peak Map Physical memory (bytes)=298717184
		Peak Map Virtual memory (bytes)=3951357952
		Peak Reduce Physical memory (bytes)=295534592
		Peak Reduce Virtual memory (bytes)=3967807488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:29:49.355" starttime="20201116 17:29:49.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:29:49.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:29:49.356" starttime="20201116 17:29:49.356"></status>
</kw>
<status status="PASS" endtime="20201116 17:29:49.357" starttime="20201116 17:29:09.276"></status>
</kw>
<msg timestamp="20201116 17:29:49.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:29:49.357" starttime="20201116 17:29:09.276"></status>
</kw>
<msg timestamp="20201116 17:29:49.357" level="INFO">${output} = 2020-11-16 17:29:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-16 17:29:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:29:49.357" starttime="20201116 17:29:09.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:29:49.358" starttime="20201116 17:29:49.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:29:49.359" starttime="20201116 17:29:49.358"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:29:49.359" critical="yes" starttime="20201116 17:29:09.233"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:29:49.361" starttime="20201116 17:28:20.569"></status>
</suite>
<status status="PASS" elapsedtime="243421" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="674174" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
