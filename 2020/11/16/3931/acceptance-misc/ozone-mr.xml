<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 17:49:29.033" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:31.133" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:33.810" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 17:35:33.810" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:35:33.810" starttime="20201116 17:35:31.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:33.811" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:35:33.811" starttime="20201116 17:35:33.810"></status>
</kw>
<msg timestamp="20201116 17:35:33.811" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:35:33.811" starttime="20201116 17:35:31.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:33.818" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:36.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:35:36.325" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:35:36.325" starttime="20201116 17:35:33.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:36.327" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:35:36.327" starttime="20201116 17:35:36.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:35:36.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:35:36.328" starttime="20201116 17:35:36.327"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:36.328" starttime="20201116 17:35:33.814"></status>
</kw>
<msg timestamp="20201116 17:35:36.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:35:36.328" starttime="20201116 17:35:33.813"></status>
</kw>
<msg timestamp="20201116 17:35:36.328" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 17:35:36.328" starttime="20201116 17:35:33.813"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 17:35:36.329" starttime="20201116 17:35:36.329"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:36.329" starttime="20201116 17:35:33.812"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:36.329" starttime="20201116 17:35:33.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:36.338" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:38.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:35:38.453" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:35:38.453" starttime="20201116 17:35:36.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:38.454" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:35:38.454" starttime="20201116 17:35:38.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:35:38.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:35:38.455" starttime="20201116 17:35:38.454"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:38.455" starttime="20201116 17:35:36.332"></status>
</kw>
<msg timestamp="20201116 17:35:38.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:35:38.456" starttime="20201116 17:35:36.332"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:38.456" starttime="20201116 17:35:36.331"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:38.456" starttime="20201116 17:35:36.330"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:38.456" starttime="20201116 17:35:36.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 17:35:38.457" starttime="20201116 17:35:38.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:38.461" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:41.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:35:41.058" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:35:38.413Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:35:41.058" starttime="20201116 17:35:38.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:41.059" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:35:38.413Z",
  "modificationTime" : "2020-11-16T17:35:38.413Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 17:35:41.059" starttime="20201116 17:35:41.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:35:41.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:35:41.060" starttime="20201116 17:35:41.060"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:41.060" starttime="20201116 17:35:38.458"></status>
</kw>
<msg timestamp="20201116 17:35:41.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:35:41.061" starttime="20201116 17:35:38.458"></status>
</kw>
<msg timestamp="20201116 17:35:41.061" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:35:38.413Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:35:41.061" starttime="20201116 17:35:38.457"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 17:35:41.062" starttime="20201116 17:35:41.061"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:35:41.066" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:35:41.066" starttime="20201116 17:35:41.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:35:41.067" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:35:41.067" starttime="20201116 17:35:41.066"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:41.067" starttime="20201116 17:35:41.065"></status>
</kw>
<msg timestamp="20201116 17:35:41.067" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:35:41.067" starttime="20201116 17:35:41.064"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:41.067" starttime="20201116 17:35:41.063"></status>
</kw>
<msg timestamp="20201116 17:35:41.067" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:35:41.068" starttime="20201116 17:35:41.063"></status>
</kw>
<msg timestamp="20201116 17:35:41.068" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:35:41.068" starttime="20201116 17:35:41.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:41.071" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:43.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:35:43.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:35:43.561" starttime="20201116 17:35:41.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:43.562" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:35:43.562" starttime="20201116 17:35:43.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:35:43.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:35:43.563" starttime="20201116 17:35:43.562"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:43.563" starttime="20201116 17:35:41.069"></status>
</kw>
<msg timestamp="20201116 17:35:43.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:35:43.563" starttime="20201116 17:35:41.069"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:43.563" starttime="20201116 17:35:41.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:43.572" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:49.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:35:49.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:35:49.412" starttime="20201116 17:35:43.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:49.413" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:35:49.413" starttime="20201116 17:35:49.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:35:49.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:35:49.414" starttime="20201116 17:35:49.413"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:49.414" starttime="20201116 17:35:43.565"></status>
</kw>
<msg timestamp="20201116 17:35:49.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:35:49.414" starttime="20201116 17:35:43.564"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:49.414" starttime="20201116 17:35:43.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:49.420" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:54.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:35:54.033" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:35:54.033" starttime="20201116 17:35:49.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:54.034" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:35:54.035" starttime="20201116 17:35:54.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:35:54.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:35:54.036" starttime="20201116 17:35:54.035"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:54.036" starttime="20201116 17:35:49.416"></status>
</kw>
<msg timestamp="20201116 17:35:54.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:35:54.036" starttime="20201116 17:35:49.416"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:54.036" starttime="20201116 17:35:49.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:54.040" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:35:58.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:35:58.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:35:58.482" starttime="20201116 17:35:54.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:35:58.483" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:35:58.483" starttime="20201116 17:35:58.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:35:58.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:35:58.484" starttime="20201116 17:35:58.484"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:58.485" starttime="20201116 17:35:54.038"></status>
</kw>
<msg timestamp="20201116 17:35:58.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:35:58.485" starttime="20201116 17:35:54.037"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:58.485" starttime="20201116 17:35:54.037"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:35:58.485" critical="yes" starttime="20201116 17:35:31.128"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:35:58.492" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:35:58.492" starttime="20201116 17:35:58.491"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:35:58.493" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:35:58.493" starttime="20201116 17:35:58.492"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:58.493" starttime="20201116 17:35:58.491"></status>
</kw>
<msg timestamp="20201116 17:35:58.493" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:35:58.493" starttime="20201116 17:35:58.490"></status>
</kw>
<status status="PASS" endtime="20201116 17:35:58.493" starttime="20201116 17:35:58.489"></status>
</kw>
<msg timestamp="20201116 17:35:58.494" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:35:58.494" starttime="20201116 17:35:58.489"></status>
</kw>
<msg timestamp="20201116 17:35:58.494" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:35:58.494" starttime="20201116 17:35:58.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:35:58.499" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:36:00.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:36:00.834" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:36:00.834" starttime="20201116 17:35:58.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:36:00.835" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:36:00.835" starttime="20201116 17:36:00.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:36:00.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:36:00.836" starttime="20201116 17:36:00.835"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:00.836" starttime="20201116 17:35:58.495"></status>
</kw>
<msg timestamp="20201116 17:36:00.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:36:00.837" starttime="20201116 17:35:58.495"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:00.837" starttime="20201116 17:35:58.494"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:36:00.840" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:36:02.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:36:02.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:36:02.957" starttime="20201116 17:36:00.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:36:02.958" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:36:02.958" starttime="20201116 17:36:02.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:36:02.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:36:02.959" starttime="20201116 17:36:02.958"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:02.959" starttime="20201116 17:36:00.838"></status>
</kw>
<msg timestamp="20201116 17:36:02.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:36:02.959" starttime="20201116 17:36:00.838"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:02.960" starttime="20201116 17:36:00.837"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:36:02.960" critical="yes" starttime="20201116 17:35:58.486"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 17:36:02.961" starttime="20201116 17:35:31.061"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:37:42.199" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:37:42.199" starttime="20201116 17:37:42.198"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:37:42.199" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:37:42.199" starttime="20201116 17:37:42.199"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:42.200" starttime="20201116 17:37:42.198"></status>
</kw>
<msg timestamp="20201116 17:37:42.200" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:37:42.200" starttime="20201116 17:37:42.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:37:42.201" starttime="20201116 17:37:42.201"></status>
</kw>
<msg timestamp="20201116 17:37:42.201" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:37:42.201" starttime="20201116 17:37:42.200"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:42.202" starttime="20201116 17:37:42.196"></status>
</kw>
<msg timestamp="20201116 17:37:42.202" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:37:42.202" starttime="20201116 17:37:42.196"></status>
</kw>
<msg timestamp="20201116 17:37:42.202" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:37:42.202" starttime="20201116 17:37:42.195"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:37:42.203" level="INFO">${random} = 49999</msg>
<status status="PASS" endtime="20201116 17:37:42.203" starttime="20201116 17:37:42.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:37:42.208" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-49999 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:37:45.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:37:45.705" level="INFO">${output} = 2020-11-16 17:37:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:37:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:37:45.705" starttime="20201116 17:37:42.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:37:45.706" level="INFO">2020-11-16 17:37:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:37:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:37:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:37:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:37:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CCF3393A5232-&gt;beffa751-051b-4f5a-a733-25d64a4a74b8
2020-11-16 17:37:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:37:45.706" starttime="20201116 17:37:45.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:37:45.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:37:45.707" starttime="20201116 17:37:45.706"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:45.707" starttime="20201116 17:37:42.204"></status>
</kw>
<msg timestamp="20201116 17:37:45.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:37:45.707" starttime="20201116 17:37:42.203"></status>
</kw>
<msg timestamp="20201116 17:37:45.708" level="INFO">${result} = 2020-11-16 17:37:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:37:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:37:45.708" starttime="20201116 17:37:42.203"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:37:45.713" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:37:47.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:37:47.611" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:36 ofs://om/volume1/bucket1/ozone-16260
-rw-...</msg>
<status status="PASS" endtime="20201116 17:37:47.611" starttime="20201116 17:37:45.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:37:47.612" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:36 ofs://om/volume1/bucket1/ozone-16260
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:37 ofs://om/volume1/bucket1/ozone-49999
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:36 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:37 ofs://om/volume1/bucket1/wordcount-75.txt</msg>
<status status="PASS" endtime="20201116 17:37:47.612" starttime="20201116 17:37:47.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:37:47.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:37:47.613" starttime="20201116 17:37:47.612"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:47.613" starttime="20201116 17:37:45.710"></status>
</kw>
<msg timestamp="20201116 17:37:47.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:37:47.614" starttime="20201116 17:37:45.710"></status>
</kw>
<msg timestamp="20201116 17:37:47.614" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:36 ofs://om/volume1/bucket1/ozone-16260
-rw-...</msg>
<status status="PASS" endtime="20201116 17:37:47.614" starttime="20201116 17:37:45.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:37:47.615" starttime="20201116 17:37:47.614"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:37:47.615" critical="yes" starttime="20201116 17:37:42.194"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:37:47.616" starttime="20201116 17:37:42.120"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:36:07.908" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:36:07.908" starttime="20201116 17:36:07.908"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:36:07.909" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:36:07.909" starttime="20201116 17:36:07.908"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:07.909" starttime="20201116 17:36:07.907"></status>
</kw>
<msg timestamp="20201116 17:36:07.909" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:36:07.909" starttime="20201116 17:36:07.907"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:07.910" starttime="20201116 17:36:07.906"></status>
</kw>
<msg timestamp="20201116 17:36:07.910" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:36:07.910" starttime="20201116 17:36:07.905"></status>
</kw>
<msg timestamp="20201116 17:36:07.911" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:36:07.911" starttime="20201116 17:36:07.904"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:36:07.911" level="INFO">${random} = 16260</msg>
<status status="PASS" endtime="20201116 17:36:07.911" starttime="20201116 17:36:07.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:36:07.917" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-16260 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:36:11.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:36:11.624" level="INFO">${output} = 2020-11-16 17:36:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:36:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:36:11.624" starttime="20201116 17:36:07.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:36:11.625" level="INFO">2020-11-16 17:36:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:36:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:36:10 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:36:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:36:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A4153388B510-&gt;beffa751-051b-4f5a-a733-25d64a4a74b8
2020-11-16 17:36:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:36:11.625" starttime="20201116 17:36:11.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:36:11.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:36:11.626" starttime="20201116 17:36:11.626"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:11.627" starttime="20201116 17:36:07.912"></status>
</kw>
<msg timestamp="20201116 17:36:11.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:36:11.627" starttime="20201116 17:36:07.912"></status>
</kw>
<msg timestamp="20201116 17:36:11.627" level="INFO">${result} = 2020-11-16 17:36:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:36:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 ...</msg>
<status status="PASS" endtime="20201116 17:36:11.627" starttime="20201116 17:36:07.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:36:11.634" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:36:13.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:36:13.578" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:36 o3fs://bucket1.volume1.om/ozone-16260
dr...</msg>
<status status="PASS" endtime="20201116 17:36:13.578" starttime="20201116 17:36:11.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:36:13.579" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:36 o3fs://bucket1.volume1.om/ozone-16260
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:36 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:36:13.579" starttime="20201116 17:36:13.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:36:13.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:36:13.580" starttime="20201116 17:36:13.579"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:13.580" starttime="20201116 17:36:11.630"></status>
</kw>
<msg timestamp="20201116 17:36:13.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:36:13.581" starttime="20201116 17:36:11.628"></status>
</kw>
<msg timestamp="20201116 17:36:13.581" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-16 17:36 o3fs://bucket1.volume1.om/ozone-16260
dr...</msg>
<status status="PASS" endtime="20201116 17:36:13.581" starttime="20201116 17:36:11.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:36:13.582" starttime="20201116 17:36:13.581"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:36:13.582" critical="yes" starttime="20201116 17:36:07.903"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:36:13.584" starttime="20201116 17:36:07.835"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:37:52.654" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:37:52.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:37:52.658" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:52.658" starttime="20201116 17:37:52.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:37:52.659" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:52.659" starttime="20201116 17:37:52.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:37:52.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:37:52.660" starttime="20201116 17:37:52.659"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:52.660" starttime="20201116 17:37:52.646"></status>
</kw>
<msg timestamp="20201116 17:37:52.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:37:52.660" starttime="20201116 17:37:52.646"></status>
</kw>
<msg timestamp="20201116 17:37:52.661" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:52.661" starttime="20201116 17:37:52.645"></status>
</kw>
<msg timestamp="20201116 17:37:52.661" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:52.661" starttime="20201116 17:37:52.645"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:37:52.666" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:37:52.666" starttime="20201116 17:37:52.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:37:52.667" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:37:52.667" starttime="20201116 17:37:52.666"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:52.667" starttime="20201116 17:37:52.664"></status>
</kw>
<msg timestamp="20201116 17:37:52.667" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:37:52.667" starttime="20201116 17:37:52.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:37:52.669" starttime="20201116 17:37:52.668"></status>
</kw>
<msg timestamp="20201116 17:37:52.669" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:37:52.669" starttime="20201116 17:37:52.667"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:52.669" starttime="20201116 17:37:52.663"></status>
</kw>
<msg timestamp="20201116 17:37:52.669" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:37:52.669" starttime="20201116 17:37:52.662"></status>
</kw>
<msg timestamp="20201116 17:37:52.670" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:37:52.670" starttime="20201116 17:37:52.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:37:52.673" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:38:28.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:38:28.077" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:37:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:37:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:38:28.077" starttime="20201116 17:37:52.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:38:28.078" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:37:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:37:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:37:54 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:37:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:37:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9FE22CB2026F-&gt;beffa751-051b-4f5a-a733-25d64a4a74b8
2020-11-16 17:37:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:37:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:37:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:37:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:37:56 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:37:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605548087512_0003
2020-11-16 17:37:57 INFO  YarnClientImpl:273 - Submitted application application_1605548087512_0003
2020-11-16 17:37:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605548087512_0003/
2020-11-16 17:37:57 INFO  Job:1339 - Running job: job_1605548087512_0003
2020-11-16 17:38:05 INFO  Job:1360 - Job job_1605548087512_0003 running in uber mode : false
2020-11-16 17:38:05 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:38:12 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:38:17 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:38:22 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:38:27 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:38:27 INFO  Job:1378 - Job job_1605548087512_0003 completed successfully
2020-11-16 17:38:27 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610697
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44592
		Total time spent by all reduces in occupied slots (ms)=16144
		Total time spent by all map tasks (ms)=11148
		Total time spent by all reduce tasks (ms)=4036
		Total vcore-milliseconds taken by all map tasks=11148
		Total vcore-milliseconds taken by all reduce tasks=4036
		Total megabyte-milliseconds taken by all map tasks=45662208
		Total megabyte-milliseconds taken by all reduce tasks=16531456
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=626
		CPU time spent (ms)=7610
		Physical memory (bytes) snapshot=1142915072
		Virtual memory (bytes) snapshot=15780986880
		Total committed heap usage (bytes)=926416896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.416 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:38:28.078" starttime="20201116 17:38:28.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:38:28.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:38:28.079" starttime="20201116 17:38:28.078"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.079" starttime="20201116 17:37:52.671"></status>
</kw>
<msg timestamp="20201116 17:38:28.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:38:28.080" starttime="20201116 17:37:52.670"></status>
</kw>
<msg timestamp="20201116 17:38:28.080" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:37:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:37:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:38:28.080" starttime="20201116 17:37:52.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:38:28.081" starttime="20201116 17:38:28.080"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:38:28.081" critical="yes" starttime="20201116 17:37:52.644"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:38:28.086" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:38:28.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:38:28.098" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:38:28.098" starttime="20201116 17:38:28.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:38:28.099" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:38:28.099" starttime="20201116 17:38:28.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:38:28.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:38:28.100" starttime="20201116 17:38:28.099"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.100" starttime="20201116 17:38:28.084"></status>
</kw>
<msg timestamp="20201116 17:38:28.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:38:28.101" starttime="20201116 17:38:28.084"></status>
</kw>
<msg timestamp="20201116 17:38:28.101" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:38:28.101" starttime="20201116 17:38:28.083"></status>
</kw>
<msg timestamp="20201116 17:38:28.101" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:38:28.101" starttime="20201116 17:38:28.083"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:38:28.102" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201116 17:38:28.102" starttime="20201116 17:38:28.101"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:38:28.106" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:38:28.106" starttime="20201116 17:38:28.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:38:28.107" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:38:28.107" starttime="20201116 17:38:28.106"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.107" starttime="20201116 17:38:28.105"></status>
</kw>
<msg timestamp="20201116 17:38:28.107" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:38:28.107" starttime="20201116 17:38:28.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:38:28.108" starttime="20201116 17:38:28.108"></status>
</kw>
<msg timestamp="20201116 17:38:28.109" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:38:28.109" starttime="20201116 17:38:28.108"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.109" starttime="20201116 17:38:28.104"></status>
</kw>
<msg timestamp="20201116 17:38:28.109" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:38:28.109" starttime="20201116 17:38:28.103"></status>
</kw>
<msg timestamp="20201116 17:38:28.109" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:38:28.109" starttime="20201116 17:38:28.102"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:38:28.113" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:38:28.113" starttime="20201116 17:38:28.113"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:38:28.114" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:38:28.114" starttime="20201116 17:38:28.113"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.114" starttime="20201116 17:38:28.112"></status>
</kw>
<msg timestamp="20201116 17:38:28.114" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:38:28.114" starttime="20201116 17:38:28.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:38:28.116" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 17:38:28.116" starttime="20201116 17:38:28.115"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:38:28.117" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 17:38:28.117" starttime="20201116 17:38:28.116"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.117" starttime="20201116 17:38:28.115"></status>
</kw>
<msg timestamp="20201116 17:38:28.117" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 17:38:28.117" starttime="20201116 17:38:28.114"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.117" starttime="20201116 17:38:28.111"></status>
</kw>
<msg timestamp="20201116 17:38:28.118" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:38:28.118" starttime="20201116 17:38:28.110"></status>
</kw>
<msg timestamp="20201116 17:38:28.118" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:38:28.118" starttime="20201116 17:38:28.110"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:38:28.122" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:38:28.122" starttime="20201116 17:38:28.121"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:38:28.122" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:38:28.123" starttime="20201116 17:38:28.122"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.123" starttime="20201116 17:38:28.121"></status>
</kw>
<msg timestamp="20201116 17:38:28.123" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:38:28.123" starttime="20201116 17:38:28.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:38:28.125" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 17:38:28.125" starttime="20201116 17:38:28.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:38:28.126" level="INFO">${result} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201116 17:38:28.126" starttime="20201116 17:38:28.125"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.126" starttime="20201116 17:38:28.124"></status>
</kw>
<msg timestamp="20201116 17:38:28.126" level="INFO">${path_with_leading} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201116 17:38:28.126" starttime="20201116 17:38:28.124"></status>
</kw>
<status status="PASS" endtime="20201116 17:38:28.127" starttime="20201116 17:38:28.120"></status>
</kw>
<msg timestamp="20201116 17:38:28.127" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201116 17:38:28.127" starttime="20201116 17:38:28.119"></status>
</kw>
<msg timestamp="20201116 17:38:28.127" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201116 17:38:28.127" starttime="20201116 17:38:28.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:38:28.132" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:39:05.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:39:05.350" level="INFO">${output} = 2020-11-16 17:38:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:38:30 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:39:05.350" starttime="20201116 17:38:28.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:39:05.351" level="INFO">2020-11-16 17:38:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:38:30 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:38:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:38:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:38:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:38:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:38:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3EC5B4F5F795-&gt;beffa751-051b-4f5a-a733-25d64a4a74b8
2020-11-16 17:38:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:38:31 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:38:31 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:38:32 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605548087512_0004
2020-11-16 17:38:32 INFO  YarnClientImpl:273 - Submitted application application_1605548087512_0004
2020-11-16 17:38:32 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605548087512_0004/
2020-11-16 17:38:32 INFO  Job:1339 - Running job: job_1605548087512_0004
2020-11-16 17:38:40 INFO  Job:1360 - Job job_1605548087512_0004 running in uber mode : false
2020-11-16 17:38:40 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:38:47 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:38:52 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:38:57 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:39:01 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:39:04 INFO  Job:1378 - Job job_1605548087512_0004 completed successfully
2020-11-16 17:39:04 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42416
		Total time spent by all reduces in occupied slots (ms)=15620
		Total time spent by all map tasks (ms)=10604
		Total time spent by all reduce tasks (ms)=3905
		Total vcore-milliseconds taken by all map tasks=10604
		Total vcore-milliseconds taken by all reduce tasks=3905
		Total megabyte-milliseconds taken by all map tasks=43433984
		Total megabyte-milliseconds taken by all reduce tasks=15994880
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=633
		CPU time spent (ms)=7880
		Physical memory (bytes) snapshot=1151574016
		Virtual memory (bytes) snapshot=15787577344
		Total committed heap usage (bytes)=1042284544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:39:05.352" starttime="20201116 17:39:05.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:39:05.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:39:05.352" starttime="20201116 17:39:05.352"></status>
</kw>
<status status="PASS" endtime="20201116 17:39:05.353" starttime="20201116 17:38:28.128"></status>
</kw>
<msg timestamp="20201116 17:39:05.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:39:05.353" starttime="20201116 17:38:28.128"></status>
</kw>
<msg timestamp="20201116 17:39:05.353" level="INFO">${output} = 2020-11-16 17:38:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:38:30 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:39:05.353" starttime="20201116 17:38:28.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:39:05.354" starttime="20201116 17:39:05.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:39:05.354" starttime="20201116 17:39:05.354"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:39:05.355" critical="yes" starttime="20201116 17:38:28.082"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:39:05.356" starttime="20201116 17:37:52.582"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:36:18.456" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:36:18.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:36:18.463" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:36:18.463" starttime="20201116 17:36:18.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:36:18.464" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:36:18.464" starttime="20201116 17:36:18.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:36:18.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:36:18.465" starttime="20201116 17:36:18.464"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:18.465" starttime="20201116 17:36:18.451"></status>
</kw>
<msg timestamp="20201116 17:36:18.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:36:18.465" starttime="20201116 17:36:18.450"></status>
</kw>
<msg timestamp="20201116 17:36:18.465" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:36:18.465" starttime="20201116 17:36:18.450"></status>
</kw>
<msg timestamp="20201116 17:36:18.466" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:36:18.466" starttime="20201116 17:36:18.449"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:36:18.471" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:36:18.471" starttime="20201116 17:36:18.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:36:18.472" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:36:18.472" starttime="20201116 17:36:18.471"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:18.472" starttime="20201116 17:36:18.469"></status>
</kw>
<msg timestamp="20201116 17:36:18.472" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:36:18.472" starttime="20201116 17:36:18.468"></status>
</kw>
<status status="PASS" endtime="20201116 17:36:18.473" starttime="20201116 17:36:18.468"></status>
</kw>
<msg timestamp="20201116 17:36:18.473" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:36:18.473" starttime="20201116 17:36:18.467"></status>
</kw>
<msg timestamp="20201116 17:36:18.473" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:36:18.473" starttime="20201116 17:36:18.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:36:18.477" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:37:00.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:37:00.954" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:36:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:36:20 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:37:00.954" starttime="20201116 17:36:18.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:37:00.955" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:36:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:36:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:36:20 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:36:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:36:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-40E44FC5577D-&gt;beffa751-051b-4f5a-a733-25d64a4a74b8
2020-11-16 17:36:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:36:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:36:22 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:36:22 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:36:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605548087512_0001
2020-11-16 17:36:23 INFO  YarnClientImpl:273 - Submitted application application_1605548087512_0001
2020-11-16 17:36:23 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605548087512_0001/
2020-11-16 17:36:23 INFO  Job:1339 - Running job: job_1605548087512_0001
2020-11-16 17:36:34 INFO  Job:1360 - Job job_1605548087512_0001 running in uber mode : false
2020-11-16 17:36:34 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:36:40 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:36:46 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:36:51 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:36:59 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:37:00 INFO  Job:1378 - Job job_1605548087512_0001 completed successfully
2020-11-16 17:37:00 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610909
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42628
		Total time spent by all reduces in occupied slots (ms)=29816
		Total time spent by all map tasks (ms)=10657
		Total time spent by all reduce tasks (ms)=7454
		Total vcore-milliseconds taken by all map tasks=10657
		Total vcore-milliseconds taken by all reduce tasks=7454
		Total megabyte-milliseconds taken by all map tasks=43651072
		Total megabyte-milliseconds taken by all reduce tasks=30531584
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=604
		CPU time spent (ms)=7300
		Physical memory (bytes) snapshot=1162612736
		Virtual memory (bytes) snapshot=15788457984
		Total committed heap usage (bytes)=989331456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.371 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:37:00.955" starttime="20201116 17:37:00.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:37:00.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:37:00.956" starttime="20201116 17:37:00.956"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.957" starttime="20201116 17:36:18.474"></status>
</kw>
<msg timestamp="20201116 17:37:00.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:37:00.957" starttime="20201116 17:36:18.474"></status>
</kw>
<msg timestamp="20201116 17:37:00.957" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:36:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:36:20 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201116 17:37:00.957" starttime="20201116 17:36:18.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:37:00.958" starttime="20201116 17:37:00.957"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:37:00.958" critical="yes" starttime="20201116 17:36:18.449"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:37:00.971" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:37:00.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:37:00.977" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:00.977" starttime="20201116 17:37:00.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:37:00.978" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:00.978" starttime="20201116 17:37:00.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:37:00.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:37:00.979" starttime="20201116 17:37:00.978"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.979" starttime="20201116 17:37:00.961"></status>
</kw>
<msg timestamp="20201116 17:37:00.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:37:00.979" starttime="20201116 17:37:00.961"></status>
</kw>
<msg timestamp="20201116 17:37:00.980" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:00.980" starttime="20201116 17:37:00.960"></status>
</kw>
<msg timestamp="20201116 17:37:00.980" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201116 17:37:00.980" starttime="20201116 17:37:00.960"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:37:00.981" level="INFO">${random} = 75</msg>
<status status="PASS" endtime="20201116 17:37:00.981" starttime="20201116 17:37:00.980"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:37:00.985" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:37:00.985" starttime="20201116 17:37:00.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:37:00.986" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:37:00.986" starttime="20201116 17:37:00.986"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.986" starttime="20201116 17:37:00.984"></status>
</kw>
<msg timestamp="20201116 17:37:00.987" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:37:00.987" starttime="20201116 17:37:00.983"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.987" starttime="20201116 17:37:00.983"></status>
</kw>
<msg timestamp="20201116 17:37:00.987" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:37:00.987" starttime="20201116 17:37:00.982"></status>
</kw>
<msg timestamp="20201116 17:37:00.987" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:37:00.987" starttime="20201116 17:37:00.981"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:37:00.992" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:37:00.992" starttime="20201116 17:37:00.991"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:37:00.992" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:37:00.993" starttime="20201116 17:37:00.992"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.993" starttime="20201116 17:37:00.990"></status>
</kw>
<msg timestamp="20201116 17:37:00.993" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:37:00.993" starttime="20201116 17:37:00.989"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.993" starttime="20201116 17:37:00.989"></status>
</kw>
<msg timestamp="20201116 17:37:00.993" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:37:00.993" starttime="20201116 17:37:00.988"></status>
</kw>
<msg timestamp="20201116 17:37:00.994" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:37:00.994" starttime="20201116 17:37:00.987"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:37:00.997" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:37:00.997" starttime="20201116 17:37:00.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:37:00.998" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:37:00.998" starttime="20201116 17:37:00.998"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.998" starttime="20201116 17:37:00.996"></status>
</kw>
<msg timestamp="20201116 17:37:00.998" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:37:00.999" starttime="20201116 17:37:00.996"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:00.999" starttime="20201116 17:37:00.995"></status>
</kw>
<msg timestamp="20201116 17:37:00.999" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-75.txt</msg>
<status status="PASS" endtime="20201116 17:37:00.999" starttime="20201116 17:37:00.995"></status>
</kw>
<msg timestamp="20201116 17:37:00.999" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-75.txt</msg>
<status status="PASS" endtime="20201116 17:37:00.999" starttime="20201116 17:37:00.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:37:01.004" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-75.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:37:37.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:37:37.278" level="INFO">${output} = 2020-11-16 17:37:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:37:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:37:37.278" starttime="20201116 17:37:01.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:37:37.279" level="INFO">2020-11-16 17:37:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:37:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:37:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:37:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-16 17:37:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-16 17:37:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:37:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-199B4539EA3D-&gt;beffa751-051b-4f5a-a733-25d64a4a74b8
2020-11-16 17:37:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:37:04 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-16 17:37:04 INFO  JobSubmitter:198 - number of splits:3
2020-11-16 17:37:05 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605548087512_0002
2020-11-16 17:37:05 INFO  YarnClientImpl:273 - Submitted application application_1605548087512_0002
2020-11-16 17:37:05 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605548087512_0002/
2020-11-16 17:37:05 INFO  Job:1339 - Running job: job_1605548087512_0002
2020-11-16 17:37:13 INFO  Job:1360 - Job job_1605548087512_0002 running in uber mode : false
2020-11-16 17:37:13 INFO  Job:1367 -  map 0% reduce 0%
2020-11-16 17:37:20 INFO  Job:1367 -  map 33% reduce 0%
2020-11-16 17:37:25 INFO  Job:1367 -  map 67% reduce 0%
2020-11-16 17:37:30 INFO  Job:1367 -  map 100% reduce 0%
2020-11-16 17:37:35 INFO  Job:1367 -  map 100% reduce 100%
2020-11-16 17:37:36 INFO  Job:1378 - Job job_1605548087512_0002 completed successfully
2020-11-16 17:37:36 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43848
		Total time spent by all reduces in occupied slots (ms)=15408
		Total time spent by all map tasks (ms)=10962
		Total time spent by all reduce tasks (ms)=3852
		Total vcore-milliseconds taken by all map tasks=10962
		Total vcore-milliseconds taken by all reduce tasks=3852
		Total megabyte-milliseconds taken by all map tasks=44900352
		Total megabyte-milliseconds taken by all reduce tasks=15777792
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=7630
		Physical memory (bytes) snapshot=1155743744
		Virtual memory (bytes) snapshot=15786549248
		Total committed heap usage (bytes)=1005060096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:37:37.280" starttime="20201116 17:37:37.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:37:37.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:37:37.281" starttime="20201116 17:37:37.280"></status>
</kw>
<status status="PASS" endtime="20201116 17:37:37.281" starttime="20201116 17:37:01.001"></status>
</kw>
<msg timestamp="20201116 17:37:37.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:37:37.281" starttime="20201116 17:37:01.001"></status>
</kw>
<msg timestamp="20201116 17:37:37.282" level="INFO">${output} = 2020-11-16 17:37:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-11-16 17:37:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201116 17:37:37.282" starttime="20201116 17:37:01.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:37:37.282" starttime="20201116 17:37:37.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:37:37.283" starttime="20201116 17:37:37.282"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:37:37.283" critical="yes" starttime="20201116 17:37:00.959"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:37:37.284" starttime="20201116 17:36:18.388"></status>
</suite>
<status status="PASS" elapsedtime="194815" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:12.852" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:16.029" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 17:40:16.029" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:40:16.029" starttime="20201116 17:40:12.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:16.030" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:40:16.031" starttime="20201116 17:40:16.030"></status>
</kw>
<msg timestamp="20201116 17:40:16.031" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:40:16.031" starttime="20201116 17:40:12.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:16.038" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:18.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:18.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:18.385" starttime="20201116 17:40:16.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:18.386" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:18.387" starttime="20201116 17:40:18.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:18.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:18.388" starttime="20201116 17:40:18.387"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:18.389" starttime="20201116 17:40:16.033"></status>
</kw>
<msg timestamp="20201116 17:40:18.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:18.389" starttime="20201116 17:40:16.033"></status>
</kw>
<msg timestamp="20201116 17:40:18.389" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 17:40:18.389" starttime="20201116 17:40:16.032"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 17:40:18.393" starttime="20201116 17:40:18.390"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:18.393" starttime="20201116 17:40:16.032"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:18.393" starttime="20201116 17:40:16.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:18.401" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:20.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:20.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:20.711" starttime="20201116 17:40:18.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:20.712" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:20.712" starttime="20201116 17:40:20.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:20.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:20.713" starttime="20201116 17:40:20.712"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:20.713" starttime="20201116 17:40:18.397"></status>
</kw>
<msg timestamp="20201116 17:40:20.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:20.713" starttime="20201116 17:40:18.396"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:20.713" starttime="20201116 17:40:18.394"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:20.714" starttime="20201116 17:40:18.393"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:20.714" starttime="20201116 17:40:18.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 17:40:20.714" starttime="20201116 17:40:20.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:20.718" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:23.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:23.005" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:40:20.584Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:40:23.005" starttime="20201116 17:40:20.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:23.006" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:40:20.584Z",
  "modificationTime" : "2020-11-16T17:40:20.584Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 17:40:23.006" starttime="20201116 17:40:23.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:23.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:23.007" starttime="20201116 17:40:23.006"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:23.007" starttime="20201116 17:40:20.716"></status>
</kw>
<msg timestamp="20201116 17:40:23.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:23.007" starttime="20201116 17:40:20.715"></status>
</kw>
<msg timestamp="20201116 17:40:23.008" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:40:20.584Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:40:23.008" starttime="20201116 17:40:20.714"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 17:40:23.008" starttime="20201116 17:40:23.008"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:40:23.013" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:40:23.013" starttime="20201116 17:40:23.012"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:40:23.013" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:40:23.013" starttime="20201116 17:40:23.013"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:23.014" starttime="20201116 17:40:23.011"></status>
</kw>
<msg timestamp="20201116 17:40:23.014" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:40:23.014" starttime="20201116 17:40:23.011"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:23.014" starttime="20201116 17:40:23.010"></status>
</kw>
<msg timestamp="20201116 17:40:23.014" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:40:23.014" starttime="20201116 17:40:23.009"></status>
</kw>
<msg timestamp="20201116 17:40:23.016" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:40:23.016" starttime="20201116 17:40:23.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:23.020" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:25.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:25.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:25.439" starttime="20201116 17:40:23.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:25.440" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:25.440" starttime="20201116 17:40:25.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:25.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:25.441" starttime="20201116 17:40:25.440"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:25.441" starttime="20201116 17:40:23.017"></status>
</kw>
<msg timestamp="20201116 17:40:25.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:25.441" starttime="20201116 17:40:23.017"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:25.442" starttime="20201116 17:40:23.017"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:25.445" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:30.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:30.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:30.938" starttime="20201116 17:40:25.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:30.939" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:30.939" starttime="20201116 17:40:30.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:30.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:30.940" starttime="20201116 17:40:30.939"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:30.940" starttime="20201116 17:40:25.443"></status>
</kw>
<msg timestamp="20201116 17:40:30.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:30.940" starttime="20201116 17:40:25.443"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:30.941" starttime="20201116 17:40:25.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:30.944" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:35.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:35.027" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:35.027" starttime="20201116 17:40:30.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:35.028" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:35.028" starttime="20201116 17:40:35.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:35.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:35.029" starttime="20201116 17:40:35.028"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:35.029" starttime="20201116 17:40:30.942"></status>
</kw>
<msg timestamp="20201116 17:40:35.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:35.029" starttime="20201116 17:40:30.941"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:35.029" starttime="20201116 17:40:30.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:35.034" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:39.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:39.514" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:39.514" starttime="20201116 17:40:35.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:39.516" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:39.516" starttime="20201116 17:40:39.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:39.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:39.517" starttime="20201116 17:40:39.516"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:39.517" starttime="20201116 17:40:35.030"></status>
</kw>
<msg timestamp="20201116 17:40:39.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:39.517" starttime="20201116 17:40:35.030"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:39.517" starttime="20201116 17:40:35.030"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:40:39.518" critical="yes" starttime="20201116 17:40:12.846"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:40:39.523" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:40:39.523" starttime="20201116 17:40:39.522"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:40:39.524" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:40:39.524" starttime="20201116 17:40:39.523"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:39.524" starttime="20201116 17:40:39.522"></status>
</kw>
<msg timestamp="20201116 17:40:39.524" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:40:39.524" starttime="20201116 17:40:39.521"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:39.526" starttime="20201116 17:40:39.521"></status>
</kw>
<msg timestamp="20201116 17:40:39.526" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:40:39.526" starttime="20201116 17:40:39.520"></status>
</kw>
<msg timestamp="20201116 17:40:39.527" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:40:39.527" starttime="20201116 17:40:39.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:39.530" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:42.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:42.009" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:42.009" starttime="20201116 17:40:39.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:42.010" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:42.010" starttime="20201116 17:40:42.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:42.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:42.011" starttime="20201116 17:40:42.011"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:42.011" starttime="20201116 17:40:39.528"></status>
</kw>
<msg timestamp="20201116 17:40:42.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:42.012" starttime="20201116 17:40:39.527"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:42.012" starttime="20201116 17:40:39.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:42.017" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:44.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:44.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:40:44.435" starttime="20201116 17:40:42.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:44.437" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:40:44.437" starttime="20201116 17:40:44.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:44.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:44.438" starttime="20201116 17:40:44.437"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:44.438" starttime="20201116 17:40:42.013"></status>
</kw>
<msg timestamp="20201116 17:40:44.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:44.439" starttime="20201116 17:40:42.013"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:44.439" starttime="20201116 17:40:42.012"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:40:44.439" critical="yes" starttime="20201116 17:40:39.518"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 17:40:44.440" starttime="20201116 17:40:12.775"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:42:26.742" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:42:26.742" starttime="20201116 17:42:26.741"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:42:26.743" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:42:26.743" starttime="20201116 17:42:26.742"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:26.743" starttime="20201116 17:42:26.741"></status>
</kw>
<msg timestamp="20201116 17:42:26.743" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:42:26.743" starttime="20201116 17:42:26.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:42:26.745" starttime="20201116 17:42:26.744"></status>
</kw>
<msg timestamp="20201116 17:42:26.745" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:42:26.745" starttime="20201116 17:42:26.743"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:26.745" starttime="20201116 17:42:26.740"></status>
</kw>
<msg timestamp="20201116 17:42:26.745" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:42:26.745" starttime="20201116 17:42:26.739"></status>
</kw>
<msg timestamp="20201116 17:42:26.746" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:42:26.746" starttime="20201116 17:42:26.738"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:42:26.746" level="INFO">${random} = 79581</msg>
<status status="PASS" endtime="20201116 17:42:26.746" starttime="20201116 17:42:26.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:42:26.752" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-79581 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:42:30.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:42:30.440" level="INFO">${output} = 2020-11-16 17:42:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:42:30.440" starttime="20201116 17:42:26.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:42:30.441" level="INFO">2020-11-16 17:42:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:28 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:42:28 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:42:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:42:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:42:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:42:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E0E5CBC940E9-&gt;db2b849b-b1b4-492f-86a7-028388e02840
2020-11-16 17:42:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:42:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:42:30.441" starttime="20201116 17:42:30.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:42:30.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:42:30.442" starttime="20201116 17:42:30.442"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:30.445" starttime="20201116 17:42:26.747"></status>
</kw>
<msg timestamp="20201116 17:42:30.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:42:30.445" starttime="20201116 17:42:26.747"></status>
</kw>
<msg timestamp="20201116 17:42:30.445" level="INFO">${result} = 2020-11-16 17:42:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:42:30.445" starttime="20201116 17:42:26.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:42:30.450" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:42:32.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:42:32.323" level="INFO">${output} = 2020-11-16 17:42:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:42:32.323" starttime="20201116 17:42:30.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:42:32.324" level="INFO">2020-11-16 17:42:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:32 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 17:40 ofs://om/volume1/bucket1/ozone-28717
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 17:42 ofs://om/volume1/bucket1/ozone-79581
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:40 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:41 ofs://om/volume1/bucket1/wordcount-18.txt
2020-11-16 17:42:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:42:32.324" starttime="20201116 17:42:32.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:42:32.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:42:32.325" starttime="20201116 17:42:32.324"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:32.325" starttime="20201116 17:42:30.447"></status>
</kw>
<msg timestamp="20201116 17:42:32.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:42:32.325" starttime="20201116 17:42:30.447"></status>
</kw>
<msg timestamp="20201116 17:42:32.325" level="INFO">${result} = 2020-11-16 17:42:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:42:32.326" starttime="20201116 17:42:30.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:42:32.326" starttime="20201116 17:42:32.326"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:42:32.326" critical="yes" starttime="20201116 17:42:26.737"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:42:32.328" starttime="20201116 17:42:26.669"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:40:49.450" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:40:49.450" starttime="20201116 17:40:49.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:40:49.451" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:40:49.451" starttime="20201116 17:40:49.450"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:49.451" starttime="20201116 17:40:49.449"></status>
</kw>
<msg timestamp="20201116 17:40:49.451" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:40:49.451" starttime="20201116 17:40:49.448"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:49.452" starttime="20201116 17:40:49.448"></status>
</kw>
<msg timestamp="20201116 17:40:49.452" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:40:49.452" starttime="20201116 17:40:49.447"></status>
</kw>
<msg timestamp="20201116 17:40:49.452" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:40:49.452" starttime="20201116 17:40:49.446"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:40:49.453" level="INFO">${random} = 28717</msg>
<status status="PASS" endtime="20201116 17:40:49.453" starttime="20201116 17:40:49.452"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:49.459" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-28717 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:53.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:53.537" level="INFO">${output} = 2020-11-16 17:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:40:53.538" starttime="20201116 17:40:49.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:53.539" level="INFO">2020-11-16 17:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:40:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:40:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:40:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:40:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:40:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-555BDC3823D0-&gt;db2b849b-b1b4-492f-86a7-028388e02840
2020-11-16 17:40:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:40:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:40:53.539" starttime="20201116 17:40:53.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:53.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:53.539" starttime="20201116 17:40:53.539"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:53.540" starttime="20201116 17:40:49.454"></status>
</kw>
<msg timestamp="20201116 17:40:53.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:53.540" starttime="20201116 17:40:49.454"></status>
</kw>
<msg timestamp="20201116 17:40:53.540" level="INFO">${result} = 2020-11-16 17:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:40:53.540" starttime="20201116 17:40:49.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:40:53.545" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:40:55.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:40:55.481" level="INFO">${output} = 2020-11-16 17:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:40:55.481" starttime="20201116 17:40:53.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:40:55.482" level="INFO">2020-11-16 17:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:55 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-16 17:40 o3fs://bucket1.volume1.om/ozone-28717
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:40 o3fs://bucket1.volume1.om/user
2020-11-16 17:40:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:40:55.482" starttime="20201116 17:40:55.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:40:55.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:40:55.483" starttime="20201116 17:40:55.482"></status>
</kw>
<status status="PASS" endtime="20201116 17:40:55.483" starttime="20201116 17:40:53.542"></status>
</kw>
<msg timestamp="20201116 17:40:55.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:40:55.483" starttime="20201116 17:40:53.541"></status>
</kw>
<msg timestamp="20201116 17:40:55.484" level="INFO">${result} = 2020-11-16 17:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:40:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:40:55.484" starttime="20201116 17:40:53.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:40:55.484" starttime="20201116 17:40:55.484"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:40:55.485" critical="yes" starttime="20201116 17:40:49.445"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:40:55.486" starttime="20201116 17:40:49.380"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:42:37.242" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:42:37.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:42:37.247" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:42:37.247" starttime="20201116 17:42:37.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:42:37.248" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:42:37.248" starttime="20201116 17:42:37.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:42:37.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:42:37.249" starttime="20201116 17:42:37.248"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:37.249" starttime="20201116 17:42:37.236"></status>
</kw>
<msg timestamp="20201116 17:42:37.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:42:37.249" starttime="20201116 17:42:37.235"></status>
</kw>
<msg timestamp="20201116 17:42:37.250" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:42:37.250" starttime="20201116 17:42:37.235"></status>
</kw>
<msg timestamp="20201116 17:42:37.250" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:42:37.250" starttime="20201116 17:42:37.234"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:42:37.255" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:42:37.255" starttime="20201116 17:42:37.254"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:42:37.256" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:42:37.256" starttime="20201116 17:42:37.255"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:37.257" starttime="20201116 17:42:37.253"></status>
</kw>
<msg timestamp="20201116 17:42:37.257" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:42:37.257" starttime="20201116 17:42:37.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:42:37.258" starttime="20201116 17:42:37.258"></status>
</kw>
<msg timestamp="20201116 17:42:37.258" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:42:37.258" starttime="20201116 17:42:37.257"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:37.259" starttime="20201116 17:42:37.252"></status>
</kw>
<msg timestamp="20201116 17:42:37.259" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:42:37.259" starttime="20201116 17:42:37.251"></status>
</kw>
<msg timestamp="20201116 17:42:37.260" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:42:37.260" starttime="20201116 17:42:37.250"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:42:37.266" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:43:17.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:43:17.558" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:42:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42...</msg>
<status status="PASS" endtime="20201116 17:43:17.558" starttime="20201116 17:42:37.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:43:17.559" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:42:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:42:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:42:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:42:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:42:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:42:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0F02EBF37CA4-&gt;db2b849b-b1b4-492f-86a7-028388e02840
2020-11-16 17:42:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:42:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-16 17:42:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:42:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:42:43 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:42:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548388692_0003
2020-11-16 17:42:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:42:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:44 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:42:44 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:42:44 INFO  YarnClientImpl:324 - Submitted application application_1605548388692_0003
2020-11-16 17:42:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548388692_0003/
2020-11-16 17:42:44 INFO  Job:1619 - Running job: job_1605548388692_0003
2020-11-16 17:42:52 INFO  Job:1640 - Job job_1605548388692_0003 running in uber mode : false
2020-11-16 17:42:52 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:42:58 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:43:04 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:43:10 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:43:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:43:16 INFO  Job:1658 - Job job_1605548388692_0003 completed successfully
2020-11-16 17:43:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016137
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43392
		Total time spent by all reduces in occupied slots (ms)=15628
		Total time spent by all map tasks (ms)=10848
		Total time spent by all reduce tasks (ms)=3907
		Total vcore-milliseconds taken by all map tasks=10848
		Total vcore-milliseconds taken by all reduce tasks=3907
		Total megabyte-milliseconds taken by all map tasks=44433408
		Total megabyte-milliseconds taken by all reduce tasks=16003072
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=612
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1277853696
		Virtual memory (bytes) snapshot=15785644032
		Total committed heap usage (bytes)=1134559232
		Peak Map Physical memory (bytes)=381853696
		Peak Map Virtual memory (bytes)=3947020288
		Peak Reduce Physical memory (bytes)=279691264
		Peak Reduce Virtual memory (bytes)=3952676864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.83 seconds
2020-11-16 17:43:16 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 17:43:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:43:17.559" starttime="20201116 17:43:17.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:43:17.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:43:17.560" starttime="20201116 17:43:17.559"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.560" starttime="20201116 17:42:37.263"></status>
</kw>
<msg timestamp="20201116 17:43:17.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:43:17.561" starttime="20201116 17:42:37.262"></status>
</kw>
<msg timestamp="20201116 17:43:17.561" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:42:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42...</msg>
<status status="PASS" endtime="20201116 17:43:17.561" starttime="20201116 17:42:37.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:43:17.562" starttime="20201116 17:43:17.561"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:43:17.562" critical="yes" starttime="20201116 17:42:37.234"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:43:17.571" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:43:17.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:43:17.577" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:43:17.577" starttime="20201116 17:43:17.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:43:17.578" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:43:17.578" starttime="20201116 17:43:17.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:43:17.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:43:17.579" starttime="20201116 17:43:17.578"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.580" starttime="20201116 17:43:17.566"></status>
</kw>
<msg timestamp="20201116 17:43:17.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:43:17.580" starttime="20201116 17:43:17.566"></status>
</kw>
<msg timestamp="20201116 17:43:17.580" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:43:17.580" starttime="20201116 17:43:17.565"></status>
</kw>
<msg timestamp="20201116 17:43:17.581" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:43:17.581" starttime="20201116 17:43:17.564"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:43:17.582" level="INFO">${random} = 90</msg>
<status status="PASS" endtime="20201116 17:43:17.582" starttime="20201116 17:43:17.581"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:43:17.587" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:43:17.587" starttime="20201116 17:43:17.587"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:43:17.588" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:43:17.588" starttime="20201116 17:43:17.587"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.588" starttime="20201116 17:43:17.586"></status>
</kw>
<msg timestamp="20201116 17:43:17.588" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:43:17.588" starttime="20201116 17:43:17.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:43:17.590" starttime="20201116 17:43:17.589"></status>
</kw>
<msg timestamp="20201116 17:43:17.590" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:43:17.590" starttime="20201116 17:43:17.589"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.590" starttime="20201116 17:43:17.584"></status>
</kw>
<msg timestamp="20201116 17:43:17.591" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:43:17.591" starttime="20201116 17:43:17.583"></status>
</kw>
<msg timestamp="20201116 17:43:17.591" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:43:17.591" starttime="20201116 17:43:17.582"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:43:17.595" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:43:17.596" starttime="20201116 17:43:17.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:43:17.596" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:43:17.596" starttime="20201116 17:43:17.596"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.597" starttime="20201116 17:43:17.594"></status>
</kw>
<msg timestamp="20201116 17:43:17.597" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:43:17.597" starttime="20201116 17:43:17.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:43:17.599" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 17:43:17.599" starttime="20201116 17:43:17.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:43:17.600" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 17:43:17.600" starttime="20201116 17:43:17.599"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.600" starttime="20201116 17:43:17.598"></status>
</kw>
<msg timestamp="20201116 17:43:17.600" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 17:43:17.600" starttime="20201116 17:43:17.597"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.601" starttime="20201116 17:43:17.593"></status>
</kw>
<msg timestamp="20201116 17:43:17.601" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:43:17.602" starttime="20201116 17:43:17.592"></status>
</kw>
<msg timestamp="20201116 17:43:17.602" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:43:17.602" starttime="20201116 17:43:17.591"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:43:17.606" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:43:17.606" starttime="20201116 17:43:17.605"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:43:17.607" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:43:17.607" starttime="20201116 17:43:17.606"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.607" starttime="20201116 17:43:17.605"></status>
</kw>
<msg timestamp="20201116 17:43:17.607" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:43:17.607" starttime="20201116 17:43:17.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:43:17.609" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 17:43:17.609" starttime="20201116 17:43:17.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:43:17.610" level="INFO">${result} = /wordcount-90.txt</msg>
<status status="PASS" endtime="20201116 17:43:17.610" starttime="20201116 17:43:17.609"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.610" starttime="20201116 17:43:17.608"></status>
</kw>
<msg timestamp="20201116 17:43:17.610" level="INFO">${path_with_leading} = /wordcount-90.txt</msg>
<status status="PASS" endtime="20201116 17:43:17.610" starttime="20201116 17:43:17.608"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:17.611" starttime="20201116 17:43:17.603"></status>
</kw>
<msg timestamp="20201116 17:43:17.611" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20201116 17:43:17.611" starttime="20201116 17:43:17.603"></status>
</kw>
<msg timestamp="20201116 17:43:17.611" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20201116 17:43:17.611" starttime="20201116 17:43:17.602"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:43:17.616" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:43:58.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:43:58.531" level="INFO">${output} = 2020-11-16 17:43:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:43:58.531" starttime="20201116 17:43:17.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:43:58.532" level="INFO">2020-11-16 17:43:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:43:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:43:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:43:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:43:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:43:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E94BD578E634-&gt;db2b849b-b1b4-492f-86a7-028388e02840
2020-11-16 17:43:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:43:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:43:21 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:43:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548388692_0004
2020-11-16 17:43:24 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:43:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:24 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:43:24 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:43:24 INFO  YarnClientImpl:324 - Submitted application application_1605548388692_0004
2020-11-16 17:43:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548388692_0004/
2020-11-16 17:43:24 INFO  Job:1619 - Running job: job_1605548388692_0004
2020-11-16 17:43:32 INFO  Job:1640 - Job job_1605548388692_0004 running in uber mode : false
2020-11-16 17:43:32 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:43:39 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:43:45 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:43:52 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:43:58 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:43:58 INFO  Job:1658 - Job job_1605548388692_0004 completed successfully
2020-11-16 17:43:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43072
		Total time spent by all reduces in occupied slots (ms)=16060
		Total time spent by all map tasks (ms)=10768
		Total time spent by all reduce tasks (ms)=4015
		Total vcore-milliseconds taken by all map tasks=10768
		Total vcore-milliseconds taken by all reduce tasks=4015
		Total megabyte-milliseconds taken by all map tasks=44105728
		Total megabyte-milliseconds taken by all reduce tasks=16445440
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=7640
		Physical memory (bytes) snapshot=1230909440
		Virtual memory (bytes) snapshot=15803580416
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=318341120
		Peak Map Virtual memory (bytes)=3946647552
		Peak Reduce Physical memory (bytes)=296497152
		Peak Reduce Virtual memory (bytes)=3969593344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 17:43:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:43:58.532" starttime="20201116 17:43:58.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:43:58.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:43:58.533" starttime="20201116 17:43:58.532"></status>
</kw>
<status status="PASS" endtime="20201116 17:43:58.534" starttime="20201116 17:43:17.613"></status>
</kw>
<msg timestamp="20201116 17:43:58.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:43:58.534" starttime="20201116 17:43:17.613"></status>
</kw>
<msg timestamp="20201116 17:43:58.534" level="INFO">${output} = 2020-11-16 17:43:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:43:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:43:58.534" starttime="20201116 17:43:17.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:43:58.535" starttime="20201116 17:43:58.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:43:58.536" starttime="20201116 17:43:58.535"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:43:58.536" critical="yes" starttime="20201116 17:43:17.563"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:43:58.538" starttime="20201116 17:42:37.169"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:41:00.507" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:41:00.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:41:00.514" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:00.514" starttime="20201116 17:41:00.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:41:00.515" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:00.515" starttime="20201116 17:41:00.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:41:00.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:41:00.515" starttime="20201116 17:41:00.515"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:00.516" starttime="20201116 17:41:00.503"></status>
</kw>
<msg timestamp="20201116 17:41:00.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:41:00.516" starttime="20201116 17:41:00.502"></status>
</kw>
<msg timestamp="20201116 17:41:00.517" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:00.517" starttime="20201116 17:41:00.502"></status>
</kw>
<msg timestamp="20201116 17:41:00.517" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:00.517" starttime="20201116 17:41:00.500"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:41:00.522" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:41:00.522" starttime="20201116 17:41:00.521"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:41:00.523" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:41:00.523" starttime="20201116 17:41:00.522"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:00.523" starttime="20201116 17:41:00.520"></status>
</kw>
<msg timestamp="20201116 17:41:00.523" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:41:00.523" starttime="20201116 17:41:00.519"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:00.523" starttime="20201116 17:41:00.519"></status>
</kw>
<msg timestamp="20201116 17:41:00.523" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:41:00.524" starttime="20201116 17:41:00.518"></status>
</kw>
<msg timestamp="20201116 17:41:00.524" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:41:00.524" starttime="20201116 17:41:00.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:41:00.527" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:41:40.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:41:40.130" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41...</msg>
<status status="PASS" endtime="20201116 17:41:40.130" starttime="20201116 17:41:00.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:41:40.131" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:41:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:41:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:41:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:41:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:41:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-08579DF9A503-&gt;db2b849b-b1b4-492f-86a7-028388e02840
2020-11-16 17:41:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-16 17:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:41:04 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:41:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548388692_0001
2020-11-16 17:41:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:41:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:05 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:41:05 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:41:05 INFO  YarnClientImpl:324 - Submitted application application_1605548388692_0001
2020-11-16 17:41:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548388692_0001/
2020-11-16 17:41:05 INFO  Job:1619 - Running job: job_1605548388692_0001
2020-11-16 17:41:17 INFO  Job:1640 - Job job_1605548388692_0001 running in uber mode : false
2020-11-16 17:41:17 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:41:23 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:41:29 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:41:34 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:41:38 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:41:39 INFO  Job:1658 - Job job_1605548388692_0001 completed successfully
2020-11-16 17:41:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42924
		Total time spent by all reduces in occupied slots (ms)=15788
		Total time spent by all map tasks (ms)=10731
		Total time spent by all reduce tasks (ms)=3947
		Total vcore-milliseconds taken by all map tasks=10731
		Total vcore-milliseconds taken by all reduce tasks=3947
		Total megabyte-milliseconds taken by all map tasks=43954176
		Total megabyte-milliseconds taken by all reduce tasks=16166912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1203191808
		Virtual memory (bytes) snapshot=15787282432
		Total committed heap usage (bytes)=1068498944
		Peak Map Physical memory (bytes)=310312960
		Peak Map Virtual memory (bytes)=3947741184
		Peak Reduce Physical memory (bytes)=301338624
		Peak Reduce Virtual memory (bytes)=3969257472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.456 seconds
2020-11-16 17:41:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:39 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-16 17:41:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:41:40.132" starttime="20201116 17:41:40.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:41:40.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:41:40.132" starttime="20201116 17:41:40.132"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.133" starttime="20201116 17:41:00.525"></status>
</kw>
<msg timestamp="20201116 17:41:40.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:41:40.133" starttime="20201116 17:41:00.525"></status>
</kw>
<msg timestamp="20201116 17:41:40.134" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41...</msg>
<status status="PASS" endtime="20201116 17:41:40.134" starttime="20201116 17:41:00.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:41:40.134" starttime="20201116 17:41:40.134"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:41:40.135" critical="yes" starttime="20201116 17:41:00.500"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:41:40.141" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:41:40.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:41:40.148" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:40.148" starttime="20201116 17:41:40.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:41:40.149" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:40.149" starttime="20201116 17:41:40.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:41:40.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:41:40.150" starttime="20201116 17:41:40.150"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.150" starttime="20201116 17:41:40.138"></status>
</kw>
<msg timestamp="20201116 17:41:40.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:41:40.151" starttime="20201116 17:41:40.138"></status>
</kw>
<msg timestamp="20201116 17:41:40.151" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:40.151" starttime="20201116 17:41:40.137"></status>
</kw>
<msg timestamp="20201116 17:41:40.151" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201116 17:41:40.151" starttime="20201116 17:41:40.137"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:41:40.152" level="INFO">${random} = 18</msg>
<status status="PASS" endtime="20201116 17:41:40.152" starttime="20201116 17:41:40.152"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:41:40.156" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:41:40.156" starttime="20201116 17:41:40.156"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:41:40.157" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:41:40.157" starttime="20201116 17:41:40.157"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.157" starttime="20201116 17:41:40.155"></status>
</kw>
<msg timestamp="20201116 17:41:40.158" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:41:40.158" starttime="20201116 17:41:40.155"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.158" starttime="20201116 17:41:40.154"></status>
</kw>
<msg timestamp="20201116 17:41:40.158" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:41:40.158" starttime="20201116 17:41:40.153"></status>
</kw>
<msg timestamp="20201116 17:41:40.158" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:41:40.158" starttime="20201116 17:41:40.152"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:41:40.162" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:41:40.162" starttime="20201116 17:41:40.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:41:40.163" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:41:40.163" starttime="20201116 17:41:40.162"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.163" starttime="20201116 17:41:40.161"></status>
</kw>
<msg timestamp="20201116 17:41:40.163" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:41:40.163" starttime="20201116 17:41:40.161"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.164" starttime="20201116 17:41:40.160"></status>
</kw>
<msg timestamp="20201116 17:41:40.164" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:41:40.164" starttime="20201116 17:41:40.159"></status>
</kw>
<msg timestamp="20201116 17:41:40.164" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:41:40.164" starttime="20201116 17:41:40.159"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:41:40.168" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:41:40.168" starttime="20201116 17:41:40.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:41:40.168" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:41:40.168" starttime="20201116 17:41:40.168"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.169" starttime="20201116 17:41:40.167"></status>
</kw>
<msg timestamp="20201116 17:41:40.169" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:41:40.169" starttime="20201116 17:41:40.166"></status>
</kw>
<status status="PASS" endtime="20201116 17:41:40.169" starttime="20201116 17:41:40.165"></status>
</kw>
<msg timestamp="20201116 17:41:40.169" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-18.txt</msg>
<status status="PASS" endtime="20201116 17:41:40.169" starttime="20201116 17:41:40.165"></status>
</kw>
<msg timestamp="20201116 17:41:40.170" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-18.txt</msg>
<status status="PASS" endtime="20201116 17:41:40.170" starttime="20201116 17:41:40.164"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:41:40.174" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-18.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:42:21.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:42:21.716" level="INFO">${output} = 2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:42:21.717" starttime="20201116 17:41:40.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:42:21.718" level="INFO">2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-16 17:41:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:41:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:42 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-16 17:41:42 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-16 17:41:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:41:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:41:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:41:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-181231A4C001-&gt;db2b849b-b1b4-492f-86a7-028388e02840
2020-11-16 17:41:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:41:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:41:44 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:41:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548388692_0002
2020-11-16 17:41:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:41:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:44 INFO  Configuration:2752 - resource-types.xml not found
2020-11-16 17:41:44 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-16 17:41:44 INFO  YarnClientImpl:324 - Submitted application application_1605548388692_0002
2020-11-16 17:41:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548388692_0002/
2020-11-16 17:41:44 INFO  Job:1619 - Running job: job_1605548388692_0002
2020-11-16 17:41:53 INFO  Job:1640 - Job job_1605548388692_0002 running in uber mode : false
2020-11-16 17:41:53 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:42:00 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:42:06 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:42:12 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:42:20 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:42:21 INFO  Job:1658 - Job job_1605548388692_0002 completed successfully
2020-11-16 17:42:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:42:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45476
		Total time spent by all reduces in occupied slots (ms)=26876
		Total time spent by all map tasks (ms)=11369
		Total time spent by all reduce tasks (ms)=6719
		Total vcore-milliseconds taken by all map tasks=11369
		Total vcore-milliseconds taken by all reduce tasks=6719
		Total megabyte-milliseconds taken by all map tasks=46567424
		Total megabyte-milliseconds taken by all reduce tasks=27521024
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=627
		CPU time spent (ms)=7660
		Physical memory (bytes) snapshot=1224548352
		Virtual memory (bytes) snapshot=15798542336
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=313212928
		Peak Map Virtual memory (bytes)=3946455040
		Peak Reduce Physical memory (bytes)=295550976
		Peak Reduce Virtual memory (bytes)=3966382080
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-16 17:42:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201116 17:42:21.718" starttime="20201116 17:42:21.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:42:21.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:42:21.719" starttime="20201116 17:42:21.718"></status>
</kw>
<status status="PASS" endtime="20201116 17:42:21.719" starttime="20201116 17:41:40.171"></status>
</kw>
<msg timestamp="20201116 17:42:21.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:42:21.719" starttime="20201116 17:41:40.170"></status>
</kw>
<msg timestamp="20201116 17:42:21.720" level="INFO">${output} = 2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-16 17:41:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201116 17:42:21.720" starttime="20201116 17:41:40.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:42:21.720" starttime="20201116 17:42:21.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:42:21.721" starttime="20201116 17:42:21.721"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:42:21.721" critical="yes" starttime="20201116 17:41:40.136"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:42:21.723" starttime="20201116 17:41:00.435"></status>
</suite>
<status status="PASS" elapsedtime="206087" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:11.026" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:16.605" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 17:45:16.605" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:45:16.605" starttime="20201116 17:45:11.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:16.607" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:45:16.607" starttime="20201116 17:45:16.606"></status>
</kw>
<msg timestamp="20201116 17:45:16.608" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 17:45:16.608" starttime="20201116 17:45:11.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:16.614" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:20.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:20.289" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:20.289" starttime="20201116 17:45:16.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:20.290" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:20.290" starttime="20201116 17:45:20.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:20.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:20.291" starttime="20201116 17:45:20.291"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:20.291" starttime="20201116 17:45:16.610"></status>
</kw>
<msg timestamp="20201116 17:45:20.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:20.292" starttime="20201116 17:45:16.609"></status>
</kw>
<msg timestamp="20201116 17:45:20.292" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201116 17:45:20.292" starttime="20201116 17:45:16.609"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 17:45:20.293" starttime="20201116 17:45:20.292"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:20.293" starttime="20201116 17:45:16.608"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:20.293" starttime="20201116 17:45:16.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:20.302" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:23.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:23.811" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:23.811" starttime="20201116 17:45:20.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:23.812" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:23.812" starttime="20201116 17:45:23.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:23.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:23.813" starttime="20201116 17:45:23.812"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:23.813" starttime="20201116 17:45:20.299"></status>
</kw>
<msg timestamp="20201116 17:45:23.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:23.813" starttime="20201116 17:45:20.299"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:23.813" starttime="20201116 17:45:20.298"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:23.814" starttime="20201116 17:45:20.294"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:23.814" starttime="20201116 17:45:20.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 17:45:23.814" starttime="20201116 17:45:23.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:23.819" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:27.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:27.502" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:45:23.728Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:45:27.502" starttime="20201116 17:45:23.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:27.503" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:45:23.728Z",
  "modificationTime" : "2020-11-16T17:45:23.728Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 17:45:27.503" starttime="20201116 17:45:27.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:27.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:27.504" starttime="20201116 17:45:27.503"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:27.504" starttime="20201116 17:45:23.815"></status>
</kw>
<msg timestamp="20201116 17:45:27.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:27.505" starttime="20201116 17:45:23.815"></status>
</kw>
<msg timestamp="20201116 17:45:27.505" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T17:45:23.728Z",
  "modificat...</msg>
<status status="PASS" endtime="20201116 17:45:27.505" starttime="20201116 17:45:23.814"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 17:45:27.505" starttime="20201116 17:45:27.505"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:45:27.510" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:45:27.510" starttime="20201116 17:45:27.509"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:45:27.510" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:45:27.510" starttime="20201116 17:45:27.510"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:27.511" starttime="20201116 17:45:27.509"></status>
</kw>
<msg timestamp="20201116 17:45:27.511" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:45:27.511" starttime="20201116 17:45:27.508"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:27.511" starttime="20201116 17:45:27.507"></status>
</kw>
<msg timestamp="20201116 17:45:27.511" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:45:27.511" starttime="20201116 17:45:27.506"></status>
</kw>
<msg timestamp="20201116 17:45:27.512" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 17:45:27.512" starttime="20201116 17:45:27.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:27.519" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:31.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:31.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:31.195" starttime="20201116 17:45:27.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:31.196" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:31.196" starttime="20201116 17:45:31.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:31.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:31.197" starttime="20201116 17:45:31.196"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:31.197" starttime="20201116 17:45:27.512"></status>
</kw>
<msg timestamp="20201116 17:45:31.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:31.197" starttime="20201116 17:45:27.512"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:31.198" starttime="20201116 17:45:27.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:31.203" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:38.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:38.496" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:38.497" starttime="20201116 17:45:31.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:38.498" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:38.498" starttime="20201116 17:45:38.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:38.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:38.499" starttime="20201116 17:45:38.498"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:38.499" starttime="20201116 17:45:31.200"></status>
</kw>
<msg timestamp="20201116 17:45:38.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:38.499" starttime="20201116 17:45:31.199"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:38.499" starttime="20201116 17:45:31.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:38.503" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:44.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:44.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:44.019" starttime="20201116 17:45:38.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:44.020" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:44.020" starttime="20201116 17:45:44.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:44.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:44.021" starttime="20201116 17:45:44.021"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:44.022" starttime="20201116 17:45:38.501"></status>
</kw>
<msg timestamp="20201116 17:45:44.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:44.022" starttime="20201116 17:45:38.500"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:44.022" starttime="20201116 17:45:38.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:44.027" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:49.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:49.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:49.706" starttime="20201116 17:45:44.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:49.707" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:49.707" starttime="20201116 17:45:49.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:49.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:49.708" starttime="20201116 17:45:49.707"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:49.708" starttime="20201116 17:45:44.023"></status>
</kw>
<msg timestamp="20201116 17:45:49.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:49.709" starttime="20201116 17:45:44.023"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:49.709" starttime="20201116 17:45:44.022"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:45:49.709" critical="yes" starttime="20201116 17:45:11.020"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:45:49.715" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:45:49.715" starttime="20201116 17:45:49.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:45:49.716" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:45:49.716" starttime="20201116 17:45:49.715"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:49.716" starttime="20201116 17:45:49.714"></status>
</kw>
<msg timestamp="20201116 17:45:49.716" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:45:49.716" starttime="20201116 17:45:49.713"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:49.717" starttime="20201116 17:45:49.712"></status>
</kw>
<msg timestamp="20201116 17:45:49.717" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:45:49.717" starttime="20201116 17:45:49.712"></status>
</kw>
<msg timestamp="20201116 17:45:49.721" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:45:49.721" starttime="20201116 17:45:49.711"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:49.725" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:53.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:53.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:53.038" starttime="20201116 17:45:49.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:53.039" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:53.039" starttime="20201116 17:45:53.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:53.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:53.040" starttime="20201116 17:45:53.039"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:53.040" starttime="20201116 17:45:49.722"></status>
</kw>
<msg timestamp="20201116 17:45:53.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:53.040" starttime="20201116 17:45:49.722"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:53.040" starttime="20201116 17:45:49.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:45:53.045" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:45:56.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:45:56.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 17:45:56.385" starttime="20201116 17:45:53.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:45:56.386" level="INFO"></msg>
<status status="PASS" endtime="20201116 17:45:56.386" starttime="20201116 17:45:56.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:45:56.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:45:56.387" starttime="20201116 17:45:56.386"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:56.387" starttime="20201116 17:45:53.041"></status>
</kw>
<msg timestamp="20201116 17:45:56.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:45:56.387" starttime="20201116 17:45:53.041"></status>
</kw>
<status status="PASS" endtime="20201116 17:45:56.387" starttime="20201116 17:45:53.040"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 17:45:56.388" critical="yes" starttime="20201116 17:45:49.710"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 17:45:56.391" starttime="20201116 17:45:10.951"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:47:50.512" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:47:50.512" starttime="20201116 17:47:50.512"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:47:50.513" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:47:50.513" starttime="20201116 17:47:50.512"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:50.513" starttime="20201116 17:47:50.511"></status>
</kw>
<msg timestamp="20201116 17:47:50.513" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:47:50.513" starttime="20201116 17:47:50.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:50.514" starttime="20201116 17:47:50.514"></status>
</kw>
<msg timestamp="20201116 17:47:50.514" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:47:50.514" starttime="20201116 17:47:50.513"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:50.515" starttime="20201116 17:47:50.510"></status>
</kw>
<msg timestamp="20201116 17:47:50.515" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:47:50.515" starttime="20201116 17:47:50.509"></status>
</kw>
<msg timestamp="20201116 17:47:50.515" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:47:50.515" starttime="20201116 17:47:50.508"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:47:50.516" level="INFO">${random} = 74042</msg>
<status status="PASS" endtime="20201116 17:47:50.516" starttime="20201116 17:47:50.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:50.523" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-74042 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:54.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:54.283" level="INFO">${output} = 2020-11-16 17:47:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:47:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:47:54.283" starttime="20201116 17:47:50.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:54.284" level="INFO">2020-11-16 17:47:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:47:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:47:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:47:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:47:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CD23B78CBD92-&gt;17ac2ed7-1f56-47cc-b5cb-8a9fcf086506
2020-11-16 17:47:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:47:54.284" starttime="20201116 17:47:54.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:54.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:54.285" starttime="20201116 17:47:54.284"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:54.285" starttime="20201116 17:47:50.517"></status>
</kw>
<msg timestamp="20201116 17:47:54.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:54.286" starttime="20201116 17:47:50.517"></status>
</kw>
<msg timestamp="20201116 17:47:54.286" level="INFO">${result} = 2020-11-16 17:47:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:47:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:47:54.286" starttime="20201116 17:47:50.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:54.293" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:56.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:56.475" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:46 ofs://om/volume1/bucket1/ozone-05344
-rw-...</msg>
<status status="PASS" endtime="20201116 17:47:56.475" starttime="20201116 17:47:54.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:56.476" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:46 ofs://om/volume1/bucket1/ozone-05344
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:47 ofs://om/volume1/bucket1/ozone-74042
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:47 ofs://om/volume1/bucket1/wordcount-80.txt</msg>
<status status="PASS" endtime="20201116 17:47:56.476" starttime="20201116 17:47:56.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:56.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:56.477" starttime="20201116 17:47:56.476"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:56.477" starttime="20201116 17:47:54.289"></status>
</kw>
<msg timestamp="20201116 17:47:56.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:56.477" starttime="20201116 17:47:54.288"></status>
</kw>
<msg timestamp="20201116 17:47:56.478" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:46 ofs://om/volume1/bucket1/ozone-05344
-rw-...</msg>
<status status="PASS" endtime="20201116 17:47:56.478" starttime="20201116 17:47:54.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:56.478" starttime="20201116 17:47:56.478"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:47:56.479" critical="yes" starttime="20201116 17:47:50.507"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:47:56.480" starttime="20201116 17:47:50.441"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:46:01.281" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:46:01.281" starttime="20201116 17:46:01.281"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:46:01.282" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:46:01.282" starttime="20201116 17:46:01.282"></status>
</kw>
<status status="PASS" endtime="20201116 17:46:01.282" starttime="20201116 17:46:01.280"></status>
</kw>
<msg timestamp="20201116 17:46:01.282" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:46:01.282" starttime="20201116 17:46:01.280"></status>
</kw>
<status status="PASS" endtime="20201116 17:46:01.283" starttime="20201116 17:46:01.279"></status>
</kw>
<msg timestamp="20201116 17:46:01.283" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:46:01.283" starttime="20201116 17:46:01.278"></status>
</kw>
<msg timestamp="20201116 17:46:01.283" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:46:01.283" starttime="20201116 17:46:01.277"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:46:01.284" level="INFO">${random} = 05344</msg>
<status status="PASS" endtime="20201116 17:46:01.284" starttime="20201116 17:46:01.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:46:01.289" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-05344 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:46:05.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:46:05.479" level="INFO">${output} = 2020-11-16 17:46:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:46:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:46:05.479" starttime="20201116 17:46:01.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:46:05.480" level="INFO">2020-11-16 17:46:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:46:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:46:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:46:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:46:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FD7A5E7B1F04-&gt;17ac2ed7-1f56-47cc-b5cb-8a9fcf086506
2020-11-16 17:46:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 17:46:05.480" starttime="20201116 17:46:05.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:46:05.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:46:05.481" starttime="20201116 17:46:05.480"></status>
</kw>
<status status="PASS" endtime="20201116 17:46:05.481" starttime="20201116 17:46:01.285"></status>
</kw>
<msg timestamp="20201116 17:46:05.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:46:05.481" starttime="20201116 17:46:01.285"></status>
</kw>
<msg timestamp="20201116 17:46:05.481" level="INFO">${result} = 2020-11-16 17:46:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:46:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 17:46:05.482" starttime="20201116 17:46:01.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:46:05.487" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:46:07.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:46:07.541" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:46 o3fs://bucket1.volume1.om/ozone-05344
dr...</msg>
<status status="PASS" endtime="20201116 17:46:07.541" starttime="20201116 17:46:05.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:46:07.542" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:46 o3fs://bucket1.volume1.om/ozone-05344
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 17:46:07.543" starttime="20201116 17:46:07.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:46:07.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:46:07.543" starttime="20201116 17:46:07.543"></status>
</kw>
<status status="PASS" endtime="20201116 17:46:07.544" starttime="20201116 17:46:05.484"></status>
</kw>
<msg timestamp="20201116 17:46:07.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:46:07.544" starttime="20201116 17:46:05.482"></status>
</kw>
<msg timestamp="20201116 17:46:07.544" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 17:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 17:46 o3fs://bucket1.volume1.om/ozone-05344
dr...</msg>
<status status="PASS" endtime="20201116 17:46:07.544" starttime="20201116 17:46:05.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:46:07.545" starttime="20201116 17:46:07.544"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 17:46:07.545" critical="yes" starttime="20201116 17:46:01.276"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 17:46:07.548" starttime="20201116 17:46:01.214"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:01.495" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:01.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:01.501" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:01.501" starttime="20201116 17:48:01.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:01.503" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:01.503" starttime="20201116 17:48:01.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:01.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:01.503" starttime="20201116 17:48:01.503"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:01.504" starttime="20201116 17:48:01.489"></status>
</kw>
<msg timestamp="20201116 17:48:01.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:01.504" starttime="20201116 17:48:01.489"></status>
</kw>
<msg timestamp="20201116 17:48:01.504" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:01.504" starttime="20201116 17:48:01.488"></status>
</kw>
<msg timestamp="20201116 17:48:01.505" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:01.505" starttime="20201116 17:48:01.487"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:48:01.510" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:48:01.510" starttime="20201116 17:48:01.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:01.511" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:48:01.511" starttime="20201116 17:48:01.510"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:01.511" starttime="20201116 17:48:01.508"></status>
</kw>
<msg timestamp="20201116 17:48:01.511" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:48:01.511" starttime="20201116 17:48:01.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:48:01.513" starttime="20201116 17:48:01.512"></status>
</kw>
<msg timestamp="20201116 17:48:01.513" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:48:01.513" starttime="20201116 17:48:01.512"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:01.514" starttime="20201116 17:48:01.507"></status>
</kw>
<msg timestamp="20201116 17:48:01.514" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:48:01.514" starttime="20201116 17:48:01.506"></status>
</kw>
<msg timestamp="20201116 17:48:01.514" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:48:01.514" starttime="20201116 17:48:01.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:01.521" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:44.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:44.138" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:48:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:03 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:48:44.139" starttime="20201116 17:48:01.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:44.140" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:48:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:48:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:48:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:48:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9E9098E06AC9-&gt;17ac2ed7-1f56-47cc-b5cb-8a9fcf086506
2020-11-16 17:48:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:48:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:48:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:48:08 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:48:08 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:48:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548680377_0003
2020-11-16 17:48:08 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:48:08 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:48:08 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:48:08 INFO  YarnClientImpl:329 - Submitted application application_1605548680377_0003
2020-11-16 17:48:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548680377_0003/
2020-11-16 17:48:08 INFO  Job:1619 - Running job: job_1605548680377_0003
2020-11-16 17:48:17 INFO  Job:1640 - Job job_1605548680377_0003 running in uber mode : false
2020-11-16 17:48:17 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:48:24 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:48:30 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:48:35 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:48:43 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:48:43 INFO  Job:1658 - Job job_1605548680377_0003 completed successfully
2020-11-16 17:48:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056241
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41852
		Total time spent by all reduces in occupied slots (ms)=25448
		Total time spent by all map tasks (ms)=10463
		Total time spent by all reduce tasks (ms)=6362
		Total vcore-milliseconds taken by all map tasks=10463
		Total vcore-milliseconds taken by all reduce tasks=6362
		Total megabyte-milliseconds taken by all map tasks=42856448
		Total megabyte-milliseconds taken by all reduce tasks=26058752
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=602
		CPU time spent (ms)=7350
		Physical memory (bytes) snapshot=1172881408
		Virtual memory (bytes) snapshot=15799676928
		Total committed heap usage (bytes)=1017118720
		Peak Map Physical memory (bytes)=293769216
		Peak Map Virtual memory (bytes)=3947552768
		Peak Reduce Physical memory (bytes)=299053056
		Peak Reduce Virtual memory (bytes)=3964874752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.106 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:48:44.140" starttime="20201116 17:48:44.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:44.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:44.141" starttime="20201116 17:48:44.140"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.141" starttime="20201116 17:48:01.516"></status>
</kw>
<msg timestamp="20201116 17:48:44.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:44.141" starttime="20201116 17:48:01.516"></status>
</kw>
<msg timestamp="20201116 17:48:44.142" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:48:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:03 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:48:44.142" starttime="20201116 17:48:01.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:48:44.142" starttime="20201116 17:48:44.142"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:48:44.142" critical="yes" starttime="20201116 17:48:01.487"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:44.150" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:48:44.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:48:44.154" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:44.154" starttime="20201116 17:48:44.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:48:44.155" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:44.155" starttime="20201116 17:48:44.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:48:44.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:48:44.156" starttime="20201116 17:48:44.155"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.157" starttime="20201116 17:48:44.146"></status>
</kw>
<msg timestamp="20201116 17:48:44.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:48:44.157" starttime="20201116 17:48:44.145"></status>
</kw>
<msg timestamp="20201116 17:48:44.157" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:44.157" starttime="20201116 17:48:44.145"></status>
</kw>
<msg timestamp="20201116 17:48:44.157" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:48:44.157" starttime="20201116 17:48:44.144"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:48:44.158" level="INFO">${random} = 31</msg>
<status status="PASS" endtime="20201116 17:48:44.158" starttime="20201116 17:48:44.158"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:48:44.162" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:48:44.162" starttime="20201116 17:48:44.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:44.164" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:48:44.164" starttime="20201116 17:48:44.163"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.164" starttime="20201116 17:48:44.161"></status>
</kw>
<msg timestamp="20201116 17:48:44.164" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:48:44.164" starttime="20201116 17:48:44.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 17:48:44.165" starttime="20201116 17:48:44.165"></status>
</kw>
<msg timestamp="20201116 17:48:44.166" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 17:48:44.166" starttime="20201116 17:48:44.164"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.166" starttime="20201116 17:48:44.160"></status>
</kw>
<msg timestamp="20201116 17:48:44.166" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:48:44.166" starttime="20201116 17:48:44.159"></status>
</kw>
<msg timestamp="20201116 17:48:44.166" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 17:48:44.166" starttime="20201116 17:48:44.158"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:48:44.170" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:48:44.170" starttime="20201116 17:48:44.170"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:44.171" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:48:44.171" starttime="20201116 17:48:44.170"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.171" starttime="20201116 17:48:44.169"></status>
</kw>
<msg timestamp="20201116 17:48:44.171" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:48:44.171" starttime="20201116 17:48:44.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:48:44.173" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 17:48:44.173" starttime="20201116 17:48:44.172"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:44.174" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 17:48:44.174" starttime="20201116 17:48:44.173"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.174" starttime="20201116 17:48:44.172"></status>
</kw>
<msg timestamp="20201116 17:48:44.174" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 17:48:44.174" starttime="20201116 17:48:44.171"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.175" starttime="20201116 17:48:44.168"></status>
</kw>
<msg timestamp="20201116 17:48:44.175" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:48:44.175" starttime="20201116 17:48:44.167"></status>
</kw>
<msg timestamp="20201116 17:48:44.175" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 17:48:44.175" starttime="20201116 17:48:44.166"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 17:48:44.179" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 17:48:44.179" starttime="20201116 17:48:44.178"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:44.180" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 17:48:44.180" starttime="20201116 17:48:44.179"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.180" starttime="20201116 17:48:44.178"></status>
</kw>
<msg timestamp="20201116 17:48:44.180" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 17:48:44.180" starttime="20201116 17:48:44.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:48:44.182" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 17:48:44.182" starttime="20201116 17:48:44.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:48:44.182" level="INFO">${result} = /wordcount-31.txt</msg>
<status status="PASS" endtime="20201116 17:48:44.182" starttime="20201116 17:48:44.182"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.183" starttime="20201116 17:48:44.181"></status>
</kw>
<msg timestamp="20201116 17:48:44.183" level="INFO">${path_with_leading} = /wordcount-31.txt</msg>
<status status="PASS" endtime="20201116 17:48:44.183" starttime="20201116 17:48:44.180"></status>
</kw>
<status status="PASS" endtime="20201116 17:48:44.183" starttime="20201116 17:48:44.177"></status>
</kw>
<msg timestamp="20201116 17:48:44.183" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-31.txt</msg>
<status status="PASS" endtime="20201116 17:48:44.183" starttime="20201116 17:48:44.176"></status>
</kw>
<msg timestamp="20201116 17:48:44.184" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-31.txt</msg>
<status status="PASS" endtime="20201116 17:48:44.184" starttime="20201116 17:48:44.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:48:44.188" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-31.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:49:21.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:49:21.537" level="INFO">${output} = 2020-11-16 17:48:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:48:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:49:21.537" starttime="20201116 17:48:44.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:49:21.538" level="INFO">2020-11-16 17:48:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:48:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:48:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:48:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:48:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:48:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:48:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-352D8414658C-&gt;17ac2ed7-1f56-47cc-b5cb-8a9fcf086506
2020-11-16 17:48:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:48:47 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:48:48 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:48:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548680377_0004
2020-11-16 17:48:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:48:48 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:48:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:48:48 INFO  YarnClientImpl:329 - Submitted application application_1605548680377_0004
2020-11-16 17:48:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548680377_0004/
2020-11-16 17:48:48 INFO  Job:1619 - Running job: job_1605548680377_0004
2020-11-16 17:48:56 INFO  Job:1640 - Job job_1605548680377_0004 running in uber mode : false
2020-11-16 17:48:56 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:49:03 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:49:09 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:49:14 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:49:20 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:49:21 INFO  Job:1658 - Job job_1605548680377_0004 completed successfully
2020-11-16 17:49:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118611
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42828
		Total time spent by all reduces in occupied slots (ms)=15672
		Total time spent by all map tasks (ms)=10707
		Total time spent by all reduce tasks (ms)=3918
		Total vcore-milliseconds taken by all map tasks=10707
		Total vcore-milliseconds taken by all reduce tasks=3918
		Total megabyte-milliseconds taken by all map tasks=43855872
		Total megabyte-milliseconds taken by all reduce tasks=16048128
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=701
		CPU time spent (ms)=7490
		Physical memory (bytes) snapshot=1165840384
		Virtual memory (bytes) snapshot=15795773440
		Total committed heap usage (bytes)=1064304640
		Peak Map Physical memory (bytes)=297803776
		Peak Map Virtual memory (bytes)=3952230400
		Peak Reduce Physical memory (bytes)=300015616
		Peak Reduce Virtual memory (bytes)=3972063232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:49:21.538" starttime="20201116 17:49:21.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:49:21.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:49:21.539" starttime="20201116 17:49:21.539"></status>
</kw>
<status status="PASS" endtime="20201116 17:49:21.540" starttime="20201116 17:48:44.185"></status>
</kw>
<msg timestamp="20201116 17:49:21.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:49:21.540" starttime="20201116 17:48:44.185"></status>
</kw>
<msg timestamp="20201116 17:49:21.540" level="INFO">${output} = 2020-11-16 17:48:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:48:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:49:21.540" starttime="20201116 17:48:44.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:49:21.541" starttime="20201116 17:49:21.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:49:21.542" starttime="20201116 17:49:21.541"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:49:21.542" critical="yes" starttime="20201116 17:48:44.144"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:49:21.543" starttime="20201116 17:48:01.423"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:46:12.518" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:46:12.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:46:12.522" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:46:12.522" starttime="20201116 17:46:12.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:46:12.523" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:46:12.523" starttime="20201116 17:46:12.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:46:12.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:46:12.523" starttime="20201116 17:46:12.523"></status>
</kw>
<status status="PASS" endtime="20201116 17:46:12.524" starttime="20201116 17:46:12.512"></status>
</kw>
<msg timestamp="20201116 17:46:12.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:46:12.524" starttime="20201116 17:46:12.512"></status>
</kw>
<msg timestamp="20201116 17:46:12.525" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:46:12.525" starttime="20201116 17:46:12.511"></status>
</kw>
<msg timestamp="20201116 17:46:12.525" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:46:12.525" starttime="20201116 17:46:12.511"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:46:12.530" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:46:12.530" starttime="20201116 17:46:12.529"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:46:12.530" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:46:12.530" starttime="20201116 17:46:12.530"></status>
</kw>
<status status="PASS" endtime="20201116 17:46:12.531" starttime="20201116 17:46:12.528"></status>
</kw>
<msg timestamp="20201116 17:46:12.531" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:46:12.531" starttime="20201116 17:46:12.527"></status>
</kw>
<status status="PASS" endtime="20201116 17:46:12.531" starttime="20201116 17:46:12.527"></status>
</kw>
<msg timestamp="20201116 17:46:12.531" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:46:12.531" starttime="20201116 17:46:12.526"></status>
</kw>
<msg timestamp="20201116 17:46:12.532" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:46:12.532" starttime="20201116 17:46:12.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:46:12.536" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:01.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:01.724" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:46:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:46:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:47:01.724" starttime="20201116 17:46:12.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:01.725" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:46:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:46:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:46:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:46:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:46:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3509DB7FB316-&gt;17ac2ed7-1f56-47cc-b5cb-8a9fcf086506
2020-11-16 17:46:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 17:46:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:46:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:46:16 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:46:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548680377_0001
2020-11-16 17:46:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:46:20 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:46:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:46:20 INFO  YarnClientImpl:329 - Submitted application application_1605548680377_0001
2020-11-16 17:46:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548680377_0001/
2020-11-16 17:46:20 INFO  Job:1619 - Running job: job_1605548680377_0001
2020-11-16 17:46:31 INFO  Job:1640 - Job job_1605548680377_0001 running in uber mode : false
2020-11-16 17:46:31 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:46:38 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:46:43 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:46:49 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:46:54 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:47:00 INFO  Job:1658 - Job job_1605548680377_0001 completed successfully
2020-11-16 17:47:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43116
		Total time spent by all reduces in occupied slots (ms)=16724
		Total time spent by all map tasks (ms)=10779
		Total time spent by all reduce tasks (ms)=4181
		Total vcore-milliseconds taken by all map tasks=10779
		Total vcore-milliseconds taken by all reduce tasks=4181
		Total megabyte-milliseconds taken by all map tasks=44150784
		Total megabyte-milliseconds taken by all reduce tasks=17125376
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=850
		CPU time spent (ms)=8080
		Physical memory (bytes) snapshot=1404723200
		Virtual memory (bytes) snapshot=15816159232
		Total committed heap usage (bytes)=1255669760
		Peak Map Physical memory (bytes)=510914560
		Peak Map Virtual memory (bytes)=3952631808
		Peak Reduce Physical memory (bytes)=304099328
		Peak Reduce Virtual memory (bytes)=3966771200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 45.102 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 17:47:01.725" starttime="20201116 17:47:01.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:01.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:01.726" starttime="20201116 17:47:01.725"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.726" starttime="20201116 17:46:12.533"></status>
</kw>
<msg timestamp="20201116 17:47:01.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:01.727" starttime="20201116 17:46:12.533"></status>
</kw>
<msg timestamp="20201116 17:47:01.727" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 17:46:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:46:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 17:47:01.727" starttime="20201116 17:46:12.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:01.728" starttime="20201116 17:47:01.727"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:47:01.728" critical="yes" starttime="20201116 17:46:12.510"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:01.734" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:01.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:01.740" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:47:01.740" starttime="20201116 17:47:01.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:01.741" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:47:01.741" starttime="20201116 17:47:01.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:01.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:01.742" starttime="20201116 17:47:01.742"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.742" starttime="20201116 17:47:01.732"></status>
</kw>
<msg timestamp="20201116 17:47:01.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:01.743" starttime="20201116 17:47:01.731"></status>
</kw>
<msg timestamp="20201116 17:47:01.743" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:47:01.743" starttime="20201116 17:47:01.730"></status>
</kw>
<msg timestamp="20201116 17:47:01.743" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 17:47:01.743" starttime="20201116 17:47:01.730"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 17:47:01.744" level="INFO">${random} = 80</msg>
<status status="PASS" endtime="20201116 17:47:01.744" starttime="20201116 17:47:01.743"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:47:01.748" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:47:01.748" starttime="20201116 17:47:01.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:47:01.749" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:47:01.749" starttime="20201116 17:47:01.748"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.749" starttime="20201116 17:47:01.747"></status>
</kw>
<msg timestamp="20201116 17:47:01.749" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:47:01.749" starttime="20201116 17:47:01.746"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.750" starttime="20201116 17:47:01.746"></status>
</kw>
<msg timestamp="20201116 17:47:01.750" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:47:01.750" starttime="20201116 17:47:01.745"></status>
</kw>
<msg timestamp="20201116 17:47:01.750" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 17:47:01.750" starttime="20201116 17:47:01.744"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:47:01.754" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:47:01.754" starttime="20201116 17:47:01.753"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:47:01.755" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:47:01.755" starttime="20201116 17:47:01.754"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.755" starttime="20201116 17:47:01.753"></status>
</kw>
<msg timestamp="20201116 17:47:01.755" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:47:01.755" starttime="20201116 17:47:01.752"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.755" starttime="20201116 17:47:01.752"></status>
</kw>
<msg timestamp="20201116 17:47:01.755" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:47:01.755" starttime="20201116 17:47:01.751"></status>
</kw>
<msg timestamp="20201116 17:47:01.756" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 17:47:01.756" starttime="20201116 17:47:01.750"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 17:47:01.760" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 17:47:01.760" starttime="20201116 17:47:01.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 17:47:01.760" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 17:47:01.760" starttime="20201116 17:47:01.760"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.761" starttime="20201116 17:47:01.759"></status>
</kw>
<msg timestamp="20201116 17:47:01.761" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 17:47:01.761" starttime="20201116 17:47:01.758"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:01.761" starttime="20201116 17:47:01.757"></status>
</kw>
<msg timestamp="20201116 17:47:01.761" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-80.txt</msg>
<status status="PASS" endtime="20201116 17:47:01.761" starttime="20201116 17:47:01.757"></status>
</kw>
<msg timestamp="20201116 17:47:01.761" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-80.txt</msg>
<status status="PASS" endtime="20201116 17:47:01.762" starttime="20201116 17:47:01.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 17:47:01.766" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-80.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 17:47:45.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 17:47:45.563" level="INFO">${output} = 2020-11-16 17:47:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:47:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:47:45.563" starttime="20201116 17:47:01.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 17:47:45.564" level="INFO">2020-11-16 17:47:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:47:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 17:47:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 17:47:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 17:47:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 17:47:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 17:47:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-36D2A1A23539-&gt;17ac2ed7-1f56-47cc-b5cb-8a9fcf086506
2020-11-16 17:47:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 17:47:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 17:47:05 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 17:47:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605548680377_0002
2020-11-16 17:47:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-16 17:47:06 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 17:47:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 17:47:06 INFO  YarnClientImpl:329 - Submitted application application_1605548680377_0002
2020-11-16 17:47:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605548680377_0002/
2020-11-16 17:47:06 INFO  Job:1619 - Running job: job_1605548680377_0002
2020-11-16 17:47:14 INFO  Job:1640 - Job job_1605548680377_0002 running in uber mode : false
2020-11-16 17:47:14 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 17:47:21 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 17:47:26 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 17:47:32 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 17:47:39 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 17:47:45 INFO  Job:1658 - Job job_1605548680377_0002 completed successfully
2020-11-16 17:47:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43116
		Total time spent by all reduces in occupied slots (ms)=15872
		Total time spent by all map tasks (ms)=10779
		Total time spent by all reduce tasks (ms)=3968
		Total vcore-milliseconds taken by all map tasks=10779
		Total vcore-milliseconds taken by all reduce tasks=3968
		Total megabyte-milliseconds taken by all map tasks=44150784
		Total megabyte-milliseconds taken by all reduce tasks=16252928
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=643
		CPU time spent (ms)=7700
		Physical memory (bytes) snapshot=1179078656
		Virtual memory (bytes) snapshot=15802880000
		Total committed heap usage (bytes)=982515712
		Peak Map Physical memory (bytes)=306327552
		Peak Map Virtual memory (bytes)=3948900352
		Peak Reduce Physical memory (bytes)=289300480
		Peak Reduce Virtual memory (bytes)=3970441216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 17:47:45.564" starttime="20201116 17:47:45.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 17:47:45.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 17:47:45.565" starttime="20201116 17:47:45.564"></status>
</kw>
<status status="PASS" endtime="20201116 17:47:45.565" starttime="20201116 17:47:01.763"></status>
</kw>
<msg timestamp="20201116 17:47:45.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 17:47:45.566" starttime="20201116 17:47:01.762"></status>
</kw>
<msg timestamp="20201116 17:47:45.566" level="INFO">${output} = 2020-11-16 17:47:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-16 17:47:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201116 17:47:45.566" starttime="20201116 17:47:01.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:45.567" starttime="20201116 17:47:45.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 17:47:45.568" starttime="20201116 17:47:45.568"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 17:47:45.568" critical="yes" starttime="20201116 17:47:01.729"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 17:47:45.570" starttime="20201116 17:46:12.445"></status>
</suite>
<status status="PASS" elapsedtime="231058" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="631960" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
