<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201116 18:10:57.317" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:33.903" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:06:38.424" level="INFO">${rc} = 255</msg>
<msg timestamp="20201116 18:06:38.424" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:38.424" starttime="20201116 18:06:33.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:06:38.425" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201116 18:06:38.425" starttime="20201116 18:06:38.425"></status>
</kw>
<msg timestamp="20201116 18:06:38.426" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:38.426" starttime="20201116 18:06:33.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:38.433" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:06:42.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:06:42.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:42.317" starttime="20201116 18:06:38.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:06:42.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:06:42.319" starttime="20201116 18:06:42.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:06:42.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:06:42.319" starttime="20201116 18:06:42.319"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:42.320" starttime="20201116 18:06:38.428"></status>
</kw>
<msg timestamp="20201116 18:06:42.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:06:42.320" starttime="20201116 18:06:38.428"></status>
</kw>
<msg timestamp="20201116 18:06:42.320" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:42.320" starttime="20201116 18:06:38.427"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201116 18:06:42.322" starttime="20201116 18:06:42.320"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:42.322" starttime="20201116 18:06:38.427"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:42.322" starttime="20201116 18:06:38.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:42.327" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:06:46.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:06:46.276" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:46.276" starttime="20201116 18:06:42.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:06:46.277" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:06:46.277" starttime="20201116 18:06:46.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:06:46.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:06:46.278" starttime="20201116 18:06:46.278"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:46.278" starttime="20201116 18:06:42.324"></status>
</kw>
<msg timestamp="20201116 18:06:46.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:06:46.279" starttime="20201116 18:06:42.324"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:46.279" starttime="20201116 18:06:42.323"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:46.279" starttime="20201116 18:06:42.323"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:46.279" starttime="20201116 18:06:42.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201116 18:06:46.280" starttime="20201116 18:06:46.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:46.284" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:06:50.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:06:50.431" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:50.431" starttime="20201116 18:06:46.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:06:50.432" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-16T18:06:46.044Z",
  "modificationTime" : "2020-11-16T18:06:46.044Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201116 18:06:50.432" starttime="20201116 18:06:50.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:06:50.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:06:50.433" starttime="20201116 18:06:50.432"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:50.433" starttime="20201116 18:06:46.281"></status>
</kw>
<msg timestamp="20201116 18:06:50.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:06:50.433" starttime="20201116 18:06:46.281"></status>
</kw>
<msg timestamp="20201116 18:06:50.434" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:50.434" starttime="20201116 18:06:46.280"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201116 18:06:50.434" starttime="20201116 18:06:50.434"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:06:50.439" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 18:06:50.439" starttime="20201116 18:06:50.438"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:06:50.439" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 18:06:50.439" starttime="20201116 18:06:50.439"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:50.440" starttime="20201116 18:06:50.437"></status>
</kw>
<msg timestamp="20201116 18:06:50.440" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 18:06:50.440" starttime="20201116 18:06:50.437"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:50.440" starttime="20201116 18:06:50.436"></status>
</kw>
<msg timestamp="20201116 18:06:50.440" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 18:06:50.440" starttime="20201116 18:06:50.435"></status>
</kw>
<msg timestamp="20201116 18:06:50.441" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201116 18:06:50.441" starttime="20201116 18:06:50.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:50.444" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:06:54.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:06:54.369" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:06:54.369" starttime="20201116 18:06:50.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:06:54.370" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:06:54.370" starttime="20201116 18:06:54.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:06:54.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:06:54.371" starttime="20201116 18:06:54.371"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:54.371" starttime="20201116 18:06:50.442"></status>
</kw>
<msg timestamp="20201116 18:06:54.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:06:54.372" starttime="20201116 18:06:50.441"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:54.372" starttime="20201116 18:06:50.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:54.376" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:03.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:03.087" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:07:03.087" starttime="20201116 18:06:54.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:03.089" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:07:03.089" starttime="20201116 18:07:03.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:03.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:03.089" starttime="20201116 18:07:03.089"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:03.090" starttime="20201116 18:06:54.373"></status>
</kw>
<msg timestamp="20201116 18:07:03.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:03.090" starttime="20201116 18:06:54.373"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:03.090" starttime="20201116 18:06:54.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:03.095" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:08.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:08.877" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:07:08.877" starttime="20201116 18:07:03.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:08.878" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:07:08.879" starttime="20201116 18:07:08.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:08.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:08.879" starttime="20201116 18:07:08.879"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:08.880" starttime="20201116 18:07:03.091"></status>
</kw>
<msg timestamp="20201116 18:07:08.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:08.880" starttime="20201116 18:07:03.091"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:08.880" starttime="20201116 18:07:03.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:08.884" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:15.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:15.172" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:07:15.172" starttime="20201116 18:07:08.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:15.173" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:07:15.173" starttime="20201116 18:07:15.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:15.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:15.174" starttime="20201116 18:07:15.173"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:15.174" starttime="20201116 18:07:08.881"></status>
</kw>
<msg timestamp="20201116 18:07:15.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:15.175" starttime="20201116 18:07:08.881"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:15.175" starttime="20201116 18:07:08.880"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 18:07:15.175" critical="yes" starttime="20201116 18:06:33.897"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:07:15.181" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 18:07:15.181" starttime="20201116 18:07:15.180"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:07:15.182" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 18:07:15.182" starttime="20201116 18:07:15.181"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:15.182" starttime="20201116 18:07:15.179"></status>
</kw>
<msg timestamp="20201116 18:07:15.182" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 18:07:15.182" starttime="20201116 18:07:15.179"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:15.183" starttime="20201116 18:07:15.178"></status>
</kw>
<msg timestamp="20201116 18:07:15.183" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 18:07:15.183" starttime="20201116 18:07:15.178"></status>
</kw>
<msg timestamp="20201116 18:07:15.183" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 18:07:15.183" starttime="20201116 18:07:15.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:15.187" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:18.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:18.929" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:07:18.929" starttime="20201116 18:07:15.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:18.931" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:07:18.931" starttime="20201116 18:07:18.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:18.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:18.932" starttime="20201116 18:07:18.931"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:18.932" starttime="20201116 18:07:15.184"></status>
</kw>
<msg timestamp="20201116 18:07:18.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:18.932" starttime="20201116 18:07:15.184"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:18.932" starttime="20201116 18:07:15.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:18.936" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:22.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:22.724" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201116 18:07:22.724" starttime="20201116 18:07:18.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:22.725" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201116 18:07:22.725" starttime="20201116 18:07:22.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:22.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:22.726" starttime="20201116 18:07:22.725"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:22.726" starttime="20201116 18:07:18.933"></status>
</kw>
<msg timestamp="20201116 18:07:22.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:22.726" starttime="20201116 18:07:18.933"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:22.727" starttime="20201116 18:07:18.933"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 18:07:22.727" critical="yes" starttime="20201116 18:07:15.176"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201116 18:07:22.728" starttime="20201116 18:06:33.828"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 18:09:22.174" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 18:09:22.174" starttime="20201116 18:09:22.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:09:22.175" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 18:09:22.175" starttime="20201116 18:09:22.174"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:22.175" starttime="20201116 18:09:22.173"></status>
</kw>
<msg timestamp="20201116 18:09:22.175" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 18:09:22.175" starttime="20201116 18:09:22.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 18:09:22.176" starttime="20201116 18:09:22.176"></status>
</kw>
<msg timestamp="20201116 18:09:22.176" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 18:09:22.176" starttime="20201116 18:09:22.175"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:22.177" starttime="20201116 18:09:22.171"></status>
</kw>
<msg timestamp="20201116 18:09:22.177" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 18:09:22.177" starttime="20201116 18:09:22.170"></status>
</kw>
<msg timestamp="20201116 18:09:22.177" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 18:09:22.177" starttime="20201116 18:09:22.169"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 18:09:22.178" level="INFO">${random} = 92132</msg>
<status status="PASS" endtime="20201116 18:09:22.178" starttime="20201116 18:09:22.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:09:22.184" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-92132 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:09:26.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:09:26.125" level="INFO">${output} = 2020-11-16 18:09:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:09:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 18:09:26.125" starttime="20201116 18:09:22.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:09:26.126" level="INFO">2020-11-16 18:09:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:09:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 18:09:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 18:09:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 18:09:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CCE51318929A-&gt;772776ea-4ae3-46b0-ba26-7d82c1fa27be
2020-11-16 18:09:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 18:09:26.127" starttime="20201116 18:09:26.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:09:26.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:09:26.127" starttime="20201116 18:09:26.127"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:26.128" starttime="20201116 18:09:22.179"></status>
</kw>
<msg timestamp="20201116 18:09:26.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:09:26.128" starttime="20201116 18:09:22.179"></status>
</kw>
<msg timestamp="20201116 18:09:26.128" level="INFO">${result} = 2020-11-16 18:09:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:09:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 18:09:26.128" starttime="20201116 18:09:22.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:09:26.133" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:09:28.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:09:28.205" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 18:07 ofs://om/volume1/bucket1/ozone-67461
-rw-...</msg>
<status status="PASS" endtime="20201116 18:09:28.206" starttime="20201116 18:09:26.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:09:28.207" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 18:07 ofs://om/volume1/bucket1/ozone-67461
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 18:09 ofs://om/volume1/bucket1/ozone-92132
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:07 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:08 ofs://om/volume1/bucket1/wordcount-13.txt</msg>
<status status="PASS" endtime="20201116 18:09:28.207" starttime="20201116 18:09:28.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:09:28.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:09:28.208" starttime="20201116 18:09:28.207"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:28.208" starttime="20201116 18:09:26.130"></status>
</kw>
<msg timestamp="20201116 18:09:28.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:09:28.208" starttime="20201116 18:09:26.130"></status>
</kw>
<msg timestamp="20201116 18:09:28.209" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 18:07 ofs://om/volume1/bucket1/ozone-67461
-rw-...</msg>
<status status="PASS" endtime="20201116 18:09:28.209" starttime="20201116 18:09:26.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 18:09:28.209" starttime="20201116 18:09:28.209"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 18:09:28.209" critical="yes" starttime="20201116 18:09:22.168"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 18:09:28.211" starttime="20201116 18:09:22.090"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:07:43.484" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 18:07:43.485" starttime="20201116 18:07:43.484"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:07:43.485" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 18:07:43.485" starttime="20201116 18:07:43.485"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:43.486" starttime="20201116 18:07:43.483"></status>
</kw>
<msg timestamp="20201116 18:07:43.486" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 18:07:43.486" starttime="20201116 18:07:43.482"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:43.486" starttime="20201116 18:07:43.481"></status>
</kw>
<msg timestamp="20201116 18:07:43.486" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 18:07:43.486" starttime="20201116 18:07:43.481"></status>
</kw>
<msg timestamp="20201116 18:07:43.486" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 18:07:43.486" starttime="20201116 18:07:43.480"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 18:07:43.487" level="INFO">${random} = 67461</msg>
<status status="PASS" endtime="20201116 18:07:43.487" starttime="20201116 18:07:43.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:43.492" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-67461 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:50.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:50.315" level="INFO">${output} = 2020-11-16 18:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:07:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 18:07:50.315" starttime="20201116 18:07:43.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:50.316" level="INFO">2020-11-16 18:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:07:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 18:07:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 18:07:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 18:07:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C5AC8D41D183-&gt;772776ea-4ae3-46b0-ba26-7d82c1fa27be
2020-11-16 18:07:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201116 18:07:50.316" starttime="20201116 18:07:50.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:50.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:50.317" starttime="20201116 18:07:50.316"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:50.317" starttime="20201116 18:07:43.488"></status>
</kw>
<msg timestamp="20201116 18:07:50.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:50.317" starttime="20201116 18:07:43.488"></status>
</kw>
<msg timestamp="20201116 18:07:50.317" level="INFO">${result} = 2020-11-16 18:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:07:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201116 18:07:50.317" starttime="20201116 18:07:43.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:50.324" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:52.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:52.521" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 18:07 o3fs://bucket1.volume1.om/ozone-67461
dr...</msg>
<status status="PASS" endtime="20201116 18:07:52.522" starttime="20201116 18:07:50.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:52.523" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 18:07 o3fs://bucket1.volume1.om/ozone-67461
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:07 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201116 18:07:52.523" starttime="20201116 18:07:52.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:52.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:52.524" starttime="20201116 18:07:52.523"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:52.524" starttime="20201116 18:07:50.319"></status>
</kw>
<msg timestamp="20201116 18:07:52.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:52.524" starttime="20201116 18:07:50.318"></status>
</kw>
<msg timestamp="20201116 18:07:52.524" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-16 18:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-16 18:07 o3fs://bucket1.volume1.om/ozone-67461
dr...</msg>
<status status="PASS" endtime="20201116 18:07:52.524" starttime="20201116 18:07:50.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201116 18:07:52.525" starttime="20201116 18:07:52.525"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201116 18:07:52.525" critical="yes" starttime="20201116 18:07:43.478"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201116 18:07:52.527" starttime="20201116 18:07:43.412"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:38.015" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:38.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:38.019" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201116 18:07:38.019" starttime="20201116 18:07:38.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:38.020" level="INFO">rm</msg>
<status status="PASS" endtime="20201116 18:07:38.020" starttime="20201116 18:07:38.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:38.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:38.022" starttime="20201116 18:07:38.020"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:38.022" starttime="20201116 18:07:38.009"></status>
</kw>
<msg timestamp="20201116 18:07:38.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:38.022" starttime="20201116 18:07:38.009"></status>
</kw>
<msg timestamp="20201116 18:07:38.022" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201116 18:07:38.022" starttime="20201116 18:07:38.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 18:07:38.024" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 18:07:38.024" starttime="20201116 18:07:38.023"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:38.032" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:38.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:38.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 18:07:38.056" starttime="20201116 18:07:38.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:38.057" level="INFO"></msg>
<status status="PASS" endtime="20201116 18:07:38.057" starttime="20201116 18:07:38.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:38.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:38.058" starttime="20201116 18:07:38.057"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:38.058" starttime="20201116 18:07:38.025"></status>
</kw>
<msg timestamp="20201116 18:07:38.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:38.058" starttime="20201116 18:07:38.025"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:38.059" starttime="20201116 18:07:38.024"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:38.059" starttime="20201116 18:07:38.024"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:38.059" starttime="20201116 18:07:38.008"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 18:07:38.059" critical="yes" starttime="20201116 18:07:38.007"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 18:07:38.060" starttime="20201116 18:07:37.952"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:28.374" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:06:28.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:06:28.375" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201116 18:06:28.375" starttime="20201116 18:06:28.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:06:28.376" level="INFO">om</msg>
<status status="PASS" endtime="20201116 18:06:28.377" starttime="20201116 18:06:28.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:06:28.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:06:28.377" starttime="20201116 18:06:28.377"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:28.378" starttime="20201116 18:06:28.368"></status>
</kw>
<msg timestamp="20201116 18:06:28.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:06:28.378" starttime="20201116 18:06:28.368"></status>
</kw>
<msg timestamp="20201116 18:06:28.378" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201116 18:06:28.378" starttime="20201116 18:06:28.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201116 18:06:28.379" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201116 18:06:28.379" starttime="20201116 18:06:28.378"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:06:28.384" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:06:28.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:06:28.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201116 18:06:28.401" starttime="20201116 18:06:28.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:06:28.402" level="INFO"></msg>
<status status="PASS" endtime="20201116 18:06:28.402" starttime="20201116 18:06:28.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:06:28.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:06:28.403" starttime="20201116 18:06:28.403"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:28.404" starttime="20201116 18:06:28.380"></status>
</kw>
<msg timestamp="20201116 18:06:28.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:06:28.404" starttime="20201116 18:06:28.380"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:28.404" starttime="20201116 18:06:28.379"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:28.404" starttime="20201116 18:06:28.379"></status>
</kw>
<status status="PASS" endtime="20201116 18:06:28.404" starttime="20201116 18:06:28.366"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201116 18:06:28.405" critical="yes" starttime="20201116 18:06:28.365"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201116 18:06:28.406" starttime="20201116 18:06:28.301"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:09:33.763" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:09:33.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:09:33.768" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:09:33.768" starttime="20201116 18:09:33.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:09:33.770" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:09:33.770" starttime="20201116 18:09:33.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:09:33.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:09:33.771" starttime="20201116 18:09:33.770"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:33.771" starttime="20201116 18:09:33.758"></status>
</kw>
<msg timestamp="20201116 18:09:33.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:09:33.771" starttime="20201116 18:09:33.758"></status>
</kw>
<msg timestamp="20201116 18:09:33.771" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:09:33.771" starttime="20201116 18:09:33.757"></status>
</kw>
<msg timestamp="20201116 18:09:33.772" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:09:33.772" starttime="20201116 18:09:33.757"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 18:09:33.777" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 18:09:33.777" starttime="20201116 18:09:33.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:09:33.777" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 18:09:33.777" starttime="20201116 18:09:33.777"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:33.778" starttime="20201116 18:09:33.775"></status>
</kw>
<msg timestamp="20201116 18:09:33.778" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 18:09:33.778" starttime="20201116 18:09:33.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 18:09:33.779" starttime="20201116 18:09:33.778"></status>
</kw>
<msg timestamp="20201116 18:09:33.779" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 18:09:33.779" starttime="20201116 18:09:33.778"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:33.779" starttime="20201116 18:09:33.773"></status>
</kw>
<msg timestamp="20201116 18:09:33.779" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 18:09:33.779" starttime="20201116 18:09:33.773"></status>
</kw>
<msg timestamp="20201116 18:09:33.780" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 18:09:33.780" starttime="20201116 18:09:33.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:09:33.783" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:10:10.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:10:10.652" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 18:09:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:09:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 18:10:10.652" starttime="20201116 18:09:33.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:10:10.653" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 18:09:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:09:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 18:09:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 18:09:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 18:09:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D4916C86AD76-&gt;772776ea-4ae3-46b0-ba26-7d82c1fa27be
2020-11-16 18:09:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 18:09:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:09:37 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-16 18:09:38 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550177999, maxDate=1606154977999, sequenceNumber=3, masterKeyId=2))
2020-11-16 18:09:38 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 db fc fd 91 dd 2e 38 db 84 b0 b2 df 2e 40 03 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 18:09:38 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550177999, maxDate=1606154977999, sequenceNumber=3, masterKeyId=2)
2020-11-16 18:09:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 18:09:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 18:09:41 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 18:09:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605549929741_0003
2020-11-16 18:09:41 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 db fc fd 91 dd 2e 38 db 84 b0 b2 df 2e 40 03 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550177999, maxDate=1606154977999, sequenceNumber=3, masterKeyId=2)]
2020-11-16 18:09:41 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 18:09:41 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 18:09:41 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 18:09:42 INFO  YarnClientImpl:329 - Submitted application application_1605549929741_0003
2020-11-16 18:09:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605549929741_0003/
2020-11-16 18:09:42 INFO  Job:1619 - Running job: job_1605549929741_0003
2020-11-16 18:09:50 INFO  Job:1640 - Job job_1605549929741_0003 running in uber mode : false
2020-11-16 18:09:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 18:10:01 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 18:10:03 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 18:10:04 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 18:10:08 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 18:10:09 INFO  Job:1658 - Job job_1605549929741_0003 completed successfully
2020-11-16 18:10:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50828
		Total time spent by all reduces in occupied slots (ms)=8392
		Total time spent by all map tasks (ms)=25414
		Total time spent by all reduce tasks (ms)=4196
		Total vcore-milliseconds taken by all map tasks=25414
		Total vcore-milliseconds taken by all reduce tasks=4196
		Total megabyte-milliseconds taken by all map tasks=52047872
		Total megabyte-milliseconds taken by all reduce tasks=8593408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1088
		CPU time spent (ms)=8250
		Physical memory (bytes) snapshot=1452212224
		Virtual memory (bytes) snapshot=14056181760
		Total committed heap usage (bytes)=1205862400
		Peak Map Physical memory (bytes)=387473408
		Peak Map Virtual memory (bytes)=3509915648
		Peak Reduce Physical memory (bytes)=301404160
		Peak Reduce Virtual memory (bytes)=3530809344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.632 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 18:10:10.654" starttime="20201116 18:10:10.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:10:10.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:10:10.654" starttime="20201116 18:10:10.654"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.655" starttime="20201116 18:09:33.781"></status>
</kw>
<msg timestamp="20201116 18:10:10.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:10:10.655" starttime="20201116 18:09:33.781"></status>
</kw>
<msg timestamp="20201116 18:10:10.655" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 18:09:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:09:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 18:10:10.656" starttime="20201116 18:09:33.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 18:10:10.656" starttime="20201116 18:10:10.656"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 18:10:10.657" critical="yes" starttime="20201116 18:09:33.756"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:10:10.664" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:10:10.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:10:10.668" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:10:10.668" starttime="20201116 18:10:10.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:10:10.670" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:10:10.670" starttime="20201116 18:10:10.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:10:10.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:10:10.670" starttime="20201116 18:10:10.670"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.671" starttime="20201116 18:10:10.660"></status>
</kw>
<msg timestamp="20201116 18:10:10.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:10:10.671" starttime="20201116 18:10:10.659"></status>
</kw>
<msg timestamp="20201116 18:10:10.671" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:10:10.671" starttime="20201116 18:10:10.659"></status>
</kw>
<msg timestamp="20201116 18:10:10.672" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:10:10.672" starttime="20201116 18:10:10.658"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 18:10:10.673" level="INFO">${random} = 87</msg>
<status status="PASS" endtime="20201116 18:10:10.673" starttime="20201116 18:10:10.672"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 18:10:10.677" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 18:10:10.678" starttime="20201116 18:10:10.677"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:10:10.679" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 18:10:10.679" starttime="20201116 18:10:10.678"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.679" starttime="20201116 18:10:10.676"></status>
</kw>
<msg timestamp="20201116 18:10:10.679" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 18:10:10.679" starttime="20201116 18:10:10.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201116 18:10:10.680" starttime="20201116 18:10:10.680"></status>
</kw>
<msg timestamp="20201116 18:10:10.680" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201116 18:10:10.680" starttime="20201116 18:10:10.679"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.681" starttime="20201116 18:10:10.675"></status>
</kw>
<msg timestamp="20201116 18:10:10.681" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 18:10:10.681" starttime="20201116 18:10:10.674"></status>
</kw>
<msg timestamp="20201116 18:10:10.681" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201116 18:10:10.681" starttime="20201116 18:10:10.673"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 18:10:10.685" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 18:10:10.685" starttime="20201116 18:10:10.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:10:10.686" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 18:10:10.686" starttime="20201116 18:10:10.685"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.686" starttime="20201116 18:10:10.684"></status>
</kw>
<msg timestamp="20201116 18:10:10.686" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 18:10:10.686" starttime="20201116 18:10:10.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:10:10.688" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201116 18:10:10.688" starttime="20201116 18:10:10.687"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:10:10.689" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201116 18:10:10.689" starttime="20201116 18:10:10.688"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.689" starttime="20201116 18:10:10.687"></status>
</kw>
<msg timestamp="20201116 18:10:10.689" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201116 18:10:10.689" starttime="20201116 18:10:10.686"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.689" starttime="20201116 18:10:10.683"></status>
</kw>
<msg timestamp="20201116 18:10:10.689" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 18:10:10.689" starttime="20201116 18:10:10.682"></status>
</kw>
<msg timestamp="20201116 18:10:10.690" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201116 18:10:10.690" starttime="20201116 18:10:10.681"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201116 18:10:10.695" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201116 18:10:10.695" starttime="20201116 18:10:10.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:10:10.696" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201116 18:10:10.696" starttime="20201116 18:10:10.695"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.696" starttime="20201116 18:10:10.694"></status>
</kw>
<msg timestamp="20201116 18:10:10.696" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201116 18:10:10.696" starttime="20201116 18:10:10.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:10:10.698" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201116 18:10:10.698" starttime="20201116 18:10:10.698"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:10:10.699" level="INFO">${result} = /wordcount-87.txt</msg>
<status status="PASS" endtime="20201116 18:10:10.699" starttime="20201116 18:10:10.699"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.699" starttime="20201116 18:10:10.697"></status>
</kw>
<msg timestamp="20201116 18:10:10.700" level="INFO">${path_with_leading} = /wordcount-87.txt</msg>
<status status="PASS" endtime="20201116 18:10:10.700" starttime="20201116 18:10:10.697"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:10.700" starttime="20201116 18:10:10.691"></status>
</kw>
<msg timestamp="20201116 18:10:10.700" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-87.txt</msg>
<status status="PASS" endtime="20201116 18:10:10.700" starttime="20201116 18:10:10.691"></status>
</kw>
<msg timestamp="20201116 18:10:10.701" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-87.txt</msg>
<status status="PASS" endtime="20201116 18:10:10.701" starttime="20201116 18:10:10.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:10:10.706" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-87.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:10:48.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:10:48.773" level="INFO">${output} = 2020-11-16 18:10:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:10:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
20...</msg>
<status status="PASS" endtime="20201116 18:10:48.773" starttime="20201116 18:10:10.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:10:48.774" level="INFO">2020-11-16 18:10:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:10:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-16 18:10:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550213513, maxDate=1606155013513, sequenceNumber=4, masterKeyId=2))
2020-11-16 18:10:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8d 92 80 92 dd 2e 38 8d 9a b2 b2 df 2e 40 04 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 18:10:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550213513, maxDate=1606155013513, sequenceNumber=4, masterKeyId=2)
2020-11-16 18:10:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 18:10:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:10:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 18:10:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 18:10:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 18:10:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DADF8E8353C-&gt;772776ea-4ae3-46b0-ba26-7d82c1fa27be
2020-11-16 18:10:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 18:10:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 18:10:16 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 18:10:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605549929741_0004
2020-11-16 18:10:16 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8d 92 80 92 dd 2e 38 8d 9a b2 b2 df 2e 40 04 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550213513, maxDate=1606155013513, sequenceNumber=4, masterKeyId=2)]
2020-11-16 18:10:17 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 18:10:17 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 18:10:17 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 18:10:17 INFO  YarnClientImpl:329 - Submitted application application_1605549929741_0004
2020-11-16 18:10:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605549929741_0004/
2020-11-16 18:10:17 INFO  Job:1619 - Running job: job_1605549929741_0004
2020-11-16 18:10:26 INFO  Job:1640 - Job job_1605549929741_0004 running in uber mode : false
2020-11-16 18:10:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 18:10:38 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 18:10:40 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 18:10:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 18:10:48 INFO  Job:1658 - Job job_1605549929741_0004 completed successfully
2020-11-16 18:10:48 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128119
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55648
		Total time spent by all reduces in occupied slots (ms)=13646
		Total time spent by all map tasks (ms)=27824
		Total time spent by all reduce tasks (ms)=6823
		Total vcore-milliseconds taken by all map tasks=27824
		Total vcore-milliseconds taken by all reduce tasks=6823
		Total megabyte-milliseconds taken by all map tasks=56983552
		Total megabyte-milliseconds taken by all reduce tasks=13973504
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1313
		CPU time spent (ms)=8930
		Physical memory (bytes) snapshot=1385025536
		Virtual memory (bytes) snapshot=14058516480
		Total committed heap usage (bytes)=1205862400
		Peak Map Physical memory (bytes)=398925824
		Peak Map Virtual memory (bytes)=3509927936
		Peak Reduce Physical memory (bytes)=294162432
		Peak Reduce Virtual memory (bytes)=3529887744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 18:10:48.775" starttime="20201116 18:10:48.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:10:48.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:10:48.775" starttime="20201116 18:10:48.775"></status>
</kw>
<status status="PASS" endtime="20201116 18:10:48.776" starttime="20201116 18:10:10.702"></status>
</kw>
<msg timestamp="20201116 18:10:48.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:10:48.776" starttime="20201116 18:10:10.702"></status>
</kw>
<msg timestamp="20201116 18:10:48.777" level="INFO">${output} = 2020-11-16 18:10:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:10:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
20...</msg>
<status status="PASS" endtime="20201116 18:10:48.777" starttime="20201116 18:10:10.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 18:10:48.777" starttime="20201116 18:10:48.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 18:10:48.778" starttime="20201116 18:10:48.777"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 18:10:48.778" critical="yes" starttime="20201116 18:10:10.657"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 18:10:48.780" starttime="20201116 18:09:33.690"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:57.916" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:07:57.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:07:57.921" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:07:57.921" starttime="20201116 18:07:57.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:07:57.922" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:07:57.922" starttime="20201116 18:07:57.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:07:57.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:07:57.923" starttime="20201116 18:07:57.922"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:57.923" starttime="20201116 18:07:57.910"></status>
</kw>
<msg timestamp="20201116 18:07:57.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:07:57.923" starttime="20201116 18:07:57.910"></status>
</kw>
<msg timestamp="20201116 18:07:57.924" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:07:57.924" starttime="20201116 18:07:57.909"></status>
</kw>
<msg timestamp="20201116 18:07:57.924" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:07:57.924" starttime="20201116 18:07:57.909"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:07:57.929" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 18:07:57.929" starttime="20201116 18:07:57.928"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:07:57.930" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 18:07:57.930" starttime="20201116 18:07:57.929"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:57.930" starttime="20201116 18:07:57.927"></status>
</kw>
<msg timestamp="20201116 18:07:57.930" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 18:07:57.930" starttime="20201116 18:07:57.926"></status>
</kw>
<status status="PASS" endtime="20201116 18:07:57.930" starttime="20201116 18:07:57.926"></status>
</kw>
<msg timestamp="20201116 18:07:57.930" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 18:07:57.930" starttime="20201116 18:07:57.925"></status>
</kw>
<msg timestamp="20201116 18:07:57.931" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 18:07:57.931" starttime="20201116 18:07:57.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:07:57.940" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:08:38.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:08:38.806" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 18:08:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:08:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 18:08:38.806" starttime="20201116 18:07:57.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:08:38.807" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-16 18:08:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:08:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 18:08:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 18:08:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 18:08:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-57C7DBE30C3D-&gt;772776ea-4ae3-46b0-ba26-7d82c1fa27be
2020-11-16 18:08:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-16 18:08:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:08:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-16 18:08:02 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550082658, maxDate=1606154882658, sequenceNumber=1, masterKeyId=2))
2020-11-16 18:08:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a1 92 f8 91 dd 2e 38 a1 9a aa b2 df 2e 40 01 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 18:08:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550082658, maxDate=1606154882658, sequenceNumber=1, masterKeyId=2)
2020-11-16 18:08:03 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 18:08:03 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 18:08:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605549929741_0001
2020-11-16 18:08:03 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a1 92 f8 91 dd 2e 38 a1 9a aa b2 df 2e 40 01 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550082658, maxDate=1606154882658, sequenceNumber=1, masterKeyId=2)]
2020-11-16 18:08:04 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 18:08:04 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 18:08:04 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 18:08:05 INFO  YarnClientImpl:329 - Submitted application application_1605549929741_0001
2020-11-16 18:08:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605549929741_0001/
2020-11-16 18:08:05 INFO  Job:1619 - Running job: job_1605549929741_0001
2020-11-16 18:08:17 INFO  Job:1640 - Job job_1605549929741_0001 running in uber mode : false
2020-11-16 18:08:17 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 18:08:29 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 18:08:31 INFO  Job:1647 -  map 67% reduce 0%
2020-11-16 18:08:32 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 18:08:37 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 18:08:38 INFO  Job:1658 - Job job_1605549929741_0001 completed successfully
2020-11-16 18:08:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065981
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50756
		Total time spent by all reduces in occupied slots (ms)=8730
		Total time spent by all map tasks (ms)=25378
		Total time spent by all reduce tasks (ms)=4365
		Total vcore-milliseconds taken by all map tasks=25378
		Total vcore-milliseconds taken by all reduce tasks=4365
		Total megabyte-milliseconds taken by all map tasks=51974144
		Total megabyte-milliseconds taken by all reduce tasks=8939520
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1240
		CPU time spent (ms)=8270
		Physical memory (bytes) snapshot=1447395328
		Virtual memory (bytes) snapshot=14051991552
		Total committed heap usage (bytes)=1219493888
		Peak Map Physical memory (bytes)=388640768
		Peak Map Virtual memory (bytes)=3511578624
		Peak Reduce Physical memory (bytes)=300388352
		Peak Reduce Virtual memory (bytes)=3524775936
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.301 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201116 18:08:38.807" starttime="20201116 18:08:38.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:08:38.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:08:38.808" starttime="20201116 18:08:38.807"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.808" starttime="20201116 18:07:57.932"></status>
</kw>
<msg timestamp="20201116 18:08:38.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:08:38.809" starttime="20201116 18:07:57.932"></status>
</kw>
<msg timestamp="20201116 18:08:38.809" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-16 18:08:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:08:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201116 18:08:38.809" starttime="20201116 18:07:57.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 18:08:38.810" starttime="20201116 18:08:38.809"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 18:08:38.810" critical="yes" starttime="20201116 18:07:57.908"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:08:38.817" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:08:38.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:08:38.824" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:08:38.824" starttime="20201116 18:08:38.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:08:38.826" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:08:38.826" starttime="20201116 18:08:38.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:08:38.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:08:38.827" starttime="20201116 18:08:38.826"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.827" starttime="20201116 18:08:38.813"></status>
</kw>
<msg timestamp="20201116 18:08:38.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:08:38.827" starttime="20201116 18:08:38.813"></status>
</kw>
<msg timestamp="20201116 18:08:38.827" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:08:38.827" starttime="20201116 18:08:38.812"></status>
</kw>
<msg timestamp="20201116 18:08:38.828" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201116 18:08:38.828" starttime="20201116 18:08:38.812"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201116 18:08:38.828" level="INFO">${random} = 13</msg>
<status status="PASS" endtime="20201116 18:08:38.828" starttime="20201116 18:08:38.828"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:08:38.833" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 18:08:38.833" starttime="20201116 18:08:38.832"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:08:38.833" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 18:08:38.834" starttime="20201116 18:08:38.833"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.834" starttime="20201116 18:08:38.832"></status>
</kw>
<msg timestamp="20201116 18:08:38.834" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 18:08:38.834" starttime="20201116 18:08:38.831"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.834" starttime="20201116 18:08:38.830"></status>
</kw>
<msg timestamp="20201116 18:08:38.834" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 18:08:38.834" starttime="20201116 18:08:38.830"></status>
</kw>
<msg timestamp="20201116 18:08:38.835" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201116 18:08:38.835" starttime="20201116 18:08:38.829"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:08:38.838" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 18:08:38.838" starttime="20201116 18:08:38.838"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:08:38.839" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 18:08:38.839" starttime="20201116 18:08:38.838"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.839" starttime="20201116 18:08:38.837"></status>
</kw>
<msg timestamp="20201116 18:08:38.839" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 18:08:38.839" starttime="20201116 18:08:38.837"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.840" starttime="20201116 18:08:38.836"></status>
</kw>
<msg timestamp="20201116 18:08:38.840" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 18:08:38.840" starttime="20201116 18:08:38.836"></status>
</kw>
<msg timestamp="20201116 18:08:38.840" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201116 18:08:38.840" starttime="20201116 18:08:38.835"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201116 18:08:38.846" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201116 18:08:38.846" starttime="20201116 18:08:38.846"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201116 18:08:38.847" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201116 18:08:38.847" starttime="20201116 18:08:38.847"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.847" starttime="20201116 18:08:38.845"></status>
</kw>
<msg timestamp="20201116 18:08:38.847" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201116 18:08:38.847" starttime="20201116 18:08:38.845"></status>
</kw>
<status status="PASS" endtime="20201116 18:08:38.848" starttime="20201116 18:08:38.844"></status>
</kw>
<msg timestamp="20201116 18:08:38.848" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-13.txt</msg>
<status status="PASS" endtime="20201116 18:08:38.848" starttime="20201116 18:08:38.843"></status>
</kw>
<msg timestamp="20201116 18:08:38.848" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-13.txt</msg>
<status status="PASS" endtime="20201116 18:08:38.848" starttime="20201116 18:08:38.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201116 18:08:38.852" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-13.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201116 18:09:15.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201116 18:09:15.905" level="INFO">${output} = 2020-11-16 18:08:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:08:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
20...</msg>
<status status="PASS" endtime="20201116 18:09:15.905" starttime="20201116 18:08:38.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201116 18:09:15.907" level="INFO">2020-11-16 18:08:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:08:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-16 18:08:41 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550121437, maxDate=1606154921437, sequenceNumber=2, masterKeyId=2))
2020-11-16 18:08:41 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 c2 fa 91 dd 2e 38 f6 ca ac b2 df 2e 40 02 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-16 18:08:41 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550121437, maxDate=1606154921437, sequenceNumber=2, masterKeyId=2)
2020-11-16 18:08:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-16 18:08:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-16 18:08:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-16 18:08:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-16 18:08:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-16 18:08:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-99140F31672E-&gt;772776ea-4ae3-46b0-ba26-7d82c1fa27be
2020-11-16 18:08:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-16 18:08:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-16 18:08:43 INFO  JobSubmitter:202 - number of splits:3
2020-11-16 18:08:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605549929741_0002
2020-11-16 18:08:44 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 c2 fa 91 dd 2e 38 f6 ca ac b2 df 2e 40 02 48 01 5a 0d 32 39 36 34 30 31 30 39 32 31 36 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605550121437, maxDate=1606154921437, sequenceNumber=2, masterKeyId=2)]
2020-11-16 18:08:44 INFO  Configuration:2795 - resource-types.xml not found
2020-11-16 18:08:44 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-16 18:08:44 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-16 18:08:45 INFO  YarnClientImpl:329 - Submitted application application_1605549929741_0002
2020-11-16 18:08:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605549929741_0002/
2020-11-16 18:08:45 INFO  Job:1619 - Running job: job_1605549929741_0002
2020-11-16 18:08:54 INFO  Job:1640 - Job job_1605549929741_0002 running in uber mode : false
2020-11-16 18:08:54 INFO  Job:1647 -  map 0% reduce 0%
2020-11-16 18:09:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-16 18:09:09 INFO  Job:1647 -  map 100% reduce 0%
2020-11-16 18:09:14 INFO  Job:1647 -  map 100% reduce 100%
2020-11-16 18:09:15 INFO  Job:1658 - Job job_1605549929741_0002 completed successfully
2020-11-16 18:09:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128203
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=58516
		Total time spent by all reduces in occupied slots (ms)=8698
		Total time spent by all map tasks (ms)=29258
		Total time spent by all reduce tasks (ms)=4349
		Total vcore-milliseconds taken by all map tasks=29258
		Total vcore-milliseconds taken by all reduce tasks=4349
		Total megabyte-milliseconds taken by all map tasks=59920384
		Total megabyte-milliseconds taken by all reduce tasks=8906752
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1703
		CPU time spent (ms)=9380
		Physical memory (bytes) snapshot=1592811520
		Virtual memory (bytes) snapshot=14055583744
		Total committed heap usage (bytes)=1383596032
		Peak Map Physical memory (bytes)=538595328
		Peak Map Virtual memory (bytes)=3510009856
		Peak Reduce Physical memory (bytes)=295976960
		Peak Reduce Virtual memory (bytes)=3528097792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201116 18:09:15.907" starttime="20201116 18:09:15.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201116 18:09:15.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201116 18:09:15.908" starttime="20201116 18:09:15.907"></status>
</kw>
<status status="PASS" endtime="20201116 18:09:15.908" starttime="20201116 18:08:38.850"></status>
</kw>
<msg timestamp="20201116 18:09:15.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201116 18:09:15.908" starttime="20201116 18:08:38.849"></status>
</kw>
<msg timestamp="20201116 18:09:15.909" level="INFO">${output} = 2020-11-16 18:08:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-11-16 18:08:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
20...</msg>
<status status="PASS" endtime="20201116 18:09:15.909" starttime="20201116 18:08:38.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201116 18:09:15.910" starttime="20201116 18:09:15.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201116 18:09:15.910" starttime="20201116 18:09:15.910"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201116 18:09:15.910" critical="yes" starttime="20201116 18:08:38.811"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201116 18:09:15.912" starttime="20201116 18:07:57.846"></status>
</suite>
<status status="PASS" elapsedtime="217505" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
