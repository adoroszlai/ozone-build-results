<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201123 13:12:20.668" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:01.508" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:05.742" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 12:57:05.742" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 12:57:05.742" starttime="20201123 12:57:01.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:05.744" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 12:57:05.744" starttime="20201123 12:57:05.742"></status>
</kw>
<msg timestamp="20201123 12:57:05.744" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 12:57:05.744" starttime="20201123 12:57:01.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:05.755" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:08.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:08.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:08.305" starttime="20201123 12:57:05.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:08.307" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:08.307" starttime="20201123 12:57:08.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:08.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:08.308" starttime="20201123 12:57:08.308"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:08.309" starttime="20201123 12:57:05.746"></status>
</kw>
<msg timestamp="20201123 12:57:08.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:08.309" starttime="20201123 12:57:05.746"></status>
</kw>
<msg timestamp="20201123 12:57:08.309" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201123 12:57:08.309" starttime="20201123 12:57:05.745"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 12:57:08.312" starttime="20201123 12:57:08.311"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:08.313" starttime="20201123 12:57:05.745"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:08.313" starttime="20201123 12:57:05.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:08.319" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:10.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:10.732" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:10.732" starttime="20201123 12:57:08.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:10.734" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:10.734" starttime="20201123 12:57:10.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:10.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:10.734" starttime="20201123 12:57:10.734"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:10.735" starttime="20201123 12:57:08.315"></status>
</kw>
<msg timestamp="20201123 12:57:10.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:10.735" starttime="20201123 12:57:08.315"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:10.735" starttime="20201123 12:57:08.314"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:10.735" starttime="20201123 12:57:08.313"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:10.735" starttime="20201123 12:57:08.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201123 12:57:10.736" starttime="20201123 12:57:10.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:10.742" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:13.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:13.297" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T12:57:10.602Z",
  "modificat...</msg>
<status status="PASS" endtime="20201123 12:57:13.297" starttime="20201123 12:57:10.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:13.299" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T12:57:10.602Z",
  "modificationTime" : "2020-11-23T12:57:10.602Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201123 12:57:13.299" starttime="20201123 12:57:13.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:13.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:13.300" starttime="20201123 12:57:13.299"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:13.300" starttime="20201123 12:57:10.737"></status>
</kw>
<msg timestamp="20201123 12:57:13.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:13.300" starttime="20201123 12:57:10.737"></status>
</kw>
<msg timestamp="20201123 12:57:13.301" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T12:57:10.602Z",
  "modificat...</msg>
<status status="PASS" endtime="20201123 12:57:13.301" starttime="20201123 12:57:10.736"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201123 12:57:13.301" starttime="20201123 12:57:13.301"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 12:57:13.305" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 12:57:13.305" starttime="20201123 12:57:13.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:57:13.306" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 12:57:13.306" starttime="20201123 12:57:13.305"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:13.306" starttime="20201123 12:57:13.304"></status>
</kw>
<msg timestamp="20201123 12:57:13.306" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 12:57:13.306" starttime="20201123 12:57:13.304"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:13.306" starttime="20201123 12:57:13.303"></status>
</kw>
<msg timestamp="20201123 12:57:13.307" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 12:57:13.307" starttime="20201123 12:57:13.302"></status>
</kw>
<msg timestamp="20201123 12:57:13.307" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 12:57:13.307" starttime="20201123 12:57:13.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:13.312" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:15.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:15.725" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:15.725" starttime="20201123 12:57:13.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:15.727" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:15.727" starttime="20201123 12:57:15.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:15.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:15.727" starttime="20201123 12:57:15.727"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:15.728" starttime="20201123 12:57:13.308"></status>
</kw>
<msg timestamp="20201123 12:57:15.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:15.728" starttime="20201123 12:57:13.307"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:15.728" starttime="20201123 12:57:13.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:15.732" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:22.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:22.045" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:22.046" starttime="20201123 12:57:15.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:22.047" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:22.047" starttime="20201123 12:57:22.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:22.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:22.048" starttime="20201123 12:57:22.047"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:22.048" starttime="20201123 12:57:15.729"></status>
</kw>
<msg timestamp="20201123 12:57:22.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:22.049" starttime="20201123 12:57:15.729"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:22.049" starttime="20201123 12:57:15.728"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:22.054" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:26.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:26.861" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:26.861" starttime="20201123 12:57:22.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:26.862" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:26.862" starttime="20201123 12:57:26.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:26.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:26.863" starttime="20201123 12:57:26.863"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:26.863" starttime="20201123 12:57:22.050"></status>
</kw>
<msg timestamp="20201123 12:57:26.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:26.864" starttime="20201123 12:57:22.050"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:26.864" starttime="20201123 12:57:22.049"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:26.870" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:31.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:31.601" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:31.601" starttime="20201123 12:57:26.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:31.606" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:31.606" starttime="20201123 12:57:31.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:31.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:31.608" starttime="20201123 12:57:31.606"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:31.609" starttime="20201123 12:57:26.865"></status>
</kw>
<msg timestamp="20201123 12:57:31.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:31.609" starttime="20201123 12:57:26.865"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:31.609" starttime="20201123 12:57:26.864"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 12:57:31.610" critical="yes" starttime="20201123 12:57:01.501"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 12:57:31.616" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 12:57:31.616" starttime="20201123 12:57:31.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:57:31.617" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 12:57:31.617" starttime="20201123 12:57:31.616"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:31.617" starttime="20201123 12:57:31.615"></status>
</kw>
<msg timestamp="20201123 12:57:31.618" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 12:57:31.618" starttime="20201123 12:57:31.614"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:31.618" starttime="20201123 12:57:31.613"></status>
</kw>
<msg timestamp="20201123 12:57:31.618" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 12:57:31.618" starttime="20201123 12:57:31.613"></status>
</kw>
<msg timestamp="20201123 12:57:31.618" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 12:57:31.618" starttime="20201123 12:57:31.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:31.623" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:34.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:34.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:34.253" starttime="20201123 12:57:31.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:34.254" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:34.254" starttime="20201123 12:57:34.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:34.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:34.255" starttime="20201123 12:57:34.254"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:34.255" starttime="20201123 12:57:31.619"></status>
</kw>
<msg timestamp="20201123 12:57:34.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:34.255" starttime="20201123 12:57:31.619"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:34.255" starttime="20201123 12:57:31.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:34.260" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:36.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:36.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:57:36.879" starttime="20201123 12:57:34.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:36.881" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:57:36.881" starttime="20201123 12:57:36.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:36.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:36.881" starttime="20201123 12:57:36.881"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:36.882" starttime="20201123 12:57:34.256"></status>
</kw>
<msg timestamp="20201123 12:57:36.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:36.882" starttime="20201123 12:57:34.256"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:36.882" starttime="20201123 12:57:34.256"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 12:57:36.882" critical="yes" starttime="20201123 12:57:31.611"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201123 12:57:36.884" starttime="20201123 12:57:01.440"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 12:59:30.446" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 12:59:30.446" starttime="20201123 12:59:30.446"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:59:30.447" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 12:59:30.447" starttime="20201123 12:59:30.447"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:30.448" starttime="20201123 12:59:30.445"></status>
</kw>
<msg timestamp="20201123 12:59:30.448" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 12:59:30.448" starttime="20201123 12:59:30.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 12:59:30.449" starttime="20201123 12:59:30.449"></status>
</kw>
<msg timestamp="20201123 12:59:30.449" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 12:59:30.449" starttime="20201123 12:59:30.448"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:30.450" starttime="20201123 12:59:30.444"></status>
</kw>
<msg timestamp="20201123 12:59:30.450" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 12:59:30.450" starttime="20201123 12:59:30.443"></status>
</kw>
<msg timestamp="20201123 12:59:30.450" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 12:59:30.450" starttime="20201123 12:59:30.442"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 12:59:30.450" level="INFO">${random} = 72366</msg>
<status status="PASS" endtime="20201123 12:59:30.450" starttime="20201123 12:59:30.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:59:30.457" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-72366 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:59:34.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:59:34.420" level="INFO">${output} = 2020-11-23 12:59:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:59:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 ...</msg>
<status status="PASS" endtime="20201123 12:59:34.420" starttime="20201123 12:59:30.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:59:34.424" level="INFO">2020-11-23 12:59:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:59:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 12:59:32 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-23 12:59:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 12:59:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C8977F76A0AA-&gt;6ab9227f-b592-405b-b9a2-4a6af21cfc30
2020-11-23 12:59:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201123 12:59:34.424" starttime="20201123 12:59:34.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:59:34.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:59:34.433" starttime="20201123 12:59:34.424"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:34.434" starttime="20201123 12:59:30.451"></status>
</kw>
<msg timestamp="20201123 12:59:34.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:59:34.434" starttime="20201123 12:59:30.451"></status>
</kw>
<msg timestamp="20201123 12:59:34.435" level="INFO">${result} = 2020-11-23 12:59:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:59:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 ...</msg>
<status status="PASS" endtime="20201123 12:59:34.435" starttime="20201123 12:59:30.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:59:34.443" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:59:36.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:59:36.614" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-23 12:57 ofs://om/volume1/bucket1/ozone-04332
-rw-...</msg>
<status status="PASS" endtime="20201123 12:59:36.614" starttime="20201123 12:59:34.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:59:36.615" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-23 12:57 ofs://om/volume1/bucket1/ozone-04332
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-23 12:59 ofs://om/volume1/bucket1/ozone-72366
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:58 ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20201123 12:59:36.616" starttime="20201123 12:59:36.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:59:36.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:59:36.616" starttime="20201123 12:59:36.616"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:36.617" starttime="20201123 12:59:34.438"></status>
</kw>
<msg timestamp="20201123 12:59:36.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:59:36.617" starttime="20201123 12:59:34.437"></status>
</kw>
<msg timestamp="20201123 12:59:36.617" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-23 12:57 ofs://om/volume1/bucket1/ozone-04332
-rw-...</msg>
<status status="PASS" endtime="20201123 12:59:36.617" starttime="20201123 12:59:34.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 12:59:36.618" starttime="20201123 12:59:36.617"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 12:59:36.618" critical="yes" starttime="20201123 12:59:30.441"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 12:59:36.619" starttime="20201123 12:59:30.384"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 12:57:42.873" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 12:57:42.873" starttime="20201123 12:57:42.872"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:57:42.873" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 12:57:42.873" starttime="20201123 12:57:42.873"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:42.873" starttime="20201123 12:57:42.872"></status>
</kw>
<msg timestamp="20201123 12:57:42.874" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 12:57:42.874" starttime="20201123 12:57:42.871"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:42.874" starttime="20201123 12:57:42.870"></status>
</kw>
<msg timestamp="20201123 12:57:42.874" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 12:57:42.874" starttime="20201123 12:57:42.870"></status>
</kw>
<msg timestamp="20201123 12:57:42.874" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 12:57:42.874" starttime="20201123 12:57:42.869"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 12:57:42.875" level="INFO">${random} = 04332</msg>
<status status="PASS" endtime="20201123 12:57:42.875" starttime="20201123 12:57:42.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:42.881" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-04332 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:47.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:47.657" level="INFO">${output} = 2020-11-23 12:57:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:57:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 ...</msg>
<status status="PASS" endtime="20201123 12:57:47.657" starttime="20201123 12:57:42.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:47.662" level="INFO">2020-11-23 12:57:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:57:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 12:57:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-23 12:57:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 12:57:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD00ADDAE280-&gt;6ab9227f-b592-405b-b9a2-4a6af21cfc30
2020-11-23 12:57:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201123 12:57:47.662" starttime="20201123 12:57:47.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:47.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:47.663" starttime="20201123 12:57:47.662"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:47.663" starttime="20201123 12:57:42.876"></status>
</kw>
<msg timestamp="20201123 12:57:47.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:47.663" starttime="20201123 12:57:42.876"></status>
</kw>
<msg timestamp="20201123 12:57:47.663" level="INFO">${result} = 2020-11-23 12:57:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:57:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 ...</msg>
<status status="PASS" endtime="20201123 12:57:47.664" starttime="20201123 12:57:42.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:47.670" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:49.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:49.687" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-23 12:57 o3fs://bucket1.volume1.om/ozone-04332
dr...</msg>
<status status="PASS" endtime="20201123 12:57:49.687" starttime="20201123 12:57:47.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:49.689" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-23 12:57 o3fs://bucket1.volume1.om/ozone-04332
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 12:57:49.689" starttime="20201123 12:57:49.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:49.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:49.689" starttime="20201123 12:57:49.689"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:49.690" starttime="20201123 12:57:47.666"></status>
</kw>
<msg timestamp="20201123 12:57:49.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:49.690" starttime="20201123 12:57:47.664"></status>
</kw>
<msg timestamp="20201123 12:57:49.690" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-23 12:57 o3fs://bucket1.volume1.om/ozone-04332
dr...</msg>
<status status="PASS" endtime="20201123 12:57:49.690" starttime="20201123 12:57:47.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 12:57:49.691" starttime="20201123 12:57:49.690"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 12:57:49.691" critical="yes" starttime="20201123 12:57:42.868"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 12:57:49.692" starttime="20201123 12:57:42.815"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:59:42.347" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:59:42.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:59:42.353" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:59:42.353" starttime="20201123 12:59:42.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:59:42.355" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:59:42.355" starttime="20201123 12:59:42.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:59:42.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:59:42.356" starttime="20201123 12:59:42.355"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:42.356" starttime="20201123 12:59:42.340"></status>
</kw>
<msg timestamp="20201123 12:59:42.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:59:42.357" starttime="20201123 12:59:42.340"></status>
</kw>
<msg timestamp="20201123 12:59:42.357" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:59:42.357" starttime="20201123 12:59:42.339"></status>
</kw>
<msg timestamp="20201123 12:59:42.357" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:59:42.357" starttime="20201123 12:59:42.339"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 12:59:42.363" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 12:59:42.364" starttime="20201123 12:59:42.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:59:42.364" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 12:59:42.364" starttime="20201123 12:59:42.364"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:42.364" starttime="20201123 12:59:42.361"></status>
</kw>
<msg timestamp="20201123 12:59:42.364" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 12:59:42.365" starttime="20201123 12:59:42.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 12:59:42.365" starttime="20201123 12:59:42.365"></status>
</kw>
<msg timestamp="20201123 12:59:42.366" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 12:59:42.366" starttime="20201123 12:59:42.365"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:42.366" starttime="20201123 12:59:42.360"></status>
</kw>
<msg timestamp="20201123 12:59:42.366" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 12:59:42.366" starttime="20201123 12:59:42.358"></status>
</kw>
<msg timestamp="20201123 12:59:42.366" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 12:59:42.366" starttime="20201123 12:59:42.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:59:42.375" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:00:21.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:00:21.587" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 12:59:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:59:44 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201123 13:00:21.588" starttime="20201123 12:59:42.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:00:21.590" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 12:59:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:59:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 12:59:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-23 12:59:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 12:59:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-814A3628C4AF-&gt;6ab9227f-b592-405b-b9a2-4a6af21cfc30
2020-11-23 12:59:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 12:59:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 12:59:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 12:59:46 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-23 12:59:46 INFO  JobSubmitter:198 - number of splits:3
2020-11-23 12:59:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606136184066_0003
2020-11-23 12:59:47 INFO  YarnClientImpl:273 - Submitted application application_1606136184066_0003
2020-11-23 12:59:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606136184066_0003/
2020-11-23 12:59:47 INFO  Job:1339 - Running job: job_1606136184066_0003
2020-11-23 12:59:55 INFO  Job:1360 - Job job_1606136184066_0003 running in uber mode : false
2020-11-23 12:59:55 INFO  Job:1367 -  map 0% reduce 0%
2020-11-23 13:00:03 INFO  Job:1367 -  map 33% reduce 0%
2020-11-23 13:00:09 INFO  Job:1367 -  map 67% reduce 0%
2020-11-23 13:00:14 INFO  Job:1367 -  map 100% reduce 0%
2020-11-23 13:00:19 INFO  Job:1367 -  map 100% reduce 100%
2020-11-23 13:00:20 INFO  Job:1378 - Job job_1606136184066_0003 completed successfully
2020-11-23 13:00:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48272
		Total time spent by all reduces in occupied slots (ms)=17820
		Total time spent by all map tasks (ms)=12068
		Total time spent by all reduce tasks (ms)=4455
		Total vcore-milliseconds taken by all map tasks=12068
		Total vcore-milliseconds taken by all reduce tasks=4455
		Total megabyte-milliseconds taken by all map tasks=49430528
		Total megabyte-milliseconds taken by all reduce tasks=18247680
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=778
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1122426880
		Virtual memory (bytes) snapshot=15762190336
		Total committed heap usage (bytes)=1058537472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.91 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201123 13:00:21.590" starttime="20201123 13:00:21.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:00:21.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:00:21.591" starttime="20201123 13:00:21.590"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.592" starttime="20201123 12:59:42.368"></status>
</kw>
<msg timestamp="20201123 13:00:21.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:00:21.592" starttime="20201123 12:59:42.367"></status>
</kw>
<msg timestamp="20201123 13:00:21.592" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 12:59:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:59:44 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201123 13:00:21.592" starttime="20201123 12:59:42.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:00:21.593" starttime="20201123 13:00:21.593"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:00:21.594" critical="yes" starttime="20201123 12:59:42.338"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:00:21.602" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:00:21.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:00:21.615" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 13:00:21.615" starttime="20201123 13:00:21.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:00:21.616" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 13:00:21.616" starttime="20201123 13:00:21.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:00:21.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:00:21.617" starttime="20201123 13:00:21.616"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.617" starttime="20201123 13:00:21.599"></status>
</kw>
<msg timestamp="20201123 13:00:21.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:00:21.617" starttime="20201123 13:00:21.598"></status>
</kw>
<msg timestamp="20201123 13:00:21.618" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 13:00:21.618" starttime="20201123 13:00:21.597"></status>
</kw>
<msg timestamp="20201123 13:00:21.618" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 13:00:21.618" starttime="20201123 13:00:21.596"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:00:21.619" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201123 13:00:21.619" starttime="20201123 13:00:21.618"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:00:21.623" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:00:21.623" starttime="20201123 13:00:21.622"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:00:21.623" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:00:21.623" starttime="20201123 13:00:21.623"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.624" starttime="20201123 13:00:21.622"></status>
</kw>
<msg timestamp="20201123 13:00:21.624" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:00:21.624" starttime="20201123 13:00:21.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:00:21.625" starttime="20201123 13:00:21.624"></status>
</kw>
<msg timestamp="20201123 13:00:21.625" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:00:21.625" starttime="20201123 13:00:21.624"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.625" starttime="20201123 13:00:21.620"></status>
</kw>
<msg timestamp="20201123 13:00:21.625" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:00:21.625" starttime="20201123 13:00:21.620"></status>
</kw>
<msg timestamp="20201123 13:00:21.626" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:00:21.626" starttime="20201123 13:00:21.619"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:00:21.629" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:00:21.629" starttime="20201123 13:00:21.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:00:21.630" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:00:21.630" starttime="20201123 13:00:21.629"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.630" starttime="20201123 13:00:21.628"></status>
</kw>
<msg timestamp="20201123 13:00:21.630" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:00:21.630" starttime="20201123 13:00:21.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:00:21.631" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201123 13:00:21.631" starttime="20201123 13:00:21.631"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:00:21.632" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201123 13:00:21.632" starttime="20201123 13:00:21.632"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.632" starttime="20201123 13:00:21.631"></status>
</kw>
<msg timestamp="20201123 13:00:21.632" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201123 13:00:21.633" starttime="20201123 13:00:21.630"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.633" starttime="20201123 13:00:21.627"></status>
</kw>
<msg timestamp="20201123 13:00:21.633" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:00:21.633" starttime="20201123 13:00:21.626"></status>
</kw>
<msg timestamp="20201123 13:00:21.633" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:00:21.633" starttime="20201123 13:00:21.626"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:00:21.637" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:00:21.637" starttime="20201123 13:00:21.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:00:21.637" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:00:21.637" starttime="20201123 13:00:21.637"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.637" starttime="20201123 13:00:21.636"></status>
</kw>
<msg timestamp="20201123 13:00:21.638" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:00:21.638" starttime="20201123 13:00:21.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:00:21.639" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201123 13:00:21.639" starttime="20201123 13:00:21.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:00:21.640" level="INFO">${result} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201123 13:00:21.640" starttime="20201123 13:00:21.639"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.640" starttime="20201123 13:00:21.638"></status>
</kw>
<msg timestamp="20201123 13:00:21.640" level="INFO">${path_with_leading} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201123 13:00:21.640" starttime="20201123 13:00:21.638"></status>
</kw>
<status status="PASS" endtime="20201123 13:00:21.640" starttime="20201123 13:00:21.635"></status>
</kw>
<msg timestamp="20201123 13:00:21.640" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201123 13:00:21.640" starttime="20201123 13:00:21.634"></status>
</kw>
<msg timestamp="20201123 13:00:21.641" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201123 13:00:21.641" starttime="20201123 13:00:21.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:00:21.647" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:01:04.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:01:04.905" level="INFO">${output} = 2020-11-23 13:00:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 13:00:23 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201123 13:01:04.905" starttime="20201123 13:00:21.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:01:04.906" level="INFO">2020-11-23 13:00:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 13:00:23 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:00:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 13:00:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 13:00:24 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-23 13:00:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:00:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FED700C7C597-&gt;6ab9227f-b592-405b-b9a2-4a6af21cfc30
2020-11-23 13:00:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:00:25 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-23 13:00:25 INFO  JobSubmitter:198 - number of splits:3
2020-11-23 13:00:28 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606136184066_0004
2020-11-23 13:00:28 INFO  YarnClientImpl:273 - Submitted application application_1606136184066_0004
2020-11-23 13:00:28 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606136184066_0004/
2020-11-23 13:00:28 INFO  Job:1339 - Running job: job_1606136184066_0004
2020-11-23 13:00:37 INFO  Job:1360 - Job job_1606136184066_0004 running in uber mode : false
2020-11-23 13:00:37 INFO  Job:1367 -  map 0% reduce 0%
2020-11-23 13:00:44 INFO  Job:1367 -  map 33% reduce 0%
2020-11-23 13:00:50 INFO  Job:1367 -  map 67% reduce 0%
2020-11-23 13:00:56 INFO  Job:1367 -  map 100% reduce 0%
2020-11-23 13:01:01 INFO  Job:1367 -  map 100% reduce 100%
2020-11-23 13:01:04 INFO  Job:1378 - Job job_1606136184066_0004 completed successfully
2020-11-23 13:01:04 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47716
		Total time spent by all reduces in occupied slots (ms)=18304
		Total time spent by all map tasks (ms)=11929
		Total time spent by all reduce tasks (ms)=4576
		Total vcore-milliseconds taken by all map tasks=11929
		Total vcore-milliseconds taken by all reduce tasks=4576
		Total megabyte-milliseconds taken by all map tasks=48861184
		Total megabyte-milliseconds taken by all reduce tasks=18743296
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=835
		CPU time spent (ms)=8660
		Physical memory (bytes) snapshot=1166835712
		Virtual memory (bytes) snapshot=15796940800
		Total committed heap usage (bytes)=1056964608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201123 13:01:04.906" starttime="20201123 13:01:04.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:01:04.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:01:04.907" starttime="20201123 13:01:04.907"></status>
</kw>
<status status="PASS" endtime="20201123 13:01:04.908" starttime="20201123 13:00:21.642"></status>
</kw>
<msg timestamp="20201123 13:01:04.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:01:04.908" starttime="20201123 13:00:21.641"></status>
</kw>
<msg timestamp="20201123 13:01:04.908" level="INFO">${output} = 2020-11-23 13:00:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 13:00:23 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201123 13:01:04.908" starttime="20201123 13:00:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 13:01:04.909" starttime="20201123 13:01:04.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:01:04.910" starttime="20201123 13:01:04.909"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:01:04.910" critical="yes" starttime="20201123 13:00:21.595"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 13:01:04.912" starttime="20201123 12:59:42.284"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:55.519" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:57:55.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:57:55.524" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:57:55.524" starttime="20201123 12:57:55.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:57:55.526" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:57:55.526" starttime="20201123 12:57:55.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:57:55.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:57:55.527" starttime="20201123 12:57:55.526"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:55.527" starttime="20201123 12:57:55.512"></status>
</kw>
<msg timestamp="20201123 12:57:55.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:57:55.528" starttime="20201123 12:57:55.511"></status>
</kw>
<msg timestamp="20201123 12:57:55.528" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:57:55.528" starttime="20201123 12:57:55.511"></status>
</kw>
<msg timestamp="20201123 12:57:55.529" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:57:55.529" starttime="20201123 12:57:55.510"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 12:57:55.537" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 12:57:55.537" starttime="20201123 12:57:55.536"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:57:55.537" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 12:57:55.537" starttime="20201123 12:57:55.537"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:55.537" starttime="20201123 12:57:55.534"></status>
</kw>
<msg timestamp="20201123 12:57:55.538" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 12:57:55.538" starttime="20201123 12:57:55.534"></status>
</kw>
<status status="PASS" endtime="20201123 12:57:55.538" starttime="20201123 12:57:55.532"></status>
</kw>
<msg timestamp="20201123 12:57:55.538" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 12:57:55.538" starttime="20201123 12:57:55.530"></status>
</kw>
<msg timestamp="20201123 12:57:55.538" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 12:57:55.538" starttime="20201123 12:57:55.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:57:55.542" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:58:41.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:58:41.710" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 12:57:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:57:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201123 12:58:41.710" starttime="20201123 12:57:55.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:58:41.716" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 12:57:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:57:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 12:57:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-23 12:57:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 12:57:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-77E103145741-&gt;6ab9227f-b592-405b-b9a2-4a6af21cfc30
2020-11-23 12:57:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 12:57:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 12:58:00 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-23 12:58:00 INFO  JobSubmitter:198 - number of splits:3
2020-11-23 12:58:00 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606136184066_0001
2020-11-23 12:58:01 INFO  YarnClientImpl:273 - Submitted application application_1606136184066_0001
2020-11-23 12:58:01 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606136184066_0001/
2020-11-23 12:58:01 INFO  Job:1339 - Running job: job_1606136184066_0001
2020-11-23 12:58:13 INFO  Job:1360 - Job job_1606136184066_0001 running in uber mode : false
2020-11-23 12:58:13 INFO  Job:1367 -  map 0% reduce 0%
2020-11-23 12:58:20 INFO  Job:1367 -  map 33% reduce 0%
2020-11-23 12:58:26 INFO  Job:1367 -  map 67% reduce 0%
2020-11-23 12:58:31 INFO  Job:1367 -  map 100% reduce 0%
2020-11-23 12:58:36 INFO  Job:1367 -  map 100% reduce 100%
2020-11-23 12:58:40 INFO  Job:1378 - Job job_1606136184066_0001 completed successfully
2020-11-23 12:58:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48096
		Total time spent by all reduces in occupied slots (ms)=18384
		Total time spent by all map tasks (ms)=12024
		Total time spent by all reduce tasks (ms)=4596
		Total vcore-milliseconds taken by all map tasks=12024
		Total vcore-milliseconds taken by all reduce tasks=4596
		Total megabyte-milliseconds taken by all map tasks=49250304
		Total megabyte-milliseconds taken by all reduce tasks=18825216
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=748
		CPU time spent (ms)=8020
		Physical memory (bytes) snapshot=1176014848
		Virtual memory (bytes) snapshot=15790583808
		Total committed heap usage (bytes)=1047527424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 41.492 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201123 12:58:41.717" starttime="20201123 12:58:41.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:58:41.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:58:41.718" starttime="20201123 12:58:41.717"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.718" starttime="20201123 12:57:55.539"></status>
</kw>
<msg timestamp="20201123 12:58:41.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:58:41.718" starttime="20201123 12:57:55.539"></status>
</kw>
<msg timestamp="20201123 12:58:41.719" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 12:57:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:57:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201123 12:58:41.719" starttime="20201123 12:57:55.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 12:58:41.720" starttime="20201123 12:58:41.719"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 12:58:41.720" critical="yes" starttime="20201123 12:57:55.510"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:58:41.728" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:58:41.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:58:41.734" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:58:41.734" starttime="20201123 12:58:41.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:58:41.735" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:58:41.736" starttime="20201123 12:58:41.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:58:41.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:58:41.736" starttime="20201123 12:58:41.736"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.737" starttime="20201123 12:58:41.724"></status>
</kw>
<msg timestamp="20201123 12:58:41.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:58:41.737" starttime="20201123 12:58:41.724"></status>
</kw>
<msg timestamp="20201123 12:58:41.737" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:58:41.737" starttime="20201123 12:58:41.723"></status>
</kw>
<msg timestamp="20201123 12:58:41.737" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201123 12:58:41.737" starttime="20201123 12:58:41.723"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 12:58:41.738" level="INFO">${random} = 90</msg>
<status status="PASS" endtime="20201123 12:58:41.738" starttime="20201123 12:58:41.738"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 12:58:41.742" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 12:58:41.742" starttime="20201123 12:58:41.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:58:41.743" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 12:58:41.743" starttime="20201123 12:58:41.742"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.743" starttime="20201123 12:58:41.741"></status>
</kw>
<msg timestamp="20201123 12:58:41.743" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 12:58:41.743" starttime="20201123 12:58:41.740"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.743" starttime="20201123 12:58:41.740"></status>
</kw>
<msg timestamp="20201123 12:58:41.744" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 12:58:41.744" starttime="20201123 12:58:41.739"></status>
</kw>
<msg timestamp="20201123 12:58:41.744" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 12:58:41.744" starttime="20201123 12:58:41.738"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 12:58:41.748" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 12:58:41.748" starttime="20201123 12:58:41.747"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:58:41.749" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 12:58:41.749" starttime="20201123 12:58:41.748"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.749" starttime="20201123 12:58:41.747"></status>
</kw>
<msg timestamp="20201123 12:58:41.749" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 12:58:41.749" starttime="20201123 12:58:41.746"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.750" starttime="20201123 12:58:41.745"></status>
</kw>
<msg timestamp="20201123 12:58:41.750" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 12:58:41.750" starttime="20201123 12:58:41.745"></status>
</kw>
<msg timestamp="20201123 12:58:41.750" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 12:58:41.750" starttime="20201123 12:58:41.744"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 12:58:41.754" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 12:58:41.754" starttime="20201123 12:58:41.753"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 12:58:41.754" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 12:58:41.754" starttime="20201123 12:58:41.754"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.755" starttime="20201123 12:58:41.753"></status>
</kw>
<msg timestamp="20201123 12:58:41.755" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 12:58:41.755" starttime="20201123 12:58:41.752"></status>
</kw>
<status status="PASS" endtime="20201123 12:58:41.755" starttime="20201123 12:58:41.752"></status>
</kw>
<msg timestamp="20201123 12:58:41.755" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201123 12:58:41.756" starttime="20201123 12:58:41.751"></status>
</kw>
<msg timestamp="20201123 12:58:41.756" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201123 12:58:41.756" starttime="20201123 12:58:41.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:58:41.761" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:59:24.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:59:24.404" level="INFO">${output} = 2020-11-23 12:58:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 12:58:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201123 12:59:24.404" starttime="20201123 12:58:41.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:59:24.407" level="INFO">2020-11-23 12:58:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 12:58:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 12:58:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-23 12:58:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-23 12:58:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-23 12:58:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 12:58:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8601FA3F58FA-&gt;6ab9227f-b592-405b-b9a2-4a6af21cfc30
2020-11-23 12:58:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 12:58:45 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-23 12:58:48 INFO  JobSubmitter:198 - number of splits:3
2020-11-23 12:58:48 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606136184066_0002
2020-11-23 12:58:49 INFO  YarnClientImpl:273 - Submitted application application_1606136184066_0002
2020-11-23 12:58:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606136184066_0002/
2020-11-23 12:58:49 INFO  Job:1339 - Running job: job_1606136184066_0002
2020-11-23 12:58:58 INFO  Job:1360 - Job job_1606136184066_0002 running in uber mode : false
2020-11-23 12:58:58 INFO  Job:1367 -  map 0% reduce 0%
2020-11-23 12:59:05 INFO  Job:1367 -  map 33% reduce 0%
2020-11-23 12:59:11 INFO  Job:1367 -  map 67% reduce 0%
2020-11-23 12:59:17 INFO  Job:1367 -  map 100% reduce 0%
2020-11-23 12:59:22 INFO  Job:1367 -  map 100% reduce 100%
2020-11-23 12:59:23 INFO  Job:1378 - Job job_1606136184066_0002 completed successfully
2020-11-23 12:59:24 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49492
		Total time spent by all reduces in occupied slots (ms)=17796
		Total time spent by all map tasks (ms)=12373
		Total time spent by all reduce tasks (ms)=4449
		Total vcore-milliseconds taken by all map tasks=12373
		Total vcore-milliseconds taken by all reduce tasks=4449
		Total megabyte-milliseconds taken by all map tasks=50679808
		Total megabyte-milliseconds taken by all reduce tasks=18223104
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=821
		CPU time spent (ms)=8370
		Physical memory (bytes) snapshot=1154396160
		Virtual memory (bytes) snapshot=15788613632
		Total committed heap usage (bytes)=1058013184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201123 12:59:24.407" starttime="20201123 12:59:24.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:59:24.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:59:24.417" starttime="20201123 12:59:24.416"></status>
</kw>
<status status="PASS" endtime="20201123 12:59:24.417" starttime="20201123 12:58:41.757"></status>
</kw>
<msg timestamp="20201123 12:59:24.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:59:24.417" starttime="20201123 12:58:41.757"></status>
</kw>
<msg timestamp="20201123 12:59:24.418" level="INFO">${output} = 2020-11-23 12:58:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-23 12:58:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201123 12:59:24.418" starttime="20201123 12:58:41.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 12:59:24.419" starttime="20201123 12:59:24.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 12:59:24.420" starttime="20201123 12:59:24.419"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 12:59:24.422" critical="yes" starttime="20201123 12:58:41.722"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 12:59:24.424" starttime="20201123 12:57:55.455"></status>
</suite>
<status status="PASS" elapsedtime="220153" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:18.543" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:21.088" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:02:21.089" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 13:02:21.089" starttime="20201123 13:02:18.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:21.090" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 13:02:21.090" starttime="20201123 13:02:21.089"></status>
</kw>
<msg timestamp="20201123 13:02:21.091" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 13:02:21.091" starttime="20201123 13:02:18.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:21.099" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:23.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:23.529" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:23.530" starttime="20201123 13:02:21.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:23.531" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:23.531" starttime="20201123 13:02:23.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:23.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:23.532" starttime="20201123 13:02:23.531"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:23.532" starttime="20201123 13:02:21.093"></status>
</kw>
<msg timestamp="20201123 13:02:23.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:23.532" starttime="20201123 13:02:21.092"></status>
</kw>
<msg timestamp="20201123 13:02:23.532" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201123 13:02:23.532" starttime="20201123 13:02:21.092"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:02:23.533" starttime="20201123 13:02:23.533"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:23.533" starttime="20201123 13:02:21.091"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:23.533" starttime="20201123 13:02:21.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:23.540" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:26.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:26.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:26.095" starttime="20201123 13:02:23.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:26.097" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:26.097" starttime="20201123 13:02:26.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:26.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:26.098" starttime="20201123 13:02:26.097"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:26.098" starttime="20201123 13:02:23.536"></status>
</kw>
<msg timestamp="20201123 13:02:26.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:26.099" starttime="20201123 13:02:23.535"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:26.099" starttime="20201123 13:02:23.534"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:26.099" starttime="20201123 13:02:23.534"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:26.099" starttime="20201123 13:02:23.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201123 13:02:26.100" starttime="20201123 13:02:26.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:26.105" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:28.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:28.762" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:02:25.956Z",
  "modificat...</msg>
<status status="PASS" endtime="20201123 13:02:28.762" starttime="20201123 13:02:26.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:28.764" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:02:25.956Z",
  "modificationTime" : "2020-11-23T13:02:25.956Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201123 13:02:28.764" starttime="20201123 13:02:28.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:28.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:28.764" starttime="20201123 13:02:28.764"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:28.765" starttime="20201123 13:02:26.102"></status>
</kw>
<msg timestamp="20201123 13:02:28.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:28.765" starttime="20201123 13:02:26.101"></status>
</kw>
<msg timestamp="20201123 13:02:28.765" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:02:25.956Z",
  "modificat...</msg>
<status status="PASS" endtime="20201123 13:02:28.765" starttime="20201123 13:02:26.101"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201123 13:02:28.766" starttime="20201123 13:02:28.765"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:02:28.770" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:02:28.770" starttime="20201123 13:02:28.770"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:02:28.771" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:02:28.771" starttime="20201123 13:02:28.770"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:28.771" starttime="20201123 13:02:28.769"></status>
</kw>
<msg timestamp="20201123 13:02:28.771" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:02:28.771" starttime="20201123 13:02:28.769"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:28.772" starttime="20201123 13:02:28.768"></status>
</kw>
<msg timestamp="20201123 13:02:28.772" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 13:02:28.772" starttime="20201123 13:02:28.767"></status>
</kw>
<msg timestamp="20201123 13:02:28.772" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 13:02:28.772" starttime="20201123 13:02:28.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:28.777" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:31.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:31.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:31.108" starttime="20201123 13:02:28.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:31.109" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:31.109" starttime="20201123 13:02:31.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:31.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:31.110" starttime="20201123 13:02:31.110"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:31.110" starttime="20201123 13:02:28.773"></status>
</kw>
<msg timestamp="20201123 13:02:31.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:31.111" starttime="20201123 13:02:28.773"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:31.111" starttime="20201123 13:02:28.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:31.115" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:37.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:37.310" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:37.310" starttime="20201123 13:02:31.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:37.312" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:37.312" starttime="20201123 13:02:37.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:37.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:37.313" starttime="20201123 13:02:37.312"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:37.313" starttime="20201123 13:02:31.112"></status>
</kw>
<msg timestamp="20201123 13:02:37.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:37.313" starttime="20201123 13:02:31.112"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:37.314" starttime="20201123 13:02:31.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:37.318" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:42.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:42.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:42.133" starttime="20201123 13:02:37.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:42.135" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:42.135" starttime="20201123 13:02:42.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:42.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:42.136" starttime="20201123 13:02:42.135"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:42.137" starttime="20201123 13:02:37.315"></status>
</kw>
<msg timestamp="20201123 13:02:42.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:42.137" starttime="20201123 13:02:37.315"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:42.137" starttime="20201123 13:02:37.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:42.145" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:46.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:46.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:46.827" starttime="20201123 13:02:42.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:46.829" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:46.829" starttime="20201123 13:02:46.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:46.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:46.830" starttime="20201123 13:02:46.829"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:46.830" starttime="20201123 13:02:42.138"></status>
</kw>
<msg timestamp="20201123 13:02:46.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:46.830" starttime="20201123 13:02:42.138"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:46.831" starttime="20201123 13:02:42.137"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:02:46.831" critical="yes" starttime="20201123 13:02:18.537"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:02:46.837" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:02:46.837" starttime="20201123 13:02:46.836"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:02:46.837" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:02:46.837" starttime="20201123 13:02:46.837"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:46.837" starttime="20201123 13:02:46.835"></status>
</kw>
<msg timestamp="20201123 13:02:46.838" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:02:46.838" starttime="20201123 13:02:46.835"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:46.838" starttime="20201123 13:02:46.834"></status>
</kw>
<msg timestamp="20201123 13:02:46.838" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:02:46.838" starttime="20201123 13:02:46.834"></status>
</kw>
<msg timestamp="20201123 13:02:46.838" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:02:46.838" starttime="20201123 13:02:46.833"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:46.843" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:49.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:49.567" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:49.567" starttime="20201123 13:02:46.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:49.568" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:49.568" starttime="20201123 13:02:49.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:49.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:49.569" starttime="20201123 13:02:49.568"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:49.569" starttime="20201123 13:02:46.839"></status>
</kw>
<msg timestamp="20201123 13:02:49.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:49.569" starttime="20201123 13:02:46.839"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:49.569" starttime="20201123 13:02:46.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:49.574" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:02:52.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:02:52.110" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:02:52.110" starttime="20201123 13:02:49.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:02:52.112" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:02:52.112" starttime="20201123 13:02:52.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:02:52.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:02:52.113" starttime="20201123 13:02:52.112"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:52.113" starttime="20201123 13:02:49.571"></status>
</kw>
<msg timestamp="20201123 13:02:52.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:02:52.114" starttime="20201123 13:02:49.570"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:52.114" starttime="20201123 13:02:49.570"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:02:52.114" critical="yes" starttime="20201123 13:02:46.832"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201123 13:02:52.115" starttime="20201123 13:02:18.472"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:04:49.416" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:04:49.416" starttime="20201123 13:04:49.415"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:04:49.416" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:04:49.416" starttime="20201123 13:04:49.416"></status>
</kw>
<status status="PASS" endtime="20201123 13:04:49.417" starttime="20201123 13:04:49.415"></status>
</kw>
<msg timestamp="20201123 13:04:49.417" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:04:49.417" starttime="20201123 13:04:49.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:04:49.418" starttime="20201123 13:04:49.417"></status>
</kw>
<msg timestamp="20201123 13:04:49.418" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:04:49.418" starttime="20201123 13:04:49.417"></status>
</kw>
<status status="PASS" endtime="20201123 13:04:49.418" starttime="20201123 13:04:49.413"></status>
</kw>
<msg timestamp="20201123 13:04:49.418" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:04:49.418" starttime="20201123 13:04:49.413"></status>
</kw>
<msg timestamp="20201123 13:04:49.419" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:04:49.419" starttime="20201123 13:04:49.412"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:04:49.419" level="INFO">${random} = 31353</msg>
<status status="PASS" endtime="20201123 13:04:49.419" starttime="20201123 13:04:49.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:04:49.426" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-31353 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:04:53.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:04:53.724" level="INFO">${output} = 2020-11-23 13:04:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:04:53.724" starttime="20201123 13:04:49.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:04:53.725" level="INFO">2020-11-23 13:04:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-23 13:04:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-23 13:04:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:04:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:04:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:04:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-14A1D8694BAA-&gt;44f7f1b8-1ad2-4b06-8d07-9b7d0fa5e07b
2020-11-23 13:04:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:04:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:04:53.725" starttime="20201123 13:04:53.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:04:53.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:04:53.726" starttime="20201123 13:04:53.725"></status>
</kw>
<status status="PASS" endtime="20201123 13:04:53.726" starttime="20201123 13:04:49.420"></status>
</kw>
<msg timestamp="20201123 13:04:53.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:04:53.727" starttime="20201123 13:04:49.420"></status>
</kw>
<msg timestamp="20201123 13:04:53.727" level="INFO">${result} = 2020-11-23 13:04:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:04:53.727" starttime="20201123 13:04:49.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:04:53.732" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:04:55.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:04:55.982" level="INFO">${output} = 2020-11-23 13:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:04:55.982" starttime="20201123 13:04:53.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:04:55.983" level="INFO">2020-11-23 13:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:55 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-23 13:04 ofs://om/volume1/bucket1/ozone-31353
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-23 13:03 ofs://om/volume1/bucket1/ozone-36621
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:02 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:04 ofs://om/volume1/bucket1/wordcount-27.txt
2020-11-23 13:04:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:04:55.983" starttime="20201123 13:04:55.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:04:55.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:04:55.984" starttime="20201123 13:04:55.983"></status>
</kw>
<status status="PASS" endtime="20201123 13:04:55.984" starttime="20201123 13:04:53.730"></status>
</kw>
<msg timestamp="20201123 13:04:55.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:04:55.985" starttime="20201123 13:04:53.729"></status>
</kw>
<msg timestamp="20201123 13:04:55.985" level="INFO">${result} = 2020-11-23 13:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:04:55.985" starttime="20201123 13:04:53.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:04:55.986" starttime="20201123 13:04:55.985"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:04:55.986" critical="yes" starttime="20201123 13:04:49.411"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 13:04:55.987" starttime="20201123 13:04:49.349"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:02:57.860" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:02:57.860" starttime="20201123 13:02:57.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:02:57.861" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:02:57.861" starttime="20201123 13:02:57.861"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:57.861" starttime="20201123 13:02:57.859"></status>
</kw>
<msg timestamp="20201123 13:02:57.861" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:02:57.861" starttime="20201123 13:02:57.859"></status>
</kw>
<status status="PASS" endtime="20201123 13:02:57.862" starttime="20201123 13:02:57.858"></status>
</kw>
<msg timestamp="20201123 13:02:57.862" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:02:57.862" starttime="20201123 13:02:57.858"></status>
</kw>
<msg timestamp="20201123 13:02:57.862" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:02:57.862" starttime="20201123 13:02:57.857"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:02:57.863" level="INFO">${random} = 36621</msg>
<status status="PASS" endtime="20201123 13:02:57.863" starttime="20201123 13:02:57.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:02:57.868" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-36621 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:03:02.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:03:02.367" level="INFO">${output} = 2020-11-23 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:02:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:03:02.367" starttime="20201123 13:02:57.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:03:02.369" level="INFO">2020-11-23 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:00 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-23 13:03:00 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-23 13:03:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:03:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:03:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:03:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E4B9A748179A-&gt;44f7f1b8-1ad2-4b06-8d07-9b7d0fa5e07b
2020-11-23 13:03:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:03:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:03:02.369" starttime="20201123 13:03:02.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:03:02.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:03:02.370" starttime="20201123 13:03:02.370"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:02.371" starttime="20201123 13:02:57.864"></status>
</kw>
<msg timestamp="20201123 13:03:02.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:03:02.371" starttime="20201123 13:02:57.863"></status>
</kw>
<msg timestamp="20201123 13:03:02.371" level="INFO">${result} = 2020-11-23 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:02:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:03:02.371" starttime="20201123 13:02:57.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:03:02.378" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:03:04.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:03:04.479" level="INFO">${output} = 2020-11-23 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:03:04.479" starttime="20201123 13:03:02.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:03:04.480" level="INFO">2020-11-23 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-23 13:03 o3fs://bucket1.volume1.om/ozone-36621
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:02 o3fs://bucket1.volume1.om/user
2020-11-23 13:03:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:03:04.480" starttime="20201123 13:03:04.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:03:04.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:03:04.481" starttime="20201123 13:03:04.480"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:04.481" starttime="20201123 13:03:02.374"></status>
</kw>
<msg timestamp="20201123 13:03:04.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:03:04.481" starttime="20201123 13:03:02.372"></status>
</kw>
<msg timestamp="20201123 13:03:04.482" level="INFO">${result} = 2020-11-23 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:03:04.482" starttime="20201123 13:03:02.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:03:04.482" starttime="20201123 13:03:04.482"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:03:04.483" critical="yes" starttime="20201123 13:02:57.856"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 13:03:04.484" starttime="20201123 13:02:57.802"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:05:02.020" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:05:02.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:05:02.027" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:02.027" starttime="20201123 13:05:02.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:05:02.028" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:02.029" starttime="20201123 13:05:02.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:05:02.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:05:02.029" starttime="20201123 13:05:02.029"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:02.030" starttime="20201123 13:05:02.014"></status>
</kw>
<msg timestamp="20201123 13:05:02.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:05:02.030" starttime="20201123 13:05:02.014"></status>
</kw>
<msg timestamp="20201123 13:05:02.030" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:02.030" starttime="20201123 13:05:02.014"></status>
</kw>
<msg timestamp="20201123 13:05:02.030" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:02.030" starttime="20201123 13:05:02.013"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:05:02.036" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:05:02.036" starttime="20201123 13:05:02.035"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:05:02.036" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:05:02.036" starttime="20201123 13:05:02.036"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:02.037" starttime="20201123 13:05:02.034"></status>
</kw>
<msg timestamp="20201123 13:05:02.037" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:05:02.037" starttime="20201123 13:05:02.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:05:02.038" starttime="20201123 13:05:02.037"></status>
</kw>
<msg timestamp="20201123 13:05:02.038" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:05:02.038" starttime="20201123 13:05:02.037"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:02.038" starttime="20201123 13:05:02.032"></status>
</kw>
<msg timestamp="20201123 13:05:02.038" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:05:02.038" starttime="20201123 13:05:02.031"></status>
</kw>
<msg timestamp="20201123 13:05:02.039" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:05:02.039" starttime="20201123 13:05:02.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:05:02.044" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:05:48.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:05:48.541" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05...</msg>
<status status="PASS" endtime="20201123 13:05:48.542" starttime="20201123 13:05:02.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:05:48.543" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-23 13:05:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-23 13:05:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:05:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:05:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:05:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6547D9734A17-&gt;44f7f1b8-1ad2-4b06-8d07-9b7d0fa5e07b
2020-11-23 13:05:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 13:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:06 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-23 13:05:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:06 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:05:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:05:09 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:05:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136512491_0003
2020-11-23 13:05:09 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:05:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:10 INFO  Configuration:2752 - resource-types.xml not found
2020-11-23 13:05:10 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-23 13:05:10 INFO  YarnClientImpl:324 - Submitted application application_1606136512491_0003
2020-11-23 13:05:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136512491_0003/
2020-11-23 13:05:10 INFO  Job:1619 - Running job: job_1606136512491_0003
2020-11-23 13:05:19 INFO  Job:1640 - Job job_1606136512491_0003 running in uber mode : false
2020-11-23 13:05:19 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:05:27 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:05:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:05:38 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:05:44 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:05:47 INFO  Job:1658 - Job job_1606136512491_0003 completed successfully
2020-11-23 13:05:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49424
		Total time spent by all reduces in occupied slots (ms)=18896
		Total time spent by all map tasks (ms)=12356
		Total time spent by all reduce tasks (ms)=4724
		Total vcore-milliseconds taken by all map tasks=12356
		Total vcore-milliseconds taken by all reduce tasks=4724
		Total megabyte-milliseconds taken by all map tasks=50610176
		Total megabyte-milliseconds taken by all reduce tasks=19349504
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=898
		CPU time spent (ms)=8220
		Physical memory (bytes) snapshot=1198108672
		Virtual memory (bytes) snapshot=15777558528
		Total committed heap usage (bytes)=1070596096
		Peak Map Physical memory (bytes)=305975296
		Peak Map Virtual memory (bytes)=3943718912
		Peak Reduce Physical memory (bytes)=297172992
		Peak Reduce Virtual memory (bytes)=3962687488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 41.971 seconds
2020-11-23 13:05:47 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-23 13:05:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:05:48.543" starttime="20201123 13:05:48.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:05:48.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:05:48.544" starttime="20201123 13:05:48.543"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.544" starttime="20201123 13:05:02.039"></status>
</kw>
<msg timestamp="20201123 13:05:48.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:05:48.545" starttime="20201123 13:05:02.039"></status>
</kw>
<msg timestamp="20201123 13:05:48.545" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05...</msg>
<status status="PASS" endtime="20201123 13:05:48.545" starttime="20201123 13:05:02.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:05:48.546" starttime="20201123 13:05:48.545"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:05:48.546" critical="yes" starttime="20201123 13:05:02.012"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:05:48.553" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:05:48.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:05:48.565" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:48.565" starttime="20201123 13:05:48.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:05:48.567" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:48.568" starttime="20201123 13:05:48.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:05:48.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:05:48.569" starttime="20201123 13:05:48.568"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.569" starttime="20201123 13:05:48.549"></status>
</kw>
<msg timestamp="20201123 13:05:48.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:05:48.569" starttime="20201123 13:05:48.549"></status>
</kw>
<msg timestamp="20201123 13:05:48.569" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:48.569" starttime="20201123 13:05:48.548"></status>
</kw>
<msg timestamp="20201123 13:05:48.570" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:05:48.570" starttime="20201123 13:05:48.548"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:05:48.570" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20201123 13:05:48.570" starttime="20201123 13:05:48.570"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:05:48.575" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:05:48.575" starttime="20201123 13:05:48.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:05:48.575" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:05:48.575" starttime="20201123 13:05:48.575"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.576" starttime="20201123 13:05:48.574"></status>
</kw>
<msg timestamp="20201123 13:05:48.576" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:05:48.576" starttime="20201123 13:05:48.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:05:48.577" starttime="20201123 13:05:48.577"></status>
</kw>
<msg timestamp="20201123 13:05:48.578" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:05:48.578" starttime="20201123 13:05:48.576"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.578" starttime="20201123 13:05:48.572"></status>
</kw>
<msg timestamp="20201123 13:05:48.578" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:05:48.578" starttime="20201123 13:05:48.571"></status>
</kw>
<msg timestamp="20201123 13:05:48.579" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:05:48.579" starttime="20201123 13:05:48.571"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:05:48.585" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:05:48.585" starttime="20201123 13:05:48.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:05:48.586" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:05:48.586" starttime="20201123 13:05:48.585"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.586" starttime="20201123 13:05:48.583"></status>
</kw>
<msg timestamp="20201123 13:05:48.586" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:05:48.586" starttime="20201123 13:05:48.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:05:48.588" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201123 13:05:48.588" starttime="20201123 13:05:48.587"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:05:48.588" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201123 13:05:48.588" starttime="20201123 13:05:48.588"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.588" starttime="20201123 13:05:48.587"></status>
</kw>
<msg timestamp="20201123 13:05:48.588" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201123 13:05:48.589" starttime="20201123 13:05:48.586"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.589" starttime="20201123 13:05:48.581"></status>
</kw>
<msg timestamp="20201123 13:05:48.589" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:05:48.589" starttime="20201123 13:05:48.580"></status>
</kw>
<msg timestamp="20201123 13:05:48.589" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:05:48.589" starttime="20201123 13:05:48.579"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:05:48.592" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:05:48.592" starttime="20201123 13:05:48.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:05:48.593" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:05:48.593" starttime="20201123 13:05:48.593"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.593" starttime="20201123 13:05:48.592"></status>
</kw>
<msg timestamp="20201123 13:05:48.593" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:05:48.593" starttime="20201123 13:05:48.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:05:48.595" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201123 13:05:48.595" starttime="20201123 13:05:48.594"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:05:48.595" level="INFO">${result} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201123 13:05:48.595" starttime="20201123 13:05:48.595"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.596" starttime="20201123 13:05:48.594"></status>
</kw>
<msg timestamp="20201123 13:05:48.596" level="INFO">${path_with_leading} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201123 13:05:48.596" starttime="20201123 13:05:48.594"></status>
</kw>
<status status="PASS" endtime="20201123 13:05:48.596" starttime="20201123 13:05:48.591"></status>
</kw>
<msg timestamp="20201123 13:05:48.596" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201123 13:05:48.596" starttime="20201123 13:05:48.590"></status>
</kw>
<msg timestamp="20201123 13:05:48.596" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201123 13:05:48.596" starttime="20201123 13:05:48.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:05:48.601" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:06:29.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:06:29.042" level="INFO">${output} = 2020-11-23 13:05:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:06:29.042" starttime="20201123 13:05:48.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:06:29.044" level="INFO">2020-11-23 13:05:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:05:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-23 13:05:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-23 13:05:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:05:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:05:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:05:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0916D3A757A8-&gt;44f7f1b8-1ad2-4b06-8d07-9b7d0fa5e07b
2020-11-23 13:05:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:05:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:05:53 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:05:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136512491_0004
2020-11-23 13:05:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:05:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:53 INFO  Configuration:2752 - resource-types.xml not found
2020-11-23 13:05:53 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-23 13:05:53 INFO  YarnClientImpl:324 - Submitted application application_1606136512491_0004
2020-11-23 13:05:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136512491_0004/
2020-11-23 13:05:53 INFO  Job:1619 - Running job: job_1606136512491_0004
2020-11-23 13:06:02 INFO  Job:1640 - Job job_1606136512491_0004 running in uber mode : false
2020-11-23 13:06:02 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:06:10 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:06:16 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:06:21 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:06:27 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:06:28 INFO  Job:1658 - Job job_1606136512491_0004 completed successfully
2020-11-23 13:06:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:06:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49804
		Total time spent by all reduces in occupied slots (ms)=18080
		Total time spent by all map tasks (ms)=12451
		Total time spent by all reduce tasks (ms)=4520
		Total vcore-milliseconds taken by all map tasks=12451
		Total vcore-milliseconds taken by all reduce tasks=4520
		Total megabyte-milliseconds taken by all map tasks=50999296
		Total megabyte-milliseconds taken by all reduce tasks=18513920
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=787
		CPU time spent (ms)=8550
		Physical memory (bytes) snapshot=1210134528
		Virtual memory (bytes) snapshot=15789969408
		Total committed heap usage (bytes)=1159200768
		Peak Map Physical memory (bytes)=312336384
		Peak Map Virtual memory (bytes)=3947524096
		Peak Reduce Physical memory (bytes)=301408256
		Peak Reduce Virtual memory (bytes)=3967123456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-23 13:06:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:06:29.044" starttime="20201123 13:06:29.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:06:29.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:06:29.045" starttime="20201123 13:06:29.044"></status>
</kw>
<status status="PASS" endtime="20201123 13:06:29.045" starttime="20201123 13:05:48.598"></status>
</kw>
<msg timestamp="20201123 13:06:29.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:06:29.045" starttime="20201123 13:05:48.597"></status>
</kw>
<msg timestamp="20201123 13:06:29.046" level="INFO">${output} = 2020-11-23 13:05:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:05:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:06:29.046" starttime="20201123 13:05:48.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 13:06:29.046" starttime="20201123 13:06:29.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:06:29.047" starttime="20201123 13:06:29.047"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:06:29.047" critical="yes" starttime="20201123 13:05:48.547"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 13:06:29.049" starttime="20201123 13:05:01.955"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:03:10.537" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:03:10.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:03:10.543" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:10.543" starttime="20201123 13:03:10.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:03:10.544" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:10.544" starttime="20201123 13:03:10.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:03:10.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:03:10.546" starttime="20201123 13:03:10.544"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:10.546" starttime="20201123 13:03:10.532"></status>
</kw>
<msg timestamp="20201123 13:03:10.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:03:10.546" starttime="20201123 13:03:10.532"></status>
</kw>
<msg timestamp="20201123 13:03:10.546" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:10.546" starttime="20201123 13:03:10.531"></status>
</kw>
<msg timestamp="20201123 13:03:10.546" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:10.547" starttime="20201123 13:03:10.531"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:03:10.552" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:03:10.552" starttime="20201123 13:03:10.552"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:03:10.553" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:03:10.553" starttime="20201123 13:03:10.552"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:10.553" starttime="20201123 13:03:10.550"></status>
</kw>
<msg timestamp="20201123 13:03:10.553" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:03:10.553" starttime="20201123 13:03:10.549"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:10.554" starttime="20201123 13:03:10.548"></status>
</kw>
<msg timestamp="20201123 13:03:10.554" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:03:10.554" starttime="20201123 13:03:10.547"></status>
</kw>
<msg timestamp="20201123 13:03:10.554" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:03:10.554" starttime="20201123 13:03:10.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:03:10.557" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:03:59.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:03:59.909" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03...</msg>
<status status="PASS" endtime="20201123 13:03:59.909" starttime="20201123 13:03:10.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:03:59.912" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-23 13:03:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-23 13:03:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:03:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:03:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:03:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-673795E9291A-&gt;44f7f1b8-1ad2-4b06-8d07-9b7d0fa5e07b
2020-11-23 13:03:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-23 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:03:15 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:03:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136512491_0001
2020-11-23 13:03:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:03:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:18 INFO  Configuration:2752 - resource-types.xml not found
2020-11-23 13:03:18 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-23 13:03:19 INFO  YarnClientImpl:324 - Submitted application application_1606136512491_0001
2020-11-23 13:03:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136512491_0001/
2020-11-23 13:03:19 INFO  Job:1619 - Running job: job_1606136512491_0001
2020-11-23 13:03:31 INFO  Job:1640 - Job job_1606136512491_0001 running in uber mode : false
2020-11-23 13:03:31 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:03:38 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:03:45 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:03:51 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:03:56 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:03:59 INFO  Job:1658 - Job job_1606136512491_0001 completed successfully
2020-11-23 13:03:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50328
		Total time spent by all reduces in occupied slots (ms)=19528
		Total time spent by all map tasks (ms)=12582
		Total time spent by all reduce tasks (ms)=4882
		Total vcore-milliseconds taken by all map tasks=12582
		Total vcore-milliseconds taken by all reduce tasks=4882
		Total megabyte-milliseconds taken by all map tasks=51535872
		Total megabyte-milliseconds taken by all reduce tasks=19996672
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=834
		CPU time spent (ms)=8430
		Physical memory (bytes) snapshot=1218461696
		Virtual memory (bytes) snapshot=15792177152
		Total committed heap usage (bytes)=1146617856
		Peak Map Physical memory (bytes)=314015744
		Peak Map Virtual memory (bytes)=3948437504
		Peak Reduce Physical memory (bytes)=306176000
		Peak Reduce Virtual memory (bytes)=3972927488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 44.739 seconds
2020-11-23 13:03:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:59 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-23 13:03:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:03:59.913" starttime="20201123 13:03:59.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:03:59.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:03:59.914" starttime="20201123 13:03:59.913"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.915" starttime="20201123 13:03:10.555"></status>
</kw>
<msg timestamp="20201123 13:03:59.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:03:59.916" starttime="20201123 13:03:10.555"></status>
</kw>
<msg timestamp="20201123 13:03:59.916" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:03...</msg>
<status status="PASS" endtime="20201123 13:03:59.917" starttime="20201123 13:03:10.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:03:59.922" starttime="20201123 13:03:59.917"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:03:59.923" critical="yes" starttime="20201123 13:03:10.530"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:03:59.932" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:03:59.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:03:59.945" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:59.945" starttime="20201123 13:03:59.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:03:59.948" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:59.948" starttime="20201123 13:03:59.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:03:59.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:03:59.949" starttime="20201123 13:03:59.948"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.949" starttime="20201123 13:03:59.926"></status>
</kw>
<msg timestamp="20201123 13:03:59.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:03:59.949" starttime="20201123 13:03:59.925"></status>
</kw>
<msg timestamp="20201123 13:03:59.950" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:59.950" starttime="20201123 13:03:59.925"></status>
</kw>
<msg timestamp="20201123 13:03:59.950" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201123 13:03:59.950" starttime="20201123 13:03:59.924"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:03:59.951" level="INFO">${random} = 27</msg>
<status status="PASS" endtime="20201123 13:03:59.951" starttime="20201123 13:03:59.950"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:03:59.955" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:03:59.955" starttime="20201123 13:03:59.954"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:03:59.956" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:03:59.956" starttime="20201123 13:03:59.955"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.956" starttime="20201123 13:03:59.954"></status>
</kw>
<msg timestamp="20201123 13:03:59.957" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:03:59.957" starttime="20201123 13:03:59.953"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.957" starttime="20201123 13:03:59.952"></status>
</kw>
<msg timestamp="20201123 13:03:59.957" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:03:59.958" starttime="20201123 13:03:59.952"></status>
</kw>
<msg timestamp="20201123 13:03:59.958" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:03:59.958" starttime="20201123 13:03:59.951"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:03:59.962" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:03:59.962" starttime="20201123 13:03:59.961"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:03:59.963" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:03:59.963" starttime="20201123 13:03:59.962"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.963" starttime="20201123 13:03:59.961"></status>
</kw>
<msg timestamp="20201123 13:03:59.963" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:03:59.963" starttime="20201123 13:03:59.961"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.963" starttime="20201123 13:03:59.960"></status>
</kw>
<msg timestamp="20201123 13:03:59.964" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 13:03:59.964" starttime="20201123 13:03:59.959"></status>
</kw>
<msg timestamp="20201123 13:03:59.964" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 13:03:59.964" starttime="20201123 13:03:59.958"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:03:59.967" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:03:59.967" starttime="20201123 13:03:59.967"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:03:59.968" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:03:59.968" starttime="20201123 13:03:59.968"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.968" starttime="20201123 13:03:59.966"></status>
</kw>
<msg timestamp="20201123 13:03:59.968" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:03:59.968" starttime="20201123 13:03:59.966"></status>
</kw>
<status status="PASS" endtime="20201123 13:03:59.969" starttime="20201123 13:03:59.965"></status>
</kw>
<msg timestamp="20201123 13:03:59.969" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-27.txt</msg>
<status status="PASS" endtime="20201123 13:03:59.969" starttime="20201123 13:03:59.965"></status>
</kw>
<msg timestamp="20201123 13:03:59.969" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-27.txt</msg>
<status status="PASS" endtime="20201123 13:03:59.969" starttime="20201123 13:03:59.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:03:59.974" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-27.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:04:43.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:04:43.010" level="INFO">${output} = 2020-11-23 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:04:43.010" starttime="20201123 13:03:59.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:04:43.011" level="INFO">2020-11-23 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-23 13:04:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-23 13:04:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:04:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:04:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:04:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7DA094E13A71-&gt;44f7f1b8-1ad2-4b06-8d07-9b7d0fa5e07b
2020-11-23 13:04:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:04:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:04:05 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:04:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136512491_0002
2020-11-23 13:04:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:04:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:05 INFO  Configuration:2752 - resource-types.xml not found
2020-11-23 13:04:05 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-23 13:04:05 INFO  YarnClientImpl:324 - Submitted application application_1606136512491_0002
2020-11-23 13:04:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136512491_0002/
2020-11-23 13:04:05 INFO  Job:1619 - Running job: job_1606136512491_0002
2020-11-23 13:04:16 INFO  Job:1640 - Job job_1606136512491_0002 running in uber mode : false
2020-11-23 13:04:16 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:04:24 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:04:30 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:04:35 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:04:41 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:04:42 INFO  Job:1658 - Job job_1606136512491_0002 completed successfully
2020-11-23 13:04:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49548
		Total time spent by all reduces in occupied slots (ms)=18732
		Total time spent by all map tasks (ms)=12387
		Total time spent by all reduce tasks (ms)=4683
		Total vcore-milliseconds taken by all map tasks=12387
		Total vcore-milliseconds taken by all reduce tasks=4683
		Total megabyte-milliseconds taken by all map tasks=50737152
		Total megabyte-milliseconds taken by all reduce tasks=19181568
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=808
		CPU time spent (ms)=8040
		Physical memory (bytes) snapshot=1191333888
		Virtual memory (bytes) snapshot=15772585984
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=316686336
		Peak Map Virtual memory (bytes)=3946754048
		Peak Reduce Physical memory (bytes)=274919424
		Peak Reduce Virtual memory (bytes)=3954302976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-23 13:04:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201123 13:04:43.012" starttime="20201123 13:04:43.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:04:43.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:04:43.012" starttime="20201123 13:04:43.012"></status>
</kw>
<status status="PASS" endtime="20201123 13:04:43.013" starttime="20201123 13:03:59.970"></status>
</kw>
<msg timestamp="20201123 13:04:43.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:04:43.013" starttime="20201123 13:03:59.970"></status>
</kw>
<msg timestamp="20201123 13:04:43.014" level="INFO">${output} = 2020-11-23 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-23 13:04:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201123 13:04:43.014" starttime="20201123 13:03:59.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 13:04:43.014" starttime="20201123 13:04:43.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:04:43.015" starttime="20201123 13:04:43.015"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:04:43.015" critical="yes" starttime="20201123 13:03:59.923"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 13:04:43.017" starttime="20201123 13:03:10.474"></status>
</suite>
<status status="PASS" elapsedtime="226600" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:07:46.921" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:07:52.841" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:07:52.841" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 13:07:52.842" starttime="20201123 13:07:46.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:07:52.843" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 13:07:52.843" starttime="20201123 13:07:52.842"></status>
</kw>
<msg timestamp="20201123 13:07:52.843" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 13:07:52.843" starttime="20201123 13:07:46.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:07:52.852" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:07:56.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:07:56.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:07:56.625" starttime="20201123 13:07:52.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:07:56.627" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:07:56.627" starttime="20201123 13:07:56.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:07:56.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:07:56.628" starttime="20201123 13:07:56.627"></status>
</kw>
<status status="PASS" endtime="20201123 13:07:56.628" starttime="20201123 13:07:52.845"></status>
</kw>
<msg timestamp="20201123 13:07:56.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:07:56.628" starttime="20201123 13:07:52.845"></status>
</kw>
<msg timestamp="20201123 13:07:56.629" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201123 13:07:56.629" starttime="20201123 13:07:52.845"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:07:56.629" starttime="20201123 13:07:56.629"></status>
</kw>
<status status="PASS" endtime="20201123 13:07:56.629" starttime="20201123 13:07:52.844"></status>
</kw>
<status status="PASS" endtime="20201123 13:07:56.630" starttime="20201123 13:07:52.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:07:56.637" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:00.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:00.164" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:08:00.164" starttime="20201123 13:07:56.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:00.165" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:08:00.165" starttime="20201123 13:08:00.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:00.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:00.166" starttime="20201123 13:08:00.165"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:00.166" starttime="20201123 13:07:56.632"></status>
</kw>
<msg timestamp="20201123 13:08:00.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:00.166" starttime="20201123 13:07:56.632"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:00.167" starttime="20201123 13:07:56.631"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:00.167" starttime="20201123 13:07:56.630"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:00.167" starttime="20201123 13:07:56.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201123 13:08:00.167" starttime="20201123 13:08:00.167"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:00.172" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:04.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:04.180" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:07:59.902Z",
  "modificat...</msg>
<status status="PASS" endtime="20201123 13:08:04.180" starttime="20201123 13:08:00.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:04.182" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:07:59.902Z",
  "modificationTime" : "2020-11-23T13:07:59.902Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201123 13:08:04.182" starttime="20201123 13:08:04.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:04.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:04.183" starttime="20201123 13:08:04.182"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:04.183" starttime="20201123 13:08:00.169"></status>
</kw>
<msg timestamp="20201123 13:08:04.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:04.183" starttime="20201123 13:08:00.168"></status>
</kw>
<msg timestamp="20201123 13:08:04.184" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:07:59.902Z",
  "modificat...</msg>
<status status="PASS" endtime="20201123 13:08:04.184" starttime="20201123 13:08:00.168"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201123 13:08:04.185" starttime="20201123 13:08:04.184"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:08:04.191" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:08:04.191" starttime="20201123 13:08:04.190"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:08:04.191" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:08:04.191" starttime="20201123 13:08:04.191"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:04.191" starttime="20201123 13:08:04.189"></status>
</kw>
<msg timestamp="20201123 13:08:04.192" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:08:04.192" starttime="20201123 13:08:04.189"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:04.192" starttime="20201123 13:08:04.187"></status>
</kw>
<msg timestamp="20201123 13:08:04.192" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 13:08:04.192" starttime="20201123 13:08:04.186"></status>
</kw>
<msg timestamp="20201123 13:08:04.192" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 13:08:04.192" starttime="20201123 13:08:04.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:04.197" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:07.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:07.934" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:08:07.934" starttime="20201123 13:08:04.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:07.936" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:08:07.936" starttime="20201123 13:08:07.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:07.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:07.937" starttime="20201123 13:08:07.936"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:07.937" starttime="20201123 13:08:04.193"></status>
</kw>
<msg timestamp="20201123 13:08:07.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:07.938" starttime="20201123 13:08:04.193"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:07.938" starttime="20201123 13:08:04.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:07.943" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:15.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:15.736" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:08:15.736" starttime="20201123 13:08:07.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:15.737" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:08:15.737" starttime="20201123 13:08:15.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:15.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:15.738" starttime="20201123 13:08:15.737"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:15.738" starttime="20201123 13:08:07.939"></status>
</kw>
<msg timestamp="20201123 13:08:15.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:15.739" starttime="20201123 13:08:07.939"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:15.739" starttime="20201123 13:08:07.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:15.743" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:22.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:22.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:08:22.148" starttime="20201123 13:08:15.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:22.150" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:08:22.150" starttime="20201123 13:08:22.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:22.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:22.150" starttime="20201123 13:08:22.150"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:22.151" starttime="20201123 13:08:15.740"></status>
</kw>
<msg timestamp="20201123 13:08:22.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:22.151" starttime="20201123 13:08:15.740"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:22.151" starttime="20201123 13:08:15.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:22.156" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:28.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:28.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:08:28.073" starttime="20201123 13:08:22.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:28.075" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:08:28.075" starttime="20201123 13:08:28.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:28.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:28.076" starttime="20201123 13:08:28.075"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:28.077" starttime="20201123 13:08:22.152"></status>
</kw>
<msg timestamp="20201123 13:08:28.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:28.077" starttime="20201123 13:08:22.152"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:28.077" starttime="20201123 13:08:22.151"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:08:28.078" critical="yes" starttime="20201123 13:07:46.911"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:08:28.084" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:08:28.084" starttime="20201123 13:08:28.083"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:08:28.088" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:08:28.089" starttime="20201123 13:08:28.084"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:28.089" starttime="20201123 13:08:28.082"></status>
</kw>
<msg timestamp="20201123 13:08:28.089" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:08:28.089" starttime="20201123 13:08:28.082"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:28.089" starttime="20201123 13:08:28.081"></status>
</kw>
<msg timestamp="20201123 13:08:28.089" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:08:28.089" starttime="20201123 13:08:28.080"></status>
</kw>
<msg timestamp="20201123 13:08:28.090" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:08:28.090" starttime="20201123 13:08:28.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:28.094" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:31.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:31.925" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:08:31.925" starttime="20201123 13:08:28.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:31.926" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:08:31.926" starttime="20201123 13:08:31.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:31.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:31.927" starttime="20201123 13:08:31.927"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:31.928" starttime="20201123 13:08:28.090"></status>
</kw>
<msg timestamp="20201123 13:08:31.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:31.928" starttime="20201123 13:08:28.090"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:31.928" starttime="20201123 13:08:28.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:31.933" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:35.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:35.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:08:35.545" starttime="20201123 13:08:31.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:35.547" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:08:35.547" starttime="20201123 13:08:35.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:35.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:35.548" starttime="20201123 13:08:35.547"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:35.548" starttime="20201123 13:08:31.930"></status>
</kw>
<msg timestamp="20201123 13:08:35.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:35.548" starttime="20201123 13:08:31.929"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:35.548" starttime="20201123 13:08:31.929"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:08:35.549" critical="yes" starttime="20201123 13:08:28.078"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201123 13:08:35.550" starttime="20201123 13:07:46.839"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:10:35.327" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:10:35.327" starttime="20201123 13:10:35.327"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:10:35.328" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:10:35.328" starttime="20201123 13:10:35.327"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:35.328" starttime="20201123 13:10:35.326"></status>
</kw>
<msg timestamp="20201123 13:10:35.328" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:10:35.328" starttime="20201123 13:10:35.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:10:35.329" starttime="20201123 13:10:35.329"></status>
</kw>
<msg timestamp="20201123 13:10:35.329" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:10:35.329" starttime="20201123 13:10:35.328"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:35.330" starttime="20201123 13:10:35.325"></status>
</kw>
<msg timestamp="20201123 13:10:35.330" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:10:35.330" starttime="20201123 13:10:35.324"></status>
</kw>
<msg timestamp="20201123 13:10:35.330" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:10:35.330" starttime="20201123 13:10:35.323"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:10:35.330" level="INFO">${random} = 83960</msg>
<status status="PASS" endtime="20201123 13:10:35.331" starttime="20201123 13:10:35.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:10:35.341" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-83960 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:10:39.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:10:39.526" level="INFO">${output} = 2020-11-23 13:10:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:10:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:10:39.526" starttime="20201123 13:10:35.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:10:39.527" level="INFO">2020-11-23 13:10:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:10:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:10:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:10:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:10:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-147D8828D314-&gt;75fd5810-88e9-44ae-b2b6-833f516d2089
2020-11-23 13:10:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201123 13:10:39.528" starttime="20201123 13:10:39.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:10:39.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:10:39.529" starttime="20201123 13:10:39.528"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:39.529" starttime="20201123 13:10:35.331"></status>
</kw>
<msg timestamp="20201123 13:10:39.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:10:39.530" starttime="20201123 13:10:35.331"></status>
</kw>
<msg timestamp="20201123 13:10:39.530" level="INFO">${result} = 2020-11-23 13:10:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:10:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:10:39.530" starttime="20201123 13:10:35.331"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:10:39.538" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:10:42.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:10:42.021" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:08 ofs://om/volume1/bucket1/ozone-66974
-rw-...</msg>
<status status="PASS" endtime="20201123 13:10:42.021" starttime="20201123 13:10:39.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:10:42.023" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:08 ofs://om/volume1/bucket1/ozone-66974
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:10 ofs://om/volume1/bucket1/ozone-83960
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:10 ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201123 13:10:42.023" starttime="20201123 13:10:42.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:10:42.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:10:42.024" starttime="20201123 13:10:42.023"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:42.024" starttime="20201123 13:10:39.534"></status>
</kw>
<msg timestamp="20201123 13:10:42.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:10:42.024" starttime="20201123 13:10:39.533"></status>
</kw>
<msg timestamp="20201123 13:10:42.025" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:08 ofs://om/volume1/bucket1/ozone-66974
-rw-...</msg>
<status status="PASS" endtime="20201123 13:10:42.025" starttime="20201123 13:10:39.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:10:42.025" starttime="20201123 13:10:42.025"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:10:42.026" critical="yes" starttime="20201123 13:10:35.323"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 13:10:42.027" starttime="20201123 13:10:35.269"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:08:41.585" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:08:41.585" starttime="20201123 13:08:41.585"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:08:41.586" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:08:41.586" starttime="20201123 13:08:41.586"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:41.586" starttime="20201123 13:08:41.584"></status>
</kw>
<msg timestamp="20201123 13:08:41.586" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:08:41.586" starttime="20201123 13:08:41.584"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:41.587" starttime="20201123 13:08:41.583"></status>
</kw>
<msg timestamp="20201123 13:08:41.587" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:08:41.587" starttime="20201123 13:08:41.583"></status>
</kw>
<msg timestamp="20201123 13:08:41.587" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:08:41.587" starttime="20201123 13:08:41.581"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:08:41.588" level="INFO">${random} = 66974</msg>
<status status="PASS" endtime="20201123 13:08:41.588" starttime="20201123 13:08:41.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:41.594" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-66974 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:46.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:46.412" level="INFO">${output} = 2020-11-23 13:08:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:08:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:08:46.412" starttime="20201123 13:08:41.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:46.415" level="INFO">2020-11-23 13:08:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:08:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:08:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:08:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:08:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-11AF2E7BA6F9-&gt;75fd5810-88e9-44ae-b2b6-833f516d2089
2020-11-23 13:08:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201123 13:08:46.415" starttime="20201123 13:08:46.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:46.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:46.417" starttime="20201123 13:08:46.415"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:46.417" starttime="20201123 13:08:41.589"></status>
</kw>
<msg timestamp="20201123 13:08:46.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:46.417" starttime="20201123 13:08:41.588"></status>
</kw>
<msg timestamp="20201123 13:08:46.418" level="INFO">${result} = 2020-11-23 13:08:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:08:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:08:46.418" starttime="20201123 13:08:41.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:46.425" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:48.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:48.536" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:08 o3fs://bucket1.volume1.om/ozone-66974
dr...</msg>
<status status="PASS" endtime="20201123 13:08:48.536" starttime="20201123 13:08:46.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:48.537" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:08 o3fs://bucket1.volume1.om/ozone-66974
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:08:48.537" starttime="20201123 13:08:48.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:48.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:48.538" starttime="20201123 13:08:48.538"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:48.538" starttime="20201123 13:08:46.420"></status>
</kw>
<msg timestamp="20201123 13:08:48.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:48.539" starttime="20201123 13:08:46.419"></status>
</kw>
<msg timestamp="20201123 13:08:48.539" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:08 o3fs://bucket1.volume1.om/ozone-66974
dr...</msg>
<status status="PASS" endtime="20201123 13:08:48.539" starttime="20201123 13:08:46.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:08:48.540" starttime="20201123 13:08:48.539"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:08:48.540" critical="yes" starttime="20201123 13:08:41.581"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 13:08:48.541" starttime="20201123 13:08:41.525"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:10:48.164" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:10:48.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:10:48.169" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:10:48.169" starttime="20201123 13:10:48.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:10:48.173" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:10:48.174" starttime="20201123 13:10:48.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:10:48.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:10:48.175" starttime="20201123 13:10:48.174"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:48.175" starttime="20201123 13:10:48.155"></status>
</kw>
<msg timestamp="20201123 13:10:48.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:10:48.175" starttime="20201123 13:10:48.155"></status>
</kw>
<msg timestamp="20201123 13:10:48.176" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:10:48.176" starttime="20201123 13:10:48.154"></status>
</kw>
<msg timestamp="20201123 13:10:48.176" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:10:48.176" starttime="20201123 13:10:48.154"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:10:48.184" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:10:48.184" starttime="20201123 13:10:48.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:10:48.185" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:10:48.185" starttime="20201123 13:10:48.184"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:48.185" starttime="20201123 13:10:48.181"></status>
</kw>
<msg timestamp="20201123 13:10:48.185" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:10:48.185" starttime="20201123 13:10:48.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:10:48.186" starttime="20201123 13:10:48.186"></status>
</kw>
<msg timestamp="20201123 13:10:48.186" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:10:48.186" starttime="20201123 13:10:48.185"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:48.187" starttime="20201123 13:10:48.180"></status>
</kw>
<msg timestamp="20201123 13:10:48.187" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:10:48.187" starttime="20201123 13:10:48.177"></status>
</kw>
<msg timestamp="20201123 13:10:48.187" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:10:48.187" starttime="20201123 13:10:48.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:10:48.193" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:11:30.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:11:30.432" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:10:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:10:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:11:30.433" starttime="20201123 13:10:48.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:11:30.435" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:10:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:10:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:10:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:10:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:10:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D4B88FA7B36-&gt;75fd5810-88e9-44ae-b2b6-833f516d2089
2020-11-23 13:10:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 13:10:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:10:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:10:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:10:53 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:10:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136839972_0003
2020-11-23 13:10:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:10:53 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:10:53 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:10:53 INFO  YarnClientImpl:329 - Submitted application application_1606136839972_0003
2020-11-23 13:10:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136839972_0003/
2020-11-23 13:10:53 INFO  Job:1619 - Running job: job_1606136839972_0003
2020-11-23 13:11:02 INFO  Job:1640 - Job job_1606136839972_0003 running in uber mode : false
2020-11-23 13:11:02 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:11:10 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:11:17 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:11:23 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:11:28 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:11:29 INFO  Job:1658 - Job job_1606136839972_0003 completed successfully
2020-11-23 13:11:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49260
		Total time spent by all reduces in occupied slots (ms)=19236
		Total time spent by all map tasks (ms)=12315
		Total time spent by all reduce tasks (ms)=4809
		Total vcore-milliseconds taken by all map tasks=12315
		Total vcore-milliseconds taken by all reduce tasks=4809
		Total megabyte-milliseconds taken by all map tasks=50442240
		Total megabyte-milliseconds taken by all reduce tasks=19697664
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=916
		CPU time spent (ms)=8940
		Physical memory (bytes) snapshot=1490046976
		Virtual memory (bytes) snapshot=15814205440
		Total committed heap usage (bytes)=1704984576
		Peak Map Physical memory (bytes)=374308864
		Peak Map Virtual memory (bytes)=3953074176
		Peak Reduce Physical memory (bytes)=379600896
		Peak Reduce Virtual memory (bytes)=3967143936
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.463 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201123 13:11:30.435" starttime="20201123 13:11:30.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:11:30.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:11:30.436" starttime="20201123 13:11:30.435"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.437" starttime="20201123 13:10:48.189"></status>
</kw>
<msg timestamp="20201123 13:11:30.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:11:30.437" starttime="20201123 13:10:48.188"></status>
</kw>
<msg timestamp="20201123 13:11:30.437" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:10:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:10:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:11:30.437" starttime="20201123 13:10:48.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:11:30.438" starttime="20201123 13:11:30.437"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:11:30.438" critical="yes" starttime="20201123 13:10:48.153"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:11:30.444" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:11:30.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:11:30.452" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:11:30.452" starttime="20201123 13:11:30.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:11:30.453" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:11:30.453" starttime="20201123 13:11:30.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:11:30.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:11:30.454" starttime="20201123 13:11:30.454"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.455" starttime="20201123 13:11:30.441"></status>
</kw>
<msg timestamp="20201123 13:11:30.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:11:30.455" starttime="20201123 13:11:30.441"></status>
</kw>
<msg timestamp="20201123 13:11:30.455" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:11:30.455" starttime="20201123 13:11:30.441"></status>
</kw>
<msg timestamp="20201123 13:11:30.455" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:11:30.455" starttime="20201123 13:11:30.440"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:11:30.456" level="INFO">${random} = 96</msg>
<status status="PASS" endtime="20201123 13:11:30.456" starttime="20201123 13:11:30.456"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:11:30.462" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:11:30.462" starttime="20201123 13:11:30.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:11:30.463" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:11:30.463" starttime="20201123 13:11:30.462"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.463" starttime="20201123 13:11:30.461"></status>
</kw>
<msg timestamp="20201123 13:11:30.463" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:11:30.463" starttime="20201123 13:11:30.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:11:30.464" starttime="20201123 13:11:30.464"></status>
</kw>
<msg timestamp="20201123 13:11:30.464" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:11:30.464" starttime="20201123 13:11:30.463"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.464" starttime="20201123 13:11:30.458"></status>
</kw>
<msg timestamp="20201123 13:11:30.465" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:11:30.465" starttime="20201123 13:11:30.458"></status>
</kw>
<msg timestamp="20201123 13:11:30.465" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:11:30.465" starttime="20201123 13:11:30.457"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:11:30.468" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:11:30.468" starttime="20201123 13:11:30.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:11:30.469" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:11:30.469" starttime="20201123 13:11:30.468"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.469" starttime="20201123 13:11:30.467"></status>
</kw>
<msg timestamp="20201123 13:11:30.469" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:11:30.469" starttime="20201123 13:11:30.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:11:30.471" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201123 13:11:30.471" starttime="20201123 13:11:30.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:11:30.471" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201123 13:11:30.471" starttime="20201123 13:11:30.471"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.472" starttime="20201123 13:11:30.470"></status>
</kw>
<msg timestamp="20201123 13:11:30.472" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201123 13:11:30.472" starttime="20201123 13:11:30.469"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.472" starttime="20201123 13:11:30.466"></status>
</kw>
<msg timestamp="20201123 13:11:30.472" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:11:30.472" starttime="20201123 13:11:30.466"></status>
</kw>
<msg timestamp="20201123 13:11:30.472" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:11:30.472" starttime="20201123 13:11:30.465"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:11:30.475" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:11:30.475" starttime="20201123 13:11:30.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:11:30.476" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:11:30.476" starttime="20201123 13:11:30.476"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.476" starttime="20201123 13:11:30.475"></status>
</kw>
<msg timestamp="20201123 13:11:30.476" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:11:30.476" starttime="20201123 13:11:30.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:11:30.478" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201123 13:11:30.478" starttime="20201123 13:11:30.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:11:30.478" level="INFO">${result} = /wordcount-96.txt</msg>
<status status="PASS" endtime="20201123 13:11:30.478" starttime="20201123 13:11:30.478"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.479" starttime="20201123 13:11:30.477"></status>
</kw>
<msg timestamp="20201123 13:11:30.479" level="INFO">${path_with_leading} = /wordcount-96.txt</msg>
<status status="PASS" endtime="20201123 13:11:30.479" starttime="20201123 13:11:30.477"></status>
</kw>
<status status="PASS" endtime="20201123 13:11:30.479" starttime="20201123 13:11:30.474"></status>
</kw>
<msg timestamp="20201123 13:11:30.479" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-96.txt</msg>
<status status="PASS" endtime="20201123 13:11:30.479" starttime="20201123 13:11:30.473"></status>
</kw>
<msg timestamp="20201123 13:11:30.479" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-96.txt</msg>
<status status="PASS" endtime="20201123 13:11:30.479" starttime="20201123 13:11:30.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:11:30.484" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-96.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:12:12.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:12:12.034" level="INFO">${output} = 2020-11-23 13:11:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:11:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201123 13:12:12.034" starttime="20201123 13:11:30.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:12:12.036" level="INFO">2020-11-23 13:11:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:11:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:11:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:11:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:11:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:11:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:11:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5D7D4127C4F2-&gt;75fd5810-88e9-44ae-b2b6-833f516d2089
2020-11-23 13:11:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:11:34 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:11:35 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:11:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136839972_0004
2020-11-23 13:11:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:11:35 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:11:35 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:11:35 INFO  YarnClientImpl:329 - Submitted application application_1606136839972_0004
2020-11-23 13:11:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136839972_0004/
2020-11-23 13:11:35 INFO  Job:1619 - Running job: job_1606136839972_0004
2020-11-23 13:11:44 INFO  Job:1640 - Job job_1606136839972_0004 running in uber mode : false
2020-11-23 13:11:44 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:11:52 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:11:58 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:12:04 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:12:10 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:12:11 INFO  Job:1658 - Job job_1606136839972_0004 completed successfully
2020-11-23 13:12:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118611
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51020
		Total time spent by all reduces in occupied slots (ms)=19508
		Total time spent by all map tasks (ms)=12755
		Total time spent by all reduce tasks (ms)=4877
		Total vcore-milliseconds taken by all map tasks=12755
		Total vcore-milliseconds taken by all reduce tasks=4877
		Total megabyte-milliseconds taken by all map tasks=52244480
		Total megabyte-milliseconds taken by all reduce tasks=19976192
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=961
		CPU time spent (ms)=8810
		Physical memory (bytes) snapshot=1444773888
		Virtual memory (bytes) snapshot=15780130816
		Total committed heap usage (bytes)=1665138688
		Peak Map Physical memory (bytes)=366743552
		Peak Map Virtual memory (bytes)=3945820160
		Peak Reduce Physical memory (bytes)=384651264
		Peak Reduce Virtual memory (bytes)=3967737856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201123 13:12:12.036" starttime="20201123 13:12:12.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:12:12.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:12:12.037" starttime="20201123 13:12:12.037"></status>
</kw>
<status status="PASS" endtime="20201123 13:12:12.038" starttime="20201123 13:11:30.480"></status>
</kw>
<msg timestamp="20201123 13:12:12.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:12:12.038" starttime="20201123 13:11:30.480"></status>
</kw>
<msg timestamp="20201123 13:12:12.039" level="INFO">${output} = 2020-11-23 13:11:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:11:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201123 13:12:12.039" starttime="20201123 13:11:30.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 13:12:12.040" starttime="20201123 13:12:12.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:12:12.040" starttime="20201123 13:12:12.040"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:12:12.041" critical="yes" starttime="20201123 13:11:30.439"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 13:12:12.042" starttime="20201123 13:10:48.086"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:54.474" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:08:54.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:08:54.480" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:08:54.480" starttime="20201123 13:08:54.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:08:54.481" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:08:54.482" starttime="20201123 13:08:54.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:08:54.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:08:54.482" starttime="20201123 13:08:54.482"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:54.483" starttime="20201123 13:08:54.469"></status>
</kw>
<msg timestamp="20201123 13:08:54.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:08:54.483" starttime="20201123 13:08:54.469"></status>
</kw>
<msg timestamp="20201123 13:08:54.483" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:08:54.483" starttime="20201123 13:08:54.468"></status>
</kw>
<msg timestamp="20201123 13:08:54.483" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:08:54.483" starttime="20201123 13:08:54.468"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:08:54.489" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:08:54.489" starttime="20201123 13:08:54.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:08:54.490" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:08:54.490" starttime="20201123 13:08:54.489"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:54.490" starttime="20201123 13:08:54.487"></status>
</kw>
<msg timestamp="20201123 13:08:54.490" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:08:54.490" starttime="20201123 13:08:54.486"></status>
</kw>
<status status="PASS" endtime="20201123 13:08:54.490" starttime="20201123 13:08:54.485"></status>
</kw>
<msg timestamp="20201123 13:08:54.491" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:08:54.491" starttime="20201123 13:08:54.485"></status>
</kw>
<msg timestamp="20201123 13:08:54.491" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:08:54.491" starttime="20201123 13:08:54.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:08:54.494" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:09:48.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:09:48.260" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:08:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:08:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:09:48.260" starttime="20201123 13:08:54.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:09:48.261" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:08:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:08:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:08:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:08:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:08:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-91EB486EDDED-&gt;75fd5810-88e9-44ae-b2b6-833f516d2089
2020-11-23 13:08:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 13:09:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:09:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:09:04 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:09:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136839972_0001
2020-11-23 13:09:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:09:05 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:09:05 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:09:05 INFO  YarnClientImpl:329 - Submitted application application_1606136839972_0001
2020-11-23 13:09:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136839972_0001/
2020-11-23 13:09:05 INFO  Job:1619 - Running job: job_1606136839972_0001
2020-11-23 13:09:19 INFO  Job:1640 - Job job_1606136839972_0001 running in uber mode : false
2020-11-23 13:09:19 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:09:26 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:09:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:09:38 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:09:44 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:09:47 INFO  Job:1658 - Job job_1606136839972_0001 completed successfully
2020-11-23 13:09:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49776
		Total time spent by all reduces in occupied slots (ms)=18628
		Total time spent by all map tasks (ms)=12444
		Total time spent by all reduce tasks (ms)=4657
		Total vcore-milliseconds taken by all map tasks=12444
		Total vcore-milliseconds taken by all reduce tasks=4657
		Total megabyte-milliseconds taken by all map tasks=50970624
		Total megabyte-milliseconds taken by all reduce tasks=19075072
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=853
		CPU time spent (ms)=8550
		Physical memory (bytes) snapshot=1487179776
		Virtual memory (bytes) snapshot=15806836736
		Total committed heap usage (bytes)=1725431808
		Peak Map Physical memory (bytes)=375316480
		Peak Map Virtual memory (bytes)=3947732992
		Peak Reduce Physical memory (bytes)=383578112
		Peak Reduce Virtual memory (bytes)=3969576960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 46.649 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201123 13:09:48.262" starttime="20201123 13:09:48.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:09:48.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:09:48.263" starttime="20201123 13:09:48.262"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.263" starttime="20201123 13:08:54.492"></status>
</kw>
<msg timestamp="20201123 13:09:48.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:09:48.263" starttime="20201123 13:08:54.492"></status>
</kw>
<msg timestamp="20201123 13:09:48.264" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:08:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:08:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:09:48.264" starttime="20201123 13:08:54.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:09:48.265" starttime="20201123 13:09:48.264"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:09:48.265" critical="yes" starttime="20201123 13:08:54.466"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:09:48.271" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:09:48.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:09:48.277" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:09:48.277" starttime="20201123 13:09:48.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:09:48.278" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:09:48.278" starttime="20201123 13:09:48.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:09:48.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:09:48.279" starttime="20201123 13:09:48.278"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.279" starttime="20201123 13:09:48.268"></status>
</kw>
<msg timestamp="20201123 13:09:48.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:09:48.279" starttime="20201123 13:09:48.267"></status>
</kw>
<msg timestamp="20201123 13:09:48.279" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:09:48.279" starttime="20201123 13:09:48.267"></status>
</kw>
<msg timestamp="20201123 13:09:48.279" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:09:48.279" starttime="20201123 13:09:48.266"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:09:48.280" level="INFO">${random} = 91</msg>
<status status="PASS" endtime="20201123 13:09:48.280" starttime="20201123 13:09:48.280"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:09:48.284" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:09:48.284" starttime="20201123 13:09:48.284"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:09:48.285" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:09:48.285" starttime="20201123 13:09:48.284"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.285" starttime="20201123 13:09:48.283"></status>
</kw>
<msg timestamp="20201123 13:09:48.285" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:09:48.285" starttime="20201123 13:09:48.282"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.285" starttime="20201123 13:09:48.282"></status>
</kw>
<msg timestamp="20201123 13:09:48.285" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:09:48.285" starttime="20201123 13:09:48.281"></status>
</kw>
<msg timestamp="20201123 13:09:48.286" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:09:48.286" starttime="20201123 13:09:48.280"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:09:48.291" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:09:48.291" starttime="20201123 13:09:48.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:09:48.292" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:09:48.292" starttime="20201123 13:09:48.291"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.292" starttime="20201123 13:09:48.290"></status>
</kw>
<msg timestamp="20201123 13:09:48.292" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:09:48.292" starttime="20201123 13:09:48.288"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.293" starttime="20201123 13:09:48.287"></status>
</kw>
<msg timestamp="20201123 13:09:48.293" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 13:09:48.293" starttime="20201123 13:09:48.287"></status>
</kw>
<msg timestamp="20201123 13:09:48.293" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 13:09:48.293" starttime="20201123 13:09:48.286"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:09:48.297" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:09:48.297" starttime="20201123 13:09:48.296"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:09:48.297" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:09:48.297" starttime="20201123 13:09:48.297"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.298" starttime="20201123 13:09:48.296"></status>
</kw>
<msg timestamp="20201123 13:09:48.298" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:09:48.298" starttime="20201123 13:09:48.295"></status>
</kw>
<status status="PASS" endtime="20201123 13:09:48.298" starttime="20201123 13:09:48.295"></status>
</kw>
<msg timestamp="20201123 13:09:48.298" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20201123 13:09:48.298" starttime="20201123 13:09:48.294"></status>
</kw>
<msg timestamp="20201123 13:09:48.298" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20201123 13:09:48.298" starttime="20201123 13:09:48.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:09:48.303" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-91.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:10:29.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:10:29.333" level="INFO">${output} = 2020-11-23 13:09:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:09:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201123 13:10:29.333" starttime="20201123 13:09:48.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:10:29.335" level="INFO">2020-11-23 13:09:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:09:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:09:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:09:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:09:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:09:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:09:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-19CFE997DCB3-&gt;75fd5810-88e9-44ae-b2b6-833f516d2089
2020-11-23 13:09:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:09:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:09:53 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:09:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606136839972_0002
2020-11-23 13:09:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-23 13:09:53 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:09:53 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:09:54 INFO  YarnClientImpl:329 - Submitted application application_1606136839972_0002
2020-11-23 13:09:54 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606136839972_0002/
2020-11-23 13:09:54 INFO  Job:1619 - Running job: job_1606136839972_0002
2020-11-23 13:10:03 INFO  Job:1640 - Job job_1606136839972_0002 running in uber mode : false
2020-11-23 13:10:03 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:10:10 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:10:16 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:10:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:10:27 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:10:28 INFO  Job:1658 - Job job_1606136839972_0002 completed successfully
2020-11-23 13:10:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51272
		Total time spent by all reduces in occupied slots (ms)=18788
		Total time spent by all map tasks (ms)=12818
		Total time spent by all reduce tasks (ms)=4697
		Total vcore-milliseconds taken by all map tasks=12818
		Total vcore-milliseconds taken by all reduce tasks=4697
		Total megabyte-milliseconds taken by all map tasks=52502528
		Total megabyte-milliseconds taken by all reduce tasks=19238912
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=871
		CPU time spent (ms)=9310
		Physical memory (bytes) snapshot=1476022272
		Virtual memory (bytes) snapshot=15798116352
		Total committed heap usage (bytes)=1696071680
		Peak Map Physical memory (bytes)=372555776
		Peak Map Virtual memory (bytes)=3948584960
		Peak Reduce Physical memory (bytes)=376324096
		Peak Reduce Virtual memory (bytes)=3965214720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201123 13:10:29.335" starttime="20201123 13:10:29.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:10:29.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:10:29.336" starttime="20201123 13:10:29.336"></status>
</kw>
<status status="PASS" endtime="20201123 13:10:29.337" starttime="20201123 13:09:48.300"></status>
</kw>
<msg timestamp="20201123 13:10:29.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:10:29.337" starttime="20201123 13:09:48.299"></status>
</kw>
<msg timestamp="20201123 13:10:29.337" level="INFO">${output} = 2020-11-23 13:09:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-23 13:09:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201123 13:10:29.338" starttime="20201123 13:09:48.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 13:10:29.338" starttime="20201123 13:10:29.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:10:29.339" starttime="20201123 13:10:29.338"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:10:29.339" critical="yes" starttime="20201123 13:09:48.266"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 13:10:29.341" starttime="20201123 13:08:54.412"></status>
</suite>
<status status="PASS" elapsedtime="241370" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="688123" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
