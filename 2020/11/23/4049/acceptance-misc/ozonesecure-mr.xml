<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201123 13:50:46.863" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:45:59.067" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:04.264" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:46:04.264" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:04.264" starttime="20201123 13:45:59.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:04.265" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201123 13:46:04.265" starttime="20201123 13:46:04.265"></status>
</kw>
<msg timestamp="20201123 13:46:04.266" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:04.266" starttime="20201123 13:45:59.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:04.274" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:08.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:08.602" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:08.602" starttime="20201123 13:46:04.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:08.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:08.604" starttime="20201123 13:46:08.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:08.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:08.605" starttime="20201123 13:46:08.604"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:08.606" starttime="20201123 13:46:04.268"></status>
</kw>
<msg timestamp="20201123 13:46:08.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:08.606" starttime="20201123 13:46:04.268"></status>
</kw>
<msg timestamp="20201123 13:46:08.606" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:08.607" starttime="20201123 13:46:04.267"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:46:08.607" starttime="20201123 13:46:08.607"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:08.607" starttime="20201123 13:46:04.267"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:08.608" starttime="20201123 13:46:04.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:08.613" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:12.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:12.934" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:12.934" starttime="20201123 13:46:08.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:12.935" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:12.935" starttime="20201123 13:46:12.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:12.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:12.936" starttime="20201123 13:46:12.936"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:12.936" starttime="20201123 13:46:08.610"></status>
</kw>
<msg timestamp="20201123 13:46:12.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:12.937" starttime="20201123 13:46:08.609"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:12.937" starttime="20201123 13:46:08.609"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:12.937" starttime="20201123 13:46:08.608"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:12.937" starttime="20201123 13:46:08.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201123 13:46:12.938" starttime="20201123 13:46:12.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:12.942" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:17.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:17.031" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:17.031" starttime="20201123 13:46:12.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:17.033" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:46:12.513Z",
  "modificationTime" : "2020-11-23T13:46:12.513Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201123 13:46:17.033" starttime="20201123 13:46:17.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:17.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:17.034" starttime="20201123 13:46:17.033"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:17.034" starttime="20201123 13:46:12.939"></status>
</kw>
<msg timestamp="20201123 13:46:17.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:17.034" starttime="20201123 13:46:12.939"></status>
</kw>
<msg timestamp="20201123 13:46:17.034" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:17.035" starttime="20201123 13:46:12.938"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201123 13:46:17.035" starttime="20201123 13:46:17.035"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:46:17.040" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:46:17.041" starttime="20201123 13:46:17.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:46:17.041" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:46:17.041" starttime="20201123 13:46:17.041"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:17.042" starttime="20201123 13:46:17.039"></status>
</kw>
<msg timestamp="20201123 13:46:17.042" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:46:17.042" starttime="20201123 13:46:17.039"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:17.042" starttime="20201123 13:46:17.038"></status>
</kw>
<msg timestamp="20201123 13:46:17.042" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 13:46:17.043" starttime="20201123 13:46:17.037"></status>
</kw>
<msg timestamp="20201123 13:46:17.043" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201123 13:46:17.043" starttime="20201123 13:46:17.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:17.047" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:20.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:20.847" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:20.847" starttime="20201123 13:46:17.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:20.849" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:20.849" starttime="20201123 13:46:20.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:20.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:20.850" starttime="20201123 13:46:20.849"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:20.850" starttime="20201123 13:46:17.044"></status>
</kw>
<msg timestamp="20201123 13:46:20.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:20.850" starttime="20201123 13:46:17.044"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:20.851" starttime="20201123 13:46:17.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:20.856" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:31.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:31.224" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:31.225" starttime="20201123 13:46:20.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:31.227" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:31.227" starttime="20201123 13:46:31.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:31.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:31.229" starttime="20201123 13:46:31.228"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:31.229" starttime="20201123 13:46:20.852"></status>
</kw>
<msg timestamp="20201123 13:46:31.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:31.229" starttime="20201123 13:46:20.852"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:31.230" starttime="20201123 13:46:20.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:31.236" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:37.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:37.836" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:37.836" starttime="20201123 13:46:31.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:37.838" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:37.838" starttime="20201123 13:46:37.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:37.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:37.839" starttime="20201123 13:46:37.838"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:37.839" starttime="20201123 13:46:31.231"></status>
</kw>
<msg timestamp="20201123 13:46:37.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:37.839" starttime="20201123 13:46:31.231"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:37.839" starttime="20201123 13:46:31.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:37.845" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:46.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:46.212" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:46.212" starttime="20201123 13:46:37.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:46.213" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:46.213" starttime="20201123 13:46:46.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:46.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:46.214" starttime="20201123 13:46:46.213"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:46.214" starttime="20201123 13:46:37.841"></status>
</kw>
<msg timestamp="20201123 13:46:46.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:46.214" starttime="20201123 13:46:37.840"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:46.215" starttime="20201123 13:46:37.839"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:46:46.215" critical="yes" starttime="20201123 13:45:59.059"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:46:46.221" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:46:46.221" starttime="20201123 13:46:46.220"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:46:46.221" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:46:46.221" starttime="20201123 13:46:46.221"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:46.221" starttime="20201123 13:46:46.220"></status>
</kw>
<msg timestamp="20201123 13:46:46.222" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:46:46.222" starttime="20201123 13:46:46.219"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:46.222" starttime="20201123 13:46:46.218"></status>
</kw>
<msg timestamp="20201123 13:46:46.222" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:46:46.222" starttime="20201123 13:46:46.218"></status>
</kw>
<msg timestamp="20201123 13:46:46.222" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:46:46.222" starttime="20201123 13:46:46.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:46.227" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:50.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:50.076" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:50.076" starttime="20201123 13:46:46.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:50.078" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:50.078" starttime="20201123 13:46:50.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:50.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:50.079" starttime="20201123 13:46:50.079"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:50.080" starttime="20201123 13:46:46.223"></status>
</kw>
<msg timestamp="20201123 13:46:50.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:50.080" starttime="20201123 13:46:46.223"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:50.081" starttime="20201123 13:46:46.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:46:50.088" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:46:53.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:46:53.808" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:46:53.809" starttime="20201123 13:46:50.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:46:53.810" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:46:53.810" starttime="20201123 13:46:53.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:46:53.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:46:53.811" starttime="20201123 13:46:53.810"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:53.811" starttime="20201123 13:46:50.082"></status>
</kw>
<msg timestamp="20201123 13:46:53.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:46:53.811" starttime="20201123 13:46:50.082"></status>
</kw>
<status status="PASS" endtime="20201123 13:46:53.812" starttime="20201123 13:46:50.081"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:46:53.812" critical="yes" starttime="20201123 13:46:46.216"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201123 13:46:53.813" starttime="20201123 13:45:59.001"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:49:03.901" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:49:03.901" starttime="20201123 13:49:03.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:49:03.902" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:49:03.902" starttime="20201123 13:49:03.901"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:03.902" starttime="20201123 13:49:03.900"></status>
</kw>
<msg timestamp="20201123 13:49:03.902" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:49:03.902" starttime="20201123 13:49:03.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:49:03.903" starttime="20201123 13:49:03.903"></status>
</kw>
<msg timestamp="20201123 13:49:03.903" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:49:03.903" starttime="20201123 13:49:03.902"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:03.904" starttime="20201123 13:49:03.898"></status>
</kw>
<msg timestamp="20201123 13:49:03.904" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:49:03.904" starttime="20201123 13:49:03.897"></status>
</kw>
<msg timestamp="20201123 13:49:03.904" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:49:03.904" starttime="20201123 13:49:03.896"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:49:03.905" level="INFO">${random} = 71358</msg>
<status status="PASS" endtime="20201123 13:49:03.905" starttime="20201123 13:49:03.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:49:03.916" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-71358 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:49:08.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:49:08.291" level="INFO">${output} = 2020-11-23 13:49:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:49:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:49:08.291" starttime="20201123 13:49:03.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:49:08.293" level="INFO">2020-11-23 13:49:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:49:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:49:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:49:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:49:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-92B0E5C5AA0C-&gt;c452557c-4300-413b-95e5-742a0d1e346f
2020-11-23 13:49:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201123 13:49:08.293" starttime="20201123 13:49:08.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:49:08.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:49:08.293" starttime="20201123 13:49:08.293"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:08.294" starttime="20201123 13:49:03.906"></status>
</kw>
<msg timestamp="20201123 13:49:08.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:49:08.294" starttime="20201123 13:49:03.905"></status>
</kw>
<msg timestamp="20201123 13:49:08.294" level="INFO">${result} = 2020-11-23 13:49:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:49:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:49:08.294" starttime="20201123 13:49:03.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:49:08.302" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:49:10.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:49:10.766" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:47 ofs://om/volume1/bucket1/ozone-32072
-rw-...</msg>
<status status="PASS" endtime="20201123 13:49:10.766" starttime="20201123 13:49:08.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:49:10.768" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:47 ofs://om/volume1/bucket1/ozone-32072
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:49 ofs://om/volume1/bucket1/ozone-71358
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:48 ofs://om/volume1/bucket1/wordcount-00.txt</msg>
<status status="PASS" endtime="20201123 13:49:10.768" starttime="20201123 13:49:10.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:49:10.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:49:10.769" starttime="20201123 13:49:10.768"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:10.769" starttime="20201123 13:49:08.297"></status>
</kw>
<msg timestamp="20201123 13:49:10.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:49:10.770" starttime="20201123 13:49:08.297"></status>
</kw>
<msg timestamp="20201123 13:49:10.770" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:47 ofs://om/volume1/bucket1/ozone-32072
-rw-...</msg>
<status status="PASS" endtime="20201123 13:49:10.770" starttime="20201123 13:49:08.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:49:10.771" starttime="20201123 13:49:10.770"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:49:10.771" critical="yes" starttime="20201123 13:49:03.895"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 13:49:10.772" starttime="20201123 13:49:03.833"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:47:19.999" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:47:19.999" starttime="20201123 13:47:19.998"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:47:19.999" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:47:19.999" starttime="20201123 13:47:19.999"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:20.000" starttime="20201123 13:47:19.998"></status>
</kw>
<msg timestamp="20201123 13:47:20.000" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:47:20.000" starttime="20201123 13:47:19.997"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:20.000" starttime="20201123 13:47:19.996"></status>
</kw>
<msg timestamp="20201123 13:47:20.000" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:47:20.000" starttime="20201123 13:47:19.996"></status>
</kw>
<msg timestamp="20201123 13:47:20.000" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:47:20.001" starttime="20201123 13:47:19.995"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:47:20.001" level="INFO">${random} = 32072</msg>
<status status="PASS" endtime="20201123 13:47:20.001" starttime="20201123 13:47:20.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:47:20.007" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-32072 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:47:24.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:47:24.677" level="INFO">${output} = 2020-11-23 13:47:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:47:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:47:24.677" starttime="20201123 13:47:20.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:47:24.679" level="INFO">2020-11-23 13:47:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:47:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:47:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:47:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:47:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CF994A6384F4-&gt;c452557c-4300-413b-95e5-742a0d1e346f
2020-11-23 13:47:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201123 13:47:24.679" starttime="20201123 13:47:24.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:47:24.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:47:24.680" starttime="20201123 13:47:24.679"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:24.680" starttime="20201123 13:47:20.002"></status>
</kw>
<msg timestamp="20201123 13:47:24.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:47:24.680" starttime="20201123 13:47:20.002"></status>
</kw>
<msg timestamp="20201123 13:47:24.681" level="INFO">${result} = 2020-11-23 13:47:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:47:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201123 13:47:24.681" starttime="20201123 13:47:20.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:47:24.687" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:47:27.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:47:27.061" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:47 o3fs://bucket1.volume1.om/ozone-32072
dr...</msg>
<status status="PASS" endtime="20201123 13:47:27.061" starttime="20201123 13:47:24.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:47:27.062" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:47 o3fs://bucket1.volume1.om/ozone-32072
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201123 13:47:27.062" starttime="20201123 13:47:27.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:47:27.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:47:27.063" starttime="20201123 13:47:27.063"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:27.064" starttime="20201123 13:47:24.683"></status>
</kw>
<msg timestamp="20201123 13:47:27.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:47:27.064" starttime="20201123 13:47:24.681"></status>
</kw>
<msg timestamp="20201123 13:47:27.064" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-23 13:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-23 13:47 o3fs://bucket1.volume1.om/ozone-32072
dr...</msg>
<status status="PASS" endtime="20201123 13:47:27.064" starttime="20201123 13:47:24.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:47:27.065" starttime="20201123 13:47:27.064"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:47:27.065" critical="yes" starttime="20201123 13:47:19.994"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201123 13:47:27.066" starttime="20201123 13:47:19.941"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:47:13.744" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:47:13.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:47:13.747" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201123 13:47:13.747" starttime="20201123 13:47:13.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:47:13.748" level="INFO">rm</msg>
<status status="PASS" endtime="20201123 13:47:13.748" starttime="20201123 13:47:13.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:47:13.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:47:13.749" starttime="20201123 13:47:13.748"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:13.749" starttime="20201123 13:47:13.738"></status>
</kw>
<msg timestamp="20201123 13:47:13.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:47:13.750" starttime="20201123 13:47:13.738"></status>
</kw>
<msg timestamp="20201123 13:47:13.750" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201123 13:47:13.750" starttime="20201123 13:47:13.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:47:13.751" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:47:13.751" starttime="20201123 13:47:13.750"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:47:13.756" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:47:13.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:47:13.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:47:13.792" starttime="20201123 13:47:13.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:47:13.793" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:47:13.793" starttime="20201123 13:47:13.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:47:13.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:47:13.801" starttime="20201123 13:47:13.794"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:13.801" starttime="20201123 13:47:13.752"></status>
</kw>
<msg timestamp="20201123 13:47:13.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:47:13.802" starttime="20201123 13:47:13.752"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:13.802" starttime="20201123 13:47:13.752"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:13.802" starttime="20201123 13:47:13.751"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:13.803" starttime="20201123 13:47:13.737"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:47:13.803" critical="yes" starttime="20201123 13:47:13.736"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201123 13:47:13.805" starttime="20201123 13:47:13.688"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:45:52.507" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:45:52.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:45:52.511" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201123 13:45:52.511" starttime="20201123 13:45:52.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:45:52.512" level="INFO">om</msg>
<status status="PASS" endtime="20201123 13:45:52.512" starttime="20201123 13:45:52.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:45:52.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:45:52.513" starttime="20201123 13:45:52.512"></status>
</kw>
<status status="PASS" endtime="20201123 13:45:52.513" starttime="20201123 13:45:52.502"></status>
</kw>
<msg timestamp="20201123 13:45:52.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:45:52.513" starttime="20201123 13:45:52.502"></status>
</kw>
<msg timestamp="20201123 13:45:52.514" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201123 13:45:52.514" starttime="20201123 13:45:52.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:45:52.514" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:45:52.514" starttime="20201123 13:45:52.514"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:45:52.521" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:45:52.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:45:52.533" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:45:52.533" starttime="20201123 13:45:52.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:45:52.534" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:45:52.534" starttime="20201123 13:45:52.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:45:52.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:45:52.535" starttime="20201123 13:45:52.534"></status>
</kw>
<status status="PASS" endtime="20201123 13:45:52.535" starttime="20201123 13:45:52.516"></status>
</kw>
<msg timestamp="20201123 13:45:52.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:45:52.536" starttime="20201123 13:45:52.515"></status>
</kw>
<status status="PASS" endtime="20201123 13:45:52.536" starttime="20201123 13:45:52.515"></status>
</kw>
<status status="PASS" endtime="20201123 13:45:52.536" starttime="20201123 13:45:52.514"></status>
</kw>
<status status="PASS" endtime="20201123 13:45:52.536" starttime="20201123 13:45:52.500"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:45:52.536" critical="yes" starttime="20201123 13:45:52.499"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201123 13:45:52.537" starttime="20201123 13:45:52.443"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:49:17.459" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:49:17.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:49:17.466" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:17.466" starttime="20201123 13:49:17.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:49:17.467" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:17.468" starttime="20201123 13:49:17.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:49:17.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:49:17.469" starttime="20201123 13:49:17.468"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:17.469" starttime="20201123 13:49:17.454"></status>
</kw>
<msg timestamp="20201123 13:49:17.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:49:17.469" starttime="20201123 13:49:17.454"></status>
</kw>
<msg timestamp="20201123 13:49:17.469" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:17.470" starttime="20201123 13:49:17.453"></status>
</kw>
<msg timestamp="20201123 13:49:17.470" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:17.470" starttime="20201123 13:49:17.453"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:49:17.484" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:49:17.484" starttime="20201123 13:49:17.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:49:17.484" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:49:17.485" starttime="20201123 13:49:17.484"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:17.485" starttime="20201123 13:49:17.481"></status>
</kw>
<msg timestamp="20201123 13:49:17.485" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:49:17.485" starttime="20201123 13:49:17.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:49:17.486" starttime="20201123 13:49:17.485"></status>
</kw>
<msg timestamp="20201123 13:49:17.486" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:49:17.486" starttime="20201123 13:49:17.485"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:17.486" starttime="20201123 13:49:17.479"></status>
</kw>
<msg timestamp="20201123 13:49:17.486" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:49:17.486" starttime="20201123 13:49:17.479"></status>
</kw>
<msg timestamp="20201123 13:49:17.487" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:49:17.487" starttime="20201123 13:49:17.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:49:17.491" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:49:56.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:49:56.909" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:49:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:49:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:49:56.909" starttime="20201123 13:49:17.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:49:56.910" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:49:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:49:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:49:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:49:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:49:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F1869C0F632E-&gt;c452557c-4300-413b-95e5-742a0d1e346f
2020-11-23 13:49:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 13:49:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:49:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-23 13:49:25 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139365022, maxDate=1606744165022, sequenceNumber=3, masterKeyId=2))
2020-11-23 13:49:25 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 aa 8c f7 aa df 2e 38 aa 94 a9 cb e1 2e 40 03 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-23 13:49:25 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139365022, maxDate=1606744165022, sequenceNumber=3, masterKeyId=2)
2020-11-23 13:49:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:49:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:49:25 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:49:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606139098690_0003
2020-11-23 13:49:26 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139365022, maxDate=1606744165022, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 aa 8c f7 aa df 2e 38 aa 94 a9 cb e1 2e 40 03 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-23 13:49:26 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:49:26 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:49:26 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-23 13:49:27 INFO  YarnClientImpl:329 - Submitted application application_1606139098690_0003
2020-11-23 13:49:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606139098690_0003/
2020-11-23 13:49:27 INFO  Job:1619 - Running job: job_1606139098690_0003
2020-11-23 13:49:36 INFO  Job:1640 - Job job_1606139098690_0003 running in uber mode : false
2020-11-23 13:49:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:49:48 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:49:50 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:49:51 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:49:55 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:49:56 INFO  Job:1658 - Job job_1606139098690_0003 completed successfully
2020-11-23 13:49:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065757
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56054
		Total time spent by all reduces in occupied slots (ms)=9798
		Total time spent by all map tasks (ms)=28027
		Total time spent by all reduce tasks (ms)=4899
		Total vcore-milliseconds taken by all map tasks=28027
		Total vcore-milliseconds taken by all reduce tasks=4899
		Total megabyte-milliseconds taken by all map tasks=57399296
		Total megabyte-milliseconds taken by all reduce tasks=10033152
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1378
		CPU time spent (ms)=9310
		Physical memory (bytes) snapshot=1510326272
		Virtual memory (bytes) snapshot=14051131392
		Total committed heap usage (bytes)=1521483776
		Peak Map Physical memory (bytes)=384954368
		Peak Map Virtual memory (bytes)=3510001664
		Peak Reduce Physical memory (bytes)=378519552
		Peak Reduce Virtual memory (bytes)=3527467008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.851 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201123 13:49:56.911" starttime="20201123 13:49:56.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:49:56.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:49:56.912" starttime="20201123 13:49:56.911"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.912" starttime="20201123 13:49:17.488"></status>
</kw>
<msg timestamp="20201123 13:49:56.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:49:56.912" starttime="20201123 13:49:17.487"></status>
</kw>
<msg timestamp="20201123 13:49:56.913" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:49:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:49:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:49:56.913" starttime="20201123 13:49:17.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:49:56.913" starttime="20201123 13:49:56.913"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:49:56.913" critical="yes" starttime="20201123 13:49:17.452"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:49:56.922" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:49:56.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:49:56.930" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:56.930" starttime="20201123 13:49:56.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:49:56.931" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:56.931" starttime="20201123 13:49:56.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:49:56.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:49:56.932" starttime="20201123 13:49:56.931"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.932" starttime="20201123 13:49:56.918"></status>
</kw>
<msg timestamp="20201123 13:49:56.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:49:56.933" starttime="20201123 13:49:56.918"></status>
</kw>
<msg timestamp="20201123 13:49:56.933" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:56.933" starttime="20201123 13:49:56.917"></status>
</kw>
<msg timestamp="20201123 13:49:56.934" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:49:56.934" starttime="20201123 13:49:56.917"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:49:56.934" level="INFO">${random} = 83</msg>
<status status="PASS" endtime="20201123 13:49:56.934" starttime="20201123 13:49:56.934"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:49:56.939" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:49:56.939" starttime="20201123 13:49:56.938"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:49:56.940" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:49:56.940" starttime="20201123 13:49:56.939"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.940" starttime="20201123 13:49:56.938"></status>
</kw>
<msg timestamp="20201123 13:49:56.940" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:49:56.940" starttime="20201123 13:49:56.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:49:56.941" starttime="20201123 13:49:56.941"></status>
</kw>
<msg timestamp="20201123 13:49:56.941" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201123 13:49:56.941" starttime="20201123 13:49:56.940"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.941" starttime="20201123 13:49:56.936"></status>
</kw>
<msg timestamp="20201123 13:49:56.942" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:49:56.942" starttime="20201123 13:49:56.935"></status>
</kw>
<msg timestamp="20201123 13:49:56.942" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201123 13:49:56.942" starttime="20201123 13:49:56.935"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:49:56.946" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:49:56.946" starttime="20201123 13:49:56.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:49:56.947" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:49:56.947" starttime="20201123 13:49:56.946"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.947" starttime="20201123 13:49:56.945"></status>
</kw>
<msg timestamp="20201123 13:49:56.947" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:49:56.947" starttime="20201123 13:49:56.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:49:56.949" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201123 13:49:56.949" starttime="20201123 13:49:56.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:49:56.950" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201123 13:49:56.950" starttime="20201123 13:49:56.950"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.950" starttime="20201123 13:49:56.948"></status>
</kw>
<msg timestamp="20201123 13:49:56.950" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201123 13:49:56.950" starttime="20201123 13:49:56.948"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.951" starttime="20201123 13:49:56.944"></status>
</kw>
<msg timestamp="20201123 13:49:56.951" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:49:56.951" starttime="20201123 13:49:56.943"></status>
</kw>
<msg timestamp="20201123 13:49:56.951" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201123 13:49:56.951" starttime="20201123 13:49:56.942"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201123 13:49:56.955" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201123 13:49:56.955" starttime="20201123 13:49:56.954"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:49:56.955" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201123 13:49:56.955" starttime="20201123 13:49:56.955"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.956" starttime="20201123 13:49:56.954"></status>
</kw>
<msg timestamp="20201123 13:49:56.956" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201123 13:49:56.956" starttime="20201123 13:49:56.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:49:56.957" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201123 13:49:56.957" starttime="20201123 13:49:56.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:49:56.958" level="INFO">${result} = /wordcount-83.txt</msg>
<status status="PASS" endtime="20201123 13:49:56.958" starttime="20201123 13:49:56.958"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.958" starttime="20201123 13:49:56.957"></status>
</kw>
<msg timestamp="20201123 13:49:56.958" level="INFO">${path_with_leading} = /wordcount-83.txt</msg>
<status status="PASS" endtime="20201123 13:49:56.959" starttime="20201123 13:49:56.956"></status>
</kw>
<status status="PASS" endtime="20201123 13:49:56.959" starttime="20201123 13:49:56.953"></status>
</kw>
<msg timestamp="20201123 13:49:56.959" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20201123 13:49:56.959" starttime="20201123 13:49:56.952"></status>
</kw>
<msg timestamp="20201123 13:49:56.959" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20201123 13:49:56.959" starttime="20201123 13:49:56.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:49:56.965" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-83.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:50:36.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:50:36.902" level="INFO">${output} = 2020-11-23 13:49:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:49:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201123 13:50:36.902" starttime="20201123 13:49:56.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:50:36.904" level="INFO">2020-11-23 13:49:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:49:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-23 13:50:00 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139399916, maxDate=1606744199916, sequenceNumber=4, masterKeyId=2))
2020-11-23 13:50:00 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee 9c f9 aa df 2e 38 ee a4 ab cb e1 2e 40 04 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-23 13:50:00 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139399916, maxDate=1606744199916, sequenceNumber=4, masterKeyId=2)
2020-11-23 13:50:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:50:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:50:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:50:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:50:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:50:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A419EA554E66-&gt;c452557c-4300-413b-95e5-742a0d1e346f
2020-11-23 13:50:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:50:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:50:02 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:50:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606139098690_0004
2020-11-23 13:50:02 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139399916, maxDate=1606744199916, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee 9c f9 aa df 2e 38 ee a4 ab cb e1 2e 40 04 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-23 13:50:03 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:50:03 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:50:03 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-23 13:50:03 INFO  YarnClientImpl:329 - Submitted application application_1606139098690_0004
2020-11-23 13:50:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606139098690_0004/
2020-11-23 13:50:03 INFO  Job:1619 - Running job: job_1606139098690_0004
2020-11-23 13:50:13 INFO  Job:1640 - Job job_1606139098690_0004 running in uber mode : false
2020-11-23 13:50:13 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:50:26 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:50:27 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:50:28 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:50:35 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:50:36 INFO  Job:1658 - Job job_1606139098690_0004 completed successfully
2020-11-23 13:50:36 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128115
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=58308
		Total time spent by all reduces in occupied slots (ms)=14078
		Total time spent by all map tasks (ms)=29154
		Total time spent by all reduce tasks (ms)=7039
		Total vcore-milliseconds taken by all map tasks=29154
		Total vcore-milliseconds taken by all reduce tasks=7039
		Total megabyte-milliseconds taken by all map tasks=59707392
		Total megabyte-milliseconds taken by all reduce tasks=14415872
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1481
		CPU time spent (ms)=10240
		Physical memory (bytes) snapshot=1358094336
		Virtual memory (bytes) snapshot=14061862912
		Total committed heap usage (bytes)=1220542464
		Peak Map Physical memory (bytes)=388771840
		Peak Map Virtual memory (bytes)=3514859520
		Peak Reduce Physical memory (bytes)=300826624
		Peak Reduce Virtual memory (bytes)=3526479872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201123 13:50:36.904" starttime="20201123 13:50:36.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:50:36.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:50:36.906" starttime="20201123 13:50:36.904"></status>
</kw>
<status status="PASS" endtime="20201123 13:50:36.906" starttime="20201123 13:49:56.960"></status>
</kw>
<msg timestamp="20201123 13:50:36.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:50:36.906" starttime="20201123 13:49:56.960"></status>
</kw>
<msg timestamp="20201123 13:50:36.907" level="INFO">${output} = 2020-11-23 13:49:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:49:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201123 13:50:36.907" starttime="20201123 13:49:56.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 13:50:36.908" starttime="20201123 13:50:36.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:50:36.908" starttime="20201123 13:50:36.908"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:50:36.909" critical="yes" starttime="20201123 13:49:56.915"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 13:50:36.911" starttime="20201123 13:49:17.398"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:47:33.480" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:47:33.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:47:33.486" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:47:33.486" starttime="20201123 13:47:33.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:47:33.487" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:47:33.487" starttime="20201123 13:47:33.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:47:33.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:47:33.488" starttime="20201123 13:47:33.487"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:33.489" starttime="20201123 13:47:33.473"></status>
</kw>
<msg timestamp="20201123 13:47:33.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:47:33.489" starttime="20201123 13:47:33.473"></status>
</kw>
<msg timestamp="20201123 13:47:33.489" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:47:33.490" starttime="20201123 13:47:33.472"></status>
</kw>
<msg timestamp="20201123 13:47:33.490" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:47:33.490" starttime="20201123 13:47:33.472"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:47:33.497" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:47:33.497" starttime="20201123 13:47:33.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:47:33.497" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:47:33.497" starttime="20201123 13:47:33.497"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:33.498" starttime="20201123 13:47:33.494"></status>
</kw>
<msg timestamp="20201123 13:47:33.498" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:47:33.498" starttime="20201123 13:47:33.494"></status>
</kw>
<status status="PASS" endtime="20201123 13:47:33.498" starttime="20201123 13:47:33.493"></status>
</kw>
<msg timestamp="20201123 13:47:33.499" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:47:33.499" starttime="20201123 13:47:33.492"></status>
</kw>
<msg timestamp="20201123 13:47:33.499" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:47:33.499" starttime="20201123 13:47:33.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:47:33.503" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:48:18.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:48:18.259" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:47:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:47:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:48:18.259" starttime="20201123 13:47:33.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:48:18.261" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:47:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:47:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:47:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:47:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:47:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4D594D8F35BD-&gt;c452557c-4300-413b-95e5-742a0d1e346f
2020-11-23 13:47:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-23 13:47:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:47:38 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-23 13:47:38 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139258775, maxDate=1606744058775, sequenceNumber=1, masterKeyId=2))
2020-11-23 13:47:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cc cc f0 aa df 2e 38 cc d4 a2 cb e1 2e 40 01 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-23 13:47:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139258775, maxDate=1606744058775, sequenceNumber=1, masterKeyId=2)
2020-11-23 13:47:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:47:39 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:47:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606139098690_0001
2020-11-23 13:47:39 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139258775, maxDate=1606744058775, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cc cc f0 aa df 2e 38 cc d4 a2 cb e1 2e 40 01 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-23 13:47:40 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:47:40 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:47:40 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-23 13:47:42 INFO  YarnClientImpl:329 - Submitted application application_1606139098690_0001
2020-11-23 13:47:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606139098690_0001/
2020-11-23 13:47:42 INFO  Job:1619 - Running job: job_1606139098690_0001
2020-11-23 13:47:56 INFO  Job:1640 - Job job_1606139098690_0001 running in uber mode : false
2020-11-23 13:47:56 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:48:08 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:48:09 INFO  Job:1647 -  map 67% reduce 0%
2020-11-23 13:48:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:48:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:48:17 INFO  Job:1658 - Job job_1606139098690_0001 completed successfully
2020-11-23 13:48:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065977
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=58138
		Total time spent by all reduces in occupied slots (ms)=9676
		Total time spent by all map tasks (ms)=29069
		Total time spent by all reduce tasks (ms)=4838
		Total vcore-milliseconds taken by all map tasks=29069
		Total vcore-milliseconds taken by all reduce tasks=4838
		Total megabyte-milliseconds taken by all map tasks=59533312
		Total megabyte-milliseconds taken by all reduce tasks=9908224
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1622
		CPU time spent (ms)=8900
		Physical memory (bytes) snapshot=1406504960
		Virtual memory (bytes) snapshot=14056480768
		Total committed heap usage (bytes)=1288175616
		Peak Map Physical memory (bytes)=375013376
		Peak Map Virtual memory (bytes)=3511037952
		Peak Reduce Physical memory (bytes)=374284288
		Peak Reduce Virtual memory (bytes)=3528318976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.605 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201123 13:48:18.261" starttime="20201123 13:48:18.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:48:18.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:48:18.262" starttime="20201123 13:48:18.261"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.262" starttime="20201123 13:47:33.500"></status>
</kw>
<msg timestamp="20201123 13:48:18.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:48:18.262" starttime="20201123 13:47:33.500"></status>
</kw>
<msg timestamp="20201123 13:48:18.263" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-23 13:47:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:47:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201123 13:48:18.263" starttime="20201123 13:47:33.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:48:18.264" starttime="20201123 13:48:18.263"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:48:18.264" critical="yes" starttime="20201123 13:47:33.471"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:48:18.271" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:48:18.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:48:18.278" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:48:18.278" starttime="20201123 13:48:18.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:48:18.279" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:48:18.279" starttime="20201123 13:48:18.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:48:18.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:48:18.280" starttime="20201123 13:48:18.280"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.281" starttime="20201123 13:48:18.267"></status>
</kw>
<msg timestamp="20201123 13:48:18.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:48:18.281" starttime="20201123 13:48:18.266"></status>
</kw>
<msg timestamp="20201123 13:48:18.281" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:48:18.281" starttime="20201123 13:48:18.266"></status>
</kw>
<msg timestamp="20201123 13:48:18.281" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201123 13:48:18.281" starttime="20201123 13:48:18.265"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:48:18.282" level="INFO">${random} = 00</msg>
<status status="PASS" endtime="20201123 13:48:18.282" starttime="20201123 13:48:18.282"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:48:18.289" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:48:18.289" starttime="20201123 13:48:18.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:48:18.290" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:48:18.290" starttime="20201123 13:48:18.289"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.290" starttime="20201123 13:48:18.288"></status>
</kw>
<msg timestamp="20201123 13:48:18.290" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:48:18.290" starttime="20201123 13:48:18.287"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.290" starttime="20201123 13:48:18.286"></status>
</kw>
<msg timestamp="20201123 13:48:18.291" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:48:18.291" starttime="20201123 13:48:18.283"></status>
</kw>
<msg timestamp="20201123 13:48:18.291" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201123 13:48:18.291" starttime="20201123 13:48:18.282"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:48:18.296" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:48:18.296" starttime="20201123 13:48:18.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:48:18.303" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:48:18.303" starttime="20201123 13:48:18.296"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.303" starttime="20201123 13:48:18.295"></status>
</kw>
<msg timestamp="20201123 13:48:18.303" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:48:18.303" starttime="20201123 13:48:18.294"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.304" starttime="20201123 13:48:18.293"></status>
</kw>
<msg timestamp="20201123 13:48:18.304" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 13:48:18.304" starttime="20201123 13:48:18.292"></status>
</kw>
<msg timestamp="20201123 13:48:18.304" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201123 13:48:18.304" starttime="20201123 13:48:18.291"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201123 13:48:18.307" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201123 13:48:18.307" starttime="20201123 13:48:18.307"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:48:18.308" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201123 13:48:18.308" starttime="20201123 13:48:18.307"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.308" starttime="20201123 13:48:18.306"></status>
</kw>
<msg timestamp="20201123 13:48:18.308" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201123 13:48:18.308" starttime="20201123 13:48:18.306"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:18.309" starttime="20201123 13:48:18.305"></status>
</kw>
<msg timestamp="20201123 13:48:18.309" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-00.txt</msg>
<status status="PASS" endtime="20201123 13:48:18.309" starttime="20201123 13:48:18.305"></status>
</kw>
<msg timestamp="20201123 13:48:18.309" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-00.txt</msg>
<status status="PASS" endtime="20201123 13:48:18.309" starttime="20201123 13:48:18.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:48:18.313" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-00.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:48:56.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:48:56.735" level="INFO">${output} = 2020-11-23 13:48:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:48:21 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201123 13:48:56.735" starttime="20201123 13:48:18.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:48:56.736" level="INFO">2020-11-23 13:48:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:48:21 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-23 13:48:21 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139301518, maxDate=1606744101518, sequenceNumber=2, masterKeyId=2))
2020-11-23 13:48:21 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 9b f3 aa df 2e 38 f0 a3 a5 cb e1 2e 40 02 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-23 13:48:21 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139301518, maxDate=1606744101518, sequenceNumber=2, masterKeyId=2)
2020-11-23 13:48:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-23 13:48:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-23 13:48:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:48:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-23 13:48:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:48:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3861A921D39-&gt;c452557c-4300-413b-95e5-742a0d1e346f
2020-11-23 13:48:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:48:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-23 13:48:24 INFO  JobSubmitter:202 - number of splits:3
2020-11-23 13:48:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606139098690_0002
2020-11-23 13:48:24 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606139301518, maxDate=1606744101518, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 9b f3 aa df 2e 38 f0 a3 a5 cb e1 2e 40 02 48 01 5a 0d 34 30 39 35 36 35 36 38 36 34 39 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-23 13:48:25 INFO  Configuration:2795 - resource-types.xml not found
2020-11-23 13:48:25 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-23 13:48:25 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-23 13:48:26 INFO  YarnClientImpl:329 - Submitted application application_1606139098690_0002
2020-11-23 13:48:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606139098690_0002/
2020-11-23 13:48:26 INFO  Job:1619 - Running job: job_1606139098690_0002
2020-11-23 13:48:35 INFO  Job:1640 - Job job_1606139098690_0002 running in uber mode : false
2020-11-23 13:48:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-23 13:48:48 INFO  Job:1647 -  map 33% reduce 0%
2020-11-23 13:48:50 INFO  Job:1647 -  map 100% reduce 0%
2020-11-23 13:48:55 INFO  Job:1647 -  map 100% reduce 100%
2020-11-23 13:48:56 INFO  Job:1658 - Job job_1606139098690_0002 completed successfully
2020-11-23 13:48:56 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128199
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=59530
		Total time spent by all reduces in occupied slots (ms)=9658
		Total time spent by all map tasks (ms)=29765
		Total time spent by all reduce tasks (ms)=4829
		Total vcore-milliseconds taken by all map tasks=29765
		Total vcore-milliseconds taken by all reduce tasks=4829
		Total megabyte-milliseconds taken by all map tasks=60958720
		Total megabyte-milliseconds taken by all reduce tasks=9889792
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1605
		CPU time spent (ms)=9850
		Physical memory (bytes) snapshot=1406943232
		Virtual memory (bytes) snapshot=14061985792
		Total committed heap usage (bytes)=1295515648
		Peak Map Physical memory (bytes)=385839104
		Peak Map Virtual memory (bytes)=3512860672
		Peak Reduce Physical memory (bytes)=305278976
		Peak Reduce Virtual memory (bytes)=3527086080
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201123 13:48:56.736" starttime="20201123 13:48:56.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:48:56.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:48:56.737" starttime="20201123 13:48:56.737"></status>
</kw>
<status status="PASS" endtime="20201123 13:48:56.737" starttime="20201123 13:48:18.310"></status>
</kw>
<msg timestamp="20201123 13:48:56.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:48:56.738" starttime="20201123 13:48:18.310"></status>
</kw>
<msg timestamp="20201123 13:48:56.738" level="INFO">${output} = 2020-11-23 13:48:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-23 13:48:21 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201123 13:48:56.738" starttime="20201123 13:48:18.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201123 13:48:56.739" starttime="20201123 13:48:56.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201123 13:48:56.739" starttime="20201123 13:48:56.739"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201123 13:48:56.739" critical="yes" starttime="20201123 13:48:18.265"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201123 13:48:56.741" starttime="20201123 13:47:33.416"></status>
</suite>
<status status="PASS" elapsedtime="231925" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
