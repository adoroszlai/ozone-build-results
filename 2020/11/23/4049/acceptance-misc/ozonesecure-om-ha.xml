<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201123 13:58:49.019" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:53:50.542" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:04.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:04.677" level="INFO">${output} = 2020-11-23 13:53:52,469 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:53:52,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:04.677" starttime="20201123 13:53:50.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:04.678" level="INFO">2020-11-23 13:53:52,469 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:53:52,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:53:52,685 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-23 13:53:55,724 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:203)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:191)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:128)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-23 13:53:57,545 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-23 13:53:57,546 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-23 13:53:57,546 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-23 13:53:57,546 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-23 13:53:57,546 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-23 13:53:57,546 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-23 13:53:57,547 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-23 13:53:57,558 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-23 13:53:57,567 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:53:57,726 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-72571, with testuser/scm@EXAMPLE.COM as owner.
2020-11-23 13:53:58,589 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:53:58,854 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72571/bucket-0-37741, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:53:59,593 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:00,603 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:01,610 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:02,024 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-23 13:54:02,611 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:01,149
Average Time spent in bucket creation: 00:00:00,353
Average Time spent in key creation: 00:00:01,410
Average Time spent in key write: 00:00:01,718
Total bytes written: 10240
Total Execution time: 00:00:11,411
***************************************************</msg>
<status status="PASS" endtime="20201123 13:54:04.678" starttime="20201123 13:54:04.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:04.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:04.679" starttime="20201123 13:54:04.679"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:04.679" starttime="20201123 13:53:50.533"></status>
</kw>
<msg timestamp="20201123 13:54:04.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:04.680" starttime="20201123 13:53:50.533"></status>
</kw>
<msg timestamp="20201123 13:54:04.680" level="INFO">${result} = 2020-11-23 13:53:52,469 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:53:52,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:04.680" starttime="20201123 13:53:50.532"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:54:04.681" starttime="20201123 13:54:04.681"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:04.681" starttime="20201123 13:54:04.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:54:04.682" critical="yes" starttime="20201123 13:53:50.531"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:04.688" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:15.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:15.034" level="INFO">${output} = 2020-11-23 13:54:06,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:07,031 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:15.034" starttime="20201123 13:54:04.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:15.037" level="INFO">2020-11-23 13:54:06,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:07,031 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:54:07,031 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-23 13:54:07,250 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1wt7r3isge
2020-11-23 13:54:07,266 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-23 13:54:08,282 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:08,661 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:203)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:191)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:128)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-23 13:54:09,237 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-23 13:54:09,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:09,353 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:54:10,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:10,474 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-23 13:54:10,965 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:54:10,966 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-2AD639D2792F-&gt;0b039fa9-7e77-4760-9a3d-1dcf2769d086
2020-11-23 13:54:10,969 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:54:11,313 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:12,313 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:13,314 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:14,315 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-23 13:54:14,643 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=4503.021073, max=4503.021073, mean=4503.021073, stddev=0.0, median=4503.021073, p75=4503.021073, p95=4503.021073, p98=4503.021073, p99=4503.021073, p999=4503.021073, mean_rate=0.19307807546252537, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2020-11-23 13:54:14,644 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2020-11-23 13:54:14,657 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-23 13:54:14,657 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201123 13:54:15.038" starttime="20201123 13:54:15.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:15.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:15.038" starttime="20201123 13:54:15.038"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:15.039" starttime="20201123 13:54:04.684"></status>
</kw>
<msg timestamp="20201123 13:54:15.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:15.039" starttime="20201123 13:54:04.684"></status>
</kw>
<msg timestamp="20201123 13:54:15.039" level="INFO">${result} = 2020-11-23 13:54:06,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:07,031 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:15.040" starttime="20201123 13:54:04.683"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:54:15.041" starttime="20201123 13:54:15.040"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:15.041" starttime="20201123 13:54:15.040"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:54:15.041" critical="yes" starttime="20201123 13:54:04.682"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:15.047" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:20.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:20.808" level="INFO">${output} = 2020-11-23 13:54:17,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:17,321 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:20.808" starttime="20201123 13:54:15.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:20.809" level="INFO">2020-11-23 13:54:17,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:17,321 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:54:17,322 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-23 13:54:17,509 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8hv6qwhi28
2020-11-23 13:54:17,527 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-23 13:54:18,534 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:18,810 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:203)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:191)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:128)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-23 13:54:19,530 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:203)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-23 13:54:19,535 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:20,536 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-23 13:54:20,680 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=491.573382, max=491.573382, mean=491.573382, stddev=0.0, median=491.573382, p75=491.573382, p95=491.573382, p98=491.573382, p99=491.573382, p999=491.573382, mean_rate=0.7344517727487411, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-23 13:54:20,684 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-23 13:54:20,685 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-23 13:54:20,685 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201123 13:54:20.810" starttime="20201123 13:54:20.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:20.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:20.811" starttime="20201123 13:54:20.810"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:20.811" starttime="20201123 13:54:15.044"></status>
</kw>
<msg timestamp="20201123 13:54:20.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:20.811" starttime="20201123 13:54:15.044"></status>
</kw>
<msg timestamp="20201123 13:54:20.812" level="INFO">${result} = 2020-11-23 13:54:17,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:17,321 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:20.812" starttime="20201123 13:54:15.043"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:54:20.813" starttime="20201123 13:54:20.812"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:20.813" starttime="20201123 13:54:20.812"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:54:20.813" critical="yes" starttime="20201123 13:54:15.042"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:20.820" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:26.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:26.322" level="INFO">${output} = 2020-11-23 13:54:22,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:22,942 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:26.322" starttime="20201123 13:54:20.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:26.323" level="INFO">2020-11-23 13:54:22,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:22,942 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:54:22,942 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-23 13:54:23,122 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xmowpratof
2020-11-23 13:54:23,138 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-23 13:54:24,142 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:24,447 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:203)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:191)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:128)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-23 13:54:25,116 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:203)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-23 13:54:25,143 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-23 13:54:26,150 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-23 13:54:26,268 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=139.459969, max=139.459969, mean=139.459969, stddev=0.0, median=139.459969, p75=139.459969, p95=139.459969, p98=139.459969, p99=139.459969, p999=139.459969, mean_rate=0.7894116231615922, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-23 13:54:26,286 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-23 13:54:26,288 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-23 13:54:26,288 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201123 13:54:26.324" starttime="20201123 13:54:26.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:26.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:26.325" starttime="20201123 13:54:26.324"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:26.325" starttime="20201123 13:54:20.816"></status>
</kw>
<msg timestamp="20201123 13:54:26.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:26.325" starttime="20201123 13:54:20.816"></status>
</kw>
<msg timestamp="20201123 13:54:26.326" level="INFO">${result} = 2020-11-23 13:54:22,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:54:22,942 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:54:26.326" starttime="20201123 13:54:20.815"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:54:26.327" starttime="20201123 13:54:26.327"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:26.327" starttime="20201123 13:54:26.326"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:54:26.327" critical="yes" starttime="20201123 13:54:20.814"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201123 13:54:26.329" starttime="20201123 13:53:50.504"></status>
</suite>
<status status="PASS" endtime="20201123 13:54:26.333" starttime="20201123 13:53:50.477"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:53:43.645" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:53:43.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:53:43.649" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:53:43.649" starttime="20201123 13:53:43.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:53:43.650" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:53:43.650" starttime="20201123 13:53:43.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:53:43.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:53:43.651" starttime="20201123 13:53:43.650"></status>
</kw>
<status status="PASS" endtime="20201123 13:53:43.651" starttime="20201123 13:53:43.639"></status>
</kw>
<msg timestamp="20201123 13:53:43.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:53:43.652" starttime="20201123 13:53:43.638"></status>
</kw>
<msg timestamp="20201123 13:53:43.652" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:53:43.652" starttime="20201123 13:53:43.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:53:43.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:53:43.653" starttime="20201123 13:53:43.652"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:53:43.659" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:53:43.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:53:43.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:53:43.680" starttime="20201123 13:53:43.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:53:43.681" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:53:43.682" starttime="20201123 13:53:43.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:53:43.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:53:43.683" starttime="20201123 13:53:43.682"></status>
</kw>
<status status="PASS" endtime="20201123 13:53:43.683" starttime="20201123 13:53:43.655"></status>
</kw>
<msg timestamp="20201123 13:53:43.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:53:43.683" starttime="20201123 13:53:43.655"></status>
</kw>
<status status="PASS" endtime="20201123 13:53:43.683" starttime="20201123 13:53:43.654"></status>
</kw>
<status status="PASS" endtime="20201123 13:53:43.684" starttime="20201123 13:53:43.654"></status>
</kw>
<status status="PASS" endtime="20201123 13:53:43.684" starttime="20201123 13:53:43.637"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:53:43.684" critical="yes" starttime="20201123 13:53:43.636"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201123 13:53:43.686" starttime="20201123 13:53:43.579"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:54:33.200" level="INFO">${random} = 34648</msg>
<status status="PASS" endtime="20201123 13:54:33.200" starttime="20201123 13:54:33.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201123 13:54:33.202" level="INFO">${source} = 34648-source</msg>
<status status="PASS" endtime="20201123 13:54:33.202" starttime="20201123 13:54:33.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201123 13:54:33.203" level="INFO">${target} = 34648-target</msg>
<status status="PASS" endtime="20201123 13:54:33.204" starttime="20201123 13:54:33.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:33.212" level="INFO">Running command 'ozone sh volume create 34648-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:37.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:37.610" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:54:37.610" starttime="20201123 13:54:33.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:37.612" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:54:37.612" starttime="20201123 13:54:37.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:37.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:37.613" starttime="20201123 13:54:37.612"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:37.613" starttime="20201123 13:54:33.205"></status>
</kw>
<msg timestamp="20201123 13:54:37.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:37.613" starttime="20201123 13:54:33.204"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:37.613" starttime="20201123 13:54:33.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:37.618" level="INFO">Running command 'ozone sh volume create 34648-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:41.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:41.746" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:54:41.746" starttime="20201123 13:54:37.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:41.747" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:54:41.747" starttime="20201123 13:54:41.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:41.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:41.748" starttime="20201123 13:54:41.748"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:41.748" starttime="20201123 13:54:37.614"></status>
</kw>
<msg timestamp="20201123 13:54:41.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:41.749" starttime="20201123 13:54:37.614"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:41.749" starttime="20201123 13:54:37.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:41.755" level="INFO">Running command 'ozone sh bucket create 34648-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:46.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:46.127" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:54:46.127" starttime="20201123 13:54:41.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:46.128" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:54:46.129" starttime="20201123 13:54:46.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:46.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:46.130" starttime="20201123 13:54:46.129"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:46.131" starttime="20201123 13:54:41.751"></status>
</kw>
<msg timestamp="20201123 13:54:46.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:46.131" starttime="20201123 13:54:41.750"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:46.132" starttime="20201123 13:54:41.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:46.136" level="INFO">Running command 'ozone sh key put 34648-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:52.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:52.916" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:54:52.916" starttime="20201123 13:54:46.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:52.918" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:54:52.918" starttime="20201123 13:54:52.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:52.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:52.918" starttime="20201123 13:54:52.918"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:52.919" starttime="20201123 13:54:46.133"></status>
</kw>
<msg timestamp="20201123 13:54:52.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:52.919" starttime="20201123 13:54:46.133"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:52.919" starttime="20201123 13:54:46.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:52.923" level="INFO">Running command 'ozone sh bucket create 34648-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:54:57.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:54:57.149" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:54:57.149" starttime="20201123 13:54:52.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:54:57.150" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:54:57.150" starttime="20201123 13:54:57.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:54:57.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:54:57.151" starttime="20201123 13:54:57.151"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:57.152" starttime="20201123 13:54:52.920"></status>
</kw>
<msg timestamp="20201123 13:54:57.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:54:57.152" starttime="20201123 13:54:52.920"></status>
</kw>
<status status="PASS" endtime="20201123 13:54:57.152" starttime="20201123 13:54:52.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:54:57.170" level="INFO">Running command 'ozone sh bucket link 34648-source/readable-bucket 34648-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:01.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:01.695" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:01.695" starttime="20201123 13:54:57.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:01.697" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:55:01.697" starttime="20201123 13:55:01.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:01.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:01.698" starttime="20201123 13:55:01.697"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:01.698" starttime="20201123 13:54:57.165"></status>
</kw>
<msg timestamp="20201123 13:55:01.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:01.698" starttime="20201123 13:54:57.154"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:01.698" starttime="20201123 13:54:57.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:01.702" level="INFO">Running command 'ozone sh bucket link 34648-source/readable-bucket 34648-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:05.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:05.710" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:05.710" starttime="20201123 13:55:01.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:05.712" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:55:05.712" starttime="20201123 13:55:05.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:05.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:05.713" starttime="20201123 13:55:05.712"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:05.713" starttime="20201123 13:55:01.699"></status>
</kw>
<msg timestamp="20201123 13:55:05.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:05.713" starttime="20201123 13:55:01.699"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:05.713" starttime="20201123 13:55:01.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:05.718" level="INFO">Running command 'ozone sh bucket link 34648-source/unreadable-bucket 34648-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:09.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:09.740" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:09.741" starttime="20201123 13:55:05.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:09.742" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:55:09.742" starttime="20201123 13:55:09.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:09.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:09.743" starttime="20201123 13:55:09.742"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:09.743" starttime="20201123 13:55:05.714"></status>
</kw>
<msg timestamp="20201123 13:55:09.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:09.744" starttime="20201123 13:55:05.714"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:09.744" starttime="20201123 13:55:05.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:09.749" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 34648-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:13.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:13.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:13.854" starttime="20201123 13:55:09.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:13.856" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201123 13:55:13.856" starttime="20201123 13:55:13.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:13.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:13.857" starttime="20201123 13:55:13.856"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:13.857" starttime="20201123 13:55:09.745"></status>
</kw>
<msg timestamp="20201123 13:55:13.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:13.858" starttime="20201123 13:55:09.745"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:13.858" starttime="20201123 13:55:09.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:13.863" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 34648-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:18.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:18.129" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:18.129" starttime="20201123 13:55:13.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:18.130" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201123 13:55:18.130" starttime="20201123 13:55:18.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:18.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:18.131" starttime="20201123 13:55:18.130"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:18.131" starttime="20201123 13:55:13.859"></status>
</kw>
<msg timestamp="20201123 13:55:18.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:18.131" starttime="20201123 13:55:13.859"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:18.132" starttime="20201123 13:55:13.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:18.138" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 34648-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:22.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:22.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:22.093" starttime="20201123 13:55:18.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:22.095" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201123 13:55:22.095" starttime="20201123 13:55:22.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:22.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:22.095" starttime="20201123 13:55:22.095"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:22.096" starttime="20201123 13:55:18.133"></status>
</kw>
<msg timestamp="20201123 13:55:22.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:22.096" starttime="20201123 13:55:18.132"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:22.096" starttime="20201123 13:55:18.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:22.102" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 34648-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:26.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:26.474" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:26.474" starttime="20201123 13:55:22.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:26.475" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201123 13:55:26.475" starttime="20201123 13:55:26.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:26.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:26.476" starttime="20201123 13:55:26.475"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:26.476" starttime="20201123 13:55:22.097"></status>
</kw>
<msg timestamp="20201123 13:55:26.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:26.476" starttime="20201123 13:55:22.097"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:26.477" starttime="20201123 13:55:22.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:26.482" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 34648-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:30.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:30.553" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:30.553" starttime="20201123 13:55:26.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:30.554" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201123 13:55:30.554" starttime="20201123 13:55:30.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:30.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:30.555" starttime="20201123 13:55:30.554"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.555" starttime="20201123 13:55:26.478"></status>
</kw>
<msg timestamp="20201123 13:55:30.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:30.555" starttime="20201123 13:55:26.477"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.556" starttime="20201123 13:55:26.477"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.556" starttime="20201123 13:54:41.750"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.556" starttime="20201123 13:54:41.749"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.556" starttime="20201123 13:54:33.199"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:30.564" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:30.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:30.567" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:55:30.567" starttime="20201123 13:55:30.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:30.568" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:55:30.568" starttime="20201123 13:55:30.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:30.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:30.569" starttime="20201123 13:55:30.568"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.569" starttime="20201123 13:55:30.560"></status>
</kw>
<msg timestamp="20201123 13:55:30.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:30.569" starttime="20201123 13:55:30.560"></status>
</kw>
<msg timestamp="20201123 13:55:30.569" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:55:30.569" starttime="20201123 13:55:30.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:55:30.571" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:55:30.571" starttime="20201123 13:55:30.569"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:30.575" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:30.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:30.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:55:30.588" starttime="20201123 13:55:30.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:30.589" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:55:30.589" starttime="20201123 13:55:30.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:30.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:30.590" starttime="20201123 13:55:30.589"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.591" starttime="20201123 13:55:30.572"></status>
</kw>
<msg timestamp="20201123 13:55:30.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:30.591" starttime="20201123 13:55:30.572"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.591" starttime="20201123 13:55:30.571"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.591" starttime="20201123 13:55:30.571"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.591" starttime="20201123 13:55:30.559"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:30.591" starttime="20201123 13:55:30.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:30.596" level="INFO">Running command 'ozone sh bucket link 34648-source/no-such-bucket 34648-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:34.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:34.488" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:34.488" starttime="20201123 13:55:30.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:34.490" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:55:34.490" starttime="20201123 13:55:34.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:34.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:34.491" starttime="20201123 13:55:34.491"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:34.492" starttime="20201123 13:55:30.593"></status>
</kw>
<msg timestamp="20201123 13:55:34.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:34.492" starttime="20201123 13:55:30.592"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:34.492" starttime="20201123 13:55:30.592"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:34.496" level="INFO">Running command 'ozone sh key list 34648-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:38.832" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:55:38.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:38.833" starttime="20201123 13:55:34.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:38.834" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201123 13:55:38.834" starttime="20201123 13:55:38.833"></status>
</kw>
<msg timestamp="20201123 13:55:38.834" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:38.834" starttime="20201123 13:55:34.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201123 13:55:38.835" starttime="20201123 13:55:38.835"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:55:38.835" critical="yes" starttime="20201123 13:55:30.556"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:38.843" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:38.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:38.848" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:55:38.848" starttime="20201123 13:55:38.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:38.849" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:55:38.849" starttime="20201123 13:55:38.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:38.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:38.850" starttime="20201123 13:55:38.849"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:38.850" starttime="20201123 13:55:38.839"></status>
</kw>
<msg timestamp="20201123 13:55:38.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:38.850" starttime="20201123 13:55:38.839"></status>
</kw>
<msg timestamp="20201123 13:55:38.851" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:55:38.851" starttime="20201123 13:55:38.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:55:38.851" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:55:38.851" starttime="20201123 13:55:38.851"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:38.858" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:38.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:38.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:55:38.881" starttime="20201123 13:55:38.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:38.885" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:55:38.885" starttime="20201123 13:55:38.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:38.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:38.888" starttime="20201123 13:55:38.885"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:38.889" starttime="20201123 13:55:38.854"></status>
</kw>
<msg timestamp="20201123 13:55:38.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:38.890" starttime="20201123 13:55:38.854"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:38.891" starttime="20201123 13:55:38.853"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:38.892" starttime="20201123 13:55:38.852"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:38.892" starttime="20201123 13:55:38.838"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:38.892" starttime="20201123 13:55:38.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:38.899" level="INFO">Running command 'ozone sh bucket link 34648-source/bucket1 34648-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:43.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:43.296" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:43.296" starttime="20201123 13:55:38.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:43.297" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:55:43.297" starttime="20201123 13:55:43.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:43.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:43.298" starttime="20201123 13:55:43.297"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:43.298" starttime="20201123 13:55:38.895"></status>
</kw>
<msg timestamp="20201123 13:55:43.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:43.299" starttime="20201123 13:55:38.894"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:43.299" starttime="20201123 13:55:38.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:43.305" level="INFO">Running command 'ozone sh bucket create 34648-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:47.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:47.894" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:47.894" starttime="20201123 13:55:43.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:47.895" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:55:47.895" starttime="20201123 13:55:47.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:47.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:47.896" starttime="20201123 13:55:47.896"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:47.896" starttime="20201123 13:55:43.300"></status>
</kw>
<msg timestamp="20201123 13:55:47.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:47.897" starttime="20201123 13:55:43.300"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:47.897" starttime="20201123 13:55:43.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:47.901" level="INFO">Running command 'ozone sh key put 34648-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:55:55.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:55:55.581" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:55:55.581" starttime="20201123 13:55:47.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:55:55.582" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:55:55.583" starttime="20201123 13:55:55.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:55:55.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:55:55.583" starttime="20201123 13:55:55.583"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:55.584" starttime="20201123 13:55:47.898"></status>
</kw>
<msg timestamp="20201123 13:55:55.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:55:55.584" starttime="20201123 13:55:47.898"></status>
</kw>
<status status="PASS" endtime="20201123 13:55:55.584" starttime="20201123 13:55:47.897"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201123 13:55:55.586" level="INFO">${postfix} = 00323</msg>
<status status="PASS" endtime="20201123 13:55:55.586" starttime="20201123 13:55:55.585"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201123 13:55:55.586" level="INFO">${tmpfile} = /tmp/tempkey-00323</msg>
<status status="PASS" endtime="20201123 13:55:55.587" starttime="20201123 13:55:55.586"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:55:55.592" level="INFO">Running command 'ozone sh key get -f 34648-target/link1/key1 /tmp/tempkey-00323 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:02.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:02.427" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:56:02.427" starttime="20201123 13:55:55.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.429" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:56:02.429" starttime="20201123 13:56:02.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:02.429" starttime="20201123 13:56:02.429"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.430" starttime="20201123 13:55:55.587"></status>
</kw>
<msg timestamp="20201123 13:56:02.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:02.430" starttime="20201123 13:55:55.587"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.430" starttime="20201123 13:55:55.587"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201123 13:56:02.439" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-00323 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:02.444" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201123 13:56:02.444" starttime="20201123 13:56:02.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:02.453" level="INFO">Running command 'rm -f /tmp/tempkey-00323 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:02.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:02.455" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:02.455" starttime="20201123 13:56:02.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.456" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:02.456" starttime="20201123 13:56:02.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:02.457" starttime="20201123 13:56:02.456"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.457" starttime="20201123 13:56:02.446"></status>
</kw>
<msg timestamp="20201123 13:56:02.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:02.457" starttime="20201123 13:56:02.445"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.458" starttime="20201123 13:56:02.444"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:56:02.458" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201123 13:56:02.459" starttime="20201123 13:56:02.458"></status>
</kw>
<msg timestamp="20201123 13:56:02.459" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201123 13:56:02.459" starttime="20201123 13:55:55.585"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:02.459" starttime="20201123 13:56:02.459"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.459" starttime="20201123 13:55:55.584"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:56:02.460" critical="yes" starttime="20201123 13:55:38.836"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:02.469" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:02.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:02.471" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:56:02.471" starttime="20201123 13:56:02.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.472" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:56:02.472" starttime="20201123 13:56:02.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:02.473" starttime="20201123 13:56:02.472"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.473" starttime="20201123 13:56:02.464"></status>
</kw>
<msg timestamp="20201123 13:56:02.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:02.474" starttime="20201123 13:56:02.463"></status>
</kw>
<msg timestamp="20201123 13:56:02.474" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:56:02.474" starttime="20201123 13:56:02.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:56:02.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:56:02.475" starttime="20201123 13:56:02.474"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:02.480" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:02.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:02.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:02.495" starttime="20201123 13:56:02.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.496" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:02.496" starttime="20201123 13:56:02.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:02.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:02.497" starttime="20201123 13:56:02.496"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.497" starttime="20201123 13:56:02.476"></status>
</kw>
<msg timestamp="20201123 13:56:02.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:02.498" starttime="20201123 13:56:02.476"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.498" starttime="20201123 13:56:02.475"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.498" starttime="20201123 13:56:02.475"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.498" starttime="20201123 13:56:02.462"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:02.498" starttime="20201123 13:56:02.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:02.505" level="INFO">Running command 'ozone sh key put 34648-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:08.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:08.958" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:56:08.958" starttime="20201123 13:56:02.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:08.960" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:56:08.961" starttime="20201123 13:56:08.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:08.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:08.962" starttime="20201123 13:56:08.961"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:08.963" starttime="20201123 13:56:02.500"></status>
</kw>
<msg timestamp="20201123 13:56:08.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:08.963" starttime="20201123 13:56:02.500"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:08.963" starttime="20201123 13:56:02.499"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201123 13:56:08.965" level="INFO">${postfix} = 92692</msg>
<status status="PASS" endtime="20201123 13:56:08.965" starttime="20201123 13:56:08.965"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201123 13:56:08.966" level="INFO">${tmpfile} = /tmp/tempkey-92692</msg>
<status status="PASS" endtime="20201123 13:56:08.966" starttime="20201123 13:56:08.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:08.979" level="INFO">Running command 'ozone sh key get -f 34648-source/bucket1/key2 /tmp/tempkey-92692 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:16.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:16.456" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:56:16.456" starttime="20201123 13:56:08.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.457" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:56:16.457" starttime="20201123 13:56:16.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:16.458" starttime="20201123 13:56:16.458"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.459" starttime="20201123 13:56:08.972"></status>
</kw>
<msg timestamp="20201123 13:56:16.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:16.459" starttime="20201123 13:56:08.972"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.459" starttime="20201123 13:56:08.966"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201123 13:56:16.463" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-92692 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:16.467" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201123 13:56:16.467" starttime="20201123 13:56:16.459"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:16.473" level="INFO">Running command 'rm -f /tmp/tempkey-92692 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:16.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:16.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:16.476" starttime="20201123 13:56:16.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.477" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:16.477" starttime="20201123 13:56:16.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:16.478" starttime="20201123 13:56:16.477"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.479" starttime="20201123 13:56:16.469"></status>
</kw>
<msg timestamp="20201123 13:56:16.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:16.479" starttime="20201123 13:56:16.468"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.480" starttime="20201123 13:56:16.467"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:56:16.480" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201123 13:56:16.481" starttime="20201123 13:56:16.480"></status>
</kw>
<msg timestamp="20201123 13:56:16.481" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201123 13:56:16.481" starttime="20201123 13:56:08.964"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:16.481" starttime="20201123 13:56:16.481"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.482" starttime="20201123 13:56:08.963"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:56:16.482" critical="yes" starttime="20201123 13:56:02.460"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:16.491" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:16.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:16.493" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:56:16.493" starttime="20201123 13:56:16.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.494" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:56:16.494" starttime="20201123 13:56:16.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:16.495" starttime="20201123 13:56:16.495"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.495" starttime="20201123 13:56:16.487"></status>
</kw>
<msg timestamp="20201123 13:56:16.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:16.496" starttime="20201123 13:56:16.487"></status>
</kw>
<msg timestamp="20201123 13:56:16.496" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:56:16.496" starttime="20201123 13:56:16.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:56:16.497" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:56:16.497" starttime="20201123 13:56:16.496"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:16.505" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:16.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:16.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:16.517" starttime="20201123 13:56:16.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.518" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:16.518" starttime="20201123 13:56:16.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:16.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:16.520" starttime="20201123 13:56:16.519"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.520" starttime="20201123 13:56:16.501"></status>
</kw>
<msg timestamp="20201123 13:56:16.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:16.520" starttime="20201123 13:56:16.500"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.520" starttime="20201123 13:56:16.499"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.521" starttime="20201123 13:56:16.497"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.521" starttime="20201123 13:56:16.485"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:16.521" starttime="20201123 13:56:16.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:16.526" level="INFO">Running command 'ozone sh key list 34648-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:20.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:20.905" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201123 13:56:20.905" starttime="20201123 13:56:16.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:20.906" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201123 13:56:20.906" starttime="20201123 13:56:20.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:20.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:20.907" starttime="20201123 13:56:20.906"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:20.907" starttime="20201123 13:56:16.522"></status>
</kw>
<msg timestamp="20201123 13:56:20.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:20.907" starttime="20201123 13:56:16.522"></status>
</kw>
<msg timestamp="20201123 13:56:20.908" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201123 13:56:20.908" starttime="20201123 13:56:16.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:20.912" level="INFO">Running command 'ozone sh key list 34648-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:26.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:26.093" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201123 13:56:26.093" starttime="20201123 13:56:20.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:26.095" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201123 13:56:26.095" starttime="20201123 13:56:26.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:26.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:26.096" starttime="20201123 13:56:26.095"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:26.096" starttime="20201123 13:56:20.909"></status>
</kw>
<msg timestamp="20201123 13:56:26.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:26.096" starttime="20201123 13:56:20.909"></status>
</kw>
<msg timestamp="20201123 13:56:26.096" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201123 13:56:26.096" starttime="20201123 13:56:20.908"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:26.097" starttime="20201123 13:56:26.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:26.098" starttime="20201123 13:56:26.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:26.098" starttime="20201123 13:56:26.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:56:26.098" critical="yes" starttime="20201123 13:56:16.483"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:26.107" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:26.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:26.111" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:56:26.111" starttime="20201123 13:56:26.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:26.112" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:56:26.112" starttime="20201123 13:56:26.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:26.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:26.113" starttime="20201123 13:56:26.112"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:26.113" starttime="20201123 13:56:26.103"></status>
</kw>
<msg timestamp="20201123 13:56:26.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:26.113" starttime="20201123 13:56:26.102"></status>
</kw>
<msg timestamp="20201123 13:56:26.114" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:56:26.114" starttime="20201123 13:56:26.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:56:26.114" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:56:26.114" starttime="20201123 13:56:26.114"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:26.119" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:26.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:26.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:26.131" starttime="20201123 13:56:26.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:26.133" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:26.133" starttime="20201123 13:56:26.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:26.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:26.134" starttime="20201123 13:56:26.133"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:26.134" starttime="20201123 13:56:26.116"></status>
</kw>
<msg timestamp="20201123 13:56:26.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:26.135" starttime="20201123 13:56:26.116"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:26.135" starttime="20201123 13:56:26.115"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:26.135" starttime="20201123 13:56:26.115"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:26.135" starttime="20201123 13:56:26.101"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:26.135" starttime="20201123 13:56:26.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:26.142" level="INFO">Running command 'ozone sh key delete 34648-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:30.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:30.370" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:56:30.370" starttime="20201123 13:56:26.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:30.371" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:56:30.371" starttime="20201123 13:56:30.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:30.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:30.372" starttime="20201123 13:56:30.372"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:30.372" starttime="20201123 13:56:26.136"></status>
</kw>
<msg timestamp="20201123 13:56:30.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:30.373" starttime="20201123 13:56:26.136"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:30.373" starttime="20201123 13:56:26.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:30.377" level="INFO">Running command 'ozone sh key list 34648-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:35.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:35.110" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201123 13:56:35.110" starttime="20201123 13:56:30.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:35.111" level="INFO">key1</msg>
<status status="PASS" endtime="20201123 13:56:35.111" starttime="20201123 13:56:35.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:35.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:35.112" starttime="20201123 13:56:35.112"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:35.113" starttime="20201123 13:56:30.374"></status>
</kw>
<msg timestamp="20201123 13:56:35.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:35.113" starttime="20201123 13:56:30.374"></status>
</kw>
<msg timestamp="20201123 13:56:35.113" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201123 13:56:35.113" starttime="20201123 13:56:30.373"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:35.114" starttime="20201123 13:56:35.114"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:56:35.114" critical="yes" starttime="20201123 13:56:26.099"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:35.128" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:35.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:35.133" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:56:35.134" starttime="20201123 13:56:35.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:35.135" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:56:35.135" starttime="20201123 13:56:35.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:35.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:35.135" starttime="20201123 13:56:35.135"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:35.136" starttime="20201123 13:56:35.118"></status>
</kw>
<msg timestamp="20201123 13:56:35.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:35.136" starttime="20201123 13:56:35.117"></status>
</kw>
<msg timestamp="20201123 13:56:35.136" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:56:35.136" starttime="20201123 13:56:35.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:56:35.137" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:56:35.137" starttime="20201123 13:56:35.136"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:35.143" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:35.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:35.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:35.169" starttime="20201123 13:56:35.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:35.171" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:35.171" starttime="20201123 13:56:35.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:35.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:35.172" starttime="20201123 13:56:35.171"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:35.172" starttime="20201123 13:56:35.139"></status>
</kw>
<msg timestamp="20201123 13:56:35.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:35.172" starttime="20201123 13:56:35.139"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:35.172" starttime="20201123 13:56:35.138"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:35.172" starttime="20201123 13:56:35.138"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:35.172" starttime="20201123 13:56:35.116"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:35.173" starttime="20201123 13:56:35.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:35.181" level="INFO">Running command 'ozone sh bucket list 34648-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:39.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:39.678" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:56:39.678" starttime="20201123 13:56:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:39.679" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:34.355Z",
  "modificationTime" : "2020-11-23T13:55:34.355Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:09.548Z",
  "modificationTime" : "2020-11-23T13:55:30.385Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:43.175Z",
  "modificationTime" : "2020-11-23T13:55:43.175Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:01.519Z",
  "modificationTime" : "2020-11-23T13:55:26.215Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:05.531Z",
  "modificationTime" : "2020-11-23T13:55:05.531Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201123 13:56:39.679" starttime="20201123 13:56:39.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:39.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:39.680" starttime="20201123 13:56:39.679"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:39.680" starttime="20201123 13:56:35.174"></status>
</kw>
<msg timestamp="20201123 13:56:39.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:39.681" starttime="20201123 13:56:35.174"></status>
</kw>
<msg timestamp="20201123 13:56:39.681" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:56:39.681" starttime="20201123 13:56:35.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:39.681" starttime="20201123 13:56:39.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:39.682" starttime="20201123 13:56:39.682"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:56:39.682" critical="yes" starttime="20201123 13:56:35.115"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:39.690" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:39.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:39.694" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:56:39.694" starttime="20201123 13:56:39.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:39.695" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:56:39.695" starttime="20201123 13:56:39.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:39.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:39.696" starttime="20201123 13:56:39.695"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:39.696" starttime="20201123 13:56:39.685"></status>
</kw>
<msg timestamp="20201123 13:56:39.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:39.696" starttime="20201123 13:56:39.685"></status>
</kw>
<msg timestamp="20201123 13:56:39.696" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:56:39.697" starttime="20201123 13:56:39.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:56:39.697" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:56:39.697" starttime="20201123 13:56:39.697"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:39.704" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:39.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:39.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:39.716" starttime="20201123 13:56:39.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:39.717" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:39.717" starttime="20201123 13:56:39.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:39.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:39.718" starttime="20201123 13:56:39.717"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:39.718" starttime="20201123 13:56:39.699"></status>
</kw>
<msg timestamp="20201123 13:56:39.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:39.718" starttime="20201123 13:56:39.699"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:39.719" starttime="20201123 13:56:39.698"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:39.719" starttime="20201123 13:56:39.697"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:39.719" starttime="20201123 13:56:39.684"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:39.719" starttime="20201123 13:56:39.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:39.725" level="INFO">Running command 'ozone sh bucket info 34648-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:44.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:44.384" level="INFO">${output} = 34648-source bucket1</msg>
<status status="PASS" endtime="20201123 13:56:44.384" starttime="20201123 13:56:39.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:44.386" level="INFO">34648-source bucket1</msg>
<status status="PASS" endtime="20201123 13:56:44.386" starttime="20201123 13:56:44.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:44.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:44.386" starttime="20201123 13:56:44.386"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:44.387" starttime="20201123 13:56:39.720"></status>
</kw>
<msg timestamp="20201123 13:56:44.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:44.387" starttime="20201123 13:56:39.720"></status>
</kw>
<msg timestamp="20201123 13:56:44.387" level="INFO">${result} = 34648-source bucket1</msg>
<status status="PASS" endtime="20201123 13:56:44.387" starttime="20201123 13:56:39.719"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:44.388" starttime="20201123 13:56:44.387"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:56:44.388" critical="yes" starttime="20201123 13:56:39.683"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:44.396" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:44.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:44.400" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:56:44.400" starttime="20201123 13:56:44.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:44.402" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:56:44.403" starttime="20201123 13:56:44.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:44.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:44.405" starttime="20201123 13:56:44.403"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:44.405" starttime="20201123 13:56:44.392"></status>
</kw>
<msg timestamp="20201123 13:56:44.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:44.405" starttime="20201123 13:56:44.392"></status>
</kw>
<msg timestamp="20201123 13:56:44.405" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:56:44.406" starttime="20201123 13:56:44.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:56:44.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:56:44.406" starttime="20201123 13:56:44.406"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:44.413" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:44.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:44.434" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:44.434" starttime="20201123 13:56:44.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:44.436" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:44.437" starttime="20201123 13:56:44.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:44.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:44.438" starttime="20201123 13:56:44.437"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:44.439" starttime="20201123 13:56:44.408"></status>
</kw>
<msg timestamp="20201123 13:56:44.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:44.439" starttime="20201123 13:56:44.408"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:44.439" starttime="20201123 13:56:44.407"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:44.439" starttime="20201123 13:56:44.406"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:44.439" starttime="20201123 13:56:44.391"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:44.439" starttime="20201123 13:56:44.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:44.445" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 34648-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:48.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:48.425" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:56:48.425" starttime="20201123 13:56:44.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:48.426" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201123 13:56:48.426" starttime="20201123 13:56:48.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:48.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:48.427" starttime="20201123 13:56:48.426"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:48.427" starttime="20201123 13:56:44.441"></status>
</kw>
<msg timestamp="20201123 13:56:48.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:48.427" starttime="20201123 13:56:44.440"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:48.428" starttime="20201123 13:56:44.440"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:48.435" level="INFO">Running command 'ozone sh bucket getacl 34648-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:53.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:53.158" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201123 13:56:53.158" starttime="20201123 13:56:48.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:53.160" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201123 13:56:53.160" starttime="20201123 13:56:53.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:53.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:53.161" starttime="20201123 13:56:53.160"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:53.161" starttime="20201123 13:56:48.430"></status>
</kw>
<msg timestamp="20201123 13:56:53.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:53.161" starttime="20201123 13:56:48.430"></status>
</kw>
<msg timestamp="20201123 13:56:53.161" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201123 13:56:53.161" starttime="20201123 13:56:48.429"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:53.162" starttime="20201123 13:56:53.161"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:53.162" starttime="20201123 13:56:48.428"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:53.169" level="INFO">Running command 'ozone sh bucket getacl 34648-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:56:57.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:56:57.609" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:56:57.609" starttime="20201123 13:56:53.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:56:57.610" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:56:57.610" starttime="20201123 13:56:57.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:56:57.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:56:57.611" starttime="20201123 13:56:57.611"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:57.611" starttime="20201123 13:56:53.164"></status>
</kw>
<msg timestamp="20201123 13:56:57.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:56:57.612" starttime="20201123 13:56:53.164"></status>
</kw>
<msg timestamp="20201123 13:56:57.612" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201123 13:56:57.612" starttime="20201123 13:56:53.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:56:57.613" starttime="20201123 13:56:57.612"></status>
</kw>
<status status="PASS" endtime="20201123 13:56:57.613" starttime="20201123 13:56:53.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:56:57.618" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 34648-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:02.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:02.106" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:02.106" starttime="20201123 13:56:57.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:02.107" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201123 13:57:02.108" starttime="20201123 13:57:02.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:02.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:02.109" starttime="20201123 13:57:02.108"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:02.109" starttime="20201123 13:56:57.614"></status>
</kw>
<msg timestamp="20201123 13:57:02.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:02.110" starttime="20201123 13:56:57.614"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:02.110" starttime="20201123 13:56:57.613"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:02.120" level="INFO">Running command 'ozone sh bucket getacl 34648-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:06.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:06.686" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:06.686" starttime="20201123 13:57:02.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:06.687" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:06.687" starttime="20201123 13:57:06.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:06.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:06.688" starttime="20201123 13:57:06.688"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:06.689" starttime="20201123 13:57:02.113"></status>
</kw>
<msg timestamp="20201123 13:57:06.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:06.689" starttime="20201123 13:57:02.113"></status>
</kw>
<msg timestamp="20201123 13:57:06.689" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201123 13:57:06.689" starttime="20201123 13:57:02.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:06.690" starttime="20201123 13:57:06.690"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:06.690" starttime="20201123 13:57:02.110"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:06.697" level="INFO">Running command 'ozone sh bucket getacl 34648-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:10.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:10.768" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201123 13:57:10.768" starttime="20201123 13:57:06.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:10.769" level="INFO">READ</msg>
<status status="PASS" endtime="20201123 13:57:10.769" starttime="20201123 13:57:10.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:10.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:10.770" starttime="20201123 13:57:10.769"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.770" starttime="20201123 13:57:06.693"></status>
</kw>
<msg timestamp="20201123 13:57:10.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:10.770" starttime="20201123 13:57:06.693"></status>
</kw>
<msg timestamp="20201123 13:57:10.771" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201123 13:57:10.771" starttime="20201123 13:57:06.692"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:10.771" starttime="20201123 13:57:10.771"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.771" starttime="20201123 13:57:06.690"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:57:10.772" critical="yes" starttime="20201123 13:56:44.389"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:10.783" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:10.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:10.784" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:10.784" starttime="20201123 13:57:10.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:10.785" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:10.785" starttime="20201123 13:57:10.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:10.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:10.787" starttime="20201123 13:57:10.786"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.787" starttime="20201123 13:57:10.776"></status>
</kw>
<msg timestamp="20201123 13:57:10.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:10.788" starttime="20201123 13:57:10.776"></status>
</kw>
<msg timestamp="20201123 13:57:10.788" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:10.788" starttime="20201123 13:57:10.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:10.790" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:10.790" starttime="20201123 13:57:10.789"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:10.799" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:10.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:10.820" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:10.821" starttime="20201123 13:57:10.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:10.822" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:10.822" starttime="20201123 13:57:10.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:10.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:10.823" starttime="20201123 13:57:10.822"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.823" starttime="20201123 13:57:10.794"></status>
</kw>
<msg timestamp="20201123 13:57:10.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:10.824" starttime="20201123 13:57:10.793"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.824" starttime="20201123 13:57:10.792"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.824" starttime="20201123 13:57:10.791"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.824" starttime="20201123 13:57:10.775"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:10.824" starttime="20201123 13:57:10.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:10.829" level="INFO">Running command 'ozone sh bucket link 34648-source/bucket2 34648-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:15.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:15.884" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:15.884" starttime="20201123 13:57:10.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:15.886" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:57:15.886" starttime="20201123 13:57:15.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:15.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:15.887" starttime="20201123 13:57:15.886"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:15.887" starttime="20201123 13:57:10.825"></status>
</kw>
<msg timestamp="20201123 13:57:15.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:15.888" starttime="20201123 13:57:10.825"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:15.888" starttime="20201123 13:57:10.824"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:15.892" level="INFO">Running command 'ozone sh bucket create 34648-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:20.092" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:57:20.093" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:20.093" starttime="20201123 13:57:15.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:20.094" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201123 13:57:20.095" starttime="20201123 13:57:20.093"></status>
</kw>
<msg timestamp="20201123 13:57:20.095" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:20.095" starttime="20201123 13:57:15.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:20.096" starttime="20201123 13:57:20.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:20.102" level="INFO">Running command 'ozone sh bucket create 34648-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:24.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:24.337" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:24.337" starttime="20201123 13:57:20.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:24.338" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:57:24.338" starttime="20201123 13:57:24.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:24.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:24.339" starttime="20201123 13:57:24.338"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:24.340" starttime="20201123 13:57:20.097"></status>
</kw>
<msg timestamp="20201123 13:57:24.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:24.340" starttime="20201123 13:57:20.097"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:24.340" starttime="20201123 13:57:20.096"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:24.346" level="INFO">Running command 'ozone sh bucket link 34648-source/bucket1 34648-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:28.602" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:57:28.602" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:28.602" starttime="20201123 13:57:24.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.603" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201123 13:57:28.603" starttime="20201123 13:57:28.602"></status>
</kw>
<msg timestamp="20201123 13:57:28.604" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:28.604" starttime="20201123 13:57:24.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:28.605" starttime="20201123 13:57:28.604"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:57:28.605" critical="yes" starttime="20201123 13:57:10.773"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:28.613" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:28.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:28.615" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:28.615" starttime="20201123 13:57:28.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.616" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:28.616" starttime="20201123 13:57:28.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:28.617" starttime="20201123 13:57:28.616"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.617" starttime="20201123 13:57:28.608"></status>
</kw>
<msg timestamp="20201123 13:57:28.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:28.617" starttime="20201123 13:57:28.608"></status>
</kw>
<msg timestamp="20201123 13:57:28.618" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:28.618" starttime="20201123 13:57:28.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:28.618" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:28.618" starttime="20201123 13:57:28.618"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:28.624" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:28.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:28.636" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:28.636" starttime="20201123 13:57:28.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.637" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:28.637" starttime="20201123 13:57:28.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:28.638" starttime="20201123 13:57:28.637"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.638" starttime="20201123 13:57:28.620"></status>
</kw>
<msg timestamp="20201123 13:57:28.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:28.638" starttime="20201123 13:57:28.620"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.639" starttime="20201123 13:57:28.619"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.639" starttime="20201123 13:57:28.618"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.639" starttime="20201123 13:57:28.607"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.639" starttime="20201123 13:57:28.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:28.645" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:28.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:28.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:28.649" starttime="20201123 13:57:28.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.650" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:28.650" starttime="20201123 13:57:28.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:28.650" starttime="20201123 13:57:28.650"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.651" starttime="20201123 13:57:28.641"></status>
</kw>
<msg timestamp="20201123 13:57:28.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:28.651" starttime="20201123 13:57:28.641"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.651" starttime="20201123 13:57:28.640"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:28.657" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:28.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:28.659" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:28.659" starttime="20201123 13:57:28.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.660" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:28.660" starttime="20201123 13:57:28.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:28.661" starttime="20201123 13:57:28.660"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.661" starttime="20201123 13:57:28.653"></status>
</kw>
<msg timestamp="20201123 13:57:28.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:28.661" starttime="20201123 13:57:28.652"></status>
</kw>
<msg timestamp="20201123 13:57:28.662" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:28.662" starttime="20201123 13:57:28.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:28.662" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:28.662" starttime="20201123 13:57:28.662"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:28.667" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:28.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:28.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:28.678" starttime="20201123 13:57:28.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.679" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:28.679" starttime="20201123 13:57:28.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:28.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:28.680" starttime="20201123 13:57:28.679"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.681" starttime="20201123 13:57:28.664"></status>
</kw>
<msg timestamp="20201123 13:57:28.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:28.681" starttime="20201123 13:57:28.663"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.681" starttime="20201123 13:57:28.663"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.681" starttime="20201123 13:57:28.662"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.681" starttime="20201123 13:57:28.651"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:28.681" starttime="20201123 13:57:28.651"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:28.685" level="INFO">Running command 'ozone sh key list 34648-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:33.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:33.240" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:33.240" starttime="20201123 13:57:28.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.241" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "34648-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-23T13:54:50.272Z",
  "modificationTime" : "2020-11-23T13:54:52.253Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201123 13:57:33.241" starttime="20201123 13:57:33.240"></status>
</kw>
<msg timestamp="20201123 13:57:33.242" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:33.242" starttime="20201123 13:57:28.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:33.242" starttime="20201123 13:57:33.242"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.242" starttime="20201123 13:57:28.640"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.243" starttime="20201123 13:57:28.639"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:57:33.243" critical="yes" starttime="20201123 13:57:28.606"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:33.251" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:33.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:33.253" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:33.253" starttime="20201123 13:57:33.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.254" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:33.254" starttime="20201123 13:57:33.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:33.255" starttime="20201123 13:57:33.254"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.255" starttime="20201123 13:57:33.246"></status>
</kw>
<msg timestamp="20201123 13:57:33.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:33.255" starttime="20201123 13:57:33.246"></status>
</kw>
<msg timestamp="20201123 13:57:33.256" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:33.256" starttime="20201123 13:57:33.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:33.257" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:33.257" starttime="20201123 13:57:33.256"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:33.263" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:33.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:33.273" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:33.273" starttime="20201123 13:57:33.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.274" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:33.274" starttime="20201123 13:57:33.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:33.275" starttime="20201123 13:57:33.274"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.275" starttime="20201123 13:57:33.258"></status>
</kw>
<msg timestamp="20201123 13:57:33.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:33.275" starttime="20201123 13:57:33.258"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.276" starttime="20201123 13:57:33.257"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.276" starttime="20201123 13:57:33.257"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.276" starttime="20201123 13:57:33.245"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.276" starttime="20201123 13:57:33.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:33.283" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:33.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:33.289" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:33.289" starttime="20201123 13:57:33.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.290" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:33.290" starttime="20201123 13:57:33.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:33.291" starttime="20201123 13:57:33.290"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.291" starttime="20201123 13:57:33.278"></status>
</kw>
<msg timestamp="20201123 13:57:33.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:33.291" starttime="20201123 13:57:33.278"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.292" starttime="20201123 13:57:33.277"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:33.296" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:33.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:33.299" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:33.299" starttime="20201123 13:57:33.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.300" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:33.300" starttime="20201123 13:57:33.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:33.301" starttime="20201123 13:57:33.300"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.301" starttime="20201123 13:57:33.294"></status>
</kw>
<msg timestamp="20201123 13:57:33.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:33.301" starttime="20201123 13:57:33.293"></status>
</kw>
<msg timestamp="20201123 13:57:33.302" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:33.302" starttime="20201123 13:57:33.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:33.302" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:33.303" starttime="20201123 13:57:33.302"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:33.307" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:33.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:33.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:33.318" starttime="20201123 13:57:33.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.320" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:33.320" starttime="20201123 13:57:33.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:33.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:33.321" starttime="20201123 13:57:33.320"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.322" starttime="20201123 13:57:33.304"></status>
</kw>
<msg timestamp="20201123 13:57:33.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:33.322" starttime="20201123 13:57:33.304"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.322" starttime="20201123 13:57:33.303"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.322" starttime="20201123 13:57:33.303"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.323" starttime="20201123 13:57:33.292"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:33.323" starttime="20201123 13:57:33.292"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:33.328" level="INFO">Running command 'ozone sh key list 34648-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:37.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:57:37.365" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:37.365" starttime="20201123 13:57:33.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.368" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201123 13:57:37.368" starttime="20201123 13:57:37.366"></status>
</kw>
<msg timestamp="20201123 13:57:37.368" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:37.368" starttime="20201123 13:57:33.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:37.370" starttime="20201123 13:57:37.369"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.370" starttime="20201123 13:57:33.277"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.370" starttime="20201123 13:57:33.276"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:57:37.371" critical="yes" starttime="20201123 13:57:33.244"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:37.379" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:37.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:37.381" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:37.382" starttime="20201123 13:57:37.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.382" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:37.383" starttime="20201123 13:57:37.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:37.383" starttime="20201123 13:57:37.383"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.383" starttime="20201123 13:57:37.375"></status>
</kw>
<msg timestamp="20201123 13:57:37.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:37.384" starttime="20201123 13:57:37.374"></status>
</kw>
<msg timestamp="20201123 13:57:37.384" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:37.384" starttime="20201123 13:57:37.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:37.385" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:37.385" starttime="20201123 13:57:37.384"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:37.394" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:37.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:37.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:37.406" starttime="20201123 13:57:37.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.407" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:37.407" starttime="20201123 13:57:37.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:37.408" starttime="20201123 13:57:37.407"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.408" starttime="20201123 13:57:37.387"></status>
</kw>
<msg timestamp="20201123 13:57:37.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:37.409" starttime="20201123 13:57:37.386"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.409" starttime="20201123 13:57:37.385"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.409" starttime="20201123 13:57:37.385"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.409" starttime="20201123 13:57:37.373"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.409" starttime="20201123 13:57:37.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:37.417" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:37.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:37.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:37.420" starttime="20201123 13:57:37.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.421" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:37.421" starttime="20201123 13:57:37.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:37.422" starttime="20201123 13:57:37.421"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.423" starttime="20201123 13:57:37.411"></status>
</kw>
<msg timestamp="20201123 13:57:37.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:37.423" starttime="20201123 13:57:37.411"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.423" starttime="20201123 13:57:37.411"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:37.429" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:37.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:37.430" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:37.430" starttime="20201123 13:57:37.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.431" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:37.431" starttime="20201123 13:57:37.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:37.432" starttime="20201123 13:57:37.431"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.432" starttime="20201123 13:57:37.425"></status>
</kw>
<msg timestamp="20201123 13:57:37.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:37.432" starttime="20201123 13:57:37.424"></status>
</kw>
<msg timestamp="20201123 13:57:37.436" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:37.436" starttime="20201123 13:57:37.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:37.437" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:37.437" starttime="20201123 13:57:37.437"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:37.443" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:37.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:37.454" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:37.455" starttime="20201123 13:57:37.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.456" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:37.456" starttime="20201123 13:57:37.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:37.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:37.456" starttime="20201123 13:57:37.456"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.457" starttime="20201123 13:57:37.439"></status>
</kw>
<msg timestamp="20201123 13:57:37.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:37.457" starttime="20201123 13:57:37.438"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.457" starttime="20201123 13:57:37.438"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.457" starttime="20201123 13:57:37.437"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.457" starttime="20201123 13:57:37.423"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:37.457" starttime="20201123 13:57:37.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:37.465" level="INFO">Running command 'ozone sh bucket info 34648-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:43.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:43.365" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:43.365" starttime="20201123 13:57:37.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:43.367" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:09.548Z",
  "modificationTime" : "2020-11-23T13:55:30.385Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201123 13:57:43.372" starttime="20201123 13:57:43.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:43.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:43.379" starttime="20201123 13:57:43.372"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:43.380" starttime="20201123 13:57:37.458"></status>
</kw>
<msg timestamp="20201123 13:57:43.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:43.380" starttime="20201123 13:57:37.458"></status>
</kw>
<msg timestamp="20201123 13:57:43.380" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:43.380" starttime="20201123 13:57:37.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:43.391" starttime="20201123 13:57:43.385"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:43.392" starttime="20201123 13:57:43.391"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:43.396" level="INFO">Running command 'ozone sh key list 34648-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:47.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:57:47.495" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:47.495" starttime="20201123 13:57:43.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:47.497" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201123 13:57:47.497" starttime="20201123 13:57:47.496"></status>
</kw>
<msg timestamp="20201123 13:57:47.497" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:47.497" starttime="20201123 13:57:43.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201123 13:57:47.498" starttime="20201123 13:57:47.498"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.498" starttime="20201123 13:57:37.410"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.498" starttime="20201123 13:57:37.410"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:57:47.499" critical="yes" starttime="20201123 13:57:37.372"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:47.511" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:47.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:47.515" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:57:47.515" starttime="20201123 13:57:47.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:47.516" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:57:47.516" starttime="20201123 13:57:47.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:47.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:47.517" starttime="20201123 13:57:47.516"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.517" starttime="20201123 13:57:47.507"></status>
</kw>
<msg timestamp="20201123 13:57:47.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:47.518" starttime="20201123 13:57:47.507"></status>
</kw>
<msg timestamp="20201123 13:57:47.519" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:57:47.519" starttime="20201123 13:57:47.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:57:47.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:57:47.519" starttime="20201123 13:57:47.519"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:47.525" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:47.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:47.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:57:47.539" starttime="20201123 13:57:47.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:47.540" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:57:47.540" starttime="20201123 13:57:47.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:47.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:47.541" starttime="20201123 13:57:47.540"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.541" starttime="20201123 13:57:47.521"></status>
</kw>
<msg timestamp="20201123 13:57:47.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:47.542" starttime="20201123 13:57:47.521"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.542" starttime="20201123 13:57:47.520"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.542" starttime="20201123 13:57:47.520"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.542" starttime="20201123 13:57:47.505"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:47.542" starttime="20201123 13:57:47.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:47.548" level="INFO">Running command 'ozone sh bucket link 34648-target/loop1 34648-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:51.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:51.982" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:51.982" starttime="20201123 13:57:47.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:51.983" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:57:51.983" starttime="20201123 13:57:51.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:51.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:51.984" starttime="20201123 13:57:51.983"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:51.984" starttime="20201123 13:57:47.544"></status>
</kw>
<msg timestamp="20201123 13:57:51.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:51.984" starttime="20201123 13:57:47.543"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:51.985" starttime="20201123 13:57:47.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:51.990" level="INFO">Running command 'ozone sh bucket link 34648-target/loop2 34648-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:57:56.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:57:56.185" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:57:56.185" starttime="20201123 13:57:51.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:57:56.186" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:57:56.187" starttime="20201123 13:57:56.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:57:56.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:57:56.188" starttime="20201123 13:57:56.187"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:56.188" starttime="20201123 13:57:51.986"></status>
</kw>
<msg timestamp="20201123 13:57:56.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:57:56.189" starttime="20201123 13:57:51.985"></status>
</kw>
<status status="PASS" endtime="20201123 13:57:56.189" starttime="20201123 13:57:51.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:57:56.195" level="INFO">Running command 'ozone sh bucket link 34648-target/loop3 34648-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:00.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:00.239" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:00.239" starttime="20201123 13:57:56.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:00.241" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:58:00.241" starttime="20201123 13:58:00.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:00.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:00.242" starttime="20201123 13:58:00.241"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:00.242" starttime="20201123 13:57:56.190"></status>
</kw>
<msg timestamp="20201123 13:58:00.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:00.243" starttime="20201123 13:57:56.190"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:00.243" starttime="20201123 13:57:56.189"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:00.259" level="INFO">Running command 'ozone sh key list 34648-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:04.696" level="INFO">${rc} = 255</msg>
<msg timestamp="20201123 13:58:04.697" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:04.697" starttime="20201123 13:58:00.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:04.698" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201123 13:58:04.698" starttime="20201123 13:58:04.697"></status>
</kw>
<msg timestamp="20201123 13:58:04.707" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:04.708" starttime="20201123 13:58:00.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201123 13:58:04.709" starttime="20201123 13:58:04.708"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:58:04.709" critical="yes" starttime="20201123 13:57:47.502"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:04.727" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:04.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:04.732" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:58:04.732" starttime="20201123 13:58:04.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:04.733" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:58:04.734" starttime="20201123 13:58:04.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:04.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:04.735" starttime="20201123 13:58:04.734"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:04.735" starttime="20201123 13:58:04.713"></status>
</kw>
<msg timestamp="20201123 13:58:04.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:04.735" starttime="20201123 13:58:04.712"></status>
</kw>
<msg timestamp="20201123 13:58:04.736" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:58:04.736" starttime="20201123 13:58:04.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:58:04.736" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:58:04.737" starttime="20201123 13:58:04.736"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:04.742" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:04.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:04.757" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:58:04.757" starttime="20201123 13:58:04.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:04.758" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:58:04.758" starttime="20201123 13:58:04.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:04.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:04.759" starttime="20201123 13:58:04.759"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:04.759" starttime="20201123 13:58:04.738"></status>
</kw>
<msg timestamp="20201123 13:58:04.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:04.760" starttime="20201123 13:58:04.738"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:04.760" starttime="20201123 13:58:04.737"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:04.760" starttime="20201123 13:58:04.737"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:04.760" starttime="20201123 13:58:04.711"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:04.761" starttime="20201123 13:58:04.711"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:04.766" level="INFO">Running command 'ozone sh bucket link 34648-source/bucket1 34648-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:09.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:09.343" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:09.343" starttime="20201123 13:58:04.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:09.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:58:09.345" starttime="20201123 13:58:09.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:09.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:09.346" starttime="20201123 13:58:09.345"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:09.347" starttime="20201123 13:58:04.762"></status>
</kw>
<msg timestamp="20201123 13:58:09.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:09.347" starttime="20201123 13:58:04.761"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:09.347" starttime="20201123 13:58:04.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:09.353" level="INFO">Running command 'ozone sh key put 34648-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:17.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:17.103" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:17.103" starttime="20201123 13:58:09.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:17.105" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:58:17.105" starttime="20201123 13:58:17.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:17.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:17.106" starttime="20201123 13:58:17.105"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:17.107" starttime="20201123 13:58:09.348"></status>
</kw>
<msg timestamp="20201123 13:58:17.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:17.107" starttime="20201123 13:58:09.348"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:17.107" starttime="20201123 13:58:09.347"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201123 13:58:17.110" level="INFO">${postfix} = 51268</msg>
<status status="PASS" endtime="20201123 13:58:17.110" starttime="20201123 13:58:17.109"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201123 13:58:17.111" level="INFO">${tmpfile} = /tmp/tempkey-51268</msg>
<status status="PASS" endtime="20201123 13:58:17.111" starttime="20201123 13:58:17.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:17.117" level="INFO">Running command 'ozone sh key get -f 34648-target/link1/key3 /tmp/tempkey-51268 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:24.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:24.027" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:24.027" starttime="20201123 13:58:17.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.029" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:58:24.029" starttime="20201123 13:58:24.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:24.030" starttime="20201123 13:58:24.029"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.030" starttime="20201123 13:58:17.112"></status>
</kw>
<msg timestamp="20201123 13:58:24.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:24.030" starttime="20201123 13:58:17.112"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.030" starttime="20201123 13:58:17.111"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201123 13:58:24.034" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-51268 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:24.037" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201123 13:58:24.037" starttime="20201123 13:58:24.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:24.046" level="INFO">Running command 'rm -f /tmp/tempkey-51268 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:24.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:24.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:58:24.052" starttime="20201123 13:58:24.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.054" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:58:24.054" starttime="20201123 13:58:24.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:24.055" starttime="20201123 13:58:24.054"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.056" starttime="20201123 13:58:24.039"></status>
</kw>
<msg timestamp="20201123 13:58:24.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:24.056" starttime="20201123 13:58:24.039"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.057" starttime="20201123 13:58:24.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201123 13:58:24.057" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201123 13:58:24.057" starttime="20201123 13:58:24.057"></status>
</kw>
<msg timestamp="20201123 13:58:24.058" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201123 13:58:24.058" starttime="20201123 13:58:17.108"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201123 13:58:24.059" starttime="20201123 13:58:24.058"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.061" starttime="20201123 13:58:17.107"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:58:24.061" critical="yes" starttime="20201123 13:58:04.710"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:24.074" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:24.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:24.078" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201123 13:58:24.078" starttime="20201123 13:58:24.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.079" level="INFO">scm</msg>
<status status="PASS" endtime="20201123 13:58:24.080" starttime="20201123 13:58:24.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:24.081" starttime="20201123 13:58:24.080"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.082" starttime="20201123 13:58:24.068"></status>
</kw>
<msg timestamp="20201123 13:58:24.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:24.082" starttime="20201123 13:58:24.068"></status>
</kw>
<msg timestamp="20201123 13:58:24.082" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201123 13:58:24.082" starttime="20201123 13:58:24.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201123 13:58:24.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201123 13:58:24.083" starttime="20201123 13:58:24.083"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:24.090" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:24.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:24.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:58:24.115" starttime="20201123 13:58:24.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.116" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:58:24.116" starttime="20201123 13:58:24.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:24.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:24.117" starttime="20201123 13:58:24.116"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.117" starttime="20201123 13:58:24.086"></status>
</kw>
<msg timestamp="20201123 13:58:24.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:24.117" starttime="20201123 13:58:24.085"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.118" starttime="20201123 13:58:24.084"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.118" starttime="20201123 13:58:24.084"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.118" starttime="20201123 13:58:24.065"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:24.118" starttime="20201123 13:58:24.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:24.124" level="INFO">Running command 'ozone sh bucket delete 34648-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:28.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:28.251" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:28.251" starttime="20201123 13:58:24.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:28.252" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201123 13:58:28.252" starttime="20201123 13:58:28.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:28.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:28.253" starttime="20201123 13:58:28.253"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:28.254" starttime="20201123 13:58:24.119"></status>
</kw>
<msg timestamp="20201123 13:58:28.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:28.254" starttime="20201123 13:58:24.119"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:28.254" starttime="20201123 13:58:24.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:28.260" level="INFO">Running command 'ozone sh bucket list 34648-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:32.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:32.740" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:32.740" starttime="20201123 13:58:28.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:32.741" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:57:24.156Z",
  "modificationTime" : "2020-11-23T13:57:24.156Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:34.355Z",
  "modificationTime" : "2020-11-23T13:55:34.355Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:09.548Z",
  "modificationTime" : "2020-11-23T13:55:30.385Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:57:15.802Z",
  "modificationTime" : "2020-11-23T13:57:15.802Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:58:09.083Z",
  "modificationTime" : "2020-11-23T13:58:09.083Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:58:00.116Z",
  "modificationTime" : "2020-11-23T13:58:00.116Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:57:51.757Z",
  "modificationTime" : "2020-11-23T13:57:51.757Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:57:55.958Z",
  "modificationTime" : "2020-11-23T13:57:55.958Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:01.519Z",
  "modificationTime" : "2020-11-23T13:55:26.215Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "34648-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-23T13:55:05.531Z",
  "modificationTime" : "2020-11-23T13:55:05.531Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34648-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201123 13:58:32.742" starttime="20201123 13:58:32.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:32.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:32.743" starttime="20201123 13:58:32.742"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:32.743" starttime="20201123 13:58:28.255"></status>
</kw>
<msg timestamp="20201123 13:58:32.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:32.744" starttime="20201123 13:58:28.255"></status>
</kw>
<msg timestamp="20201123 13:58:32.744" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201123 13:58:32.744" starttime="20201123 13:58:28.254"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:58:32.745" starttime="20201123 13:58:32.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:58:32.751" level="INFO">Running command 'ozone sh key list 34648-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:58:37.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:58:37.540" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201123 13:58:37.540" starttime="20201123 13:58:32.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:58:37.542" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201123 13:58:37.542" starttime="20201123 13:58:37.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:58:37.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:58:37.544" starttime="20201123 13:58:37.543"></status>
</kw>
<status status="PASS" endtime="20201123 13:58:37.544" starttime="20201123 13:58:32.746"></status>
</kw>
<msg timestamp="20201123 13:58:37.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:58:37.545" starttime="20201123 13:58:32.746"></status>
</kw>
<msg timestamp="20201123 13:58:37.545" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201123 13:58:37.545" starttime="20201123 13:58:32.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201123 13:58:37.546" starttime="20201123 13:58:37.546"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201123 13:58:37.546" critical="yes" starttime="20201123 13:58:24.064"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201123 13:58:37.550" starttime="20201123 13:54:33.137"></status>
</suite>
<status status="PASS" elapsedtime="280376" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
