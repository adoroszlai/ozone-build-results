<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201123 12:51:36.022" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:21.712" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:21.714" level="INFO">${rc} = 1</msg>
<msg timestamp="20201123 12:51:21.714" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:51:21.714" starttime="20201123 12:51:21.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:21.715" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:51:21.715" starttime="20201123 12:51:21.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:21.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201123 12:51:21.716" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201123 12:51:21.716" starttime="20201123 12:51:21.715"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:21.716" starttime="20201123 12:51:21.707"></status>
</kw>
<msg timestamp="20201123 12:51:21.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201123 12:51:21.716" starttime="20201123 12:51:21.706"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:21.716" starttime="20201123 12:51:21.706"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:21.717" starttime="20201123 12:51:21.706"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:22.724" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:22.725" level="INFO">${rc} = 1</msg>
<msg timestamp="20201123 12:51:22.725" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:51:22.725" starttime="20201123 12:51:22.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:22.727" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:51:22.727" starttime="20201123 12:51:22.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:22.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201123 12:51:22.728" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201123 12:51:22.728" starttime="20201123 12:51:22.727"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:22.728" starttime="20201123 12:51:22.719"></status>
</kw>
<msg timestamp="20201123 12:51:22.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201123 12:51:22.728" starttime="20201123 12:51:22.719"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:22.729" starttime="20201123 12:51:22.718"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:22.729" starttime="20201123 12:51:22.717"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:23.735" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:23.737" level="INFO">${rc} = 1</msg>
<msg timestamp="20201123 12:51:23.737" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:51:23.737" starttime="20201123 12:51:23.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:23.738" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:51:23.738" starttime="20201123 12:51:23.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:23.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201123 12:51:23.739" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201123 12:51:23.739" starttime="20201123 12:51:23.738"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:23.739" starttime="20201123 12:51:23.732"></status>
</kw>
<msg timestamp="20201123 12:51:23.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201123 12:51:23.739" starttime="20201123 12:51:23.731"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:23.740" starttime="20201123 12:51:23.730"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:23.740" starttime="20201123 12:51:23.730"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:24.745" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:24.747" level="INFO">${rc} = 1</msg>
<msg timestamp="20201123 12:51:24.747" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:51:24.747" starttime="20201123 12:51:24.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:24.748" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:51:24.748" starttime="20201123 12:51:24.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:24.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201123 12:51:24.750" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201123 12:51:24.750" starttime="20201123 12:51:24.749"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:24.750" starttime="20201123 12:51:24.742"></status>
</kw>
<msg timestamp="20201123 12:51:24.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201123 12:51:24.750" starttime="20201123 12:51:24.742"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:24.750" starttime="20201123 12:51:24.741"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:24.751" starttime="20201123 12:51:24.740"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:25.757" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:25.759" level="INFO">${rc} = 1</msg>
<msg timestamp="20201123 12:51:25.759" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:51:25.759" starttime="20201123 12:51:25.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:25.760" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:51:25.760" starttime="20201123 12:51:25.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:25.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201123 12:51:25.762" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201123 12:51:25.762" starttime="20201123 12:51:25.761"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:25.763" starttime="20201123 12:51:25.753"></status>
</kw>
<msg timestamp="20201123 12:51:25.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201123 12:51:25.764" starttime="20201123 12:51:25.752"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:25.764" starttime="20201123 12:51:25.752"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:25.764" starttime="20201123 12:51:25.751"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:26.782" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:26.787" level="INFO">${rc} = 1</msg>
<msg timestamp="20201123 12:51:26.787" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:51:26.787" starttime="20201123 12:51:26.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:26.789" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:51:26.789" starttime="20201123 12:51:26.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:26.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201123 12:51:26.790" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201123 12:51:26.790" starttime="20201123 12:51:26.789"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:26.790" starttime="20201123 12:51:26.766"></status>
</kw>
<msg timestamp="20201123 12:51:26.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201123 12:51:26.790" starttime="20201123 12:51:26.766"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:26.790" starttime="20201123 12:51:26.766"></status>
</kw>
<status status="FAIL" endtime="20201123 12:51:26.790" starttime="20201123 12:51:26.765"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:27.799" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:27.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:51:27.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 12:51:27.801" starttime="20201123 12:51:27.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:27.802" level="INFO"></msg>
<status status="PASS" endtime="20201123 12:51:27.802" starttime="20201123 12:51:27.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:27.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:51:27.802" starttime="20201123 12:51:27.802"></status>
</kw>
<status status="PASS" endtime="20201123 12:51:27.803" starttime="20201123 12:51:27.796"></status>
</kw>
<msg timestamp="20201123 12:51:27.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:51:27.803" starttime="20201123 12:51:27.795"></status>
</kw>
<status status="PASS" endtime="20201123 12:51:27.803" starttime="20201123 12:51:27.794"></status>
</kw>
<status status="PASS" endtime="20201123 12:51:27.804" starttime="20201123 12:51:27.791"></status>
</kw>
<status status="PASS" endtime="20201123 12:51:27.804" starttime="20201123 12:51:21.705"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201123 12:51:27.804" critical="yes" starttime="20201123 12:51:21.704"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 12:51:27.810" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 12:51:28.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 12:51:28.237" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201123 12:51:28.238" starttime="20201123 12:51:27.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 12:51:28.239" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201123 12:51:28.239" starttime="20201123 12:51:28.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 12:51:28.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 12:51:28.240" starttime="20201123 12:51:28.239"></status>
</kw>
<status status="PASS" endtime="20201123 12:51:28.240" starttime="20201123 12:51:27.807"></status>
</kw>
<msg timestamp="20201123 12:51:28.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 12:51:28.240" starttime="20201123 12:51:27.806"></status>
</kw>
<msg timestamp="20201123 12:51:28.240" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201123 12:51:28.240" starttime="20201123 12:51:27.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201123 12:51:28.241" starttime="20201123 12:51:28.241"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201123 12:51:28.241" critical="yes" starttime="20201123 12:51:27.805"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201123 12:51:28.244" starttime="20201123 12:51:21.653"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
