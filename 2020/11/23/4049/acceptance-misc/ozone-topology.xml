<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201123 13:41:22.961" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201123 13:38:31.229" starttime="20201123 13:38:31.228"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:38:31.235" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:38:31.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:38:31.354" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 23 Nov 2020 13:38:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 23 Nov 2020 12:39:32 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201123 13:38:31.354" starttime="20201123 13:38:31.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:38:31.356" level="INFO">HTTP/1.1 200 OK
Date: Mon, 23 Nov 2020 13:38:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 23 Nov 2020 12:39:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201123 13:38:31.356" starttime="20201123 13:38:31.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:38:31.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:38:31.357" starttime="20201123 13:38:31.356"></status>
</kw>
<status status="PASS" endtime="20201123 13:38:31.357" starttime="20201123 13:38:31.230"></status>
</kw>
<msg timestamp="20201123 13:38:31.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:38:31.358" starttime="20201123 13:38:31.230"></status>
</kw>
<msg timestamp="20201123 13:38:31.358" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 23 Nov 2020 13:38:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 23 Nov 2020 12:39:32 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201123 13:38:31.358" starttime="20201123 13:38:31.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201123 13:38:31.359" starttime="20201123 13:38:31.359"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:38:31.359" critical="yes" starttime="20201123 13:38:31.227"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201123 13:38:31.365" starttime="20201123 13:38:31.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:38:31.378" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:39:27.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:39:27.592" level="INFO">${output} = 2020-11-23 13:38:33,626 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:38:33,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:39:27.592" starttime="20201123 13:38:31.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:39:27.594" level="INFO">2020-11-23 13:38:33,626 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:38:33,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-23 13:38:33,899 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-23 13:38:35,975 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-23 13:38:35,976 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-23 13:38:35,977 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-23 13:38:35,977 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-23 13:38:35,977 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-23 13:38:35,977 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-23 13:38:35,977 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-23 13:38:35,989 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-23 13:38:35,990 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-23 13:38:36,000 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-23 13:38:36,049 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-51809, with hadoop as owner.
2020-11-23 13:38:36,474 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-82768, with hadoop as owner.
2020-11-23 13:38:36,494 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-90650, with hadoop as owner.
2020-11-23 13:38:36,508 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-57592, with hadoop as owner.
2020-11-23 13:38:36,523 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-91896, with hadoop as owner.
2020-11-23 13:38:36,544 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51809/bucket-0-53211, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,642 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82768/bucket-0-01152, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,667 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90650/bucket-0-30112, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57592/bucket-0-64237, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,693 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91896/bucket-0-64813, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,715 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51809/bucket-1-57443, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,727 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82768/bucket-1-29712, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,746 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90650/bucket-1-10473, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,759 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57592/bucket-1-48102, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,777 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91896/bucket-1-44763, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,812 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51809/bucket-2-37892, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,831 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82768/bucket-2-68236, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,851 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90650/bucket-2-21322, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,871 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57592/bucket-2-63805, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,890 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91896/bucket-2-72807, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,902 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51809/bucket-3-51730, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,914 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82768/bucket-3-65521, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,928 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90650/bucket-3-60709, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,946 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57592/bucket-3-67850, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,960 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91896/bucket-3-41769, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,977 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51809/bucket-4-28585, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,987 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82768/bucket-4-89676, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:36,995 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90650/bucket-4-71385, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:37,000 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57592/bucket-4-36450, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:37,007 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91896/bucket-4-72818, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-23 13:38:37,008 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-23 13:38:38,009 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-23 13:38:38,240 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-23 13:38:38,644 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-23 13:38:38,645 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-75AE66086496-&gt;aabb3e4c-15f3-4f06-af73-e5d18b069559
2020-11-23 13:38:38,646 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:38:39,010 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-23 13:38:40,010 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-23 13:38:41,011 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-23 13:38:41,918 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0A5C4109DDEC-&gt;62240fc9-f5c3-4bae-b37d-5f26bb717e4d
2020-11-23 13:38:41,932 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-23 13:38:42,012 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-23 13:38:43,016 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-23 13:38:44,017 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-23 13:38:45,017 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-23 13:38:46,024 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-11-23 13:38:47,030 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-11-23 13:38:48,031 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-11-23 13:38:49,032 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-11-23 13:38:50,033 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-11-23 13:38:51,035 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-11-23 13:38:52,036 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-11-23 13:38:53,036 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-11-23 13:38:54,037 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-23 13:38:55,038 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-11-23 13:38:56,039 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-11-23 13:38:57,040 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-23 13:38:58,040 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-23 13:38:59,041 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-23 13:39:00,041 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-11-23 13:39:01,042 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-11-23 13:39:02,047 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-11-23 13:39:03,047 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-11-23 13:39:04,048 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-11-23 13:39:05,050 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-11-23 13:39:06,061 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-11-23 13:39:07,063 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-11-23 13:39:08,063 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-11-23 13:39:09,064 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-11-23 13:39:10,065 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-11-23 13:39:11,065 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-11-23 13:39:12,066 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-11-23 13:39:13,067 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-11-23 13:39:14,067 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-23 13:39:15,069 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-23 13:39:16,070 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-23 13:39:17,070 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-11-23 13:39:18,071 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-11-23 13:39:19,075 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-11-23 13:39:20,076 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-11-23 13:39:21,076 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-11-23 13:39:22,077 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,490
Average Time spent in bucket creation: 00:00:00,311
Average Time spent in key creation: 00:00:03,351
Average Time spent in key write: 00:00:01,174
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:53,125
***************************************************</msg>
<status status="PASS" endtime="20201123 13:39:27.594" starttime="20201123 13:39:27.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:39:27.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:39:27.595" starttime="20201123 13:39:27.594"></status>
</kw>
<status status="PASS" endtime="20201123 13:39:27.595" starttime="20201123 13:38:31.366"></status>
</kw>
<msg timestamp="20201123 13:39:27.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:39:27.595" starttime="20201123 13:38:31.365"></status>
</kw>
<msg timestamp="20201123 13:39:27.596" level="INFO">${result} = 2020-11-23 13:38:33,626 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-23 13:38:33,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201123 13:39:27.596" starttime="20201123 13:38:31.365"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:27.597" starttime="20201123 13:39:27.596"></status>
</kw>
<status status="PASS" endtime="20201123 13:39:27.597" starttime="20201123 13:39:27.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:27.597" starttime="20201123 13:39:27.597"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:39:27.597" critical="yes" starttime="20201123 13:38:31.363"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201123 13:39:27.599" starttime="20201123 13:38:31.175"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:39:33.240" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:39:36.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:39:36.318" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201123 13:39:36.318" starttime="20201123 13:39:33.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:39:36.320" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201123 13:39:36.320" starttime="20201123 13:39:36.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:39:36.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:39:36.321" starttime="20201123 13:39:36.320"></status>
</kw>
<status status="PASS" endtime="20201123 13:39:36.321" starttime="20201123 13:39:33.235"></status>
</kw>
<msg timestamp="20201123 13:39:36.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:39:36.321" starttime="20201123 13:39:33.235"></status>
</kw>
<msg timestamp="20201123 13:39:36.322" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201123 13:39:36.322" starttime="20201123 13:39:33.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:36.322" starttime="20201123 13:39:36.322"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:39:36.323" critical="yes" starttime="20201123 13:39:33.234"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:39:36.329" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:39:39.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:39:39.119" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201123 13:39:39.119" starttime="20201123 13:39:36.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:39:39.120" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201123 13:39:39.121" starttime="20201123 13:39:39.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:39:39.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:39:39.122" starttime="20201123 13:39:39.121"></status>
</kw>
<status status="PASS" endtime="20201123 13:39:39.122" starttime="20201123 13:39:36.325"></status>
</kw>
<msg timestamp="20201123 13:39:39.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:39:39.123" starttime="20201123 13:39:36.325"></status>
</kw>
<msg timestamp="20201123 13:39:39.123" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201123 13:39:39.123" starttime="20201123 13:39:36.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:39.124" starttime="20201123 13:39:39.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:39.125" starttime="20201123 13:39:39.124"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:39:39.125" critical="yes" starttime="20201123 13:39:36.323"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201123 13:39:39.127" starttime="20201123 13:39:33.184"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:39:44.719" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:39:48.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:39:48.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:39:48.019" starttime="20201123 13:39:44.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:39:48.021" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:39:48.021" starttime="20201123 13:39:48.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:39:48.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:39:48.022" starttime="20201123 13:39:48.021"></status>
</kw>
<status status="PASS" endtime="20201123 13:39:48.022" starttime="20201123 13:39:44.712"></status>
</kw>
<msg timestamp="20201123 13:39:48.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:39:48.022" starttime="20201123 13:39:44.712"></status>
</kw>
<msg timestamp="20201123 13:39:48.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:39:48.022" starttime="20201123 13:39:44.711"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:48.023" starttime="20201123 13:39:48.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:39:48.029" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:39:51.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:39:51.474" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:39:51.474" starttime="20201123 13:39:48.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:39:51.476" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:39:51.476" starttime="20201123 13:39:51.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:39:51.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:39:51.477" starttime="20201123 13:39:51.476"></status>
</kw>
<status status="PASS" endtime="20201123 13:39:51.477" starttime="20201123 13:39:48.024"></status>
</kw>
<msg timestamp="20201123 13:39:51.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:39:51.477" starttime="20201123 13:39:48.024"></status>
</kw>
<msg timestamp="20201123 13:39:51.478" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:39:51.478" starttime="20201123 13:39:48.023"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:51.479" starttime="20201123 13:39:51.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:39:51.484" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:39:57.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:39:57.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:39:57.656" starttime="20201123 13:39:51.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:39:57.658" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:39:57.658" starttime="20201123 13:39:57.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:39:57.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:39:57.659" starttime="20201123 13:39:57.658"></status>
</kw>
<status status="PASS" endtime="20201123 13:39:57.659" starttime="20201123 13:39:51.480"></status>
</kw>
<msg timestamp="20201123 13:39:57.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:39:57.659" starttime="20201123 13:39:51.479"></status>
</kw>
<msg timestamp="20201123 13:39:57.659" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:39:57.660" starttime="20201123 13:39:51.479"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:39:57.660" starttime="20201123 13:39:57.660"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:39:57.660" critical="yes" starttime="20201123 13:39:44.710"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201123 13:39:57.662" starttime="20201123 13:39:44.660"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:41:09.665" level="INFO">${random} = 43702</msg>
<status status="PASS" endtime="20201123 13:41:09.665" starttime="20201123 13:41:09.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:41:09.672" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-43702 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:41:15.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:41:15.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:41:15.148" starttime="20201123 13:41:09.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:41:15.149" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:41:15.149" starttime="20201123 13:41:15.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:41:15.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:41:15.150" starttime="20201123 13:41:15.149"></status>
</kw>
<status status="PASS" endtime="20201123 13:41:15.150" starttime="20201123 13:41:09.667"></status>
</kw>
<msg timestamp="20201123 13:41:15.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:41:15.151" starttime="20201123 13:41:09.666"></status>
</kw>
<msg timestamp="20201123 13:41:15.151" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:41:15.151" starttime="20201123 13:41:09.665"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:41:15.152" starttime="20201123 13:41:15.151"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:41:15.152" critical="yes" starttime="20201123 13:41:09.664"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201123 13:41:15.153" starttime="20201123 13:41:09.610"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201123 13:40:05.660" level="INFO">${random} = 55854</msg>
<status status="PASS" endtime="20201123 13:40:05.661" starttime="20201123 13:40:05.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201123 13:40:05.667" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-55854 2&gt;&amp;1'.</msg>
<msg timestamp="20201123 13:40:29.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201123 13:40:29.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:40:29.999" starttime="20201123 13:40:05.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201123 13:40:30.000" level="INFO"></msg>
<status status="PASS" endtime="20201123 13:40:30.000" starttime="20201123 13:40:29.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201123 13:40:30.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201123 13:40:30.001" starttime="20201123 13:40:30.000"></status>
</kw>
<status status="PASS" endtime="20201123 13:40:30.001" starttime="20201123 13:40:05.662"></status>
</kw>
<msg timestamp="20201123 13:40:30.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201123 13:40:30.001" starttime="20201123 13:40:05.661"></status>
</kw>
<msg timestamp="20201123 13:40:30.002" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201123 13:40:30.002" starttime="20201123 13:40:05.661"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201123 13:40:30.002" starttime="20201123 13:40:30.002"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201123 13:40:30.003" critical="yes" starttime="20201123 13:40:05.659"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201123 13:40:30.003" starttime="20201123 13:40:05.607"></status>
</suite>
<status status="PASS" elapsedtime="105308" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
