<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201104 13:07:26.054" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:08.671" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:10.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 12:54:10.996" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 12:54:10.996" starttime="20201104 12:54:08.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:10.997" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 12:54:10.997" starttime="20201104 12:54:10.996"></status>
</kw>
<msg timestamp="20201104 12:54:10.997" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 12:54:10.997" starttime="20201104 12:54:08.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:11.004" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:13.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:13.067" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:13.067" starttime="20201104 12:54:11.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:13.068" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:13.068" starttime="20201104 12:54:13.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:13.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:13.069" starttime="20201104 12:54:13.069"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:13.070" starttime="20201104 12:54:10.999"></status>
</kw>
<msg timestamp="20201104 12:54:13.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:13.070" starttime="20201104 12:54:10.999"></status>
</kw>
<msg timestamp="20201104 12:54:13.070" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 12:54:13.070" starttime="20201104 12:54:10.999"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 12:54:13.071" starttime="20201104 12:54:13.071"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:13.071" starttime="20201104 12:54:10.998"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:13.071" starttime="20201104 12:54:10.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:13.077" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:15.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:15.157" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:15.157" starttime="20201104 12:54:13.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:15.158" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:15.158" starttime="20201104 12:54:15.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:15.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:15.159" starttime="20201104 12:54:15.159"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:15.159" starttime="20201104 12:54:13.074"></status>
</kw>
<msg timestamp="20201104 12:54:15.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:15.160" starttime="20201104 12:54:13.074"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:15.160" starttime="20201104 12:54:13.072"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:15.160" starttime="20201104 12:54:13.072"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:15.160" starttime="20201104 12:54:13.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201104 12:54:15.160" starttime="20201104 12:54:15.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:15.165" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:17.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:17.451" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T12:54:15.119Z",
  "modificat...</msg>
<status status="PASS" endtime="20201104 12:54:17.451" starttime="20201104 12:54:15.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:17.452" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T12:54:15.119Z",
  "modificationTime" : "2020-11-04T12:54:15.119Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 12:54:17.452" starttime="20201104 12:54:17.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:17.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:17.453" starttime="20201104 12:54:17.452"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:17.453" starttime="20201104 12:54:15.162"></status>
</kw>
<msg timestamp="20201104 12:54:17.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:17.453" starttime="20201104 12:54:15.161"></status>
</kw>
<msg timestamp="20201104 12:54:17.453" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T12:54:15.119Z",
  "modificat...</msg>
<status status="PASS" endtime="20201104 12:54:17.454" starttime="20201104 12:54:15.161"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201104 12:54:17.454" starttime="20201104 12:54:17.454"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:54:17.458" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:54:17.458" starttime="20201104 12:54:17.457"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:54:17.458" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:54:17.459" starttime="20201104 12:54:17.458"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:17.459" starttime="20201104 12:54:17.457"></status>
</kw>
<msg timestamp="20201104 12:54:17.459" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:54:17.459" starttime="20201104 12:54:17.456"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:17.459" starttime="20201104 12:54:17.456"></status>
</kw>
<msg timestamp="20201104 12:54:17.459" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201104 12:54:17.459" starttime="20201104 12:54:17.455"></status>
</kw>
<msg timestamp="20201104 12:54:17.459" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201104 12:54:17.459" starttime="20201104 12:54:17.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:17.463" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:19.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:19.717" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:19.717" starttime="20201104 12:54:17.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:19.719" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:19.719" starttime="20201104 12:54:19.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:19.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:19.719" starttime="20201104 12:54:19.719"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:19.720" starttime="20201104 12:54:17.460"></status>
</kw>
<msg timestamp="20201104 12:54:19.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:19.720" starttime="20201104 12:54:17.460"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:19.720" starttime="20201104 12:54:17.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:19.725" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:25.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:25.843" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:25.843" starttime="20201104 12:54:19.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:25.844" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:25.844" starttime="20201104 12:54:25.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:25.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:25.845" starttime="20201104 12:54:25.844"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:25.845" starttime="20201104 12:54:19.722"></status>
</kw>
<msg timestamp="20201104 12:54:25.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:25.845" starttime="20201104 12:54:19.721"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:25.845" starttime="20201104 12:54:19.720"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:25.849" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:30.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:30.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:30.452" starttime="20201104 12:54:25.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:30.453" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:30.453" starttime="20201104 12:54:30.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:30.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:30.454" starttime="20201104 12:54:30.453"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:30.454" starttime="20201104 12:54:25.846"></status>
</kw>
<msg timestamp="20201104 12:54:30.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:30.454" starttime="20201104 12:54:25.846"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:30.455" starttime="20201104 12:54:25.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:30.459" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:34.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:34.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:34.393" starttime="20201104 12:54:30.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:34.394" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:34.394" starttime="20201104 12:54:34.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:34.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:34.395" starttime="20201104 12:54:34.395"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:34.396" starttime="20201104 12:54:30.456"></status>
</kw>
<msg timestamp="20201104 12:54:34.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:34.396" starttime="20201104 12:54:30.455"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:34.396" starttime="20201104 12:54:30.455"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 12:54:34.396" critical="yes" starttime="20201104 12:54:08.664"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:54:34.402" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:54:34.402" starttime="20201104 12:54:34.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:54:34.403" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:54:34.403" starttime="20201104 12:54:34.402"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:34.403" starttime="20201104 12:54:34.401"></status>
</kw>
<msg timestamp="20201104 12:54:34.403" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:54:34.403" starttime="20201104 12:54:34.400"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:34.403" starttime="20201104 12:54:34.399"></status>
</kw>
<msg timestamp="20201104 12:54:34.403" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 12:54:34.403" starttime="20201104 12:54:34.399"></status>
</kw>
<msg timestamp="20201104 12:54:34.404" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 12:54:34.404" starttime="20201104 12:54:34.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:34.408" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:36.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:36.459" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:36.459" starttime="20201104 12:54:34.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:36.460" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:36.460" starttime="20201104 12:54:36.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:36.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:36.461" starttime="20201104 12:54:36.460"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:36.461" starttime="20201104 12:54:34.405"></status>
</kw>
<msg timestamp="20201104 12:54:36.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:36.461" starttime="20201104 12:54:34.404"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:36.462" starttime="20201104 12:54:34.404"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:36.465" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:38.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:38.726" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:54:38.726" starttime="20201104 12:54:36.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:38.727" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:54:38.727" starttime="20201104 12:54:38.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:38.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:38.728" starttime="20201104 12:54:38.727"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:38.728" starttime="20201104 12:54:36.463"></status>
</kw>
<msg timestamp="20201104 12:54:38.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:38.728" starttime="20201104 12:54:36.462"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:38.728" starttime="20201104 12:54:36.462"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 12:54:38.729" critical="yes" starttime="20201104 12:54:34.397"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201104 12:54:38.730" starttime="20201104 12:54:08.610"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 12:56:18.447" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 12:56:18.447" starttime="20201104 12:56:18.447"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:56:18.448" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 12:56:18.448" starttime="20201104 12:56:18.447"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:18.448" starttime="20201104 12:56:18.446"></status>
</kw>
<msg timestamp="20201104 12:56:18.448" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 12:56:18.448" starttime="20201104 12:56:18.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 12:56:18.449" starttime="20201104 12:56:18.449"></status>
</kw>
<msg timestamp="20201104 12:56:18.449" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 12:56:18.449" starttime="20201104 12:56:18.448"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:18.450" starttime="20201104 12:56:18.445"></status>
</kw>
<msg timestamp="20201104 12:56:18.450" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 12:56:18.450" starttime="20201104 12:56:18.445"></status>
</kw>
<msg timestamp="20201104 12:56:18.450" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 12:56:18.450" starttime="20201104 12:56:18.444"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 12:56:18.450" level="INFO">${random} = 84132</msg>
<status status="PASS" endtime="20201104 12:56:18.450" starttime="20201104 12:56:18.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:56:18.457" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-84132 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:56:21.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:56:21.811" level="INFO">${output} = 2020-11-04 12:56:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:56:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 ...</msg>
<status status="PASS" endtime="20201104 12:56:21.811" starttime="20201104 12:56:18.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:56:21.812" level="INFO">2020-11-04 12:56:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:56:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 12:56:20 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-04 12:56:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:56:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-146F89CB4E7A-&gt;c1b76ea4-62d1-49ac-9e72-1877df70a593
2020-11-04 12:56:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201104 12:56:21.813" starttime="20201104 12:56:21.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:56:21.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:56:21.813" starttime="20201104 12:56:21.813"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:21.814" starttime="20201104 12:56:18.451"></status>
</kw>
<msg timestamp="20201104 12:56:21.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:56:21.814" starttime="20201104 12:56:18.451"></status>
</kw>
<msg timestamp="20201104 12:56:21.814" level="INFO">${result} = 2020-11-04 12:56:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:56:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 ...</msg>
<status status="PASS" endtime="20201104 12:56:21.814" starttime="20201104 12:56:18.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:56:21.819" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:56:23.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:56:23.727" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-04 12:54 ofs://om/volume1/bucket1/ozone-56944
-rw-...</msg>
<status status="PASS" endtime="20201104 12:56:23.728" starttime="20201104 12:56:21.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:56:23.729" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-04 12:54 ofs://om/volume1/bucket1/ozone-56944
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-04 12:56 ofs://om/volume1/bucket1/ozone-84132
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:55 ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201104 12:56:23.729" starttime="20201104 12:56:23.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:56:23.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:56:23.729" starttime="20201104 12:56:23.729"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:23.730" starttime="20201104 12:56:21.816"></status>
</kw>
<msg timestamp="20201104 12:56:23.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:56:23.730" starttime="20201104 12:56:21.816"></status>
</kw>
<msg timestamp="20201104 12:56:23.730" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-04 12:54 ofs://om/volume1/bucket1/ozone-56944
-rw-...</msg>
<status status="PASS" endtime="20201104 12:56:23.730" starttime="20201104 12:56:21.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201104 12:56:23.731" starttime="20201104 12:56:23.730"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 12:56:23.731" critical="yes" starttime="20201104 12:56:18.443"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201104 12:56:23.732" starttime="20201104 12:56:18.391"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:54:43.617" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:54:43.617" starttime="20201104 12:54:43.617"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:54:43.618" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:54:43.618" starttime="20201104 12:54:43.618"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:43.618" starttime="20201104 12:54:43.616"></status>
</kw>
<msg timestamp="20201104 12:54:43.618" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:54:43.618" starttime="20201104 12:54:43.616"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:43.619" starttime="20201104 12:54:43.615"></status>
</kw>
<msg timestamp="20201104 12:54:43.619" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:54:43.619" starttime="20201104 12:54:43.615"></status>
</kw>
<msg timestamp="20201104 12:54:43.619" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:54:43.619" starttime="20201104 12:54:43.613"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 12:54:43.620" level="INFO">${random} = 56944</msg>
<status status="PASS" endtime="20201104 12:54:43.620" starttime="20201104 12:54:43.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:43.625" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-56944 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:49.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:49.482" level="INFO">${output} = 2020-11-04 12:54:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:54:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 ...</msg>
<status status="PASS" endtime="20201104 12:54:49.482" starttime="20201104 12:54:43.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:49.483" level="INFO">2020-11-04 12:54:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:54:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 12:54:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-04 12:54:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:54:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-643A670D7FFD-&gt;c1b76ea4-62d1-49ac-9e72-1877df70a593
2020-11-04 12:54:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201104 12:54:49.484" starttime="20201104 12:54:49.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:49.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:49.484" starttime="20201104 12:54:49.484"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:49.484" starttime="20201104 12:54:43.621"></status>
</kw>
<msg timestamp="20201104 12:54:49.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:49.485" starttime="20201104 12:54:43.620"></status>
</kw>
<msg timestamp="20201104 12:54:49.485" level="INFO">${result} = 2020-11-04 12:54:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:54:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 ...</msg>
<status status="PASS" endtime="20201104 12:54:49.485" starttime="20201104 12:54:43.620"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:49.490" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:51.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:51.308" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-04 12:54 o3fs://bucket1.volume1.om/ozone-56944
dr...</msg>
<status status="PASS" endtime="20201104 12:54:51.308" starttime="20201104 12:54:49.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:51.309" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-04 12:54 o3fs://bucket1.volume1.om/ozone-56944
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 12:54:51.309" starttime="20201104 12:54:51.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:51.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:51.310" starttime="20201104 12:54:51.309"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:51.310" starttime="20201104 12:54:49.487"></status>
</kw>
<msg timestamp="20201104 12:54:51.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:51.310" starttime="20201104 12:54:49.486"></status>
</kw>
<msg timestamp="20201104 12:54:51.310" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-04 12:54 o3fs://bucket1.volume1.om/ozone-56944
dr...</msg>
<status status="PASS" endtime="20201104 12:54:51.310" starttime="20201104 12:54:49.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201104 12:54:51.311" starttime="20201104 12:54:51.311"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 12:54:51.311" critical="yes" starttime="20201104 12:54:43.612"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201104 12:54:51.312" starttime="20201104 12:54:43.533"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:56:28.494" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:56:28.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:56:28.499" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:56:28.499" starttime="20201104 12:56:28.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:56:28.500" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:56:28.500" starttime="20201104 12:56:28.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:56:28.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:56:28.501" starttime="20201104 12:56:28.500"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:28.501" starttime="20201104 12:56:28.490"></status>
</kw>
<msg timestamp="20201104 12:56:28.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:56:28.502" starttime="20201104 12:56:28.490"></status>
</kw>
<msg timestamp="20201104 12:56:28.502" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:56:28.502" starttime="20201104 12:56:28.489"></status>
</kw>
<msg timestamp="20201104 12:56:28.502" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:56:28.502" starttime="20201104 12:56:28.489"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 12:56:28.507" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 12:56:28.507" starttime="20201104 12:56:28.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:56:28.507" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 12:56:28.507" starttime="20201104 12:56:28.507"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:28.508" starttime="20201104 12:56:28.505"></status>
</kw>
<msg timestamp="20201104 12:56:28.508" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 12:56:28.508" starttime="20201104 12:56:28.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 12:56:28.509" starttime="20201104 12:56:28.509"></status>
</kw>
<msg timestamp="20201104 12:56:28.509" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 12:56:28.509" starttime="20201104 12:56:28.508"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:28.509" starttime="20201104 12:56:28.504"></status>
</kw>
<msg timestamp="20201104 12:56:28.510" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 12:56:28.510" starttime="20201104 12:56:28.503"></status>
</kw>
<msg timestamp="20201104 12:56:28.510" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 12:56:28.510" starttime="20201104 12:56:28.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:56:28.514" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:57:07.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:57:07.138" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:56:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:56:30 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201104 12:57:07.138" starttime="20201104 12:56:28.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:57:07.139" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:56:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:56:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 12:56:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-04 12:56:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:56:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6D8DE5466A20-&gt;c1b76ea4-62d1-49ac-9e72-1877df70a593
2020-11-04 12:56:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-04 12:56:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:56:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 12:56:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-04 12:56:32 INFO  JobSubmitter:198 - number of splits:3
2020-11-04 12:56:34 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604494417174_0003
2020-11-04 12:56:35 INFO  YarnClientImpl:273 - Submitted application application_1604494417174_0003
2020-11-04 12:56:35 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604494417174_0003/
2020-11-04 12:56:35 INFO  Job:1339 - Running job: job_1604494417174_0003
2020-11-04 12:56:42 INFO  Job:1360 - Job job_1604494417174_0003 running in uber mode : false
2020-11-04 12:56:42 INFO  Job:1367 -  map 0% reduce 0%
2020-11-04 12:56:49 INFO  Job:1367 -  map 33% reduce 0%
2020-11-04 12:56:53 INFO  Job:1367 -  map 67% reduce 0%
2020-11-04 12:56:58 INFO  Job:1367 -  map 100% reduce 0%
2020-11-04 12:57:03 INFO  Job:1367 -  map 100% reduce 100%
2020-11-04 12:57:06 INFO  Job:1378 - Job job_1604494417174_0003 completed successfully
2020-11-04 12:57:06 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38280
		Total time spent by all reduces in occupied slots (ms)=14504
		Total time spent by all map tasks (ms)=9570
		Total time spent by all reduce tasks (ms)=3626
		Total vcore-milliseconds taken by all map tasks=9570
		Total vcore-milliseconds taken by all reduce tasks=3626
		Total megabyte-milliseconds taken by all map tasks=39198720
		Total megabyte-milliseconds taken by all reduce tasks=14852096
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=595
		CPU time spent (ms)=6950
		Physical memory (bytes) snapshot=1153720320
		Virtual memory (bytes) snapshot=15778521088
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.981 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201104 12:57:07.139" starttime="20201104 12:57:07.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:57:07.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:57:07.140" starttime="20201104 12:57:07.139"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.140" starttime="20201104 12:56:28.511"></status>
</kw>
<msg timestamp="20201104 12:57:07.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:57:07.140" starttime="20201104 12:56:28.511"></status>
</kw>
<msg timestamp="20201104 12:57:07.141" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:56:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:56:30 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201104 12:57:07.141" starttime="20201104 12:56:28.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 12:57:07.141" starttime="20201104 12:57:07.141"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 12:57:07.142" critical="yes" starttime="20201104 12:56:28.488"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:57:07.147" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:57:07.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:57:07.153" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:57:07.153" starttime="20201104 12:57:07.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:57:07.154" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:57:07.154" starttime="20201104 12:57:07.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:57:07.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:57:07.155" starttime="20201104 12:57:07.154"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.155" starttime="20201104 12:57:07.145"></status>
</kw>
<msg timestamp="20201104 12:57:07.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:57:07.155" starttime="20201104 12:57:07.144"></status>
</kw>
<msg timestamp="20201104 12:57:07.155" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:57:07.155" starttime="20201104 12:57:07.144"></status>
</kw>
<msg timestamp="20201104 12:57:07.156" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:57:07.156" starttime="20201104 12:57:07.144"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 12:57:07.156" level="INFO">${random} = 16</msg>
<status status="PASS" endtime="20201104 12:57:07.156" starttime="20201104 12:57:07.156"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 12:57:07.160" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 12:57:07.160" starttime="20201104 12:57:07.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:57:07.161" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 12:57:07.161" starttime="20201104 12:57:07.160"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.161" starttime="20201104 12:57:07.159"></status>
</kw>
<msg timestamp="20201104 12:57:07.161" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 12:57:07.161" starttime="20201104 12:57:07.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 12:57:07.162" starttime="20201104 12:57:07.162"></status>
</kw>
<msg timestamp="20201104 12:57:07.162" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 12:57:07.162" starttime="20201104 12:57:07.161"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.162" starttime="20201104 12:57:07.158"></status>
</kw>
<msg timestamp="20201104 12:57:07.163" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 12:57:07.163" starttime="20201104 12:57:07.157"></status>
</kw>
<msg timestamp="20201104 12:57:07.163" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 12:57:07.163" starttime="20201104 12:57:07.156"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 12:57:07.166" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 12:57:07.166" starttime="20201104 12:57:07.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:57:07.166" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 12:57:07.166" starttime="20201104 12:57:07.166"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.167" starttime="20201104 12:57:07.165"></status>
</kw>
<msg timestamp="20201104 12:57:07.167" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 12:57:07.167" starttime="20201104 12:57:07.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:57:07.168" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201104 12:57:07.168" starttime="20201104 12:57:07.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:57:07.169" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201104 12:57:07.169" starttime="20201104 12:57:07.168"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.169" starttime="20201104 12:57:07.167"></status>
</kw>
<msg timestamp="20201104 12:57:07.169" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201104 12:57:07.169" starttime="20201104 12:57:07.167"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.170" starttime="20201104 12:57:07.164"></status>
</kw>
<msg timestamp="20201104 12:57:07.170" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201104 12:57:07.170" starttime="20201104 12:57:07.163"></status>
</kw>
<msg timestamp="20201104 12:57:07.170" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201104 12:57:07.170" starttime="20201104 12:57:07.163"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 12:57:07.173" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 12:57:07.173" starttime="20201104 12:57:07.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:57:07.174" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 12:57:07.174" starttime="20201104 12:57:07.173"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.174" starttime="20201104 12:57:07.172"></status>
</kw>
<msg timestamp="20201104 12:57:07.174" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 12:57:07.174" starttime="20201104 12:57:07.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:57:07.175" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201104 12:57:07.175" starttime="20201104 12:57:07.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:57:07.176" level="INFO">${result} = /wordcount-16.txt</msg>
<status status="PASS" endtime="20201104 12:57:07.176" starttime="20201104 12:57:07.176"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.176" starttime="20201104 12:57:07.175"></status>
</kw>
<msg timestamp="20201104 12:57:07.176" level="INFO">${path_with_leading} = /wordcount-16.txt</msg>
<status status="PASS" endtime="20201104 12:57:07.176" starttime="20201104 12:57:07.174"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:07.177" starttime="20201104 12:57:07.171"></status>
</kw>
<msg timestamp="20201104 12:57:07.177" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-16.txt</msg>
<status status="PASS" endtime="20201104 12:57:07.177" starttime="20201104 12:57:07.171"></status>
</kw>
<msg timestamp="20201104 12:57:07.177" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-16.txt</msg>
<status status="PASS" endtime="20201104 12:57:07.177" starttime="20201104 12:57:07.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:57:07.181" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-16.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:57:41.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:57:41.106" level="INFO">${output} = 2020-11-04 12:57:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:57:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201104 12:57:41.106" starttime="20201104 12:57:07.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:57:41.107" level="INFO">2020-11-04 12:57:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:57:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 12:57:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:57:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 12:57:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-04 12:57:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:57:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DCF56B55F6E4-&gt;c1b76ea4-62d1-49ac-9e72-1877df70a593
2020-11-04 12:57:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 12:57:10 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-04 12:57:10 INFO  JobSubmitter:198 - number of splits:3
2020-11-04 12:57:10 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604494417174_0004
2020-11-04 12:57:11 INFO  YarnClientImpl:273 - Submitted application application_1604494417174_0004
2020-11-04 12:57:11 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604494417174_0004/
2020-11-04 12:57:11 INFO  Job:1339 - Running job: job_1604494417174_0004
2020-11-04 12:57:19 INFO  Job:1360 - Job job_1604494417174_0004 running in uber mode : false
2020-11-04 12:57:19 INFO  Job:1367 -  map 0% reduce 0%
2020-11-04 12:57:25 INFO  Job:1367 -  map 33% reduce 0%
2020-11-04 12:57:30 INFO  Job:1367 -  map 67% reduce 0%
2020-11-04 12:57:35 INFO  Job:1367 -  map 100% reduce 0%
2020-11-04 12:57:40 INFO  Job:1367 -  map 100% reduce 100%
2020-11-04 12:57:40 INFO  Job:1378 - Job job_1604494417174_0004 completed successfully
2020-11-04 12:57:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39732
		Total time spent by all reduces in occupied slots (ms)=14816
		Total time spent by all map tasks (ms)=9933
		Total time spent by all reduce tasks (ms)=3704
		Total vcore-milliseconds taken by all map tasks=9933
		Total vcore-milliseconds taken by all reduce tasks=3704
		Total megabyte-milliseconds taken by all map tasks=40685568
		Total megabyte-milliseconds taken by all reduce tasks=15171584
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=623
		CPU time spent (ms)=7280
		Physical memory (bytes) snapshot=1144582144
		Virtual memory (bytes) snapshot=15786569728
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201104 12:57:41.108" starttime="20201104 12:57:41.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:57:41.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:57:41.108" starttime="20201104 12:57:41.108"></status>
</kw>
<status status="PASS" endtime="20201104 12:57:41.109" starttime="20201104 12:57:07.178"></status>
</kw>
<msg timestamp="20201104 12:57:41.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:57:41.109" starttime="20201104 12:57:07.178"></status>
</kw>
<msg timestamp="20201104 12:57:41.109" level="INFO">${output} = 2020-11-04 12:57:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:57:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201104 12:57:41.110" starttime="20201104 12:57:07.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201104 12:57:41.110" starttime="20201104 12:57:41.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 12:57:41.111" starttime="20201104 12:57:41.110"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 12:57:41.111" critical="yes" starttime="20201104 12:57:07.143"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201104 12:57:41.112" starttime="20201104 12:56:28.435"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:56.153" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:54:56.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:54:56.157" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:54:56.157" starttime="20201104 12:54:56.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:54:56.158" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:54:56.158" starttime="20201104 12:54:56.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:54:56.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:54:56.159" starttime="20201104 12:54:56.158"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:56.159" starttime="20201104 12:54:56.147"></status>
</kw>
<msg timestamp="20201104 12:54:56.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:54:56.159" starttime="20201104 12:54:56.147"></status>
</kw>
<msg timestamp="20201104 12:54:56.160" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:54:56.160" starttime="20201104 12:54:56.146"></status>
</kw>
<msg timestamp="20201104 12:54:56.160" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:54:56.160" starttime="20201104 12:54:56.146"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:54:56.165" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:54:56.165" starttime="20201104 12:54:56.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:54:56.166" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:54:56.166" starttime="20201104 12:54:56.166"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:56.166" starttime="20201104 12:54:56.163"></status>
</kw>
<msg timestamp="20201104 12:54:56.166" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:54:56.167" starttime="20201104 12:54:56.162"></status>
</kw>
<status status="PASS" endtime="20201104 12:54:56.167" starttime="20201104 12:54:56.162"></status>
</kw>
<msg timestamp="20201104 12:54:56.167" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:54:56.167" starttime="20201104 12:54:56.161"></status>
</kw>
<msg timestamp="20201104 12:54:56.168" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:54:56.168" starttime="20201104 12:54:56.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:54:56.171" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:55:35.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:55:35.217" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:54:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:54:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201104 12:55:35.217" starttime="20201104 12:54:56.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:55:35.218" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:54:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:54:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 12:54:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-04 12:54:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:54:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E126434C7B1A-&gt;c1b76ea4-62d1-49ac-9e72-1877df70a593
2020-11-04 12:54:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-04 12:54:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:55:02 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-04 12:55:02 INFO  JobSubmitter:198 - number of splits:3
2020-11-04 12:55:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604494417174_0001
2020-11-04 12:55:03 INFO  YarnClientImpl:273 - Submitted application application_1604494417174_0001
2020-11-04 12:55:03 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604494417174_0001/
2020-11-04 12:55:03 INFO  Job:1339 - Running job: job_1604494417174_0001
2020-11-04 12:55:12 INFO  Job:1360 - Job job_1604494417174_0001 running in uber mode : false
2020-11-04 12:55:12 INFO  Job:1367 -  map 0% reduce 0%
2020-11-04 12:55:19 INFO  Job:1367 -  map 33% reduce 0%
2020-11-04 12:55:23 INFO  Job:1367 -  map 67% reduce 0%
2020-11-04 12:55:28 INFO  Job:1367 -  map 100% reduce 0%
2020-11-04 12:55:33 INFO  Job:1367 -  map 100% reduce 100%
2020-11-04 12:55:34 INFO  Job:1378 - Job job_1604494417174_0001 completed successfully
2020-11-04 12:55:34 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38888
		Total time spent by all reduces in occupied slots (ms)=14196
		Total time spent by all map tasks (ms)=9722
		Total time spent by all reduce tasks (ms)=3549
		Total vcore-milliseconds taken by all map tasks=9722
		Total vcore-milliseconds taken by all reduce tasks=3549
		Total megabyte-milliseconds taken by all map tasks=39821312
		Total megabyte-milliseconds taken by all reduce tasks=14536704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=6980
		Physical memory (bytes) snapshot=1178066944
		Virtual memory (bytes) snapshot=15800897536
		Total committed heap usage (bytes)=1045954560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.215 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201104 12:55:35.218" starttime="20201104 12:55:35.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:55:35.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:55:35.219" starttime="20201104 12:55:35.219"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.219" starttime="20201104 12:54:56.169"></status>
</kw>
<msg timestamp="20201104 12:55:35.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:55:35.220" starttime="20201104 12:54:56.168"></status>
</kw>
<msg timestamp="20201104 12:55:35.220" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:54:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:54:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201104 12:55:35.220" starttime="20201104 12:54:56.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 12:55:35.221" starttime="20201104 12:55:35.220"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 12:55:35.221" critical="yes" starttime="20201104 12:54:56.145"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:55:35.226" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:55:35.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:55:35.232" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:55:35.232" starttime="20201104 12:55:35.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:55:35.233" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:55:35.233" starttime="20201104 12:55:35.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:55:35.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:55:35.234" starttime="20201104 12:55:35.233"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.234" starttime="20201104 12:55:35.223"></status>
</kw>
<msg timestamp="20201104 12:55:35.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:55:35.234" starttime="20201104 12:55:35.223"></status>
</kw>
<msg timestamp="20201104 12:55:35.234" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:55:35.234" starttime="20201104 12:55:35.223"></status>
</kw>
<msg timestamp="20201104 12:55:35.235" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201104 12:55:35.235" starttime="20201104 12:55:35.222"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 12:55:35.235" level="INFO">${random} = 95</msg>
<status status="PASS" endtime="20201104 12:55:35.235" starttime="20201104 12:55:35.235"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:55:35.239" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:55:35.239" starttime="20201104 12:55:35.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:55:35.240" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:55:35.240" starttime="20201104 12:55:35.239"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.240" starttime="20201104 12:55:35.238"></status>
</kw>
<msg timestamp="20201104 12:55:35.240" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:55:35.240" starttime="20201104 12:55:35.237"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.240" starttime="20201104 12:55:35.237"></status>
</kw>
<msg timestamp="20201104 12:55:35.240" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:55:35.240" starttime="20201104 12:55:35.236"></status>
</kw>
<msg timestamp="20201104 12:55:35.241" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:55:35.241" starttime="20201104 12:55:35.235"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:55:35.244" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:55:35.244" starttime="20201104 12:55:35.243"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:55:35.244" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:55:35.244" starttime="20201104 12:55:35.244"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.245" starttime="20201104 12:55:35.243"></status>
</kw>
<msg timestamp="20201104 12:55:35.245" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:55:35.245" starttime="20201104 12:55:35.243"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.245" starttime="20201104 12:55:35.242"></status>
</kw>
<msg timestamp="20201104 12:55:35.245" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201104 12:55:35.245" starttime="20201104 12:55:35.241"></status>
</kw>
<msg timestamp="20201104 12:55:35.245" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201104 12:55:35.245" starttime="20201104 12:55:35.241"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:55:35.249" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:55:35.249" starttime="20201104 12:55:35.248"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:55:35.249" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:55:35.249" starttime="20201104 12:55:35.249"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.249" starttime="20201104 12:55:35.248"></status>
</kw>
<msg timestamp="20201104 12:55:35.250" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:55:35.250" starttime="20201104 12:55:35.247"></status>
</kw>
<status status="PASS" endtime="20201104 12:55:35.250" starttime="20201104 12:55:35.247"></status>
</kw>
<msg timestamp="20201104 12:55:35.250" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201104 12:55:35.250" starttime="20201104 12:55:35.246"></status>
</kw>
<msg timestamp="20201104 12:55:35.250" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201104 12:55:35.250" starttime="20201104 12:55:35.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:55:35.254" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-95.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:56:13.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:56:13.461" level="INFO">${output} = 2020-11-04 12:55:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:55:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201104 12:56:13.461" starttime="20201104 12:55:35.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:56:13.462" level="INFO">2020-11-04 12:55:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:55:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 12:55:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:55:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-04 12:55:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-04 12:55:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:55:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-99CA90B2037C-&gt;c1b76ea4-62d1-49ac-9e72-1877df70a593
2020-11-04 12:55:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 12:55:38 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-04 12:55:38 INFO  JobSubmitter:198 - number of splits:3
2020-11-04 12:55:41 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604494417174_0002
2020-11-04 12:55:41 INFO  YarnClientImpl:273 - Submitted application application_1604494417174_0002
2020-11-04 12:55:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604494417174_0002/
2020-11-04 12:55:41 INFO  Job:1339 - Running job: job_1604494417174_0002
2020-11-04 12:55:48 INFO  Job:1360 - Job job_1604494417174_0002 running in uber mode : false
2020-11-04 12:55:48 INFO  Job:1367 -  map 0% reduce 0%
2020-11-04 12:55:54 INFO  Job:1367 -  map 33% reduce 0%
2020-11-04 12:55:59 INFO  Job:1367 -  map 67% reduce 0%
2020-11-04 12:56:04 INFO  Job:1367 -  map 100% reduce 0%
2020-11-04 12:56:09 INFO  Job:1367 -  map 100% reduce 100%
2020-11-04 12:56:12 INFO  Job:1378 - Job job_1604494417174_0002 completed successfully
2020-11-04 12:56:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39864
		Total time spent by all reduces in occupied slots (ms)=14832
		Total time spent by all map tasks (ms)=9966
		Total time spent by all reduce tasks (ms)=3708
		Total vcore-milliseconds taken by all map tasks=9966
		Total vcore-milliseconds taken by all reduce tasks=3708
		Total megabyte-milliseconds taken by all map tasks=40820736
		Total megabyte-milliseconds taken by all reduce tasks=15187968
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=7360
		Physical memory (bytes) snapshot=1167056896
		Virtual memory (bytes) snapshot=15791808512
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201104 12:56:13.463" starttime="20201104 12:56:13.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:56:13.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:56:13.464" starttime="20201104 12:56:13.463"></status>
</kw>
<status status="PASS" endtime="20201104 12:56:13.464" starttime="20201104 12:55:35.251"></status>
</kw>
<msg timestamp="20201104 12:56:13.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:56:13.464" starttime="20201104 12:55:35.251"></status>
</kw>
<msg timestamp="20201104 12:56:13.464" level="INFO">${output} = 2020-11-04 12:55:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-04 12:55:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201104 12:56:13.464" starttime="20201104 12:55:35.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201104 12:56:13.465" starttime="20201104 12:56:13.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 12:56:13.466" starttime="20201104 12:56:13.465"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 12:56:13.466" critical="yes" starttime="20201104 12:55:35.221"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201104 12:56:13.467" starttime="20201104 12:54:56.094"></status>
</suite>
<status status="PASS" elapsedtime="193290" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:58:47.056" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:58:49.363" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 12:58:49.363" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 12:58:49.363" starttime="20201104 12:58:47.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:58:49.364" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 12:58:49.364" starttime="20201104 12:58:49.363"></status>
</kw>
<msg timestamp="20201104 12:58:49.364" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 12:58:49.364" starttime="20201104 12:58:47.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:58:49.371" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:58:51.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:58:51.485" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:58:51.485" starttime="20201104 12:58:49.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:58:51.486" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:58:51.486" starttime="20201104 12:58:51.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:58:51.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:58:51.487" starttime="20201104 12:58:51.486"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:51.487" starttime="20201104 12:58:49.366"></status>
</kw>
<msg timestamp="20201104 12:58:51.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:58:51.488" starttime="20201104 12:58:49.366"></status>
</kw>
<msg timestamp="20201104 12:58:51.488" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 12:58:51.488" starttime="20201104 12:58:49.366"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 12:58:51.488" starttime="20201104 12:58:51.488"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:51.489" starttime="20201104 12:58:49.365"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:51.489" starttime="20201104 12:58:49.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:58:51.494" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:58:53.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:58:53.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:58:53.616" starttime="20201104 12:58:51.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:58:53.617" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:58:53.617" starttime="20201104 12:58:53.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:58:53.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:58:53.618" starttime="20201104 12:58:53.617"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:53.618" starttime="20201104 12:58:51.490"></status>
</kw>
<msg timestamp="20201104 12:58:53.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:58:53.618" starttime="20201104 12:58:51.490"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:53.619" starttime="20201104 12:58:51.490"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:53.619" starttime="20201104 12:58:51.489"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:53.619" starttime="20201104 12:58:51.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201104 12:58:53.619" starttime="20201104 12:58:53.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:58:53.624" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:58:55.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:58:55.809" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T12:58:53.479Z",
  "modificat...</msg>
<status status="PASS" endtime="20201104 12:58:55.809" starttime="20201104 12:58:53.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:58:55.810" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T12:58:53.479Z",
  "modificationTime" : "2020-11-04T12:58:53.479Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 12:58:55.810" starttime="20201104 12:58:55.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:58:55.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:58:55.810" starttime="20201104 12:58:55.810"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:55.811" starttime="20201104 12:58:53.621"></status>
</kw>
<msg timestamp="20201104 12:58:55.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:58:55.811" starttime="20201104 12:58:53.620"></status>
</kw>
<msg timestamp="20201104 12:58:55.811" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T12:58:53.479Z",
  "modificat...</msg>
<status status="PASS" endtime="20201104 12:58:55.811" starttime="20201104 12:58:53.620"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201104 12:58:55.812" starttime="20201104 12:58:55.811"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:58:55.815" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:58:55.816" starttime="20201104 12:58:55.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:58:55.816" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:58:55.816" starttime="20201104 12:58:55.816"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:55.816" starttime="20201104 12:58:55.815"></status>
</kw>
<msg timestamp="20201104 12:58:55.816" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:58:55.816" starttime="20201104 12:58:55.814"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:55.817" starttime="20201104 12:58:55.813"></status>
</kw>
<msg timestamp="20201104 12:58:55.817" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201104 12:58:55.817" starttime="20201104 12:58:55.813"></status>
</kw>
<msg timestamp="20201104 12:58:55.817" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201104 12:58:55.817" starttime="20201104 12:58:55.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:58:55.822" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:58:57.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:58:57.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:58:57.931" starttime="20201104 12:58:55.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:58:57.932" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:58:57.932" starttime="20201104 12:58:57.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:58:57.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:58:57.933" starttime="20201104 12:58:57.932"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:57.933" starttime="20201104 12:58:55.818"></status>
</kw>
<msg timestamp="20201104 12:58:57.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:58:57.933" starttime="20201104 12:58:55.818"></status>
</kw>
<status status="PASS" endtime="20201104 12:58:57.933" starttime="20201104 12:58:55.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:58:57.937" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:03.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:03.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:59:03.103" starttime="20201104 12:58:57.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:03.105" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:59:03.105" starttime="20201104 12:59:03.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:03.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:03.106" starttime="20201104 12:59:03.105"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:03.106" starttime="20201104 12:58:57.935"></status>
</kw>
<msg timestamp="20201104 12:59:03.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:03.106" starttime="20201104 12:58:57.934"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:03.107" starttime="20201104 12:58:57.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:03.111" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:07.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:07.152" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:59:07.152" starttime="20201104 12:59:03.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:07.153" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:59:07.153" starttime="20201104 12:59:07.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:07.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:07.153" starttime="20201104 12:59:07.153"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:07.154" starttime="20201104 12:59:03.108"></status>
</kw>
<msg timestamp="20201104 12:59:07.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:07.154" starttime="20201104 12:59:03.108"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:07.154" starttime="20201104 12:59:03.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:07.159" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:11.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:11.154" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:59:11.154" starttime="20201104 12:59:07.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:11.155" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:59:11.155" starttime="20201104 12:59:11.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:11.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:11.156" starttime="20201104 12:59:11.156"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:11.156" starttime="20201104 12:59:07.155"></status>
</kw>
<msg timestamp="20201104 12:59:11.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:11.157" starttime="20201104 12:59:07.155"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:11.157" starttime="20201104 12:59:07.154"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 12:59:11.157" critical="yes" starttime="20201104 12:58:47.050"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:59:11.163" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:59:11.163" starttime="20201104 12:59:11.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:59:11.163" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:59:11.163" starttime="20201104 12:59:11.163"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:11.163" starttime="20201104 12:59:11.162"></status>
</kw>
<msg timestamp="20201104 12:59:11.164" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:59:11.164" starttime="20201104 12:59:11.161"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:11.164" starttime="20201104 12:59:11.160"></status>
</kw>
<msg timestamp="20201104 12:59:11.164" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 12:59:11.164" starttime="20201104 12:59:11.160"></status>
</kw>
<msg timestamp="20201104 12:59:11.164" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 12:59:11.164" starttime="20201104 12:59:11.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:11.168" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:13.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:13.294" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:59:13.294" starttime="20201104 12:59:11.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:13.295" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:59:13.295" starttime="20201104 12:59:13.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:13.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:13.296" starttime="20201104 12:59:13.296"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:13.296" starttime="20201104 12:59:11.165"></status>
</kw>
<msg timestamp="20201104 12:59:13.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:13.297" starttime="20201104 12:59:11.165"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:13.297" starttime="20201104 12:59:11.164"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:13.300" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:15.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:15.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 12:59:15.500" starttime="20201104 12:59:13.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:15.501" level="INFO"></msg>
<status status="PASS" endtime="20201104 12:59:15.501" starttime="20201104 12:59:15.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:15.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:15.502" starttime="20201104 12:59:15.501"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:15.502" starttime="20201104 12:59:13.298"></status>
</kw>
<msg timestamp="20201104 12:59:15.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:15.502" starttime="20201104 12:59:13.298"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:15.502" starttime="20201104 12:59:13.297"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 12:59:15.503" critical="yes" starttime="20201104 12:59:11.158"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201104 12:59:15.504" starttime="20201104 12:58:46.994"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:00:55.096" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:00:55.096" starttime="20201104 13:00:55.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:00:55.096" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:00:55.096" starttime="20201104 13:00:55.096"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:55.097" starttime="20201104 13:00:55.095"></status>
</kw>
<msg timestamp="20201104 13:00:55.097" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:00:55.097" starttime="20201104 13:00:55.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:00:55.098" starttime="20201104 13:00:55.097"></status>
</kw>
<msg timestamp="20201104 13:00:55.098" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 13:00:55.098" starttime="20201104 13:00:55.097"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:55.098" starttime="20201104 13:00:55.094"></status>
</kw>
<msg timestamp="20201104 13:00:55.098" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:00:55.098" starttime="20201104 13:00:55.093"></status>
</kw>
<msg timestamp="20201104 13:00:55.098" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:00:55.098" starttime="20201104 13:00:55.092"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:00:55.099" level="INFO">${random} = 81874</msg>
<status status="PASS" endtime="20201104 13:00:55.099" starttime="20201104 13:00:55.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:00:55.105" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-81874 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:00:58.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:00:58.547" level="INFO">${output} = 2020-11-04 13:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:00:58.547" starttime="20201104 13:00:55.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:00:58.548" level="INFO">2020-11-04 13:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-04 13:00:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-04 13:00:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:00:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:00:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:00:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E895AD6E8439-&gt;1100939e-4f37-44b8-87ee-955aaf2e69d0
2020-11-04 13:00:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:00:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 13:00:58.549" starttime="20201104 13:00:58.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:00:58.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:00:58.549" starttime="20201104 13:00:58.549"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:58.550" starttime="20201104 13:00:55.100"></status>
</kw>
<msg timestamp="20201104 13:00:58.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:00:58.550" starttime="20201104 13:00:55.100"></status>
</kw>
<msg timestamp="20201104 13:00:58.551" level="INFO">${result} = 2020-11-04 13:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:00:58.551" starttime="20201104 13:00:55.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:00:58.556" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:01:00.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:01:00.412" level="INFO">${output} = 2020-11-04 13:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:01:00.412" starttime="20201104 13:00:58.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:01:00.413" level="INFO">2020-11-04 13:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:00 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-04 13:00 ofs://om/volume1/bucket1/ozone-81874
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-04 12:59 ofs://om/volume1/bucket1/ozone-90029
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:00 ofs://om/volume1/bucket1/wordcount-88.txt
2020-11-04 13:01:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 13:01:00.414" starttime="20201104 13:01:00.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:01:00.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:01:00.414" starttime="20201104 13:01:00.414"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:00.415" starttime="20201104 13:00:58.553"></status>
</kw>
<msg timestamp="20201104 13:01:00.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:01:00.415" starttime="20201104 13:00:58.553"></status>
</kw>
<msg timestamp="20201104 13:01:00.415" level="INFO">${result} = 2020-11-04 13:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:01:00.415" starttime="20201104 13:00:58.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:01:00.416" starttime="20201104 13:01:00.415"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:01:00.416" critical="yes" starttime="20201104 13:00:55.091"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201104 13:01:00.417" starttime="20201104 13:00:55.039"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:59:20.406" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:59:20.406" starttime="20201104 12:59:20.406"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:59:20.407" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:59:20.407" starttime="20201104 12:59:20.406"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:20.407" starttime="20201104 12:59:20.405"></status>
</kw>
<msg timestamp="20201104 12:59:20.407" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:59:20.407" starttime="20201104 12:59:20.405"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:20.407" starttime="20201104 12:59:20.404"></status>
</kw>
<msg timestamp="20201104 12:59:20.407" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:59:20.407" starttime="20201104 12:59:20.403"></status>
</kw>
<msg timestamp="20201104 12:59:20.408" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:59:20.408" starttime="20201104 12:59:20.402"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 12:59:20.408" level="INFO">${random} = 90029</msg>
<status status="PASS" endtime="20201104 12:59:20.408" starttime="20201104 12:59:20.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:20.413" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-90029 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:24.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:24.080" level="INFO">${output} = 2020-11-04 12:59:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 12:59:24.080" starttime="20201104 12:59:20.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:24.081" level="INFO">2020-11-04 12:59:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:22 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-04 12:59:22 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:59:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 12:59:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 12:59:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:59:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DFFB65F55F97-&gt;1100939e-4f37-44b8-87ee-955aaf2e69d0
2020-11-04 12:59:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 12:59:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 12:59:24.081" starttime="20201104 12:59:24.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:24.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:24.082" starttime="20201104 12:59:24.081"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:24.082" starttime="20201104 12:59:20.409"></status>
</kw>
<msg timestamp="20201104 12:59:24.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:24.082" starttime="20201104 12:59:20.409"></status>
</kw>
<msg timestamp="20201104 12:59:24.082" level="INFO">${result} = 2020-11-04 12:59:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 12:59:24.083" starttime="20201104 12:59:20.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:24.088" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:25.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:25.853" level="INFO">${output} = 2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 12:59:25.853" starttime="20201104 12:59:24.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:25.854" level="INFO">2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-04 12:59 o3fs://bucket1.volume1.om/ozone-90029
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 12:59 o3fs://bucket1.volume1.om/user
2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 12:59:25.854" starttime="20201104 12:59:25.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:25.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:25.855" starttime="20201104 12:59:25.854"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:25.855" starttime="20201104 12:59:24.085"></status>
</kw>
<msg timestamp="20201104 12:59:25.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:25.855" starttime="20201104 12:59:24.083"></status>
</kw>
<msg timestamp="20201104 12:59:25.855" level="INFO">${result} = 2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 12:59:25.855" starttime="20201104 12:59:24.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201104 12:59:25.856" starttime="20201104 12:59:25.856"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 12:59:25.856" critical="yes" starttime="20201104 12:59:20.402"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201104 12:59:25.857" starttime="20201104 12:59:20.349"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:01:05.307" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:01:05.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:01:05.313" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:05.313" starttime="20201104 13:01:05.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:01:05.314" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:05.314" starttime="20201104 13:01:05.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:01:05.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:01:05.315" starttime="20201104 13:01:05.315"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:05.315" starttime="20201104 13:01:05.302"></status>
</kw>
<msg timestamp="20201104 13:01:05.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:01:05.316" starttime="20201104 13:01:05.302"></status>
</kw>
<msg timestamp="20201104 13:01:05.316" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:05.316" starttime="20201104 13:01:05.301"></status>
</kw>
<msg timestamp="20201104 13:01:05.316" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:05.316" starttime="20201104 13:01:05.301"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:01:05.321" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:01:05.321" starttime="20201104 13:01:05.320"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:01:05.321" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:01:05.322" starttime="20201104 13:01:05.321"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:05.322" starttime="20201104 13:01:05.319"></status>
</kw>
<msg timestamp="20201104 13:01:05.322" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:01:05.322" starttime="20201104 13:01:05.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:01:05.323" starttime="20201104 13:01:05.322"></status>
</kw>
<msg timestamp="20201104 13:01:05.323" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 13:01:05.323" starttime="20201104 13:01:05.322"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:05.323" starttime="20201104 13:01:05.318"></status>
</kw>
<msg timestamp="20201104 13:01:05.323" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:01:05.323" starttime="20201104 13:01:05.317"></status>
</kw>
<msg timestamp="20201104 13:01:05.324" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:01:05.324" starttime="20201104 13:01:05.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:01:05.329" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:01:46.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:01:46.268" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01...</msg>
<status status="PASS" endtime="20201104 13:01:46.268" starttime="20201104 13:01:05.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:01:46.269" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-04 13:01:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-04 13:01:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:01:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:01:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:01:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5C9B1227706D-&gt;1100939e-4f37-44b8-87ee-955aaf2e69d0
2020-11-04 13:01:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-04 13:01:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-04 13:01:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 13:01:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 13:01:11 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 13:01:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494704402_0003
2020-11-04 13:01:11 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 13:01:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:12 INFO  Configuration:2752 - resource-types.xml not found
2020-11-04 13:01:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-04 13:01:12 INFO  YarnClientImpl:324 - Submitted application application_1604494704402_0003
2020-11-04 13:01:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494704402_0003/
2020-11-04 13:01:12 INFO  Job:1619 - Running job: job_1604494704402_0003
2020-11-04 13:01:20 INFO  Job:1640 - Job job_1604494704402_0003 running in uber mode : false
2020-11-04 13:01:20 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 13:01:26 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 13:01:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:01:37 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:01:44 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:01:45 INFO  Job:1658 - Job job_1604494704402_0003 completed successfully
2020-11-04 13:01:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40252
		Total time spent by all reduces in occupied slots (ms)=25372
		Total time spent by all map tasks (ms)=10063
		Total time spent by all reduce tasks (ms)=6343
		Total vcore-milliseconds taken by all map tasks=10063
		Total vcore-milliseconds taken by all reduce tasks=6343
		Total megabyte-milliseconds taken by all map tasks=41218048
		Total megabyte-milliseconds taken by all reduce tasks=25980928
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=680
		CPU time spent (ms)=7090
		Physical memory (bytes) snapshot=1220931584
		Virtual memory (bytes) snapshot=15806709760
		Total committed heap usage (bytes)=1071120384
		Peak Map Physical memory (bytes)=313716736
		Peak Map Virtual memory (bytes)=3955494912
		Peak Reduce Physical memory (bytes)=301092864
		Peak Reduce Virtual memory (bytes)=3968933888
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.653 seconds
2020-11-04 13:01:45 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-04 13:01:45 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 13:01:46.270" starttime="20201104 13:01:46.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:01:46.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:01:46.270" starttime="20201104 13:01:46.270"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.271" starttime="20201104 13:01:05.325"></status>
</kw>
<msg timestamp="20201104 13:01:46.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:01:46.271" starttime="20201104 13:01:05.324"></status>
</kw>
<msg timestamp="20201104 13:01:46.272" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01...</msg>
<status status="PASS" endtime="20201104 13:01:46.272" starttime="20201104 13:01:05.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:01:46.272" starttime="20201104 13:01:46.272"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:01:46.272" critical="yes" starttime="20201104 13:01:05.300"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:01:46.278" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:01:46.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:01:46.285" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:46.285" starttime="20201104 13:01:46.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:01:46.286" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:46.286" starttime="20201104 13:01:46.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:01:46.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:01:46.287" starttime="20201104 13:01:46.286"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.287" starttime="20201104 13:01:46.276"></status>
</kw>
<msg timestamp="20201104 13:01:46.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:01:46.287" starttime="20201104 13:01:46.275"></status>
</kw>
<msg timestamp="20201104 13:01:46.287" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:46.287" starttime="20201104 13:01:46.275"></status>
</kw>
<msg timestamp="20201104 13:01:46.288" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:01:46.288" starttime="20201104 13:01:46.274"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:01:46.288" level="INFO">${random} = 53</msg>
<status status="PASS" endtime="20201104 13:01:46.288" starttime="20201104 13:01:46.288"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:01:46.293" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:01:46.293" starttime="20201104 13:01:46.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:01:46.294" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:01:46.294" starttime="20201104 13:01:46.293"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.294" starttime="20201104 13:01:46.292"></status>
</kw>
<msg timestamp="20201104 13:01:46.294" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:01:46.294" starttime="20201104 13:01:46.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:01:46.295" starttime="20201104 13:01:46.295"></status>
</kw>
<msg timestamp="20201104 13:01:46.295" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 13:01:46.295" starttime="20201104 13:01:46.294"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.296" starttime="20201104 13:01:46.290"></status>
</kw>
<msg timestamp="20201104 13:01:46.296" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:01:46.296" starttime="20201104 13:01:46.289"></status>
</kw>
<msg timestamp="20201104 13:01:46.296" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:01:46.296" starttime="20201104 13:01:46.289"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:01:46.300" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:01:46.300" starttime="20201104 13:01:46.299"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:01:46.300" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:01:46.300" starttime="20201104 13:01:46.300"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.301" starttime="20201104 13:01:46.299"></status>
</kw>
<msg timestamp="20201104 13:01:46.301" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:01:46.301" starttime="20201104 13:01:46.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:01:46.302" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201104 13:01:46.302" starttime="20201104 13:01:46.302"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:01:46.303" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201104 13:01:46.303" starttime="20201104 13:01:46.302"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.303" starttime="20201104 13:01:46.301"></status>
</kw>
<msg timestamp="20201104 13:01:46.303" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201104 13:01:46.303" starttime="20201104 13:01:46.301"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.303" starttime="20201104 13:01:46.297"></status>
</kw>
<msg timestamp="20201104 13:01:46.304" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201104 13:01:46.304" starttime="20201104 13:01:46.297"></status>
</kw>
<msg timestamp="20201104 13:01:46.304" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201104 13:01:46.304" starttime="20201104 13:01:46.296"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:01:46.308" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:01:46.308" starttime="20201104 13:01:46.307"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:01:46.308" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:01:46.308" starttime="20201104 13:01:46.308"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.309" starttime="20201104 13:01:46.307"></status>
</kw>
<msg timestamp="20201104 13:01:46.309" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:01:46.309" starttime="20201104 13:01:46.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:01:46.310" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201104 13:01:46.310" starttime="20201104 13:01:46.310"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:01:46.311" level="INFO">${result} = /wordcount-53.txt</msg>
<status status="PASS" endtime="20201104 13:01:46.311" starttime="20201104 13:01:46.311"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.311" starttime="20201104 13:01:46.309"></status>
</kw>
<msg timestamp="20201104 13:01:46.311" level="INFO">${path_with_leading} = /wordcount-53.txt</msg>
<status status="PASS" endtime="20201104 13:01:46.311" starttime="20201104 13:01:46.309"></status>
</kw>
<status status="PASS" endtime="20201104 13:01:46.312" starttime="20201104 13:01:46.305"></status>
</kw>
<msg timestamp="20201104 13:01:46.312" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-53.txt</msg>
<status status="PASS" endtime="20201104 13:01:46.312" starttime="20201104 13:01:46.305"></status>
</kw>
<msg timestamp="20201104 13:01:46.312" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-53.txt</msg>
<status status="PASS" endtime="20201104 13:01:46.312" starttime="20201104 13:01:46.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:01:46.317" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-53.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:02:23.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:02:23.103" level="INFO">${output} = 2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:02:23.103" starttime="20201104 13:01:46.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:02:23.104" level="INFO">2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-04 13:01:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 13:01:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:48 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-04 13:01:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-04 13:01:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:01:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:01:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:01:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-83A628855529-&gt;1100939e-4f37-44b8-87ee-955aaf2e69d0
2020-11-04 13:01:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:01:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 13:01:52 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 13:01:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494704402_0004
2020-11-04 13:01:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 13:01:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:53 INFO  Configuration:2752 - resource-types.xml not found
2020-11-04 13:01:53 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-04 13:01:53 INFO  YarnClientImpl:324 - Submitted application application_1604494704402_0004
2020-11-04 13:01:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494704402_0004/
2020-11-04 13:01:53 INFO  Job:1619 - Running job: job_1604494704402_0004
2020-11-04 13:02:00 INFO  Job:1640 - Job job_1604494704402_0004 running in uber mode : false
2020-11-04 13:02:00 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 13:02:07 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 13:02:12 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:02:17 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:02:22 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:02:22 INFO  Job:1658 - Job job_1604494704402_0004 completed successfully
2020-11-04 13:02:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:02:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40800
		Total time spent by all reduces in occupied slots (ms)=14364
		Total time spent by all map tasks (ms)=10200
		Total time spent by all reduce tasks (ms)=3591
		Total vcore-milliseconds taken by all map tasks=10200
		Total vcore-milliseconds taken by all reduce tasks=3591
		Total megabyte-milliseconds taken by all map tasks=41779200
		Total megabyte-milliseconds taken by all reduce tasks=14708736
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=674
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1221636096
		Virtual memory (bytes) snapshot=15814340608
		Total committed heap usage (bytes)=1032323072
		Peak Map Physical memory (bytes)=310386688
		Peak Map Virtual memory (bytes)=3951792128
		Peak Reduce Physical memory (bytes)=298618880
		Peak Reduce Virtual memory (bytes)=3968348160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-04 13:02:22 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 13:02:23.105" starttime="20201104 13:02:23.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:02:23.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:02:23.105" starttime="20201104 13:02:23.105"></status>
</kw>
<status status="PASS" endtime="20201104 13:02:23.106" starttime="20201104 13:01:46.313"></status>
</kw>
<msg timestamp="20201104 13:02:23.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:02:23.106" starttime="20201104 13:01:46.313"></status>
</kw>
<msg timestamp="20201104 13:02:23.106" level="INFO">${output} = 2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:01:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:02:23.106" starttime="20201104 13:01:46.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:02:23.107" starttime="20201104 13:02:23.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:02:23.107" starttime="20201104 13:02:23.107"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:02:23.108" critical="yes" starttime="20201104 13:01:46.273"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201104 13:02:23.109" starttime="20201104 13:01:05.247"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:30.733" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 12:59:30.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 12:59:30.738" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 12:59:30.738" starttime="20201104 12:59:30.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 12:59:30.739" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 12:59:30.739" starttime="20201104 12:59:30.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 12:59:30.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 12:59:30.740" starttime="20201104 12:59:30.739"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:30.740" starttime="20201104 12:59:30.729"></status>
</kw>
<msg timestamp="20201104 12:59:30.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 12:59:30.740" starttime="20201104 12:59:30.728"></status>
</kw>
<msg timestamp="20201104 12:59:30.741" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 12:59:30.741" starttime="20201104 12:59:30.728"></status>
</kw>
<msg timestamp="20201104 12:59:30.741" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 12:59:30.741" starttime="20201104 12:59:30.727"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 12:59:30.746" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 12:59:30.746" starttime="20201104 12:59:30.745"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 12:59:30.746" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 12:59:30.746" starttime="20201104 12:59:30.746"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:30.746" starttime="20201104 12:59:30.744"></status>
</kw>
<msg timestamp="20201104 12:59:30.747" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 12:59:30.747" starttime="20201104 12:59:30.743"></status>
</kw>
<status status="PASS" endtime="20201104 12:59:30.747" starttime="20201104 12:59:30.742"></status>
</kw>
<msg timestamp="20201104 12:59:30.747" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:59:30.747" starttime="20201104 12:59:30.742"></status>
</kw>
<msg timestamp="20201104 12:59:30.747" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 12:59:30.747" starttime="20201104 12:59:30.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 12:59:30.751" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:00:09.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:00:09.504" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59...</msg>
<status status="PASS" endtime="20201104 13:00:09.504" starttime="20201104 12:59:30.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:00:09.505" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-04 12:59:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-04 12:59:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 12:59:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 12:59:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 12:59:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D4E769B745E-&gt;1100939e-4f37-44b8-87ee-955aaf2e69d0
2020-11-04 12:59:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-04 12:59:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-04 12:59:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 12:59:35 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 12:59:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494704402_0001
2020-11-04 12:59:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 12:59:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:35 INFO  Configuration:2752 - resource-types.xml not found
2020-11-04 12:59:35 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-04 12:59:36 INFO  YarnClientImpl:324 - Submitted application application_1604494704402_0001
2020-11-04 12:59:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494704402_0001/
2020-11-04 12:59:36 INFO  Job:1619 - Running job: job_1604494704402_0001
2020-11-04 12:59:46 INFO  Job:1640 - Job job_1604494704402_0001 running in uber mode : false
2020-11-04 12:59:46 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 12:59:52 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 12:59:58 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:00:03 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:00:08 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:00:08 INFO  Job:1658 - Job job_1604494704402_0001 completed successfully
2020-11-04 13:00:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40000
		Total time spent by all reduces in occupied slots (ms)=15676
		Total time spent by all map tasks (ms)=10000
		Total time spent by all reduce tasks (ms)=3919
		Total vcore-milliseconds taken by all map tasks=10000
		Total vcore-milliseconds taken by all reduce tasks=3919
		Total megabyte-milliseconds taken by all map tasks=40960000
		Total megabyte-milliseconds taken by all reduce tasks=16052224
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=627
		CPU time spent (ms)=6310
		Physical memory (bytes) snapshot=1204117504
		Virtual memory (bytes) snapshot=15774822400
		Total committed heap usage (bytes)=1066926080
		Peak Map Physical memory (bytes)=312643584
		Peak Map Virtual memory (bytes)=3940749312
		Peak Reduce Physical memory (bytes)=301477888
		Peak Reduce Virtual memory (bytes)=3971231744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.347 seconds
2020-11-04 13:00:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:08 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-04 13:00:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 13:00:09.505" starttime="20201104 13:00:09.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:00:09.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:00:09.506" starttime="20201104 13:00:09.505"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.506" starttime="20201104 12:59:30.748"></status>
</kw>
<msg timestamp="20201104 13:00:09.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:00:09.506" starttime="20201104 12:59:30.748"></status>
</kw>
<msg timestamp="20201104 13:00:09.507" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 12:59...</msg>
<status status="PASS" endtime="20201104 13:00:09.507" starttime="20201104 12:59:30.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:00:09.507" starttime="20201104 13:00:09.507"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:00:09.508" critical="yes" starttime="20201104 12:59:30.727"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:00:09.514" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:00:09.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:00:09.519" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:00:09.519" starttime="20201104 13:00:09.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:00:09.520" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:00:09.520" starttime="20201104 13:00:09.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:00:09.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:00:09.521" starttime="20201104 13:00:09.520"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.521" starttime="20201104 13:00:09.510"></status>
</kw>
<msg timestamp="20201104 13:00:09.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:00:09.521" starttime="20201104 13:00:09.510"></status>
</kw>
<msg timestamp="20201104 13:00:09.522" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:00:09.522" starttime="20201104 13:00:09.510"></status>
</kw>
<msg timestamp="20201104 13:00:09.522" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201104 13:00:09.522" starttime="20201104 13:00:09.509"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:00:09.523" level="INFO">${random} = 88</msg>
<status status="PASS" endtime="20201104 13:00:09.523" starttime="20201104 13:00:09.522"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:00:09.527" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:00:09.527" starttime="20201104 13:00:09.527"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:00:09.528" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:00:09.528" starttime="20201104 13:00:09.528"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.528" starttime="20201104 13:00:09.526"></status>
</kw>
<msg timestamp="20201104 13:00:09.528" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:00:09.528" starttime="20201104 13:00:09.525"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.529" starttime="20201104 13:00:09.525"></status>
</kw>
<msg timestamp="20201104 13:00:09.529" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:00:09.529" starttime="20201104 13:00:09.524"></status>
</kw>
<msg timestamp="20201104 13:00:09.529" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:00:09.529" starttime="20201104 13:00:09.523"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:00:09.533" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:00:09.533" starttime="20201104 13:00:09.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:00:09.534" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:00:09.534" starttime="20201104 13:00:09.533"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.534" starttime="20201104 13:00:09.532"></status>
</kw>
<msg timestamp="20201104 13:00:09.534" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:00:09.534" starttime="20201104 13:00:09.531"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.534" starttime="20201104 13:00:09.531"></status>
</kw>
<msg timestamp="20201104 13:00:09.534" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201104 13:00:09.535" starttime="20201104 13:00:09.530"></status>
</kw>
<msg timestamp="20201104 13:00:09.535" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201104 13:00:09.535" starttime="20201104 13:00:09.529"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:00:09.538" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:00:09.539" starttime="20201104 13:00:09.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:00:09.539" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:00:09.539" starttime="20201104 13:00:09.539"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.540" starttime="20201104 13:00:09.538"></status>
</kw>
<msg timestamp="20201104 13:00:09.540" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:00:09.540" starttime="20201104 13:00:09.537"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:09.540" starttime="20201104 13:00:09.536"></status>
</kw>
<msg timestamp="20201104 13:00:09.540" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-88.txt</msg>
<status status="PASS" endtime="20201104 13:00:09.540" starttime="20201104 13:00:09.536"></status>
</kw>
<msg timestamp="20201104 13:00:09.541" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-88.txt</msg>
<status status="PASS" endtime="20201104 13:00:09.541" starttime="20201104 13:00:09.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:00:09.545" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-88.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:00:50.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:00:50.195" level="INFO">${output} = 2020-11-04 13:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:00:50.195" starttime="20201104 13:00:09.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:00:50.196" level="INFO">2020-11-04 13:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-04 13:00:11 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-04 13:00:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:00:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:00:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:00:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1804EB85D931-&gt;1100939e-4f37-44b8-87ee-955aaf2e69d0
2020-11-04 13:00:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:00:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 13:00:15 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 13:00:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494704402_0002
2020-11-04 13:00:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 13:00:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:16 INFO  Configuration:2752 - resource-types.xml not found
2020-11-04 13:00:16 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-04 13:00:16 INFO  YarnClientImpl:324 - Submitted application application_1604494704402_0002
2020-11-04 13:00:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494704402_0002/
2020-11-04 13:00:16 INFO  Job:1619 - Running job: job_1604494704402_0002
2020-11-04 13:00:24 INFO  Job:1640 - Job job_1604494704402_0002 running in uber mode : false
2020-11-04 13:00:24 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 13:00:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 13:00:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:00:41 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:00:46 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:00:49 INFO  Job:1658 - Job job_1604494704402_0002 completed successfully
2020-11-04 13:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:49 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40900
		Total time spent by all reduces in occupied slots (ms)=15408
		Total time spent by all map tasks (ms)=10225
		Total time spent by all reduce tasks (ms)=3852
		Total vcore-milliseconds taken by all map tasks=10225
		Total vcore-milliseconds taken by all reduce tasks=3852
		Total megabyte-milliseconds taken by all map tasks=41881600
		Total megabyte-milliseconds taken by all reduce tasks=15777792
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=649
		CPU time spent (ms)=6910
		Physical memory (bytes) snapshot=1224675328
		Virtual memory (bytes) snapshot=15810826240
		Total committed heap usage (bytes)=1071644672
		Peak Map Physical memory (bytes)=318726144
		Peak Map Virtual memory (bytes)=3954352128
		Peak Reduce Physical memory (bytes)=297582592
		Peak Reduce Virtual memory (bytes)=3971862528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-04 13:00:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201104 13:00:50.197" starttime="20201104 13:00:50.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:00:50.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:00:50.198" starttime="20201104 13:00:50.197"></status>
</kw>
<status status="PASS" endtime="20201104 13:00:50.198" starttime="20201104 13:00:09.542"></status>
</kw>
<msg timestamp="20201104 13:00:50.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:00:50.199" starttime="20201104 13:00:09.542"></status>
</kw>
<msg timestamp="20201104 13:00:50.199" level="INFO">${output} = 2020-11-04 13:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-04 13:00:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201104 13:00:50.199" starttime="20201104 13:00:09.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:00:50.200" starttime="20201104 13:00:50.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:00:50.201" starttime="20201104 13:00:50.200"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:00:50.201" critical="yes" starttime="20201104 13:00:09.508"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201104 13:00:50.202" starttime="20201104 12:59:30.674"></status>
</suite>
<status status="PASS" elapsedtime="196786" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:29.001" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:03:32.856" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:03:32.856" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 13:03:32.856" starttime="20201104 13:03:28.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:03:32.857" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 13:03:32.858" starttime="20201104 13:03:32.857"></status>
</kw>
<msg timestamp="20201104 13:03:32.858" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201104 13:03:32.858" starttime="20201104 13:03:28.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:32.864" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:03:36.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:03:36.335" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:03:36.335" starttime="20201104 13:03:32.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:03:36.336" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:03:36.336" starttime="20201104 13:03:36.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:03:36.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:03:36.337" starttime="20201104 13:03:36.337"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:36.337" starttime="20201104 13:03:32.860"></status>
</kw>
<msg timestamp="20201104 13:03:36.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:03:36.338" starttime="20201104 13:03:32.860"></status>
</kw>
<msg timestamp="20201104 13:03:36.338" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:03:36.338" starttime="20201104 13:03:32.859"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 13:03:36.338" starttime="20201104 13:03:36.338"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:36.339" starttime="20201104 13:03:32.859"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:36.339" starttime="20201104 13:03:32.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:36.343" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:03:39.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:03:39.944" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:03:39.944" starttime="20201104 13:03:36.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:03:39.945" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:03:39.946" starttime="20201104 13:03:39.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:03:39.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:03:39.946" starttime="20201104 13:03:39.946"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:39.946" starttime="20201104 13:03:36.340"></status>
</kw>
<msg timestamp="20201104 13:03:39.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:03:39.947" starttime="20201104 13:03:36.340"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:39.947" starttime="20201104 13:03:36.340"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:39.947" starttime="20201104 13:03:36.339"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:39.947" starttime="20201104 13:03:36.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:03:39.948" starttime="20201104 13:03:39.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:39.952" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:03:43.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:03:43.034" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:03:39.610Z",
  "modificat...</msg>
<status status="PASS" endtime="20201104 13:03:43.034" starttime="20201104 13:03:39.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:03:43.035" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:03:39.610Z",
  "modificationTime" : "2020-11-04T13:03:39.610Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 13:03:43.036" starttime="20201104 13:03:43.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:03:43.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:03:43.036" starttime="20201104 13:03:43.036"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:43.037" starttime="20201104 13:03:39.949"></status>
</kw>
<msg timestamp="20201104 13:03:43.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:03:43.037" starttime="20201104 13:03:39.948"></status>
</kw>
<msg timestamp="20201104 13:03:43.037" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:03:39.610Z",
  "modificat...</msg>
<status status="PASS" endtime="20201104 13:03:43.037" starttime="20201104 13:03:39.948"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201104 13:03:43.038" starttime="20201104 13:03:43.037"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:03:43.044" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:03:43.044" starttime="20201104 13:03:43.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:03:43.044" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:03:43.045" starttime="20201104 13:03:43.044"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:43.045" starttime="20201104 13:03:43.043"></status>
</kw>
<msg timestamp="20201104 13:03:43.045" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:03:43.045" starttime="20201104 13:03:43.042"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:43.045" starttime="20201104 13:03:43.041"></status>
</kw>
<msg timestamp="20201104 13:03:43.045" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201104 13:03:43.045" starttime="20201104 13:03:43.040"></status>
</kw>
<msg timestamp="20201104 13:03:43.046" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201104 13:03:43.046" starttime="20201104 13:03:43.038"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:43.050" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:03:46.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:03:46.338" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:03:46.338" starttime="20201104 13:03:43.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:03:46.339" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:03:46.339" starttime="20201104 13:03:46.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:03:46.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:03:46.340" starttime="20201104 13:03:46.339"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:46.340" starttime="20201104 13:03:43.047"></status>
</kw>
<msg timestamp="20201104 13:03:46.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:03:46.340" starttime="20201104 13:03:43.046"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:46.340" starttime="20201104 13:03:43.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:46.344" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:03:53.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:03:53.127" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:03:53.128" starttime="20201104 13:03:46.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:03:53.129" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:03:53.129" starttime="20201104 13:03:53.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:03:53.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:03:53.130" starttime="20201104 13:03:53.129"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:53.130" starttime="20201104 13:03:46.341"></status>
</kw>
<msg timestamp="20201104 13:03:53.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:03:53.130" starttime="20201104 13:03:46.341"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:53.130" starttime="20201104 13:03:46.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:53.134" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:03:58.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:03:58.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:03:58.252" starttime="20201104 13:03:53.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:03:58.253" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:03:58.253" starttime="20201104 13:03:58.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:03:58.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:03:58.254" starttime="20201104 13:03:58.253"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:58.254" starttime="20201104 13:03:53.131"></status>
</kw>
<msg timestamp="20201104 13:03:58.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:03:58.255" starttime="20201104 13:03:53.131"></status>
</kw>
<status status="PASS" endtime="20201104 13:03:58.255" starttime="20201104 13:03:53.130"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:03:58.260" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:04:03.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:04:03.480" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:04:03.480" starttime="20201104 13:03:58.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:04:03.482" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:04:03.482" starttime="20201104 13:04:03.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:04:03.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:04:03.483" starttime="20201104 13:04:03.482"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:03.483" starttime="20201104 13:03:58.256"></status>
</kw>
<msg timestamp="20201104 13:04:03.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:04:03.483" starttime="20201104 13:03:58.256"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:03.483" starttime="20201104 13:03:58.255"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:04:03.484" critical="yes" starttime="20201104 13:03:28.994"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:04:03.490" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:04:03.490" starttime="20201104 13:04:03.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:04:03.490" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:04:03.491" starttime="20201104 13:04:03.490"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:03.491" starttime="20201104 13:04:03.488"></status>
</kw>
<msg timestamp="20201104 13:04:03.491" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:04:03.491" starttime="20201104 13:04:03.488"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:03.491" starttime="20201104 13:04:03.487"></status>
</kw>
<msg timestamp="20201104 13:04:03.491" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 13:04:03.492" starttime="20201104 13:04:03.487"></status>
</kw>
<msg timestamp="20201104 13:04:03.492" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 13:04:03.492" starttime="20201104 13:04:03.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:04:03.496" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:04:06.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:04:06.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:04:06.501" starttime="20201104 13:04:03.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:04:06.502" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:04:06.502" starttime="20201104 13:04:06.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:04:06.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:04:06.503" starttime="20201104 13:04:06.502"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:06.503" starttime="20201104 13:04:03.493"></status>
</kw>
<msg timestamp="20201104 13:04:06.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:04:06.503" starttime="20201104 13:04:03.493"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:06.503" starttime="20201104 13:04:03.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:04:06.507" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:04:09.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:04:09.702" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:04:09.702" starttime="20201104 13:04:06.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:04:09.703" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:04:09.703" starttime="20201104 13:04:09.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:04:09.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:04:09.704" starttime="20201104 13:04:09.703"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:09.704" starttime="20201104 13:04:06.504"></status>
</kw>
<msg timestamp="20201104 13:04:09.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:04:09.704" starttime="20201104 13:04:06.504"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:09.704" starttime="20201104 13:04:06.503"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:04:09.705" critical="yes" starttime="20201104 13:04:03.485"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201104 13:04:09.706" starttime="20201104 13:03:28.937"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:05:49.011" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:05:49.012" starttime="20201104 13:05:49.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:05:49.012" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:05:49.012" starttime="20201104 13:05:49.012"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:49.012" starttime="20201104 13:05:49.011"></status>
</kw>
<msg timestamp="20201104 13:05:49.012" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:05:49.012" starttime="20201104 13:05:49.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:05:49.014" starttime="20201104 13:05:49.013"></status>
</kw>
<msg timestamp="20201104 13:05:49.014" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 13:05:49.014" starttime="20201104 13:05:49.013"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:49.014" starttime="20201104 13:05:49.009"></status>
</kw>
<msg timestamp="20201104 13:05:49.014" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:05:49.014" starttime="20201104 13:05:49.009"></status>
</kw>
<msg timestamp="20201104 13:05:49.014" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:05:49.014" starttime="20201104 13:05:49.008"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:05:49.015" level="INFO">${random} = 14524</msg>
<status status="PASS" endtime="20201104 13:05:49.015" starttime="20201104 13:05:49.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:05:49.020" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-14524 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:05:52.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:05:52.580" level="INFO">${output} = 2020-11-04 13:05:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:05:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201104 13:05:52.580" starttime="20201104 13:05:49.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:05:52.581" level="INFO">2020-11-04 13:05:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:05:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:05:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:05:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:05:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F2C3CC93BB1B-&gt;e105b988-b25b-4225-b79a-f0120362d9d0
2020-11-04 13:05:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201104 13:05:52.581" starttime="20201104 13:05:52.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:05:52.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:05:52.582" starttime="20201104 13:05:52.581"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:52.582" starttime="20201104 13:05:49.016"></status>
</kw>
<msg timestamp="20201104 13:05:52.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:05:52.582" starttime="20201104 13:05:49.016"></status>
</kw>
<msg timestamp="20201104 13:05:52.583" level="INFO">${result} = 2020-11-04 13:05:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:05:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201104 13:05:52.583" starttime="20201104 13:05:49.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:05:52.589" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:05:54.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:05:54.503" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-04 13:05 ofs://om/volume1/bucket1/ozone-14524
-rw-...</msg>
<status status="PASS" endtime="20201104 13:05:54.504" starttime="20201104 13:05:52.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:05:54.505" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-04 13:05 ofs://om/volume1/bucket1/ozone-14524
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-04 13:04 ofs://om/volume1/bucket1/ozone-60523
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:04 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:05 ofs://om/volume1/bucket1/wordcount-23.txt</msg>
<status status="PASS" endtime="20201104 13:05:54.505" starttime="20201104 13:05:54.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:05:54.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:05:54.505" starttime="20201104 13:05:54.505"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:54.506" starttime="20201104 13:05:52.585"></status>
</kw>
<msg timestamp="20201104 13:05:54.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:05:54.506" starttime="20201104 13:05:52.584"></status>
</kw>
<msg timestamp="20201104 13:05:54.506" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-04 13:05 ofs://om/volume1/bucket1/ozone-14524
-rw-...</msg>
<status status="PASS" endtime="20201104 13:05:54.506" starttime="20201104 13:05:52.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:05:54.507" starttime="20201104 13:05:54.506"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:05:54.507" critical="yes" starttime="20201104 13:05:49.007"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201104 13:05:54.508" starttime="20201104 13:05:48.955"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:04:14.648" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:04:14.648" starttime="20201104 13:04:14.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:04:14.649" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:04:14.649" starttime="20201104 13:04:14.648"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:14.649" starttime="20201104 13:04:14.647"></status>
</kw>
<msg timestamp="20201104 13:04:14.649" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:04:14.649" starttime="20201104 13:04:14.647"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:14.650" starttime="20201104 13:04:14.646"></status>
</kw>
<msg timestamp="20201104 13:04:14.650" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:04:14.650" starttime="20201104 13:04:14.645"></status>
</kw>
<msg timestamp="20201104 13:04:14.650" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:04:14.650" starttime="20201104 13:04:14.645"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:04:14.650" level="INFO">${random} = 60523</msg>
<status status="PASS" endtime="20201104 13:04:14.650" starttime="20201104 13:04:14.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:04:14.657" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-60523 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:04:18.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:04:18.511" level="INFO">${output} = 2020-11-04 13:04:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:04:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201104 13:04:18.511" starttime="20201104 13:04:14.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:04:18.512" level="INFO">2020-11-04 13:04:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:04:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:04:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:04:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:04:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-47CEC7AB66BE-&gt;e105b988-b25b-4225-b79a-f0120362d9d0
2020-11-04 13:04:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201104 13:04:18.512" starttime="20201104 13:04:18.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:04:18.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:04:18.513" starttime="20201104 13:04:18.512"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:18.514" starttime="20201104 13:04:14.651"></status>
</kw>
<msg timestamp="20201104 13:04:18.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:04:18.514" starttime="20201104 13:04:14.651"></status>
</kw>
<msg timestamp="20201104 13:04:18.514" level="INFO">${result} = 2020-11-04 13:04:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:04:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201104 13:04:18.514" starttime="20201104 13:04:14.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:04:18.521" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:04:20.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:04:20.403" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-04 13:04 o3fs://bucket1.volume1.om/ozone-60523
dr...</msg>
<status status="PASS" endtime="20201104 13:04:20.404" starttime="20201104 13:04:18.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:04:20.405" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-04 13:04 o3fs://bucket1.volume1.om/ozone-60523
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:04 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201104 13:04:20.405" starttime="20201104 13:04:20.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:04:20.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:04:20.406" starttime="20201104 13:04:20.405"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:20.406" starttime="20201104 13:04:18.517"></status>
</kw>
<msg timestamp="20201104 13:04:20.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:04:20.406" starttime="20201104 13:04:18.515"></status>
</kw>
<msg timestamp="20201104 13:04:20.407" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-04 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-04 13:04 o3fs://bucket1.volume1.om/ozone-60523
dr...</msg>
<status status="PASS" endtime="20201104 13:04:20.407" starttime="20201104 13:04:18.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:04:20.407" starttime="20201104 13:04:20.407"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:04:20.407" critical="yes" starttime="20201104 13:04:14.644"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201104 13:04:20.410" starttime="20201104 13:04:14.592"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:05:59.443" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:05:59.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:05:59.445" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:59.445" starttime="20201104 13:05:59.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:05:59.446" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:59.446" starttime="20201104 13:05:59.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:05:59.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:05:59.447" starttime="20201104 13:05:59.446"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:59.447" starttime="20201104 13:05:59.433"></status>
</kw>
<msg timestamp="20201104 13:05:59.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:05:59.447" starttime="20201104 13:05:59.433"></status>
</kw>
<msg timestamp="20201104 13:05:59.447" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:59.447" starttime="20201104 13:05:59.433"></status>
</kw>
<msg timestamp="20201104 13:05:59.447" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:59.447" starttime="20201104 13:05:59.432"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:05:59.452" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:05:59.452" starttime="20201104 13:05:59.452"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:05:59.453" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:05:59.453" starttime="20201104 13:05:59.452"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:59.453" starttime="20201104 13:05:59.450"></status>
</kw>
<msg timestamp="20201104 13:05:59.453" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:05:59.453" starttime="20201104 13:05:59.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:05:59.454" starttime="20201104 13:05:59.454"></status>
</kw>
<msg timestamp="20201104 13:05:59.454" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 13:05:59.454" starttime="20201104 13:05:59.453"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:59.455" starttime="20201104 13:05:59.449"></status>
</kw>
<msg timestamp="20201104 13:05:59.455" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:05:59.455" starttime="20201104 13:05:59.448"></status>
</kw>
<msg timestamp="20201104 13:05:59.455" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:05:59.455" starttime="20201104 13:05:59.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:05:59.460" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:06:37.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:06:37.620" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:06:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:06:01 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201104 13:06:37.620" starttime="20201104 13:05:59.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:06:37.621" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:06:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:06:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:06:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:06:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:06:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A7FD57AE3EF7-&gt;e105b988-b25b-4225-b79a-f0120362d9d0
2020-11-04 13:06:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-04 13:06:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:06:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 13:06:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 13:06:06 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 13:06:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494987466_0003
2020-11-04 13:06:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 13:06:06 INFO  Configuration:2795 - resource-types.xml not found
2020-11-04 13:06:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-04 13:06:06 INFO  YarnClientImpl:329 - Submitted application application_1604494987466_0003
2020-11-04 13:06:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494987466_0003/
2020-11-04 13:06:06 INFO  Job:1619 - Running job: job_1604494987466_0003
2020-11-04 13:06:14 INFO  Job:1640 - Job job_1604494987466_0003 running in uber mode : false
2020-11-04 13:06:14 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 13:06:20 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 13:06:26 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:06:31 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:06:36 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:06:36 INFO  Job:1658 - Job job_1604494987466_0003 completed successfully
2020-11-04 13:06:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39568
		Total time spent by all reduces in occupied slots (ms)=15728
		Total time spent by all map tasks (ms)=9892
		Total time spent by all reduce tasks (ms)=3932
		Total vcore-milliseconds taken by all map tasks=9892
		Total vcore-milliseconds taken by all reduce tasks=3932
		Total megabyte-milliseconds taken by all map tasks=40517632
		Total megabyte-milliseconds taken by all reduce tasks=16105472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=698
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1154805760
		Virtual memory (bytes) snapshot=15792627712
		Total committed heap usage (bytes)=1054867456
		Peak Map Physical memory (bytes)=293421056
		Peak Map Virtual memory (bytes)=3949998080
		Peak Reduce Physical memory (bytes)=305086464
		Peak Reduce Virtual memory (bytes)=3968757760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.784 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201104 13:06:37.622" starttime="20201104 13:06:37.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:06:37.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:06:37.622" starttime="20201104 13:06:37.622"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.623" starttime="20201104 13:05:59.456"></status>
</kw>
<msg timestamp="20201104 13:06:37.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:06:37.623" starttime="20201104 13:05:59.456"></status>
</kw>
<msg timestamp="20201104 13:06:37.623" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:06:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:06:01 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201104 13:06:37.623" starttime="20201104 13:05:59.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:06:37.624" starttime="20201104 13:06:37.623"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:06:37.624" critical="yes" starttime="20201104 13:05:59.431"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:06:37.630" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:06:37.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:06:37.638" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:06:37.638" starttime="20201104 13:06:37.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:06:37.639" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:06:37.639" starttime="20201104 13:06:37.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:06:37.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:06:37.640" starttime="20201104 13:06:37.639"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.640" starttime="20201104 13:06:37.627"></status>
</kw>
<msg timestamp="20201104 13:06:37.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:06:37.640" starttime="20201104 13:06:37.627"></status>
</kw>
<msg timestamp="20201104 13:06:37.641" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:06:37.641" starttime="20201104 13:06:37.626"></status>
</kw>
<msg timestamp="20201104 13:06:37.641" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:06:37.641" starttime="20201104 13:06:37.626"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:06:37.642" level="INFO">${random} = 34</msg>
<status status="PASS" endtime="20201104 13:06:37.642" starttime="20201104 13:06:37.641"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:06:37.645" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:06:37.645" starttime="20201104 13:06:37.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:06:37.646" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:06:37.646" starttime="20201104 13:06:37.646"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.646" starttime="20201104 13:06:37.644"></status>
</kw>
<msg timestamp="20201104 13:06:37.646" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:06:37.646" starttime="20201104 13:06:37.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:06:37.647" starttime="20201104 13:06:37.647"></status>
</kw>
<msg timestamp="20201104 13:06:37.647" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201104 13:06:37.647" starttime="20201104 13:06:37.646"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.648" starttime="20201104 13:06:37.643"></status>
</kw>
<msg timestamp="20201104 13:06:37.648" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:06:37.648" starttime="20201104 13:06:37.642"></status>
</kw>
<msg timestamp="20201104 13:06:37.648" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201104 13:06:37.648" starttime="20201104 13:06:37.642"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:06:37.651" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:06:37.651" starttime="20201104 13:06:37.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:06:37.652" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:06:37.652" starttime="20201104 13:06:37.652"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.652" starttime="20201104 13:06:37.651"></status>
</kw>
<msg timestamp="20201104 13:06:37.652" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:06:37.652" starttime="20201104 13:06:37.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:06:37.654" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201104 13:06:37.654" starttime="20201104 13:06:37.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:06:37.655" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201104 13:06:37.655" starttime="20201104 13:06:37.654"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.655" starttime="20201104 13:06:37.653"></status>
</kw>
<msg timestamp="20201104 13:06:37.655" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201104 13:06:37.655" starttime="20201104 13:06:37.653"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.655" starttime="20201104 13:06:37.650"></status>
</kw>
<msg timestamp="20201104 13:06:37.655" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201104 13:06:37.655" starttime="20201104 13:06:37.649"></status>
</kw>
<msg timestamp="20201104 13:06:37.656" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201104 13:06:37.656" starttime="20201104 13:06:37.648"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201104 13:06:37.659" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201104 13:06:37.659" starttime="20201104 13:06:37.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:06:37.660" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201104 13:06:37.660" starttime="20201104 13:06:37.659"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.660" starttime="20201104 13:06:37.658"></status>
</kw>
<msg timestamp="20201104 13:06:37.660" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201104 13:06:37.660" starttime="20201104 13:06:37.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:06:37.661" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201104 13:06:37.661" starttime="20201104 13:06:37.661"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:06:37.662" level="INFO">${result} = /wordcount-34.txt</msg>
<status status="PASS" endtime="20201104 13:06:37.662" starttime="20201104 13:06:37.661"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.662" starttime="20201104 13:06:37.660"></status>
</kw>
<msg timestamp="20201104 13:06:37.662" level="INFO">${path_with_leading} = /wordcount-34.txt</msg>
<status status="PASS" endtime="20201104 13:06:37.662" starttime="20201104 13:06:37.660"></status>
</kw>
<status status="PASS" endtime="20201104 13:06:37.663" starttime="20201104 13:06:37.657"></status>
</kw>
<msg timestamp="20201104 13:06:37.663" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-34.txt</msg>
<status status="PASS" endtime="20201104 13:06:37.663" starttime="20201104 13:06:37.656"></status>
</kw>
<msg timestamp="20201104 13:06:37.663" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-34.txt</msg>
<status status="PASS" endtime="20201104 13:06:37.663" starttime="20201104 13:06:37.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:06:37.667" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-34.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:07:18.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:07:18.698" level="INFO">${output} = 2020-11-04 13:06:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:06:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201104 13:07:18.698" starttime="20201104 13:06:37.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:07:18.699" level="INFO">2020-11-04 13:06:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:06:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 13:06:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:06:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:06:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:06:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:06:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A16293E4FE74-&gt;e105b988-b25b-4225-b79a-f0120362d9d0
2020-11-04 13:06:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:06:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 13:06:44 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 13:06:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494987466_0004
2020-11-04 13:06:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 13:06:44 INFO  Configuration:2795 - resource-types.xml not found
2020-11-04 13:06:44 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-04 13:06:44 INFO  YarnClientImpl:329 - Submitted application application_1604494987466_0004
2020-11-04 13:06:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494987466_0004/
2020-11-04 13:06:44 INFO  Job:1619 - Running job: job_1604494987466_0004
2020-11-04 13:06:51 INFO  Job:1640 - Job job_1604494987466_0004 running in uber mode : false
2020-11-04 13:06:51 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 13:06:59 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 13:07:05 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:07:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:07:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:07:18 INFO  Job:1658 - Job job_1604494987466_0004 completed successfully
2020-11-04 13:07:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41048
		Total time spent by all reduces in occupied slots (ms)=15200
		Total time spent by all map tasks (ms)=10262
		Total time spent by all reduce tasks (ms)=3800
		Total vcore-milliseconds taken by all map tasks=10262
		Total vcore-milliseconds taken by all reduce tasks=3800
		Total megabyte-milliseconds taken by all map tasks=42033152
		Total megabyte-milliseconds taken by all reduce tasks=15564800
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=683
		CPU time spent (ms)=7800
		Physical memory (bytes) snapshot=1274753024
		Virtual memory (bytes) snapshot=15820742656
		Total committed heap usage (bytes)=1095237632
		Peak Map Physical memory (bytes)=298319872
		Peak Map Virtual memory (bytes)=3952705536
		Peak Reduce Physical memory (bytes)=386940928
		Peak Reduce Virtual memory (bytes)=3969396736
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201104 13:07:18.700" starttime="20201104 13:07:18.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:07:18.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:07:18.700" starttime="20201104 13:07:18.700"></status>
</kw>
<status status="PASS" endtime="20201104 13:07:18.701" starttime="20201104 13:06:37.664"></status>
</kw>
<msg timestamp="20201104 13:07:18.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:07:18.701" starttime="20201104 13:06:37.664"></status>
</kw>
<msg timestamp="20201104 13:07:18.701" level="INFO">${output} = 2020-11-04 13:06:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:06:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201104 13:07:18.701" starttime="20201104 13:06:37.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:07:18.702" starttime="20201104 13:07:18.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:07:18.702" starttime="20201104 13:07:18.702"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:07:18.703" critical="yes" starttime="20201104 13:06:37.625"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201104 13:07:18.704" starttime="20201104 13:05:59.380"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:04:25.333" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:04:25.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:04:25.346" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:04:25.346" starttime="20201104 13:04:25.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:04:25.347" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:04:25.347" starttime="20201104 13:04:25.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:04:25.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:04:25.348" starttime="20201104 13:04:25.347"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:25.348" starttime="20201104 13:04:25.329"></status>
</kw>
<msg timestamp="20201104 13:04:25.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:04:25.348" starttime="20201104 13:04:25.328"></status>
</kw>
<msg timestamp="20201104 13:04:25.349" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:04:25.349" starttime="20201104 13:04:25.328"></status>
</kw>
<msg timestamp="20201104 13:04:25.349" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:04:25.349" starttime="20201104 13:04:25.327"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:04:25.354" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:04:25.354" starttime="20201104 13:04:25.353"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:04:25.354" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:04:25.354" starttime="20201104 13:04:25.354"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:25.355" starttime="20201104 13:04:25.352"></status>
</kw>
<msg timestamp="20201104 13:04:25.355" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:04:25.355" starttime="20201104 13:04:25.351"></status>
</kw>
<status status="PASS" endtime="20201104 13:04:25.355" starttime="20201104 13:04:25.351"></status>
</kw>
<msg timestamp="20201104 13:04:25.355" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:04:25.355" starttime="20201104 13:04:25.350"></status>
</kw>
<msg timestamp="20201104 13:04:25.355" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:04:25.355" starttime="20201104 13:04:25.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:04:25.360" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:05:07.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:05:07.397" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:04:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:04:27 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201104 13:05:07.397" starttime="20201104 13:04:25.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:05:07.398" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:04:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:04:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:04:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:04:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:04:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E061F5A4A8AC-&gt;e105b988-b25b-4225-b79a-f0120362d9d0
2020-11-04 13:04:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-04 13:04:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:04:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 13:04:32 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 13:04:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494987466_0001
2020-11-04 13:04:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 13:04:32 INFO  Configuration:2795 - resource-types.xml not found
2020-11-04 13:04:32 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-04 13:04:33 INFO  YarnClientImpl:329 - Submitted application application_1604494987466_0001
2020-11-04 13:04:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494987466_0001/
2020-11-04 13:04:33 INFO  Job:1619 - Running job: job_1604494987466_0001
2020-11-04 13:04:44 INFO  Job:1640 - Job job_1604494987466_0001 running in uber mode : false
2020-11-04 13:04:44 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 13:04:50 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 13:04:56 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:05:01 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:05:06 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:05:06 INFO  Job:1658 - Job job_1604494987466_0001 completed successfully
2020-11-04 13:05:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40556
		Total time spent by all reduces in occupied slots (ms)=15864
		Total time spent by all map tasks (ms)=10139
		Total time spent by all reduce tasks (ms)=3966
		Total vcore-milliseconds taken by all map tasks=10139
		Total vcore-milliseconds taken by all reduce tasks=3966
		Total megabyte-milliseconds taken by all map tasks=41529344
		Total megabyte-milliseconds taken by all reduce tasks=16244736
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=601
		CPU time spent (ms)=7000
		Physical memory (bytes) snapshot=1244098560
		Virtual memory (bytes) snapshot=15794548736
		Total committed heap usage (bytes)=1230503936
		Peak Map Physical memory (bytes)=297238528
		Peak Map Virtual memory (bytes)=3947757568
		Peak Reduce Physical memory (bytes)=379437056
		Peak Reduce Virtual memory (bytes)=3971432448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.521 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201104 13:05:07.398" starttime="20201104 13:05:07.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:05:07.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:05:07.399" starttime="20201104 13:05:07.398"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.399" starttime="20201104 13:04:25.356"></status>
</kw>
<msg timestamp="20201104 13:05:07.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:05:07.399" starttime="20201104 13:04:25.356"></status>
</kw>
<msg timestamp="20201104 13:05:07.400" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-04 13:04:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:04:27 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201104 13:05:07.400" starttime="20201104 13:04:25.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:05:07.400" starttime="20201104 13:05:07.400"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:05:07.400" critical="yes" starttime="20201104 13:04:25.327"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:05:07.405" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:05:07.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:05:07.410" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:07.410" starttime="20201104 13:05:07.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:05:07.411" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:07.412" starttime="20201104 13:05:07.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:05:07.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:05:07.412" starttime="20201104 13:05:07.412"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.412" starttime="20201104 13:05:07.403"></status>
</kw>
<msg timestamp="20201104 13:05:07.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:05:07.413" starttime="20201104 13:05:07.402"></status>
</kw>
<msg timestamp="20201104 13:05:07.413" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:07.413" starttime="20201104 13:05:07.402"></status>
</kw>
<msg timestamp="20201104 13:05:07.413" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201104 13:05:07.413" starttime="20201104 13:05:07.402"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:05:07.414" level="INFO">${random} = 23</msg>
<status status="PASS" endtime="20201104 13:05:07.414" starttime="20201104 13:05:07.413"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:05:07.418" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:05:07.418" starttime="20201104 13:05:07.417"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:05:07.418" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:05:07.419" starttime="20201104 13:05:07.418"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.419" starttime="20201104 13:05:07.417"></status>
</kw>
<msg timestamp="20201104 13:05:07.419" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:05:07.419" starttime="20201104 13:05:07.416"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.419" starttime="20201104 13:05:07.415"></status>
</kw>
<msg timestamp="20201104 13:05:07.419" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:05:07.419" starttime="20201104 13:05:07.415"></status>
</kw>
<msg timestamp="20201104 13:05:07.419" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201104 13:05:07.420" starttime="20201104 13:05:07.414"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:05:07.423" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:05:07.423" starttime="20201104 13:05:07.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:05:07.424" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:05:07.424" starttime="20201104 13:05:07.423"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.424" starttime="20201104 13:05:07.422"></status>
</kw>
<msg timestamp="20201104 13:05:07.424" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:05:07.424" starttime="20201104 13:05:07.422"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.425" starttime="20201104 13:05:07.421"></status>
</kw>
<msg timestamp="20201104 13:05:07.425" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201104 13:05:07.425" starttime="20201104 13:05:07.421"></status>
</kw>
<msg timestamp="20201104 13:05:07.425" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201104 13:05:07.425" starttime="20201104 13:05:07.420"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201104 13:05:07.428" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201104 13:05:07.428" starttime="20201104 13:05:07.428"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:05:07.429" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201104 13:05:07.429" starttime="20201104 13:05:07.428"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.429" starttime="20201104 13:05:07.427"></status>
</kw>
<msg timestamp="20201104 13:05:07.429" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201104 13:05:07.429" starttime="20201104 13:05:07.427"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:07.430" starttime="20201104 13:05:07.426"></status>
</kw>
<msg timestamp="20201104 13:05:07.430" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201104 13:05:07.430" starttime="20201104 13:05:07.426"></status>
</kw>
<msg timestamp="20201104 13:05:07.430" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201104 13:05:07.430" starttime="20201104 13:05:07.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:05:07.437" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-23.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:05:44.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:05:44.098" level="INFO">${output} = 2020-11-04 13:05:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:05:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201104 13:05:44.098" starttime="20201104 13:05:07.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:05:44.100" level="INFO">2020-11-04 13:05:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:05:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-04 13:05:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-04 13:05:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:05:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-04 13:05:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:05:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-01C95FC7A405-&gt;e105b988-b25b-4225-b79a-f0120362d9d0
2020-11-04 13:05:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:05:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-04 13:05:11 INFO  JobSubmitter:202 - number of splits:3
2020-11-04 13:05:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604494987466_0002
2020-11-04 13:05:11 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-04 13:05:12 INFO  Configuration:2795 - resource-types.xml not found
2020-11-04 13:05:12 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-04 13:05:12 INFO  YarnClientImpl:329 - Submitted application application_1604494987466_0002
2020-11-04 13:05:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604494987466_0002/
2020-11-04 13:05:12 INFO  Job:1619 - Running job: job_1604494987466_0002
2020-11-04 13:05:20 INFO  Job:1640 - Job job_1604494987466_0002 running in uber mode : false
2020-11-04 13:05:20 INFO  Job:1647 -  map 0% reduce 0%
2020-11-04 13:05:27 INFO  Job:1647 -  map 33% reduce 0%
2020-11-04 13:05:33 INFO  Job:1647 -  map 67% reduce 0%
2020-11-04 13:05:39 INFO  Job:1647 -  map 100% reduce 0%
2020-11-04 13:05:43 INFO  Job:1647 -  map 100% reduce 100%
2020-11-04 13:05:43 INFO  Job:1658 - Job job_1604494987466_0002 completed successfully
2020-11-04 13:05:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41520
		Total time spent by all reduces in occupied slots (ms)=14188
		Total time spent by all map tasks (ms)=10380
		Total time spent by all reduce tasks (ms)=3547
		Total vcore-milliseconds taken by all map tasks=10380
		Total vcore-milliseconds taken by all reduce tasks=3547
		Total megabyte-milliseconds taken by all map tasks=42516480
		Total megabyte-milliseconds taken by all reduce tasks=14528512
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=658
		CPU time spent (ms)=7220
		Physical memory (bytes) snapshot=1156141056
		Virtual memory (bytes) snapshot=15802433536
		Total committed heap usage (bytes)=1016070144
		Peak Map Physical memory (bytes)=296669184
		Peak Map Virtual memory (bytes)=3950944256
		Peak Reduce Physical memory (bytes)=272482304
		Peak Reduce Virtual memory (bytes)=3953401856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201104 13:05:44.100" starttime="20201104 13:05:44.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:05:44.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:05:44.101" starttime="20201104 13:05:44.100"></status>
</kw>
<status status="PASS" endtime="20201104 13:05:44.101" starttime="20201104 13:05:07.431"></status>
</kw>
<msg timestamp="20201104 13:05:44.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:05:44.102" starttime="20201104 13:05:07.431"></status>
</kw>
<msg timestamp="20201104 13:05:44.102" level="INFO">${output} = 2020-11-04 13:05:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-04 13:05:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201104 13:05:44.102" starttime="20201104 13:05:07.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:05:44.103" starttime="20201104 13:05:44.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201104 13:05:44.104" starttime="20201104 13:05:44.103"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201104 13:05:44.104" critical="yes" starttime="20201104 13:05:07.401"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201104 13:05:44.106" starttime="20201104 13:04:25.275"></status>
</suite>
<status status="PASS" elapsedtime="210295" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="600371" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
