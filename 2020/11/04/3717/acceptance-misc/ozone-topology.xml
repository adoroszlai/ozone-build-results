<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201104 13:17:42.779" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201104 13:14:35.786" starttime="20201104 13:14:35.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:14:35.792" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:14:35.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:14:35.881" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 04 Nov 2020 13:14:35 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 04 Nov 2020 12:38:16 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201104 13:14:35.881" starttime="20201104 13:14:35.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:14:35.882" level="INFO">HTTP/1.1 200 OK
Date: Wed, 04 Nov 2020 13:14:35 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 04 Nov 2020 12:38:16 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201104 13:14:35.882" starttime="20201104 13:14:35.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:14:35.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:14:35.883" starttime="20201104 13:14:35.882"></status>
</kw>
<status status="PASS" endtime="20201104 13:14:35.883" starttime="20201104 13:14:35.787"></status>
</kw>
<msg timestamp="20201104 13:14:35.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:14:35.883" starttime="20201104 13:14:35.786"></status>
</kw>
<msg timestamp="20201104 13:14:35.883" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 04 Nov 2020 13:14:35 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 04 Nov 2020 12:38:16 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201104 13:14:35.883" starttime="20201104 13:14:35.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201104 13:14:35.884" starttime="20201104 13:14:35.884"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:14:35.884" critical="yes" starttime="20201104 13:14:35.784"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:14:35.887" starttime="20201104 13:14:35.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:14:35.894" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:15:52.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:15:52.619" level="INFO">${output} = 2020-11-04 13:14:37,570 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:14:37,740 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:15:52.619" starttime="20201104 13:14:35.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:15:52.620" level="INFO">2020-11-04 13:14:37,570 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:14:37,740 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:14:37,740 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:14:39,908 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-04 13:14:39,908 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-04 13:14:39,912 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-04 13:14:39,912 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-04 13:14:39,912 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-04 13:14:39,912 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-04 13:14:39,913 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-04 13:14:39,924 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-04 13:14:39,936 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-04 13:14:39,946 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-04 13:14:39,993 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-78829, with hadoop as owner.
2020-11-04 13:14:40,271 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-82906, with hadoop as owner.
2020-11-04 13:14:40,283 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-66517, with hadoop as owner.
2020-11-04 13:14:40,294 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-77106, with hadoop as owner.
2020-11-04 13:14:40,305 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-74345, with hadoop as owner.
2020-11-04 13:14:40,329 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78829/bucket-0-49044, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,443 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82906/bucket-0-69287, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,454 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-66517/bucket-0-97805, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-77106/bucket-0-66044, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,484 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74345/bucket-0-90395, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,498 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78829/bucket-1-86285, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,507 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82906/bucket-1-20790, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,514 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-66517/bucket-1-04055, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-77106/bucket-1-89375, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74345/bucket-1-52336, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,540 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78829/bucket-2-44903, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,554 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82906/bucket-2-54069, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,561 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-66517/bucket-2-49959, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,570 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-77106/bucket-2-56149, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,582 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74345/bucket-2-74104, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,589 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78829/bucket-3-67464, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,601 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82906/bucket-3-09238, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,606 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-66517/bucket-3-66373, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,614 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-77106/bucket-3-75161, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74345/bucket-3-63598, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,623 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78829/bucket-4-66462, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,630 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82906/bucket-4-13846, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,636 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-66517/bucket-4-25925, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,641 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-77106/bucket-4-00211, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,645 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74345/bucket-4-32144, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:14:40,953 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-04 13:14:41,552 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-04 13:14:41,935 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:14:41,935 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-7E711AB7F53F-&gt;bb861295-94b2-47bb-be0f-638ec8530681
2020-11-04 13:14:41,936 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:14:41,954 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-04 13:14:42,954 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-04 13:14:43,955 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-04 13:14:44,969 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-04 13:14:45,050 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-58FD9B65E0D9-&gt;98888ad4-fe67-4f6f-b2f4-ad9706e86e53
2020-11-04 13:14:45,050 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:14:45,970 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-11-04 13:14:46,971 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-11-04 13:14:47,971 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-11-04 13:14:48,972 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-11-04 13:14:49,972 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-11-04 13:14:50,973 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-11-04 13:14:51,973 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-11-04 13:14:52,974 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-11-04 13:14:53,976 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-11-04 13:14:54,976 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-11-04 13:14:55,977 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-11-04 13:14:56,977 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-11-04 13:14:57,983 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-11-04 13:14:58,983 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-04 13:14:59,984 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-04 13:15:00,984 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-04 13:15:01,984 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-11-04 13:15:02,985 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-11-04 13:15:03,989 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-11-04 13:15:04,989 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-11-04 13:15:05,992 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-11-04 13:15:06,997 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-04 13:15:07,997 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-11-04 13:15:08,997 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-11-04 13:15:09,998 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-11-04 13:15:10,998 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-11-04 13:15:11,999 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-11-04 13:15:13,005 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-11-04 13:15:14,005 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-11-04 13:15:15,006 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-11-04 13:15:16,006 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-04 13:15:17,007 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-04 13:15:18,007 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-04 13:15:19,008 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-11-04 13:15:20,009 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-11-04 13:15:21,009 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-11-04 13:15:22,009 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-11-04 13:15:23,010 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-11-04 13:15:24,010 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-11-04 13:15:25,011 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-11-04 13:15:26,011 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-11-04 13:15:27,011 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-11-04 13:15:28,012 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-11-04 13:15:29,012 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-11-04 13:15:30,023 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-04 13:15:31,023 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-11-04 13:15:32,024 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-11-04 13:15:33,024 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-11-04 13:15:34,024 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-11-04 13:15:35,025 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-11-04 13:15:36,029 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-04 13:15:37,029 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-11-04 13:15:38,029 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-11-04 13:15:39,030 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-04 13:15:40,030 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-04 13:15:41,031 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-04 13:15:42,031 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-04 13:15:43,032 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-04 13:15:44,032 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-04 13:15:45,033 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-11-04 13:15:46,033 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-11-04 13:15:47,033 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,351
Average Time spent in bucket creation: 00:00:00,223
Average Time spent in key creation: 00:00:02,170
Average Time spent in key write: 00:00:00,759
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:14,350
***************************************************</msg>
<status status="PASS" endtime="20201104 13:15:52.621" starttime="20201104 13:15:52.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:15:52.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:15:52.621" starttime="20201104 13:15:52.621"></status>
</kw>
<status status="PASS" endtime="20201104 13:15:52.622" starttime="20201104 13:14:35.889"></status>
</kw>
<msg timestamp="20201104 13:15:52.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:15:52.622" starttime="20201104 13:14:35.889"></status>
</kw>
<msg timestamp="20201104 13:15:52.622" level="INFO">${result} = 2020-11-04 13:14:37,570 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:14:37,740 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:15:52.622" starttime="20201104 13:14:35.887"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201104 13:15:52.623" starttime="20201104 13:15:52.623"></status>
</kw>
<status status="PASS" endtime="20201104 13:15:52.623" starttime="20201104 13:15:52.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201104 13:15:52.624" starttime="20201104 13:15:52.623"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:15:52.624" critical="yes" starttime="20201104 13:14:35.885"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201104 13:15:52.625" starttime="20201104 13:14:35.734"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:15:57.357" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:15:59.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:15:59.807" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201104 13:15:59.807" starttime="20201104 13:15:57.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:15:59.808" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20201104 13:15:59.809" starttime="20201104 13:15:59.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:15:59.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:15:59.809" starttime="20201104 13:15:59.809"></status>
</kw>
<status status="PASS" endtime="20201104 13:15:59.810" starttime="20201104 13:15:57.352"></status>
</kw>
<msg timestamp="20201104 13:15:59.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:15:59.810" starttime="20201104 13:15:57.352"></status>
</kw>
<msg timestamp="20201104 13:15:59.810" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201104 13:15:59.810" starttime="20201104 13:15:57.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:15:59.811" starttime="20201104 13:15:59.810"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:15:59.811" critical="yes" starttime="20201104 13:15:57.350"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:15:59.816" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:16:02.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:16:02.194" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201104 13:16:02.194" starttime="20201104 13:15:59.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:16:02.196" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201104 13:16:02.196" starttime="20201104 13:16:02.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:16:02.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:16:02.196" starttime="20201104 13:16:02.196"></status>
</kw>
<status status="PASS" endtime="20201104 13:16:02.197" starttime="20201104 13:15:59.813"></status>
</kw>
<msg timestamp="20201104 13:16:02.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:16:02.197" starttime="20201104 13:15:59.813"></status>
</kw>
<msg timestamp="20201104 13:16:02.197" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201104 13:16:02.197" starttime="20201104 13:15:59.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:16:02.198" starttime="20201104 13:16:02.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201104 13:16:02.198" starttime="20201104 13:16:02.198"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:16:02.198" critical="yes" starttime="20201104 13:15:59.812"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201104 13:16:02.200" starttime="20201104 13:15:57.301"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:16:06.896" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:16:09.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:16:09.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:09.849" starttime="20201104 13:16:06.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:16:09.850" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:16:09.850" starttime="20201104 13:16:09.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:16:09.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:16:09.851" starttime="20201104 13:16:09.851"></status>
</kw>
<status status="PASS" endtime="20201104 13:16:09.851" starttime="20201104 13:16:06.891"></status>
</kw>
<msg timestamp="20201104 13:16:09.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:16:09.852" starttime="20201104 13:16:06.890"></status>
</kw>
<msg timestamp="20201104 13:16:09.852" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:09.852" starttime="20201104 13:16:06.890"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 13:16:09.852" starttime="20201104 13:16:09.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:16:09.856" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:16:12.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:16:12.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:12.812" starttime="20201104 13:16:09.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:16:12.813" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:16:12.813" starttime="20201104 13:16:12.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:16:12.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:16:12.814" starttime="20201104 13:16:12.814"></status>
</kw>
<status status="PASS" endtime="20201104 13:16:12.815" starttime="20201104 13:16:09.853"></status>
</kw>
<msg timestamp="20201104 13:16:12.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:16:12.815" starttime="20201104 13:16:09.853"></status>
</kw>
<msg timestamp="20201104 13:16:12.815" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:12.815" starttime="20201104 13:16:09.853"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 13:16:12.816" starttime="20201104 13:16:12.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:16:12.820" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:16:18.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:16:18.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:18.239" starttime="20201104 13:16:12.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:16:18.240" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:16:18.240" starttime="20201104 13:16:18.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:16:18.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:16:18.241" starttime="20201104 13:16:18.240"></status>
</kw>
<status status="PASS" endtime="20201104 13:16:18.241" starttime="20201104 13:16:12.817"></status>
</kw>
<msg timestamp="20201104 13:16:18.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:16:18.241" starttime="20201104 13:16:12.816"></status>
</kw>
<msg timestamp="20201104 13:16:18.241" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:18.241" starttime="20201104 13:16:12.816"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 13:16:18.242" starttime="20201104 13:16:18.242"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:16:18.243" critical="yes" starttime="20201104 13:16:06.889"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201104 13:16:18.246" starttime="20201104 13:16:06.839"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:17:31.089" level="INFO">${random} = 38745</msg>
<status status="PASS" endtime="20201104 13:17:31.089" starttime="20201104 13:17:31.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:17:31.096" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-38745 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:17:36.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:17:36.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:17:36.330" starttime="20201104 13:17:31.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:17:36.331" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:17:36.331" starttime="20201104 13:17:36.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:17:36.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:17:36.332" starttime="20201104 13:17:36.331"></status>
</kw>
<status status="PASS" endtime="20201104 13:17:36.332" starttime="20201104 13:17:31.090"></status>
</kw>
<msg timestamp="20201104 13:17:36.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:17:36.332" starttime="20201104 13:17:31.090"></status>
</kw>
<msg timestamp="20201104 13:17:36.332" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:17:36.333" starttime="20201104 13:17:31.089"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 13:17:36.333" starttime="20201104 13:17:36.333"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:17:36.333" critical="yes" starttime="20201104 13:17:31.087"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201104 13:17:36.335" starttime="20201104 13:17:31.036"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:16:25.025" level="INFO">${random} = 49417</msg>
<status status="PASS" endtime="20201104 13:16:25.025" starttime="20201104 13:16:25.024"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:16:25.031" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-49417 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:16:59.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:16:59.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:59.596" starttime="20201104 13:16:25.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:16:59.597" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:16:59.597" starttime="20201104 13:16:59.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:16:59.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:16:59.597" starttime="20201104 13:16:59.597"></status>
</kw>
<status status="PASS" endtime="20201104 13:16:59.598" starttime="20201104 13:16:25.026"></status>
</kw>
<msg timestamp="20201104 13:16:59.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:16:59.598" starttime="20201104 13:16:25.025"></status>
</kw>
<msg timestamp="20201104 13:16:59.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:16:59.598" starttime="20201104 13:16:25.025"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201104 13:16:59.599" starttime="20201104 13:16:59.598"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:16:59.599" critical="yes" starttime="20201104 13:16:25.023"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201104 13:16:59.601" starttime="20201104 13:16:24.973"></status>
</suite>
<status status="PASS" elapsedtime="133124" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
