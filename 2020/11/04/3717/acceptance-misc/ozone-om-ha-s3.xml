<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201104 13:13:34.377" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-om-ha-s3">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:52.905" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:01.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:01.512" level="INFO">${output} = 2020-11-04 13:10:54,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:10:54,804 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:01.512" starttime="20201104 13:10:52.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:01.513" level="INFO">2020-11-04 13:10:54,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:10:54,804 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:10:54,804 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:10:55,991 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-04 13:10:55,993 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-04 13:10:55,993 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-04 13:10:55,993 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-04 13:10:55,993 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-04 13:10:55,993 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-04 13:10:55,993 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-04 13:10:55,995 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-04 13:10:56,007 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:10:56,060 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-23070, with hadoop as owner.
2020-11-04 13:10:56,119 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-23070/bucket-0-36490, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:10:56,587 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-04 13:10:57,011 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,079
Average Time spent in bucket creation: 00:00:00,033
Average Time spent in key creation: 00:00:00,080
Average Time spent in key write: 00:00:00,604
Total bytes written: 10240
Total Execution time: 00:00:06,157
***************************************************</msg>
<status status="PASS" endtime="20201104 13:11:01.513" starttime="20201104 13:11:01.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:01.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:01.514" starttime="20201104 13:11:01.514"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:01.514" starttime="20201104 13:10:52.901"></status>
</kw>
<msg timestamp="20201104 13:11:01.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:01.515" starttime="20201104 13:10:52.901"></status>
</kw>
<msg timestamp="20201104 13:11:01.515" level="INFO">${result} = 2020-11-04 13:10:54,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:10:54,804 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:01.515" starttime="20201104 13:10:52.900"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:01.516" starttime="20201104 13:11:01.516"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:01.516" starttime="20201104 13:11:01.515"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:11:01.516" critical="yes" starttime="20201104 13:10:52.899"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:01.524" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:07.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:07.417" level="INFO">${output} = 2020-11-04 13:11:03,325 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:03,503 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:07.417" starttime="20201104 13:11:01.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:07.420" level="INFO">2020-11-04 13:11:03,325 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:03,503 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:11:03,504 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:11:03,648 [main] INFO freon.BaseFreonGenerator: Executing test with prefix to4ysxeg4a
2020-11-04 13:11:03,661 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:11:04,665 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:11:04,760 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-11-04 13:11:04,805 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:11:05,301 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-04 13:11:05,652 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:11:05,653 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F197135BE92C-&gt;c82f2f0e-5ecd-4c58-b721-3de1f2a9f39b
2020-11-04 13:11:05,655 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:11:05,665 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:11:06,666 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-04 13:11:06,990 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1513.592555, max=1513.592555, mean=1513.592555, stddev=0.0, median=1513.592555, p75=1513.592555, p95=1513.592555, p98=1513.592555, p99=1513.592555, p999=1513.592555, mean_rate=0.46601562984547035, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-04 13:11:06,990 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-04 13:11:06,991 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-04 13:11:06,991 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201104 13:11:07.420" starttime="20201104 13:11:07.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:07.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:07.421" starttime="20201104 13:11:07.420"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:07.421" starttime="20201104 13:11:01.519"></status>
</kw>
<msg timestamp="20201104 13:11:07.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:07.421" starttime="20201104 13:11:01.519"></status>
</kw>
<msg timestamp="20201104 13:11:07.421" level="INFO">${result} = 2020-11-04 13:11:03,325 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:03,503 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:07.422" starttime="20201104 13:11:01.518"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:07.422" starttime="20201104 13:11:07.422"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:07.423" starttime="20201104 13:11:07.422"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:11:07.423" critical="yes" starttime="20201104 13:11:01.517"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:07.428" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:11.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:11.745" level="INFO">${output} = 2020-11-04 13:11:09,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:09,387 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:11.745" starttime="20201104 13:11:07.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:11.746" level="INFO">2020-11-04 13:11:09,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:09,387 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:11:09,387 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:11:09,541 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5psea2v3sn
2020-11-04 13:11:09,566 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:11:10,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:11:11,578 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-04 13:11:11,691 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=92.447622, max=92.447622, mean=92.447622, stddev=0.0, median=92.447622, p75=92.447622, p95=92.447622, p98=92.447622, p99=92.447622, p999=92.447622, mean_rate=0.8617560604059217, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-04 13:11:11,695 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-04 13:11:11,696 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-04 13:11:11,696 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201104 13:11:11.746" starttime="20201104 13:11:11.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:11.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:11.747" starttime="20201104 13:11:11.746"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:11.747" starttime="20201104 13:11:07.426"></status>
</kw>
<msg timestamp="20201104 13:11:11.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:11.747" starttime="20201104 13:11:07.425"></status>
</kw>
<msg timestamp="20201104 13:11:11.747" level="INFO">${result} = 2020-11-04 13:11:09,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:09,387 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:11.748" starttime="20201104 13:11:07.424"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:11.748" starttime="20201104 13:11:11.748"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:11.749" starttime="20201104 13:11:11.748"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:11:11.749" critical="yes" starttime="20201104 13:11:07.423"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:11.754" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:15.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:15.928" level="INFO">${output} = 2020-11-04 13:11:13,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:13,687 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:15.928" starttime="20201104 13:11:11.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:15.929" level="INFO">2020-11-04 13:11:13,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:13,687 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:11:13,687 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:11:13,863 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kshgy1jcvm
2020-11-04 13:11:13,879 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:11:14,890 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-04 13:11:15,912 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=29.491922, max=29.491922, mean=29.491922, stddev=0.0, median=29.491922, p75=29.491922, p95=29.491922, p98=29.491922, p99=29.491922, p999=29.491922, mean_rate=0.8783879753605146, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-04 13:11:15,912 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-04 13:11:15,912 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-04 13:11:15,913 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201104 13:11:15.929" starttime="20201104 13:11:15.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:15.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:15.930" starttime="20201104 13:11:15.929"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:15.930" starttime="20201104 13:11:11.751"></status>
</kw>
<msg timestamp="20201104 13:11:15.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:15.930" starttime="20201104 13:11:11.751"></status>
</kw>
<msg timestamp="20201104 13:11:15.931" level="INFO">${result} = 2020-11-04 13:11:13,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:11:13,687 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:11:15.931" starttime="20201104 13:11:11.750"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:15.932" starttime="20201104 13:11:15.931"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:15.932" starttime="20201104 13:11:15.931"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:11:15.932" critical="yes" starttime="20201104 13:11:11.750"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201104 13:11:15.933" starttime="20201104 13:10:52.873"></status>
</suite>
<status status="PASS" endtime="20201104 13:11:15.936" starttime="20201104 13:10:52.843"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s2" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:11:20.772" level="INFO">${random} = 33762</msg>
<status status="PASS" endtime="20201104 13:11:20.772" starttime="20201104 13:11:20.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201104 13:11:20.774" level="INFO">${source} = 33762-source</msg>
<status status="PASS" endtime="20201104 13:11:20.774" starttime="20201104 13:11:20.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201104 13:11:20.775" level="INFO">${target} = 33762-target</msg>
<status status="PASS" endtime="20201104 13:11:20.775" starttime="20201104 13:11:20.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:20.781" level="INFO">Running command 'ozone sh volume create 33762-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:24.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:24.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:24.055" starttime="20201104 13:11:20.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:24.056" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:24.056" starttime="20201104 13:11:24.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:24.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:24.056" starttime="20201104 13:11:24.056"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:24.057" starttime="20201104 13:11:20.776"></status>
</kw>
<msg timestamp="20201104 13:11:24.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:24.057" starttime="20201104 13:11:20.775"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:24.057" starttime="20201104 13:11:20.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:24.061" level="INFO">Running command 'ozone sh volume create 33762-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:27.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:27.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:27.113" starttime="20201104 13:11:24.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:27.114" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:27.114" starttime="20201104 13:11:27.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:27.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:27.114" starttime="20201104 13:11:27.114"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:27.115" starttime="20201104 13:11:24.058"></status>
</kw>
<msg timestamp="20201104 13:11:27.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:27.115" starttime="20201104 13:11:24.058"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:27.115" starttime="20201104 13:11:24.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:27.116" starttime="20201104 13:11:27.115"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:27.116" starttime="20201104 13:11:20.772"></status>
</kw>
<test id="s1-s2-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:27.117" starttime="20201104 13:11:27.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:27.121" level="INFO">Running command 'ozone sh bucket link 33762-source/no-such-bucket 33762-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:30.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:30.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:30.422" starttime="20201104 13:11:27.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:30.423" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:30.423" starttime="20201104 13:11:30.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:30.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:30.424" starttime="20201104 13:11:30.423"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:30.424" starttime="20201104 13:11:27.119"></status>
</kw>
<msg timestamp="20201104 13:11:30.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:30.425" starttime="20201104 13:11:27.118"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:30.425" starttime="20201104 13:11:27.118"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:30.429" level="INFO">Running command 'ozone sh key list 33762-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:33.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:11:33.206" level="INFO">${output} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201104 13:11:33.206" starttime="20201104 13:11:30.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:33.207" level="INFO">BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201104 13:11:33.207" starttime="20201104 13:11:33.206"></status>
</kw>
<msg timestamp="20201104 13:11:33.208" level="INFO">${result} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201104 13:11:33.208" starttime="20201104 13:11:30.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:33.208" starttime="20201104 13:11:33.208"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:11:33.208" critical="yes" starttime="20201104 13:11:27.116"></status>
</test>
<test id="s1-s2-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:33.210" starttime="20201104 13:11:33.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:33.215" level="INFO">Running command 'ozone sh bucket link 33762-source/bucket1 33762-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:36.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:36.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:36.149" starttime="20201104 13:11:33.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:36.150" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:36.150" starttime="20201104 13:11:36.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:36.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:36.150" starttime="20201104 13:11:36.150"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:36.151" starttime="20201104 13:11:33.211"></status>
</kw>
<msg timestamp="20201104 13:11:36.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:36.151" starttime="20201104 13:11:33.211"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:36.151" starttime="20201104 13:11:33.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:36.155" level="INFO">Running command 'ozone sh bucket create 33762-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:39.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:39.167" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:39.167" starttime="20201104 13:11:36.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:39.168" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:39.169" starttime="20201104 13:11:39.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:39.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:39.170" starttime="20201104 13:11:39.169"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:39.170" starttime="20201104 13:11:36.152"></status>
</kw>
<msg timestamp="20201104 13:11:39.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:39.170" starttime="20201104 13:11:36.152"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:39.170" starttime="20201104 13:11:36.151"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:39.174" level="INFO">Running command 'ozone sh key put 33762-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:46.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:46.638" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:46.638" starttime="20201104 13:11:39.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:46.639" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:46.639" starttime="20201104 13:11:46.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:46.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:46.640" starttime="20201104 13:11:46.639"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:46.640" starttime="20201104 13:11:39.171"></status>
</kw>
<msg timestamp="20201104 13:11:46.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:46.640" starttime="20201104 13:11:39.171"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:46.641" starttime="20201104 13:11:39.170"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:11:46.642" level="INFO">${postfix} = 19949</msg>
<status status="PASS" endtime="20201104 13:11:46.643" starttime="20201104 13:11:46.642"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201104 13:11:46.643" level="INFO">${tmpfile} = /tmp/tempkey-19949</msg>
<status status="PASS" endtime="20201104 13:11:46.643" starttime="20201104 13:11:46.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:46.647" level="INFO">Running command 'ozone sh key get -f 33762-target/link1/key1 /tmp/tempkey-19949 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:51.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:51.374" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:51.374" starttime="20201104 13:11:46.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:51.375" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:51.375" starttime="20201104 13:11:51.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:51.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:51.376" starttime="20201104 13:11:51.376"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:51.376" starttime="20201104 13:11:46.644"></status>
</kw>
<msg timestamp="20201104 13:11:51.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:51.377" starttime="20201104 13:11:46.644"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:51.377" starttime="20201104 13:11:46.643"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201104 13:11:51.380" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-19949 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:51.383" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201104 13:11:51.383" starttime="20201104 13:11:51.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:51.388" level="INFO">Running command 'rm -f /tmp/tempkey-19949 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:51.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:51.391" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:51.391" starttime="20201104 13:11:51.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:51.392" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:51.392" starttime="20201104 13:11:51.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:51.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:51.392" starttime="20201104 13:11:51.392"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:51.393" starttime="20201104 13:11:51.384"></status>
</kw>
<msg timestamp="20201104 13:11:51.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:51.393" starttime="20201104 13:11:51.384"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:51.393" starttime="20201104 13:11:51.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:11:51.394" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201104 13:11:51.394" starttime="20201104 13:11:51.393"></status>
</kw>
<msg timestamp="20201104 13:11:51.394" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201104 13:11:51.394" starttime="20201104 13:11:46.641"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:51.395" starttime="20201104 13:11:51.394"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:51.395" starttime="20201104 13:11:46.641"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:11:51.395" critical="yes" starttime="20201104 13:11:33.209"></status>
</test>
<test id="s1-s2-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:11:51.397" starttime="20201104 13:11:51.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:51.408" level="INFO">Running command 'ozone sh key put 33762-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:11:56.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:11:56.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:11:56.650" starttime="20201104 13:11:51.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:11:56.651" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:11:56.651" starttime="20201104 13:11:56.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:11:56.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:11:56.652" starttime="20201104 13:11:56.651"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:56.653" starttime="20201104 13:11:51.398"></status>
</kw>
<msg timestamp="20201104 13:11:56.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:11:56.653" starttime="20201104 13:11:51.398"></status>
</kw>
<status status="PASS" endtime="20201104 13:11:56.653" starttime="20201104 13:11:51.397"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:11:56.655" level="INFO">${postfix} = 99678</msg>
<status status="PASS" endtime="20201104 13:11:56.655" starttime="20201104 13:11:56.655"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201104 13:11:56.656" level="INFO">${tmpfile} = /tmp/tempkey-99678</msg>
<status status="PASS" endtime="20201104 13:11:56.656" starttime="20201104 13:11:56.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:11:56.661" level="INFO">Running command 'ozone sh key get -f 33762-source/bucket1/key2 /tmp/tempkey-99678 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:01.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:01.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:01.390" starttime="20201104 13:11:56.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:01.391" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:01.391" starttime="20201104 13:12:01.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:01.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:01.392" starttime="20201104 13:12:01.391"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:01.392" starttime="20201104 13:11:56.658"></status>
</kw>
<msg timestamp="20201104 13:12:01.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:01.393" starttime="20201104 13:11:56.658"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:01.393" starttime="20201104 13:11:56.656"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201104 13:12:01.395" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-99678 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:01.398" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201104 13:12:01.398" starttime="20201104 13:12:01.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:01.403" level="INFO">Running command 'rm -f /tmp/tempkey-99678 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:01.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:01.413" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:01.413" starttime="20201104 13:12:01.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:01.414" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:01.414" starttime="20201104 13:12:01.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:01.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:01.415" starttime="20201104 13:12:01.415"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:01.415" starttime="20201104 13:12:01.399"></status>
</kw>
<msg timestamp="20201104 13:12:01.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:01.416" starttime="20201104 13:12:01.399"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:01.416" starttime="20201104 13:12:01.398"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:12:01.416" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201104 13:12:01.416" starttime="20201104 13:12:01.416"></status>
</kw>
<msg timestamp="20201104 13:12:01.417" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201104 13:12:01.417" starttime="20201104 13:11:56.654"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:01.417" starttime="20201104 13:12:01.417"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:01.417" starttime="20201104 13:11:56.654"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:01.418" critical="yes" starttime="20201104 13:11:51.396"></status>
</test>
<test id="s1-s2-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:01.420" starttime="20201104 13:12:01.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:01.429" level="INFO">Running command 'ozone sh key list 33762-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:04.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:04.738" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:12:04.738" starttime="20201104 13:12:01.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:04.739" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201104 13:12:04.739" starttime="20201104 13:12:04.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:04.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:04.740" starttime="20201104 13:12:04.739"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:04.740" starttime="20201104 13:12:01.421"></status>
</kw>
<msg timestamp="20201104 13:12:04.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:04.740" starttime="20201104 13:12:01.420"></status>
</kw>
<msg timestamp="20201104 13:12:04.741" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:12:04.741" starttime="20201104 13:12:01.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:04.744" level="INFO">Running command 'ozone sh key list 33762-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:07.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:07.848" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:12:07.849" starttime="20201104 13:12:04.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:07.850" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201104 13:12:07.850" starttime="20201104 13:12:07.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:07.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:07.850" starttime="20201104 13:12:07.850"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:07.851" starttime="20201104 13:12:04.742"></status>
</kw>
<msg timestamp="20201104 13:12:07.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:07.851" starttime="20201104 13:12:04.742"></status>
</kw>
<msg timestamp="20201104 13:12:07.851" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:12:07.851" starttime="20201104 13:12:04.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:07.852" starttime="20201104 13:12:07.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:07.852" starttime="20201104 13:12:07.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:07.853" starttime="20201104 13:12:07.852"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:07.853" critical="yes" starttime="20201104 13:12:01.418"></status>
</test>
<test id="s1-s2-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:07.855" starttime="20201104 13:12:07.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:07.861" level="INFO">Running command 'ozone sh key delete 33762-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:10.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:10.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:10.890" starttime="20201104 13:12:07.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:10.891" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:10.891" starttime="20201104 13:12:10.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:10.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:10.892" starttime="20201104 13:12:10.891"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:10.892" starttime="20201104 13:12:07.856"></status>
</kw>
<msg timestamp="20201104 13:12:10.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:10.892" starttime="20201104 13:12:07.856"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:10.893" starttime="20201104 13:12:07.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:10.898" level="INFO">Running command 'ozone sh key list 33762-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:14.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:14.237" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201104 13:12:14.237" starttime="20201104 13:12:10.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:14.239" level="INFO">key1</msg>
<status status="PASS" endtime="20201104 13:12:14.239" starttime="20201104 13:12:14.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:14.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:14.239" starttime="20201104 13:12:14.239"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:14.240" starttime="20201104 13:12:10.894"></status>
</kw>
<msg timestamp="20201104 13:12:14.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:14.240" starttime="20201104 13:12:10.893"></status>
</kw>
<msg timestamp="20201104 13:12:14.240" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201104 13:12:14.240" starttime="20201104 13:12:10.893"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:14.241" starttime="20201104 13:12:14.240"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:14.241" critical="yes" starttime="20201104 13:12:07.854"></status>
</test>
<test id="s1-s2-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:14.243" starttime="20201104 13:12:14.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:14.248" level="INFO">Running command 'ozone sh bucket list 33762-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:17.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:17.547" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:11:30.128Z",
 ...</msg>
<status status="PASS" endtime="20201104 13:12:17.547" starttime="20201104 13:12:14.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:17.548" level="INFO">{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:11:30.128Z",
  "modificationTime" : "2020-11-04T13:11:30.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:11:35.969Z",
  "modificationTime" : "2020-11-04T13:11:35.969Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 13:12:17.549" starttime="20201104 13:12:17.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:17.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:17.549" starttime="20201104 13:12:17.549"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:17.550" starttime="20201104 13:12:14.244"></status>
</kw>
<msg timestamp="20201104 13:12:17.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:17.550" starttime="20201104 13:12:14.244"></status>
</kw>
<msg timestamp="20201104 13:12:17.550" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:11:30.128Z",
 ...</msg>
<status status="PASS" endtime="20201104 13:12:17.550" starttime="20201104 13:12:14.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:17.551" starttime="20201104 13:12:17.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:17.551" starttime="20201104 13:12:17.551"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:17.551" critical="yes" starttime="20201104 13:12:14.242"></status>
</test>
<test id="s1-s2-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:17.553" starttime="20201104 13:12:17.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:17.557" level="INFO">Running command 'ozone sh bucket info 33762-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:21.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:21.020" level="INFO">${output} = 33762-source bucket1</msg>
<status status="PASS" endtime="20201104 13:12:21.021" starttime="20201104 13:12:17.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:21.022" level="INFO">33762-source bucket1</msg>
<status status="PASS" endtime="20201104 13:12:21.022" starttime="20201104 13:12:21.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:21.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:21.023" starttime="20201104 13:12:21.022"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:21.023" starttime="20201104 13:12:17.554"></status>
</kw>
<msg timestamp="20201104 13:12:21.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:21.023" starttime="20201104 13:12:17.554"></status>
</kw>
<msg timestamp="20201104 13:12:21.023" level="INFO">${result} = 33762-source bucket1</msg>
<status status="PASS" endtime="20201104 13:12:21.023" starttime="20201104 13:12:17.553"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:21.024" starttime="20201104 13:12:21.023"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:21.024" critical="yes" starttime="20201104 13:12:17.552"></status>
</test>
<test id="s1-s2-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:21.026" starttime="20201104 13:12:21.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:21.030" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 33762-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:23.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:23.674" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:12:23.674" starttime="20201104 13:12:21.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:23.675" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:12:23.675" starttime="20201104 13:12:23.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:23.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:23.675" starttime="20201104 13:12:23.675"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:23.676" starttime="20201104 13:12:21.027"></status>
</kw>
<msg timestamp="20201104 13:12:23.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:23.676" starttime="20201104 13:12:21.027"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:23.676" starttime="20201104 13:12:21.026"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:23.681" level="INFO">Running command 'ozone sh bucket getacl 33762-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:27.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:27.105" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201104 13:12:27.106" starttime="20201104 13:12:23.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:27.107" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201104 13:12:27.107" starttime="20201104 13:12:27.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:27.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:27.108" starttime="20201104 13:12:27.107"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:27.108" starttime="20201104 13:12:23.678"></status>
</kw>
<msg timestamp="20201104 13:12:27.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:27.108" starttime="20201104 13:12:23.678"></status>
</kw>
<msg timestamp="20201104 13:12:27.108" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201104 13:12:27.108" starttime="20201104 13:12:23.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:27.109" starttime="20201104 13:12:27.108"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:27.109" starttime="20201104 13:12:23.676"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:27.115" level="INFO">Running command 'ozone sh bucket getacl 33762-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:30.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:30.396" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:30.396" starttime="20201104 13:12:27.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:30.397" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:30.398" starttime="20201104 13:12:30.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:30.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:30.398" starttime="20201104 13:12:30.398"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:30.399" starttime="20201104 13:12:27.111"></status>
</kw>
<msg timestamp="20201104 13:12:30.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:30.399" starttime="20201104 13:12:27.111"></status>
</kw>
<msg timestamp="20201104 13:12:30.399" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201104 13:12:30.399" starttime="20201104 13:12:27.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:30.400" starttime="20201104 13:12:30.399"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:30.400" starttime="20201104 13:12:27.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:30.403" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 33762-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:33.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:33.221" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:12:33.221" starttime="20201104 13:12:30.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:33.223" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:12:33.223" starttime="20201104 13:12:33.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:33.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:33.223" starttime="20201104 13:12:33.223"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:33.224" starttime="20201104 13:12:30.401"></status>
</kw>
<msg timestamp="20201104 13:12:33.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:33.224" starttime="20201104 13:12:30.400"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:33.224" starttime="20201104 13:12:30.400"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:33.229" level="INFO">Running command 'ozone sh bucket getacl 33762-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:36.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:36.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:36.551" starttime="20201104 13:12:33.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:36.552" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:36.552" starttime="20201104 13:12:36.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:36.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:36.553" starttime="20201104 13:12:36.552"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:36.553" starttime="20201104 13:12:33.226"></status>
</kw>
<msg timestamp="20201104 13:12:36.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:36.554" starttime="20201104 13:12:33.226"></status>
</kw>
<msg timestamp="20201104 13:12:36.554" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201104 13:12:36.554" starttime="20201104 13:12:33.225"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:36.554" starttime="20201104 13:12:36.554"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:36.555" starttime="20201104 13:12:33.224"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:36.559" level="INFO">Running command 'ozone sh bucket getacl 33762-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:40.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:40.071" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201104 13:12:40.071" starttime="20201104 13:12:36.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:40.072" level="INFO">READ</msg>
<status status="PASS" endtime="20201104 13:12:40.072" starttime="20201104 13:12:40.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:40.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:40.073" starttime="20201104 13:12:40.073"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:40.073" starttime="20201104 13:12:36.556"></status>
</kw>
<msg timestamp="20201104 13:12:40.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:40.074" starttime="20201104 13:12:36.556"></status>
</kw>
<msg timestamp="20201104 13:12:40.074" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201104 13:12:40.074" starttime="20201104 13:12:36.555"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:40.074" starttime="20201104 13:12:40.074"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:40.075" starttime="20201104 13:12:36.555"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:40.075" critical="yes" starttime="20201104 13:12:21.025"></status>
</test>
<test id="s1-s2-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:40.077" starttime="20201104 13:12:40.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:40.081" level="INFO">Running command 'ozone sh bucket link 33762-source/bucket2 33762-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:43.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:43.000" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:43.000" starttime="20201104 13:12:40.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:43.002" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:43.002" starttime="20201104 13:12:43.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:43.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:43.003" starttime="20201104 13:12:43.002"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:43.003" starttime="20201104 13:12:40.078"></status>
</kw>
<msg timestamp="20201104 13:12:43.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:43.003" starttime="20201104 13:12:40.077"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:43.004" starttime="20201104 13:12:40.077"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:43.011" level="INFO">Running command 'ozone sh bucket create 33762-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:46.136" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:12:46.136" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:12:46.136" starttime="20201104 13:12:43.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:46.138" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:12:46.138" starttime="20201104 13:12:46.137"></status>
</kw>
<msg timestamp="20201104 13:12:46.138" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:12:46.138" starttime="20201104 13:12:43.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:46.139" starttime="20201104 13:12:46.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:46.142" level="INFO">Running command 'ozone sh bucket create 33762-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:49.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:49.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:49.522" starttime="20201104 13:12:46.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:49.523" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:49.524" starttime="20201104 13:12:49.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:49.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:49.524" starttime="20201104 13:12:49.524"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:49.524" starttime="20201104 13:12:46.140"></status>
</kw>
<msg timestamp="20201104 13:12:49.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:49.525" starttime="20201104 13:12:46.139"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:49.525" starttime="20201104 13:12:46.139"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:49.529" level="INFO">Running command 'ozone sh bucket link 33762-source/bucket1 33762-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:52.528" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:12:52.528" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:12:52.528" starttime="20201104 13:12:49.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:52.530" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:12:52.530" starttime="20201104 13:12:52.529"></status>
</kw>
<msg timestamp="20201104 13:12:52.530" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:12:52.530" starttime="20201104 13:12:49.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.531" starttime="20201104 13:12:52.530"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:52.531" critical="yes" starttime="20201104 13:12:40.075"></status>
</test>
<test id="s1-s2-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.533" starttime="20201104 13:12:52.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.533" starttime="20201104 13:12:52.533"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:52.533" critical="yes" starttime="20201104 13:12:52.532"></status>
</test>
<test id="s1-s2-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.535" starttime="20201104 13:12:52.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.535" starttime="20201104 13:12:52.535"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:52.536" critical="yes" starttime="20201104 13:12:52.534"></status>
</test>
<test id="s1-s2-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.538" starttime="20201104 13:12:52.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.538" starttime="20201104 13:12:52.538"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:12:52.538" critical="yes" starttime="20201104 13:12:52.536"></status>
</test>
<test id="s1-s2-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:12:52.539" starttime="20201104 13:12:52.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:52.544" level="INFO">Running command 'ozone sh bucket link 33762-target/loop1 33762-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:55.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:55.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:55.618" starttime="20201104 13:12:52.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:55.619" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:55.619" starttime="20201104 13:12:55.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:55.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:55.620" starttime="20201104 13:12:55.620"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:55.620" starttime="20201104 13:12:52.540"></status>
</kw>
<msg timestamp="20201104 13:12:55.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:55.621" starttime="20201104 13:12:52.540"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:55.621" starttime="20201104 13:12:52.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:55.626" level="INFO">Running command 'ozone sh bucket link 33762-target/loop2 33762-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:12:58.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:12:58.584" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:12:58.584" starttime="20201104 13:12:55.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:12:58.585" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:12:58.585" starttime="20201104 13:12:58.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:12:58.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:12:58.586" starttime="20201104 13:12:58.586"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:58.586" starttime="20201104 13:12:55.622"></status>
</kw>
<msg timestamp="20201104 13:12:58.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:12:58.587" starttime="20201104 13:12:55.622"></status>
</kw>
<status status="PASS" endtime="20201104 13:12:58.587" starttime="20201104 13:12:55.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:12:58.595" level="INFO">Running command 'ozone sh bucket link 33762-target/loop3 33762-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:01.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:01.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:13:01.385" starttime="20201104 13:12:58.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:01.386" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:13:01.386" starttime="20201104 13:13:01.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:01.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:01.386" starttime="20201104 13:13:01.386"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:01.387" starttime="20201104 13:12:58.588"></status>
</kw>
<msg timestamp="20201104 13:13:01.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:01.387" starttime="20201104 13:12:58.587"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:01.387" starttime="20201104 13:12:58.587"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:01.392" level="INFO">Running command 'ozone sh key list 33762-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:04.096" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:13:04.096" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201104 13:13:04.096" starttime="20201104 13:13:01.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:04.097" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201104 13:13:04.097" starttime="20201104 13:13:04.096"></status>
</kw>
<msg timestamp="20201104 13:13:04.098" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201104 13:13:04.098" starttime="20201104 13:13:01.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201104 13:13:04.098" starttime="20201104 13:13:04.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:13:04.099" critical="yes" starttime="20201104 13:12:52.538"></status>
</test>
<test id="s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:13:04.101" starttime="20201104 13:13:04.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:04.106" level="INFO">Running command 'ozone sh bucket link 33762-source/bucket1 33762-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:07.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:07.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:13:07.090" starttime="20201104 13:13:04.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:07.092" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:13:07.092" starttime="20201104 13:13:07.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:07.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:07.092" starttime="20201104 13:13:07.092"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:07.093" starttime="20201104 13:13:04.102"></status>
</kw>
<msg timestamp="20201104 13:13:07.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:07.093" starttime="20201104 13:13:04.102"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:07.093" starttime="20201104 13:13:04.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:07.097" level="INFO">Running command 'ozone sh key put 33762-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:12.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:12.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:13:12.392" starttime="20201104 13:13:07.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:12.394" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:13:12.394" starttime="20201104 13:13:12.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:12.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:12.395" starttime="20201104 13:13:12.394"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:12.395" starttime="20201104 13:13:07.094"></status>
</kw>
<msg timestamp="20201104 13:13:12.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:12.395" starttime="20201104 13:13:07.094"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:12.395" starttime="20201104 13:13:07.093"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:13:12.397" level="INFO">${postfix} = 79812</msg>
<status status="PASS" endtime="20201104 13:13:12.398" starttime="20201104 13:13:12.397"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201104 13:13:12.398" level="INFO">${tmpfile} = /tmp/tempkey-79812</msg>
<status status="PASS" endtime="20201104 13:13:12.398" starttime="20201104 13:13:12.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:12.402" level="INFO">Running command 'ozone sh key get -f 33762-target/link1/key3 /tmp/tempkey-79812 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:17.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:17.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:13:17.200" starttime="20201104 13:13:12.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:17.203" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:13:17.203" starttime="20201104 13:13:17.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:17.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:17.204" starttime="20201104 13:13:17.203"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:17.205" starttime="20201104 13:13:12.399"></status>
</kw>
<msg timestamp="20201104 13:13:17.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:17.205" starttime="20201104 13:13:12.399"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:17.205" starttime="20201104 13:13:12.398"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201104 13:13:17.209" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-79812 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:17.212" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201104 13:13:17.212" starttime="20201104 13:13:17.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:17.216" level="INFO">Running command 'rm -f /tmp/tempkey-79812 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:17.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:17.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:13:17.218" starttime="20201104 13:13:17.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:17.219" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:13:17.219" starttime="20201104 13:13:17.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:17.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:17.220" starttime="20201104 13:13:17.220"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:17.220" starttime="20201104 13:13:17.213"></status>
</kw>
<msg timestamp="20201104 13:13:17.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:17.221" starttime="20201104 13:13:17.213"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:17.221" starttime="20201104 13:13:17.212"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:13:17.221" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201104 13:13:17.221" starttime="20201104 13:13:17.221"></status>
</kw>
<msg timestamp="20201104 13:13:17.222" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201104 13:13:17.222" starttime="20201104 13:13:12.396"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:13:17.222" starttime="20201104 13:13:17.222"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:17.222" starttime="20201104 13:13:12.396"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:13:17.223" critical="yes" starttime="20201104 13:13:04.099"></status>
</test>
<test id="s1-s2-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:13:17.224" starttime="20201104 13:13:17.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:17.229" level="INFO">Running command 'ozone sh bucket delete 33762-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:20.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:20.011" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:13:20.011" starttime="20201104 13:13:17.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:20.012" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:13:20.012" starttime="20201104 13:13:20.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:20.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:20.013" starttime="20201104 13:13:20.012"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:20.014" starttime="20201104 13:13:17.225"></status>
</kw>
<msg timestamp="20201104 13:13:20.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:20.014" starttime="20201104 13:13:17.225"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:20.014" starttime="20201104 13:13:17.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:20.020" level="INFO">Running command 'ozone sh bucket list 33762-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:23.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:23.091" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:12:49.329Z",
  "modi...</msg>
<status status="PASS" endtime="20201104 13:13:23.091" starttime="20201104 13:13:20.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:23.092" level="INFO">{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:12:49.329Z",
  "modificationTime" : "2020-11-04T13:12:49.329Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:11:30.128Z",
  "modificationTime" : "2020-11-04T13:11:30.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:12:42.900Z",
  "modificationTime" : "2020-11-04T13:12:42.900Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:13:06.875Z",
  "modificationTime" : "2020-11-04T13:13:06.875Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:13:01.208Z",
  "modificationTime" : "2020-11-04T13:13:01.208Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:12:55.386Z",
  "modificationTime" : "2020-11-04T13:12:55.386Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:12:58.427Z",
  "modificationTime" : "2020-11-04T13:12:58.427Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "33762-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 13:13:23.092" starttime="20201104 13:13:23.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:23.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:23.093" starttime="20201104 13:13:23.093"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:23.093" starttime="20201104 13:13:20.015"></status>
</kw>
<msg timestamp="20201104 13:13:23.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:23.094" starttime="20201104 13:13:20.015"></status>
</kw>
<msg timestamp="20201104 13:13:23.094" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "33762-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:12:49.329Z",
  "modi...</msg>
<status status="PASS" endtime="20201104 13:13:23.094" starttime="20201104 13:13:20.014"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:13:23.095" starttime="20201104 13:13:23.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:13:23.100" level="INFO">Running command 'ozone sh key list 33762-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:13:26.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:13:26.180" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201104 13:13:26.180" starttime="20201104 13:13:23.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:13:26.182" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201104 13:13:26.182" starttime="20201104 13:13:26.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:13:26.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:13:26.182" starttime="20201104 13:13:26.182"></status>
</kw>
<status status="PASS" endtime="20201104 13:13:26.183" starttime="20201104 13:13:23.096"></status>
</kw>
<msg timestamp="20201104 13:13:26.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:13:26.183" starttime="20201104 13:13:23.095"></status>
</kw>
<msg timestamp="20201104 13:13:26.183" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201104 13:13:26.183" starttime="20201104 13:13:23.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:13:26.184" starttime="20201104 13:13:26.183"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:13:26.184" critical="yes" starttime="20201104 13:13:17.223"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201104 13:13:26.186" starttime="20201104 13:11:20.712"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3" id="s1-s3" name="S3">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:08:26.500" level="INFO">${random} = 56540</msg>
<status status="PASS" endtime="20201104 13:08:26.500" starttime="20201104 13:08:26.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:08:26.501" level="INFO">${PREFIX} = 56540</msg>
<status status="PASS" endtime="20201104 13:08:26.501" starttime="20201104 13:08:26.500"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:26.501" starttime="20201104 13:08:26.499"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:26.501" starttime="20201104 13:08:26.499"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:26.513" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:26.521" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:08:26.521" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:08:26.522" starttime="20201104 13:08:26.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:26.523" starttime="20201104 13:08:26.522"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:26.525" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:26.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:26.963" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:08:26.963" starttime="20201104 13:08:26.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:26.975" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:42.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:42.359" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Resolving Depende...</msg>
<status status="PASS" endtime="20201104 13:08:42.359" starttime="20201104 13:08:26.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:42.360" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package awscli.noarch 0:1.14.28-5.el7_5.1 will be installed
--&gt; Processing Dependency: python-s3transfer &gt;= 0.1.9 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-docutils &gt;= 0.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-cryptography &gt;= 1.7.2 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: PyYAML &gt;= 3.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Running transaction check
---&gt; Package PyYAML.x86_64 0:3.10-11.el7 will be installed
--&gt; Processing Dependency: libyaml-0.so.2()(64bit) for package: PyYAML-3.10-11.el7.x86_64
---&gt; Package python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7 will be installed
--&gt; Processing Dependency: python-imaging for package: python-docutils-0.11-0.3.20130715svn7687.el7.noarch
---&gt; Package python-s3transfer.noarch 0:0.1.13-1.el7.0.1 will be installed
--&gt; Processing Dependency: python-dateutil &gt;= 1.4 for package: python-s3transfer-0.1.13-1.el7.0.1.noarch
---&gt; Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed
--&gt; Processing Dependency: python-six &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-pyasn1 &gt;= 0.1.8 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-idna &gt;= 2.0 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-cffi &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-setuptools for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-ipaddress for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-enum34 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: openssl for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Running transaction check
---&gt; Package libyaml.x86_64 0:0.1.4-11.el7_0 will be installed
---&gt; Package openssl.x86_64 1:1.0.2k-19.el7 will be installed
--&gt; Processing Dependency: openssl-libs(x86-64) = 1:1.0.2k-19.el7 for package: 1:openssl-1.0.2k-19.el7.x86_64
--&gt; Processing Dependency: make for package: 1:openssl-1.0.2k-19.el7.x86_64
---&gt; Package python-cffi.x86_64 0:1.6.0-5.el7 will be installed
--&gt; Processing Dependency: python-pycparser for package: python-cffi-1.6.0-5.el7.x86_64
---&gt; Package python-dateutil.noarch 0:1.5-7.el7 will be installed
---&gt; Package python-enum34.noarch 0:1.0.4-1.el7 will be installed
---&gt; Package python-idna.noarch 0:2.4-1.el7 will be installed
---&gt; Package python-ipaddress.noarch 0:1.0.16-2.el7 will be installed
---&gt; Package python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7 will be installed
--&gt; Processing Dependency: libtiff.so.5(LIBTIFF_4.0)(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libwebp.so.4()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libtiff.so.5()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
---&gt; Package python-setuptools.noarch 0:0.9.8-7.el7 will be installed
--&gt; Processing Dependency: python-backports-ssl_match_hostname for package: python-setuptools-0.9.8-7.el7.noarch
---&gt; Package python-six.noarch 0:1.9.0-2.el7 will be installed
---&gt; Package python2-pyasn1.noarch 0:0.1.9-7.el7 will be installed
--&gt; Running transaction check
---&gt; Package libtiff.x86_64 0:4.0.3-32.el7 will be installed
--&gt; Processing Dependency: libjbig.so.2.0()(64bit) for package: libtiff-4.0.3-32.el7.x86_64
---&gt; Package libwebp.x86_64 0:0.3.0-7.el7 will be installed
---&gt; Package make.x86_64 1:3.82-24.el7 will be installed
---&gt; Package openssl-libs.x86_64 1:1.0.2k-16.el7 will be updated
---&gt; Package openssl-libs.x86_64 1:1.0.2k-19.el7 will be an update
---&gt; Package python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7 will be installed
--&gt; Processing Dependency: python-backports for package: python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch
---&gt; Package python-pycparser.noarch 0:2.14-1.el7 will be installed
--&gt; Processing Dependency: python-ply for package: python-pycparser-2.14-1.el7.noarch
--&gt; Running transaction check
---&gt; Package jbigkit-libs.x86_64 0:2.0-11.el7 will be installed
---&gt; Package python-backports.x86_64 0:1.0-8.el7 will be installed
---&gt; Package python-ply.noarch 0:3.4-11.el7 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                         Arch   Version                      Repository
                                                                           Size
================================================================================
Installing:
 awscli                          noarch 1.14.28-5.el7_5.1            base 1.0 M
Installing for dependencies:
 PyYAML                          x86_64 3.10-11.el7                  base 153 k
 jbigkit-libs                    x86_64 2.0-11.el7                   base  46 k
 libtiff                         x86_64 4.0.3-32.el7                 base 171 k
 libwebp                         x86_64 0.3.0-7.el7                  base 170 k
 libyaml                         x86_64 0.1.4-11.el7_0               base  55 k
 make                            x86_64 1:3.82-24.el7                base 421 k
 openssl                         x86_64 1:1.0.2k-19.el7              base 493 k
 python-backports                x86_64 1.0-8.el7                    base 5.8 k
 python-backports-ssl_match_hostname
                                 noarch 3.5.0.1-1.el7                base  13 k
 python-cffi                     x86_64 1.6.0-5.el7                  base 218 k
 python-dateutil                 noarch 1.5-7.el7                    base  85 k
 python-docutils                 noarch 0.11-0.3.20130715svn7687.el7 base 1.5 M
 python-enum34                   noarch 1.0.4-1.el7                  base  52 k
 python-idna                     noarch 2.4-1.el7                    base  94 k
 python-ipaddress                noarch 1.0.16-2.el7                 base  34 k
 python-pillow                   x86_64 2.0.0-20.gitd1c6db8.el7_7    base 439 k
 python-ply                      noarch 3.4-11.el7                   base 123 k
 python-pycparser                noarch 2.14-1.el7                   base 104 k
 python-s3transfer               noarch 0.1.13-1.el7.0.1             base 2.9 M
 python-setuptools               noarch 0.9.8-7.el7                  base 397 k
 python-six                      noarch 1.9.0-2.el7                  base  29 k
 python2-cryptography            x86_64 1.7.2-2.el7                  base 502 k
 python2-pyasn1                  noarch 0.1.9-7.el7                  base 100 k
Updating for dependencies:
 openssl-libs                    x86_64 1:1.0.2k-19.el7              base 1.2 M

Transaction Summary
================================================================================
Install  1 Package  (+23 Dependent packages)
Upgrade             (  1 Dependent package)

Total download size: 10 M
Downloading packages:
Delta RPMs disabled because /usr/bin/applydeltarpm not installed.
--------------------------------------------------------------------------------
Total                                               26 MB/s |  10 MB  00:00     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-ipaddress-1.0.16-2.el7.noarch                        1/26 
  Updating   : 1:openssl-libs-1.0.2k-19.el7.x86_64                         2/26 
  Installing : python2-pyasn1-0.1.9-7.el7.noarch                           3/26 
  Installing : libyaml-0.1.4-11.el7_0.x86_64                               4/26 
  Installing : PyYAML-3.10-11.el7.x86_64                                   5/26 
  Installing : python-backports-1.0-8.el7.x86_64                           6/26 
  Installing : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    7/26 
  Installing : python-setuptools-0.9.8-7.el7.noarch                        8/26 
  Installing : python-ply-3.4-11.el7.noarch                                9/26 
  Installing : python-pycparser-2.14-1.el7.noarch                         10/26 
  Installing : python-cffi-1.6.0-5.el7.x86_64                             11/26 
  Installing : python-idna-2.4-1.el7.noarch                               12/26 
  Installing : python-six-1.9.0-2.el7.noarch                              13/26 
  Installing : 1:make-3.82-24.el7.x86_64                                  14/26 
  Installing : 1:openssl-1.0.2k-19.el7.x86_64                             15/26 
  Installing : python-dateutil-1.5-7.el7.noarch                           16/26 
  Installing : jbigkit-libs-2.0-11.el7.x86_64                             17/26 
  Installing : libtiff-4.0.3-32.el7.x86_64                                18/26 
  Installing : python-enum34-1.0.4-1.el7.noarch                           19/26 
  Installing : python2-cryptography-1.7.2-2.el7.x86_64                    20/26 
  Installing : libwebp-0.3.0-7.el7.x86_64                                 21/26 
  Installing : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             22/26 
  Installing : python-docutils-0.11-0.3.20130715svn7687.el7.noarch        23/26 
  Installing : python-s3transfer-0.1.13-1.el7.0.1.noarch                  24/26 
  Installing : awscli-1.14.28-5.el7_5.1.noarch                            25/26 
  Cleanup    : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 
  Verifying  : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    1/26 
  Verifying  : libwebp-0.3.0-7.el7.x86_64                                  2/26 
  Verifying  : python-enum34-1.0.4-1.el7.noarch                            3/26 
  Verifying  : python-setuptools-0.9.8-7.el7.noarch                        4/26 
  Verifying  : python-docutils-0.11-0.3.20130715svn7687.el7.noarch         5/26 
  Verifying  : jbigkit-libs-2.0-11.el7.x86_64                              6/26 
  Verifying  : python-dateutil-1.5-7.el7.noarch                            7/26 
  Verifying  : 1:make-3.82-24.el7.x86_64                                   8/26 
  Verifying  : python-six-1.9.0-2.el7.noarch                               9/26 
  Verifying  : python-s3transfer-0.1.13-1.el7.0.1.noarch                  10/26 
  Verifying  : python-idna-2.4-1.el7.noarch                               11/26 
  Verifying  : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             12/26 
  Verifying  : python-ply-3.4-11.el7.noarch                               13/26 
  Verifying  : 1:openssl-1.0.2k-19.el7.x86_64                             14/26 
  Verifying  : python-backports-1.0-8.el7.x86_64                          15/26 
  Verifying  : python-cffi-1.6.0-5.el7.x86_64                             16/26 
  Verifying  : awscli-1.14.28-5.el7_5.1.noarch                            17/26 
  Verifying  : 1:openssl-libs-1.0.2k-19.el7.x86_64                        18/26 
  Verifying  : python-pycparser-2.14-1.el7.noarch                         19/26 
  Verifying  : libyaml-0.1.4-11.el7_0.x86_64                              20/26 
  Verifying  : libtiff-4.0.3-32.el7.x86_64                                21/26 
  Verifying  : python-ipaddress-1.0.16-2.el7.noarch                       22/26 
  Verifying  : python2-pyasn1-0.1.9-7.el7.noarch                          23/26 
  Verifying  : PyYAML-3.10-11.el7.x86_64                                  24/26 
  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                    25/26 
  Verifying  : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 

Installed:
  awscli.noarch 0:1.14.28-5.el7_5.1                                             

Dependency Installed:
  PyYAML.x86_64 0:3.10-11.el7                                                   
  jbigkit-libs.x86_64 0:2.0-11.el7                                              
  libtiff.x86_64 0:4.0.3-32.el7                                                 
  libwebp.x86_64 0:0.3.0-7.el7                                                  
  libyaml.x86_64 0:0.1.4-11.el7_0                                               
  make.x86_64 1:3.82-24.el7                                                     
  openssl.x86_64 1:1.0.2k-19.el7                                                
  python-backports.x86_64 0:1.0-8.el7                                           
  python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7                    
  python-cffi.x86_64 0:1.6.0-5.el7                                              
  python-dateutil.noarch 0:1.5-7.el7                                            
  python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7                         
  python-enum34.noarch 0:1.0.4-1.el7                                            
  python-idna.noarch 0:2.4-1.el7                                                
  python-ipaddress.noarch 0:1.0.16-2.el7                                        
  python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7                              
  python-ply.noarch 0:3.4-11.el7                                                
  python-pycparser.noarch 0:2.14-1.el7                                          
  python-s3transfer.noarch 0:0.1.13-1.el7.0.1                                   
  python-setuptools.noarch 0:0.9.8-7.el7                                        
  python-six.noarch 0:1.9.0-2.el7                                               
  python2-cryptography.x86_64 0:1.7.2-2.el7                                     
  python2-pyasn1.noarch 0:0.1.9-7.el7                                           

Dependency Updated:
  openssl-libs.x86_64 1:1.0.2k-19.el7                                           

Complete!</msg>
<status status="PASS" endtime="20201104 13:08:42.361" starttime="20201104 13:08:42.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:42.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:42.361" starttime="20201104 13:08:42.361"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.362" starttime="20201104 13:08:26.967"></status>
</kw>
<msg timestamp="20201104 13:08:42.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:42.362" starttime="20201104 13:08:26.965"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.363" starttime="20201104 13:08:26.964"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.363" starttime="20201104 13:08:26.964"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.363" starttime="20201104 13:08:26.963"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.363" starttime="20201104 13:08:26.502"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.363" starttime="20201104 13:08:26.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:42.365" starttime="20201104 13:08:42.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:42.365" starttime="20201104 13:08:42.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:42.371" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:42.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:42.755" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:42.755" starttime="20201104 13:08:42.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:42.756" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:42.756" starttime="20201104 13:08:42.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:42.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:42.757" starttime="20201104 13:08:42.756"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.757" starttime="20201104 13:08:42.368"></status>
</kw>
<msg timestamp="20201104 13:08:42.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:42.757" starttime="20201104 13:08:42.368"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:42.757" starttime="20201104 13:08:42.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:42.761" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:43.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:43.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:43.090" starttime="20201104 13:08:42.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:43.091" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:43.091" starttime="20201104 13:08:43.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:43.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:43.092" starttime="20201104 13:08:43.092"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.092" starttime="20201104 13:08:42.758"></status>
</kw>
<msg timestamp="20201104 13:08:43.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:43.092" starttime="20201104 13:08:42.758"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.093" starttime="20201104 13:08:42.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:43.096" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:43.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:43.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:43.425" starttime="20201104 13:08:43.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:43.426" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:43.426" starttime="20201104 13:08:43.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:43.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:43.427" starttime="20201104 13:08:43.427"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.427" starttime="20201104 13:08:43.094"></status>
</kw>
<msg timestamp="20201104 13:08:43.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:43.428" starttime="20201104 13:08:43.093"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.428" starttime="20201104 13:08:43.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:43.431" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:43.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:43.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:43.781" starttime="20201104 13:08:43.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:43.782" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:43.783" starttime="20201104 13:08:43.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:43.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:43.783" starttime="20201104 13:08:43.783"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.783" starttime="20201104 13:08:43.429"></status>
</kw>
<msg timestamp="20201104 13:08:43.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:43.784" starttime="20201104 13:08:43.428"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.784" starttime="20201104 13:08:43.428"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.784" starttime="20201104 13:08:42.366"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.784" starttime="20201104 13:08:42.365"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.784" starttime="20201104 13:08:42.364"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:43.784" starttime="20201104 13:08:42.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:08:43.786" level="INFO">${postfix} = 79284</msg>
<status status="PASS" endtime="20201104 13:08:43.786" starttime="20201104 13:08:43.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:08:43.786" level="INFO">${bucket} = bucket-79284</msg>
<status status="PASS" endtime="20201104 13:08:43.786" starttime="20201104 13:08:43.786"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:43.792" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-79284 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:47.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:47.031" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-79284"
}</msg>
<status status="PASS" endtime="20201104 13:08:47.031" starttime="20201104 13:08:43.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:47.032" level="INFO">{
    "Location": "http://s3g:9878/bucket-79284"
}</msg>
<status status="PASS" endtime="20201104 13:08:47.032" starttime="20201104 13:08:47.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:47.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:47.032" starttime="20201104 13:08:47.032"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.033" starttime="20201104 13:08:43.788"></status>
</kw>
<msg timestamp="20201104 13:08:47.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:47.033" starttime="20201104 13:08:43.787"></status>
</kw>
<msg timestamp="20201104 13:08:47.035" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-79284"
}</msg>
<status status="PASS" endtime="20201104 13:08:47.035" starttime="20201104 13:08:43.787"></status>
</kw>
<msg timestamp="20201104 13:08:47.035" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-79284"
}</msg>
<status status="PASS" endtime="20201104 13:08:47.035" starttime="20201104 13:08:43.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:47.036" starttime="20201104 13:08:47.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:47.037" starttime="20201104 13:08:47.036"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.037" starttime="20201104 13:08:43.786"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.039" starttime="20201104 13:08:43.785"></status>
</kw>
<msg timestamp="20201104 13:08:47.039" level="INFO">${BUCKET} = bucket-79284</msg>
<status status="PASS" endtime="20201104 13:08:47.039" starttime="20201104 13:08:43.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:08:47.040" level="INFO">${BUCKET} = bucket-79284</msg>
<status status="PASS" endtime="20201104 13:08:47.040" starttime="20201104 13:08:47.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:47.046" starttime="20201104 13:08:47.045"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.046" starttime="20201104 13:08:26.498"></status>
</kw>
<suite source="/opt/hadoop/smoketest/s3/awss3.robot" id="s1-s3-s1" name="Awss3">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:08:47.067" level="INFO">${random} = 28543</msg>
<status status="PASS" endtime="20201104 13:08:47.067" starttime="20201104 13:08:47.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:08:47.071" level="INFO">${PREFIX} = 28543</msg>
<status status="PASS" endtime="20201104 13:08:47.071" starttime="20201104 13:08:47.067"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.071" starttime="20201104 13:08:47.066"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.071" starttime="20201104 13:08:47.066"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:47.085" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:47.087" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:08:47.087" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:08:47.087" starttime="20201104 13:08:47.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:47.088" starttime="20201104 13:08:47.088"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:47.097" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:47.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:47.312" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:08:47.312" starttime="20201104 13:08:47.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:47.321" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:47.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:47.983" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:08:47.983" starttime="20201104 13:08:47.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:47.984" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:08:47.984" starttime="20201104 13:08:47.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:47.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:47.985" starttime="20201104 13:08:47.984"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.985" starttime="20201104 13:08:47.315"></status>
</kw>
<msg timestamp="20201104 13:08:47.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:47.986" starttime="20201104 13:08:47.314"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.986" starttime="20201104 13:08:47.314"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.986" starttime="20201104 13:08:47.314"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.986" starttime="20201104 13:08:47.313"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.986" starttime="20201104 13:08:47.072"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:47.986" starttime="20201104 13:08:47.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:47.988" starttime="20201104 13:08:47.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:47.988" starttime="20201104 13:08:47.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:47.996" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:48.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:48.580" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:48.580" starttime="20201104 13:08:47.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:48.581" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:48.581" starttime="20201104 13:08:48.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:48.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:48.582" starttime="20201104 13:08:48.581"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:48.582" starttime="20201104 13:08:47.992"></status>
</kw>
<msg timestamp="20201104 13:08:48.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:48.582" starttime="20201104 13:08:47.992"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:48.583" starttime="20201104 13:08:47.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:48.586" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:48.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:48.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:48.941" starttime="20201104 13:08:48.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:48.942" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:48.942" starttime="20201104 13:08:48.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:48.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:48.942" starttime="20201104 13:08:48.942"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:48.943" starttime="20201104 13:08:48.583"></status>
</kw>
<msg timestamp="20201104 13:08:48.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:48.943" starttime="20201104 13:08:48.583"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:48.943" starttime="20201104 13:08:48.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:48.946" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:49.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:49.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:49.270" starttime="20201104 13:08:48.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:49.271" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:49.271" starttime="20201104 13:08:49.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:49.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:49.271" starttime="20201104 13:08:49.271"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.272" starttime="20201104 13:08:48.944"></status>
</kw>
<msg timestamp="20201104 13:08:49.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:49.272" starttime="20201104 13:08:48.944"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.272" starttime="20201104 13:08:48.943"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:49.277" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:49.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:49.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:49.622" starttime="20201104 13:08:49.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:49.623" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:49.623" starttime="20201104 13:08:49.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:49.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:49.624" starttime="20201104 13:08:49.623"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.624" starttime="20201104 13:08:49.273"></status>
</kw>
<msg timestamp="20201104 13:08:49.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:49.624" starttime="20201104 13:08:49.273"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.624" starttime="20201104 13:08:49.272"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.625" starttime="20201104 13:08:47.991"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.625" starttime="20201104 13:08:47.988"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.625" starttime="20201104 13:08:47.987"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:49.625" starttime="20201104 13:08:47.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:08:49.626" level="INFO">${postfix} = 75647</msg>
<status status="PASS" endtime="20201104 13:08:49.626" starttime="20201104 13:08:49.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:08:49.627" level="INFO">${bucket} = bucket-75647</msg>
<status status="PASS" endtime="20201104 13:08:49.627" starttime="20201104 13:08:49.627"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:49.633" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-75647 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:50.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:50.231" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-75647"
}</msg>
<status status="PASS" endtime="20201104 13:08:50.231" starttime="20201104 13:08:49.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:50.232" level="INFO">{
    "Location": "http://s3g:9878/bucket-75647"
}</msg>
<status status="PASS" endtime="20201104 13:08:50.232" starttime="20201104 13:08:50.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:50.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:50.233" starttime="20201104 13:08:50.233"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:50.234" starttime="20201104 13:08:49.629"></status>
</kw>
<msg timestamp="20201104 13:08:50.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:50.234" starttime="20201104 13:08:49.628"></status>
</kw>
<msg timestamp="20201104 13:08:50.235" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-75647"
}</msg>
<status status="PASS" endtime="20201104 13:08:50.235" starttime="20201104 13:08:49.628"></status>
</kw>
<msg timestamp="20201104 13:08:50.235" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-75647"
}</msg>
<status status="PASS" endtime="20201104 13:08:50.235" starttime="20201104 13:08:49.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:50.235" starttime="20201104 13:08:50.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:50.236" starttime="20201104 13:08:50.236"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:50.236" starttime="20201104 13:08:49.627"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:50.236" starttime="20201104 13:08:49.626"></status>
</kw>
<msg timestamp="20201104 13:08:50.237" level="INFO">${BUCKET} = bucket-75647</msg>
<status status="PASS" endtime="20201104 13:08:50.237" starttime="20201104 13:08:49.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:08:50.237" level="INFO">${BUCKET} = bucket-75647</msg>
<status status="PASS" endtime="20201104 13:08:50.237" starttime="20201104 13:08:50.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:50.238" starttime="20201104 13:08:50.237"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:50.238" starttime="20201104 13:08:47.065"></status>
</kw>
<test id="s1-s3-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:50.244" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20201104 13:08:50.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:50.247" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:50.247" starttime="20201104 13:08:50.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:50.248" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:50.248" starttime="20201104 13:08:50.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:50.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:50.249" starttime="20201104 13:08:50.249"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:50.249" starttime="20201104 13:08:50.240"></status>
</kw>
<msg timestamp="20201104 13:08:50.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:50.250" starttime="20201104 13:08:50.240"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:50.250" starttime="20201104 13:08:50.239"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:50.255" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-75647 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:55.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:55.556" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/testfile        </msg>
<status status="PASS" endtime="20201104 13:08:55.556" starttime="20201104 13:08:50.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:55.557" level="INFO">Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/testfile        </msg>
<status status="PASS" endtime="20201104 13:08:55.557" starttime="20201104 13:08:55.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:55.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:55.558" starttime="20201104 13:08:55.557"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:55.558" starttime="20201104 13:08:50.251"></status>
</kw>
<msg timestamp="20201104 13:08:55.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:55.558" starttime="20201104 13:08:50.251"></status>
</kw>
<msg timestamp="20201104 13:08:55.559" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/testfile        </msg>
<status status="PASS" endtime="20201104 13:08:55.559" starttime="20201104 13:08:50.251"></status>
</kw>
<msg timestamp="20201104 13:08:55.559" level="INFO">${result} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/testfile        </msg>
<status status="PASS" endtime="20201104 13:08:55.559" starttime="20201104 13:08:50.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:55.559" starttime="20201104 13:08:55.559"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:55.564" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-75647/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:56.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:56.548" level="INFO">${output} = Completed 29 Bytes/29 Bytes (58 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/dir1/dir2/file   </msg>
<status status="PASS" endtime="20201104 13:08:56.548" starttime="20201104 13:08:55.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:56.550" level="INFO">Completed 29 Bytes/29 Bytes (58 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/dir1/dir2/file   </msg>
<status status="PASS" endtime="20201104 13:08:56.550" starttime="20201104 13:08:56.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:56.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:56.550" starttime="20201104 13:08:56.550"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:56.551" starttime="20201104 13:08:55.561"></status>
</kw>
<msg timestamp="20201104 13:08:56.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:56.551" starttime="20201104 13:08:55.561"></status>
</kw>
<msg timestamp="20201104 13:08:56.551" level="INFO">${output} = Completed 29 Bytes/29 Bytes (58 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/dir1/dir2/file   </msg>
<status status="PASS" endtime="20201104 13:08:56.551" starttime="20201104 13:08:55.560"></status>
</kw>
<msg timestamp="20201104 13:08:56.552" level="INFO">${result} = Completed 29 Bytes/29 Bytes (58 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-75647/dir1/dir2/file   </msg>
<status status="PASS" endtime="20201104 13:08:56.552" starttime="20201104 13:08:55.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:56.552" starttime="20201104 13:08:56.552"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:56.557" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-75647 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:57.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:57.399" level="INFO">${output} =                            PRE dir1/
2020-11-04 13:08:55         29 testfile</msg>
<status status="PASS" endtime="20201104 13:08:57.399" starttime="20201104 13:08:56.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:57.400" level="INFO">                           PRE dir1/
2020-11-04 13:08:55         29 testfile</msg>
<status status="PASS" endtime="20201104 13:08:57.400" starttime="20201104 13:08:57.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:57.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:57.401" starttime="20201104 13:08:57.401"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:57.401" starttime="20201104 13:08:56.554"></status>
</kw>
<msg timestamp="20201104 13:08:57.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:57.402" starttime="20201104 13:08:56.553"></status>
</kw>
<msg timestamp="20201104 13:08:57.402" level="INFO">${output} =                            PRE dir1/
2020-11-04 13:08:55         29 testfile</msg>
<status status="PASS" endtime="20201104 13:08:57.402" starttime="20201104 13:08:56.553"></status>
</kw>
<msg timestamp="20201104 13:08:57.402" level="INFO">${result} =                            PRE dir1/
2020-11-04 13:08:55         29 testfile</msg>
<status status="PASS" endtime="20201104 13:08:57.402" starttime="20201104 13:08:56.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:57.403" starttime="20201104 13:08:57.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:57.403" starttime="20201104 13:08:57.403"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:57.404" starttime="20201104 13:08:57.403"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:57.410" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-75647/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:57.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:57.931" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" endtime="20201104 13:08:57.931" starttime="20201104 13:08:57.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:57.932" level="INFO">                           PRE dir2/</msg>
<status status="PASS" endtime="20201104 13:08:57.932" starttime="20201104 13:08:57.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:57.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:57.933" starttime="20201104 13:08:57.932"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:57.933" starttime="20201104 13:08:57.406"></status>
</kw>
<msg timestamp="20201104 13:08:57.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:57.934" starttime="20201104 13:08:57.406"></status>
</kw>
<msg timestamp="20201104 13:08:57.934" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" endtime="20201104 13:08:57.934" starttime="20201104 13:08:57.404"></status>
</kw>
<msg timestamp="20201104 13:08:57.934" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" endtime="20201104 13:08:57.934" starttime="20201104 13:08:57.404"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:57.935" starttime="20201104 13:08:57.934"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:57.935" starttime="20201104 13:08:57.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:57.936" starttime="20201104 13:08:57.935"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:57.940" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-75647/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:58.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:58.435" level="INFO">${output} = 2020-11-04 13:08:56         29 file</msg>
<status status="PASS" endtime="20201104 13:08:58.435" starttime="20201104 13:08:57.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:58.437" level="INFO">2020-11-04 13:08:56         29 file</msg>
<status status="PASS" endtime="20201104 13:08:58.437" starttime="20201104 13:08:58.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:58.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:58.437" starttime="20201104 13:08:58.437"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:58.438" starttime="20201104 13:08:57.937"></status>
</kw>
<msg timestamp="20201104 13:08:58.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:58.438" starttime="20201104 13:08:57.937"></status>
</kw>
<msg timestamp="20201104 13:08:58.438" level="INFO">${output} = 2020-11-04 13:08:56         29 file</msg>
<status status="PASS" endtime="20201104 13:08:58.438" starttime="20201104 13:08:57.936"></status>
</kw>
<msg timestamp="20201104 13:08:58.438" level="INFO">${result} = 2020-11-04 13:08:56         29 file</msg>
<status status="PASS" endtime="20201104 13:08:58.438" starttime="20201104 13:08:57.936"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:58.439" starttime="20201104 13:08:58.439"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:58.440" starttime="20201104 13:08:58.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>file</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:58.440" starttime="20201104 13:08:58.440"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:08:58.440" critical="yes" starttime="20201104 13:08:50.238"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:08:58.441" starttime="20201104 13:08:47.046"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketcreate.robot" id="s1-s3-s2" name="Bucketcreate">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:08:58.454" level="INFO">${random} = 55308</msg>
<status status="PASS" endtime="20201104 13:08:58.454" starttime="20201104 13:08:58.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:08:58.455" level="INFO">${PREFIX} = 55308</msg>
<status status="PASS" endtime="20201104 13:08:58.455" starttime="20201104 13:08:58.454"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:58.455" starttime="20201104 13:08:58.453"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:58.455" starttime="20201104 13:08:58.453"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:58.458" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:58.461" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:08:58.461" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:08:58.461" starttime="20201104 13:08:58.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:58.462" starttime="20201104 13:08:58.462"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:58.464" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:58.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:58.607" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:08:58.607" starttime="20201104 13:08:58.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:58.612" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:59.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:59.009" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:08:59.009" starttime="20201104 13:08:58.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:59.010" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:08:59.011" starttime="20201104 13:08:59.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:59.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:59.011" starttime="20201104 13:08:59.011"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.012" starttime="20201104 13:08:58.609"></status>
</kw>
<msg timestamp="20201104 13:08:59.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:59.012" starttime="20201104 13:08:58.609"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.012" starttime="20201104 13:08:58.609"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.012" starttime="20201104 13:08:58.608"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.012" starttime="20201104 13:08:58.607"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.012" starttime="20201104 13:08:58.455"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.013" starttime="20201104 13:08:58.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:59.015" starttime="20201104 13:08:59.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:08:59.015" starttime="20201104 13:08:59.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:59.020" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:59.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:59.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:59.363" starttime="20201104 13:08:59.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:59.364" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:59.364" starttime="20201104 13:08:59.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:59.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:59.365" starttime="20201104 13:08:59.365"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.365" starttime="20201104 13:08:59.017"></status>
</kw>
<msg timestamp="20201104 13:08:59.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:59.365" starttime="20201104 13:08:59.017"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.366" starttime="20201104 13:08:59.016"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:59.371" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:08:59.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:08:59.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:08:59.696" starttime="20201104 13:08:59.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:08:59.698" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:08:59.698" starttime="20201104 13:08:59.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:08:59.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:08:59.698" starttime="20201104 13:08:59.698"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.699" starttime="20201104 13:08:59.367"></status>
</kw>
<msg timestamp="20201104 13:08:59.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:08:59.699" starttime="20201104 13:08:59.367"></status>
</kw>
<status status="PASS" endtime="20201104 13:08:59.699" starttime="20201104 13:08:59.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:08:59.703" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:00.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:00.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:00.040" starttime="20201104 13:08:59.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:00.041" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:00.042" starttime="20201104 13:09:00.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:00.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:00.042" starttime="20201104 13:09:00.042"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.042" starttime="20201104 13:08:59.700"></status>
</kw>
<msg timestamp="20201104 13:09:00.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:00.043" starttime="20201104 13:08:59.700"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.043" starttime="20201104 13:08:59.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:00.046" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:00.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:00.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:00.372" starttime="20201104 13:09:00.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:00.373" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:00.373" starttime="20201104 13:09:00.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:00.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:00.374" starttime="20201104 13:09:00.373"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.374" starttime="20201104 13:09:00.044"></status>
</kw>
<msg timestamp="20201104 13:09:00.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:00.374" starttime="20201104 13:09:00.043"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.375" starttime="20201104 13:09:00.043"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.375" starttime="20201104 13:08:59.016"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.375" starttime="20201104 13:08:59.015"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.375" starttime="20201104 13:08:59.014"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.375" starttime="20201104 13:08:59.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:09:00.377" level="INFO">${postfix} = 84427</msg>
<status status="PASS" endtime="20201104 13:09:00.377" starttime="20201104 13:09:00.376"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:09:00.377" level="INFO">${bucket} = bucket-84427</msg>
<status status="PASS" endtime="20201104 13:09:00.377" starttime="20201104 13:09:00.377"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:00.382" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-84427 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:00.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:00.921" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:00.921" starttime="20201104 13:09:00.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:00.922" level="INFO">{
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:00.922" starttime="20201104 13:09:00.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:00.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:00.923" starttime="20201104 13:09:00.922"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.923" starttime="20201104 13:09:00.379"></status>
</kw>
<msg timestamp="20201104 13:09:00.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:00.923" starttime="20201104 13:09:00.379"></status>
</kw>
<msg timestamp="20201104 13:09:00.924" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:00.924" starttime="20201104 13:09:00.378"></status>
</kw>
<msg timestamp="20201104 13:09:00.924" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:00.924" starttime="20201104 13:09:00.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:00.924" starttime="20201104 13:09:00.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:00.925" starttime="20201104 13:09:00.924"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.925" starttime="20201104 13:09:00.377"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.925" starttime="20201104 13:09:00.376"></status>
</kw>
<msg timestamp="20201104 13:09:00.925" level="INFO">${BUCKET} = bucket-84427</msg>
<status status="PASS" endtime="20201104 13:09:00.925" starttime="20201104 13:09:00.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:09:00.926" level="INFO">${BUCKET} = bucket-84427</msg>
<status status="PASS" endtime="20201104 13:09:00.926" starttime="20201104 13:09:00.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:00.926" starttime="20201104 13:09:00.926"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:00.927" starttime="20201104 13:08:58.452"></status>
</kw>
<test id="s1-s3-s2-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:09:00.929" level="INFO">${postfix} = 79293</msg>
<status status="PASS" endtime="20201104 13:09:00.929" starttime="20201104 13:09:00.928"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:09:00.929" level="INFO">${bucket} = bucket-79293</msg>
<status status="PASS" endtime="20201104 13:09:00.929" starttime="20201104 13:09:00.929"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:00.935" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-79293 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:01.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:01.573" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-79293"
}</msg>
<status status="PASS" endtime="20201104 13:09:01.573" starttime="20201104 13:09:00.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:01.575" level="INFO">{
    "Location": "http://s3g:9878/bucket-79293"
}</msg>
<status status="PASS" endtime="20201104 13:09:01.575" starttime="20201104 13:09:01.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:01.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:01.576" starttime="20201104 13:09:01.575"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:01.576" starttime="20201104 13:09:00.931"></status>
</kw>
<msg timestamp="20201104 13:09:01.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:01.576" starttime="20201104 13:09:00.931"></status>
</kw>
<msg timestamp="20201104 13:09:01.577" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-79293"
}</msg>
<status status="PASS" endtime="20201104 13:09:01.577" starttime="20201104 13:09:00.931"></status>
</kw>
<msg timestamp="20201104 13:09:01.577" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-79293"
}</msg>
<status status="PASS" endtime="20201104 13:09:01.577" starttime="20201104 13:09:00.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:01.578" starttime="20201104 13:09:01.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:01.579" starttime="20201104 13:09:01.578"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:01.579" starttime="20201104 13:09:00.930"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:01.580" starttime="20201104 13:09:00.928"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:01.580" critical="yes" starttime="20201104 13:09:00.927"></status>
</test>
<test id="s1-s3-s2-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:01.600" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-84427 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:02.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:02.510" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:02.510" starttime="20201104 13:09:01.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:02.512" level="INFO">{
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:02.513" starttime="20201104 13:09:02.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:02.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:02.514" starttime="20201104 13:09:02.513"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:02.514" starttime="20201104 13:09:01.592"></status>
</kw>
<msg timestamp="20201104 13:09:02.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:02.514" starttime="20201104 13:09:01.592"></status>
</kw>
<msg timestamp="20201104 13:09:02.515" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:02.515" starttime="20201104 13:09:01.591"></status>
</kw>
<msg timestamp="20201104 13:09:02.515" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-84427"
}</msg>
<status status="PASS" endtime="20201104 13:09:02.515" starttime="20201104 13:09:01.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:02.521" starttime="20201104 13:09:02.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:02.522" starttime="20201104 13:09:02.521"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:02.522" starttime="20201104 13:09:01.587"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:02.523" critical="yes" starttime="20201104 13:09:01.585"></status>
</test>
<test id="s1-s3-s2-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:02.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:03.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:03.951" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20201104 13:09:03.951" starttime="20201104 13:09:02.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:03.952" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20201104 13:09:03.953" starttime="20201104 13:09:03.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:03.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:03.956" starttime="20201104 13:09:03.953"></status>
</kw>
<msg timestamp="20201104 13:09:03.956" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20201104 13:09:03.956" starttime="20201104 13:09:02.530"></status>
</kw>
<msg timestamp="20201104 13:09:03.957" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20201104 13:09:03.957" starttime="20201104 13:09:02.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:03.964" starttime="20201104 13:09:03.963"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:03.964" critical="yes" starttime="20201104 13:09:02.525"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:09:03.969" starttime="20201104 13:08:58.443"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketdelete.robot" id="s1-s3-s3" name="Bucketdelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:04.007" level="INFO">${random} = 65467</msg>
<status status="PASS" endtime="20201104 13:09:04.007" starttime="20201104 13:09:04.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:04.010" level="INFO">${PREFIX} = 65467</msg>
<status status="PASS" endtime="20201104 13:09:04.010" starttime="20201104 13:09:04.007"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:04.010" starttime="20201104 13:09:04.006"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:04.010" starttime="20201104 13:09:04.006"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:04.015" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:04.017" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:09:04.017" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:09:04.017" starttime="20201104 13:09:04.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:04.018" starttime="20201104 13:09:04.018"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:04.021" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:04.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:04.387" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:09:04.387" starttime="20201104 13:09:04.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:04.395" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:05.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:05.517" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:09:05.517" starttime="20201104 13:09:04.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:05.519" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:09:05.519" starttime="20201104 13:09:05.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:05.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:05.520" starttime="20201104 13:09:05.519"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.520" starttime="20201104 13:09:04.391"></status>
</kw>
<msg timestamp="20201104 13:09:05.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:05.520" starttime="20201104 13:09:04.390"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.520" starttime="20201104 13:09:04.390"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.521" starttime="20201104 13:09:04.388"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.521" starttime="20201104 13:09:04.387"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.521" starttime="20201104 13:09:04.011"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.521" starttime="20201104 13:09:04.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:05.523" starttime="20201104 13:09:05.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:05.523" starttime="20201104 13:09:05.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:05.529" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:05.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:05.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:05.877" starttime="20201104 13:09:05.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:05.878" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:05.878" starttime="20201104 13:09:05.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:05.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:05.879" starttime="20201104 13:09:05.878"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.879" starttime="20201104 13:09:05.525"></status>
</kw>
<msg timestamp="20201104 13:09:05.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:05.879" starttime="20201104 13:09:05.524"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:05.880" starttime="20201104 13:09:05.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:05.884" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:06.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:06.235" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:06.235" starttime="20201104 13:09:05.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:06.236" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:06.236" starttime="20201104 13:09:06.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:06.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:06.237" starttime="20201104 13:09:06.236"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.237" starttime="20201104 13:09:05.880"></status>
</kw>
<msg timestamp="20201104 13:09:06.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:06.238" starttime="20201104 13:09:05.880"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.238" starttime="20201104 13:09:05.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:06.243" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:06.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:06.585" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:06.585" starttime="20201104 13:09:06.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:06.586" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:06.586" starttime="20201104 13:09:06.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:06.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:06.588" starttime="20201104 13:09:06.587"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.588" starttime="20201104 13:09:06.239"></status>
</kw>
<msg timestamp="20201104 13:09:06.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:06.588" starttime="20201104 13:09:06.238"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.589" starttime="20201104 13:09:06.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:06.601" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:06.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:06.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:06.954" starttime="20201104 13:09:06.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:06.955" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:06.955" starttime="20201104 13:09:06.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:06.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:06.955" starttime="20201104 13:09:06.955"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.956" starttime="20201104 13:09:06.598"></status>
</kw>
<msg timestamp="20201104 13:09:06.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:06.956" starttime="20201104 13:09:06.598"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.956" starttime="20201104 13:09:06.589"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.956" starttime="20201104 13:09:05.524"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.956" starttime="20201104 13:09:05.523"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.957" starttime="20201104 13:09:05.522"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:06.957" starttime="20201104 13:09:05.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:09:06.958" level="INFO">${postfix} = 40927</msg>
<status status="PASS" endtime="20201104 13:09:06.958" starttime="20201104 13:09:06.958"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:09:06.959" level="INFO">${bucket} = bucket-40927</msg>
<status status="PASS" endtime="20201104 13:09:06.959" starttime="20201104 13:09:06.958"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:06.963" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-40927 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:07.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:07.569" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-40927"
}</msg>
<status status="PASS" endtime="20201104 13:09:07.570" starttime="20201104 13:09:06.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:07.570" level="INFO">{
    "Location": "http://s3g:9878/bucket-40927"
}</msg>
<status status="PASS" endtime="20201104 13:09:07.571" starttime="20201104 13:09:07.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:07.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:07.571" starttime="20201104 13:09:07.571"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:07.571" starttime="20201104 13:09:06.960"></status>
</kw>
<msg timestamp="20201104 13:09:07.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:07.572" starttime="20201104 13:09:06.960"></status>
</kw>
<msg timestamp="20201104 13:09:07.572" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-40927"
}</msg>
<status status="PASS" endtime="20201104 13:09:07.572" starttime="20201104 13:09:06.960"></status>
</kw>
<msg timestamp="20201104 13:09:07.572" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-40927"
}</msg>
<status status="PASS" endtime="20201104 13:09:07.572" starttime="20201104 13:09:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:07.573" starttime="20201104 13:09:07.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:07.573" starttime="20201104 13:09:07.573"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:07.573" starttime="20201104 13:09:06.959"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:07.573" starttime="20201104 13:09:06.958"></status>
</kw>
<msg timestamp="20201104 13:09:07.574" level="INFO">${BUCKET} = bucket-40927</msg>
<status status="PASS" endtime="20201104 13:09:07.574" starttime="20201104 13:09:06.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:09:07.574" level="INFO">${BUCKET} = bucket-40927</msg>
<status status="PASS" endtime="20201104 13:09:07.574" starttime="20201104 13:09:07.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:07.575" starttime="20201104 13:09:07.574"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:07.575" starttime="20201104 13:09:04.005"></status>
</kw>
<test id="s1-s3-s3-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<assign>
<var>${bucket}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:09:07.578" level="INFO">${postfix} = 50889</msg>
<status status="PASS" endtime="20201104 13:09:07.578" starttime="20201104 13:09:07.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:09:07.578" level="INFO">${bucket} = bucket-50889</msg>
<status status="PASS" endtime="20201104 13:09:07.578" starttime="20201104 13:09:07.578"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:07.584" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-50889 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:08.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:08.187" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-50889"
}</msg>
<status status="PASS" endtime="20201104 13:09:08.187" starttime="20201104 13:09:07.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:08.189" level="INFO">{
    "Location": "http://s3g:9878/bucket-50889"
}</msg>
<status status="PASS" endtime="20201104 13:09:08.189" starttime="20201104 13:09:08.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:08.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:08.189" starttime="20201104 13:09:08.189"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:08.190" starttime="20201104 13:09:07.580"></status>
</kw>
<msg timestamp="20201104 13:09:08.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:08.190" starttime="20201104 13:09:07.580"></status>
</kw>
<msg timestamp="20201104 13:09:08.190" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-50889"
}</msg>
<status status="PASS" endtime="20201104 13:09:08.190" starttime="20201104 13:09:07.579"></status>
</kw>
<msg timestamp="20201104 13:09:08.190" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-50889"
}</msg>
<status status="PASS" endtime="20201104 13:09:08.190" starttime="20201104 13:09:07.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:08.191" starttime="20201104 13:09:08.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:08.191" starttime="20201104 13:09:08.191"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:08.192" starttime="20201104 13:09:07.579"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:08.192" starttime="20201104 13:09:07.577"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:08.192" starttime="20201104 13:09:07.577"></status>
</kw>
<msg timestamp="20201104 13:09:08.192" level="INFO">${bucket} = bucket-50889</msg>
<status status="PASS" endtime="20201104 13:09:08.192" starttime="20201104 13:09:07.576"></status>
</kw>
<msg timestamp="20201104 13:09:08.192" level="INFO">${bucket} = bucket-50889</msg>
<status status="PASS" endtime="20201104 13:09:08.192" starttime="20201104 13:09:07.576"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket ${bucket}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:08.197" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-50889 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:08.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:08.742" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:08.742" starttime="20201104 13:09:08.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:08.743" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:08.743" starttime="20201104 13:09:08.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:08.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:08.744" starttime="20201104 13:09:08.743"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:08.744" starttime="20201104 13:09:08.194"></status>
</kw>
<msg timestamp="20201104 13:09:08.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:08.744" starttime="20201104 13:09:08.194"></status>
</kw>
<msg timestamp="20201104 13:09:08.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:08.745" starttime="20201104 13:09:08.193"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:08.745" starttime="20201104 13:09:08.193"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:08.745" critical="yes" starttime="20201104 13:09:07.575"></status>
</test>
<test id="s1-s3-s3-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:08.755" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:09.264" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:09.264" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:09:09.264" starttime="20201104 13:09:08.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:09.266" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:09:09.266" starttime="20201104 13:09:09.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:09.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:09.267" starttime="20201104 13:09:09.266"></status>
</kw>
<msg timestamp="20201104 13:09:09.267" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:09:09.267" starttime="20201104 13:09:08.751"></status>
</kw>
<msg timestamp="20201104 13:09:09.267" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:09:09.267" starttime="20201104 13:09:08.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:09.268" starttime="20201104 13:09:09.268"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:09.268" critical="yes" starttime="20201104 13:09:08.750"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:09:09.270" starttime="20201104 13:09:03.979"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/buckethead.robot" id="s1-s3-s4" name="Buckethead">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:09.284" level="INFO">${random} = 38414</msg>
<status status="PASS" endtime="20201104 13:09:09.284" starttime="20201104 13:09:09.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:09.286" level="INFO">${PREFIX} = 38414</msg>
<status status="PASS" endtime="20201104 13:09:09.286" starttime="20201104 13:09:09.284"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.286" starttime="20201104 13:09:09.283"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.286" starttime="20201104 13:09:09.283"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:09.289" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:09.291" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:09:09.291" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:09:09.291" starttime="20201104 13:09:09.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:09.292" starttime="20201104 13:09:09.292"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:09.295" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:09.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:09.434" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:09:09.434" starttime="20201104 13:09:09.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:09.440" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:09.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:09.831" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:09:09.832" starttime="20201104 13:09:09.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:09.833" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:09:09.833" starttime="20201104 13:09:09.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:09.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:09.834" starttime="20201104 13:09:09.833"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.834" starttime="20201104 13:09:09.436"></status>
</kw>
<msg timestamp="20201104 13:09:09.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:09.834" starttime="20201104 13:09:09.436"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.835" starttime="20201104 13:09:09.436"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.835" starttime="20201104 13:09:09.435"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.835" starttime="20201104 13:09:09.435"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.835" starttime="20201104 13:09:09.286"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:09.835" starttime="20201104 13:09:09.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:09.836" starttime="20201104 13:09:09.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:09.837" starttime="20201104 13:09:09.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:09.841" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:10.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:10.166" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:10.166" starttime="20201104 13:09:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:10.167" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:10.167" starttime="20201104 13:09:10.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:10.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:10.168" starttime="20201104 13:09:10.167"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:10.168" starttime="20201104 13:09:09.838"></status>
</kw>
<msg timestamp="20201104 13:09:10.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:10.168" starttime="20201104 13:09:09.838"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:10.169" starttime="20201104 13:09:09.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:10.172" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:10.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:10.504" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:10.505" starttime="20201104 13:09:10.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:10.506" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:10.506" starttime="20201104 13:09:10.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:10.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:10.506" starttime="20201104 13:09:10.506"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:10.507" starttime="20201104 13:09:10.169"></status>
</kw>
<msg timestamp="20201104 13:09:10.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:10.507" starttime="20201104 13:09:10.169"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:10.507" starttime="20201104 13:09:10.169"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:10.512" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:10.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:10.852" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:10.852" starttime="20201104 13:09:10.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:10.853" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:10.853" starttime="20201104 13:09:10.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:10.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:10.854" starttime="20201104 13:09:10.854"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:10.854" starttime="20201104 13:09:10.508"></status>
</kw>
<msg timestamp="20201104 13:09:10.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:10.855" starttime="20201104 13:09:10.508"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:10.855" starttime="20201104 13:09:10.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:10.859" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:11.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:11.196" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:11.196" starttime="20201104 13:09:10.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:11.197" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:11.197" starttime="20201104 13:09:11.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:11.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:11.198" starttime="20201104 13:09:11.198"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.198" starttime="20201104 13:09:10.856"></status>
</kw>
<msg timestamp="20201104 13:09:11.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:11.199" starttime="20201104 13:09:10.855"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.199" starttime="20201104 13:09:10.855"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.199" starttime="20201104 13:09:09.837"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.199" starttime="20201104 13:09:09.837"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.199" starttime="20201104 13:09:09.836"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.199" starttime="20201104 13:09:09.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:09:11.201" level="INFO">${postfix} = 37619</msg>
<status status="PASS" endtime="20201104 13:09:11.201" starttime="20201104 13:09:11.201"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:09:11.201" level="INFO">${bucket} = bucket-37619</msg>
<status status="PASS" endtime="20201104 13:09:11.202" starttime="20201104 13:09:11.201"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:11.206" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-37619 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:11.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:11.753" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-37619"
}</msg>
<status status="PASS" endtime="20201104 13:09:11.753" starttime="20201104 13:09:11.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:11.754" level="INFO">{
    "Location": "http://s3g:9878/bucket-37619"
}</msg>
<status status="PASS" endtime="20201104 13:09:11.754" starttime="20201104 13:09:11.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:11.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:11.754" starttime="20201104 13:09:11.754"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.755" starttime="20201104 13:09:11.203"></status>
</kw>
<msg timestamp="20201104 13:09:11.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:11.755" starttime="20201104 13:09:11.203"></status>
</kw>
<msg timestamp="20201104 13:09:11.755" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-37619"
}</msg>
<status status="PASS" endtime="20201104 13:09:11.755" starttime="20201104 13:09:11.202"></status>
</kw>
<msg timestamp="20201104 13:09:11.756" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-37619"
}</msg>
<status status="PASS" endtime="20201104 13:09:11.756" starttime="20201104 13:09:11.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:11.756" starttime="20201104 13:09:11.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:11.756" starttime="20201104 13:09:11.756"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.757" starttime="20201104 13:09:11.202"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.757" starttime="20201104 13:09:11.200"></status>
</kw>
<msg timestamp="20201104 13:09:11.757" level="INFO">${BUCKET} = bucket-37619</msg>
<status status="PASS" endtime="20201104 13:09:11.757" starttime="20201104 13:09:11.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:09:11.758" level="INFO">${BUCKET} = bucket-37619</msg>
<status status="PASS" endtime="20201104 13:09:11.758" starttime="20201104 13:09:11.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:11.758" starttime="20201104 13:09:11.758"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:11.758" starttime="20201104 13:09:09.283"></status>
</kw>
<test id="s1-s3-s4-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:11.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket bucket-37619 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:12.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:12.232" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:12.232" starttime="20201104 13:09:11.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:12.234" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:12.234" starttime="20201104 13:09:12.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:12.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:12.234" starttime="20201104 13:09:12.234"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:12.235" starttime="20201104 13:09:11.761"></status>
</kw>
<msg timestamp="20201104 13:09:12.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:12.235" starttime="20201104 13:09:11.761"></status>
</kw>
<msg timestamp="20201104 13:09:12.235" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:12.235" starttime="20201104 13:09:11.760"></status>
</kw>
<msg timestamp="20201104 13:09:12.235" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:09:12.235" starttime="20201104 13:09:11.760"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:12.240" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:12.811" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:12.812" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20201104 13:09:12.812" starttime="20201104 13:09:12.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:12.813" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20201104 13:09:12.813" starttime="20201104 13:09:12.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:12.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:12.814" starttime="20201104 13:09:12.813"></status>
</kw>
<msg timestamp="20201104 13:09:12.814" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20201104 13:09:12.814" starttime="20201104 13:09:12.236"></status>
</kw>
<msg timestamp="20201104 13:09:12.814" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20201104 13:09:12.815" starttime="20201104 13:09:12.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:12.815" starttime="20201104 13:09:12.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Not Found</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:12.816" starttime="20201104 13:09:12.815"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:12.816" critical="yes" starttime="20201104 13:09:11.759"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:09:12.817" starttime="20201104 13:09:09.272"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketlist.robot" id="s1-s3-s5" name="Bucketlist">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:12.834" level="INFO">${random} = 55738</msg>
<status status="PASS" endtime="20201104 13:09:12.834" starttime="20201104 13:09:12.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:12.835" level="INFO">${PREFIX} = 55738</msg>
<status status="PASS" endtime="20201104 13:09:12.835" starttime="20201104 13:09:12.834"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:12.835" starttime="20201104 13:09:12.833"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:12.835" starttime="20201104 13:09:12.833"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:12.838" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:12.840" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:09:12.840" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:09:12.840" starttime="20201104 13:09:12.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:12.841" starttime="20201104 13:09:12.841"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:12.843" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:13.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:13.004" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:09:13.004" starttime="20201104 13:09:12.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:13.011" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:13.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:13.435" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:09:13.435" starttime="20201104 13:09:13.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:13.437" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:09:13.437" starttime="20201104 13:09:13.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:13.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:13.438" starttime="20201104 13:09:13.437"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.438" starttime="20201104 13:09:13.007"></status>
</kw>
<msg timestamp="20201104 13:09:13.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:13.438" starttime="20201104 13:09:13.007"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.438" starttime="20201104 13:09:13.006"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.438" starttime="20201104 13:09:13.005"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.438" starttime="20201104 13:09:13.005"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.439" starttime="20201104 13:09:12.836"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.439" starttime="20201104 13:09:12.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:13.440" starttime="20201104 13:09:13.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:13.441" starttime="20201104 13:09:13.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:13.445" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:13.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:13.814" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:13.814" starttime="20201104 13:09:13.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:13.815" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:13.815" starttime="20201104 13:09:13.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:13.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:13.816" starttime="20201104 13:09:13.815"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.816" starttime="20201104 13:09:13.442"></status>
</kw>
<msg timestamp="20201104 13:09:13.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:13.816" starttime="20201104 13:09:13.442"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:13.817" starttime="20201104 13:09:13.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:13.820" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:14.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:14.158" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:14.158" starttime="20201104 13:09:13.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:14.159" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:14.159" starttime="20201104 13:09:14.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:14.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:14.160" starttime="20201104 13:09:14.159"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.160" starttime="20201104 13:09:13.818"></status>
</kw>
<msg timestamp="20201104 13:09:14.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:14.160" starttime="20201104 13:09:13.817"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.160" starttime="20201104 13:09:13.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:14.166" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:14.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:14.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:14.512" starttime="20201104 13:09:14.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:14.514" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:14.514" starttime="20201104 13:09:14.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:14.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:14.515" starttime="20201104 13:09:14.514"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.516" starttime="20201104 13:09:14.163"></status>
</kw>
<msg timestamp="20201104 13:09:14.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:14.516" starttime="20201104 13:09:14.163"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.517" starttime="20201104 13:09:14.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:14.521" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:14.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:14.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:14.860" starttime="20201104 13:09:14.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:14.861" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:14.861" starttime="20201104 13:09:14.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:14.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:14.862" starttime="20201104 13:09:14.861"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.862" starttime="20201104 13:09:14.517"></status>
</kw>
<msg timestamp="20201104 13:09:14.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:14.862" starttime="20201104 13:09:14.517"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.862" starttime="20201104 13:09:14.517"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.863" starttime="20201104 13:09:13.441"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.863" starttime="20201104 13:09:13.441"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.863" starttime="20201104 13:09:13.439"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:14.863" starttime="20201104 13:09:13.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:09:14.864" level="INFO">${postfix} = 59354</msg>
<status status="PASS" endtime="20201104 13:09:14.864" starttime="20201104 13:09:14.864"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:09:14.865" level="INFO">${bucket} = bucket-59354</msg>
<status status="PASS" endtime="20201104 13:09:14.865" starttime="20201104 13:09:14.864"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:14.870" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-59354 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:15.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:15.449" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-59354"
}</msg>
<status status="PASS" endtime="20201104 13:09:15.450" starttime="20201104 13:09:14.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:15.450" level="INFO">{
    "Location": "http://s3g:9878/bucket-59354"
}</msg>
<status status="PASS" endtime="20201104 13:09:15.451" starttime="20201104 13:09:15.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:15.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:15.451" starttime="20201104 13:09:15.451"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:15.451" starttime="20201104 13:09:14.866"></status>
</kw>
<msg timestamp="20201104 13:09:15.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:15.452" starttime="20201104 13:09:14.866"></status>
</kw>
<msg timestamp="20201104 13:09:15.452" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-59354"
}</msg>
<status status="PASS" endtime="20201104 13:09:15.452" starttime="20201104 13:09:14.866"></status>
</kw>
<msg timestamp="20201104 13:09:15.452" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-59354"
}</msg>
<status status="PASS" endtime="20201104 13:09:15.452" starttime="20201104 13:09:14.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:15.453" starttime="20201104 13:09:15.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:15.454" starttime="20201104 13:09:15.453"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:15.454" starttime="20201104 13:09:14.865"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:15.454" starttime="20201104 13:09:14.864"></status>
</kw>
<msg timestamp="20201104 13:09:15.454" level="INFO">${BUCKET} = bucket-59354</msg>
<status status="PASS" endtime="20201104 13:09:15.454" starttime="20201104 13:09:14.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:09:15.455" level="INFO">${BUCKET} = bucket-59354</msg>
<status status="PASS" endtime="20201104 13:09:15.455" starttime="20201104 13:09:15.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:15.455" starttime="20201104 13:09:15.455"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:15.455" starttime="20201104 13:09:12.832"></status>
</kw>
<test id="s1-s3-s5-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:15.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:15.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:15.955" level="INFO">${output} = bucket-37619
bucket-40927
bucket-59354
bucket-75647
bucket-79284
bucket-79293
bucket-84427</msg>
<status status="PASS" endtime="20201104 13:09:15.955" starttime="20201104 13:09:15.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:15.956" level="INFO">bucket-37619
bucket-40927
bucket-59354
bucket-75647
bucket-79284
bucket-79293
bucket-84427</msg>
<status status="PASS" endtime="20201104 13:09:15.956" starttime="20201104 13:09:15.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:15.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:15.957" starttime="20201104 13:09:15.957"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:15.957" starttime="20201104 13:09:15.458"></status>
</kw>
<msg timestamp="20201104 13:09:15.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:15.958" starttime="20201104 13:09:15.457"></status>
</kw>
<msg timestamp="20201104 13:09:15.958" level="INFO">${output} = bucket-37619
bucket-40927
bucket-59354
bucket-75647
bucket-79284
bucket-79293
bucket-84427</msg>
<status status="PASS" endtime="20201104 13:09:15.958" starttime="20201104 13:09:15.457"></status>
</kw>
<msg timestamp="20201104 13:09:15.958" level="INFO">${result} = bucket-37619
bucket-40927
bucket-59354
bucket-75647
bucket-79284
bucket-79293
bucket-84427</msg>
<status status="PASS" endtime="20201104 13:09:15.958" starttime="20201104 13:09:15.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:15.959" starttime="20201104 13:09:15.958"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:15.959" critical="yes" starttime="20201104 13:09:15.456"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:09:15.960" starttime="20201104 13:09:12.819"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/MultipartUpload.robot" id="s1-s3-s6" name="MultipartUpload">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:15.972" level="INFO">${random} = 84423</msg>
<status status="PASS" endtime="20201104 13:09:15.972" starttime="20201104 13:09:15.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:15.974" level="INFO">${PREFIX} = 84423</msg>
<status status="PASS" endtime="20201104 13:09:15.974" starttime="20201104 13:09:15.973"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:15.974" starttime="20201104 13:09:15.972"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:15.974" starttime="20201104 13:09:15.972"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:15.977" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:15.979" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:09:15.979" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:09:15.979" starttime="20201104 13:09:15.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:15.980" starttime="20201104 13:09:15.979"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:15.982" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:16.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:16.124" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:09:16.124" starttime="20201104 13:09:15.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:16.129" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:16.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:16.522" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:09:16.522" starttime="20201104 13:09:16.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:16.523" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:09:16.523" starttime="20201104 13:09:16.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:16.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:16.523" starttime="20201104 13:09:16.523"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.524" starttime="20201104 13:09:16.126"></status>
</kw>
<msg timestamp="20201104 13:09:16.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:16.524" starttime="20201104 13:09:16.126"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.524" starttime="20201104 13:09:16.126"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.524" starttime="20201104 13:09:16.125"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.524" starttime="20201104 13:09:16.124"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.525" starttime="20201104 13:09:15.974"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.525" starttime="20201104 13:09:15.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:16.526" starttime="20201104 13:09:16.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:16.527" starttime="20201104 13:09:16.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:16.531" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:16.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:16.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:16.863" starttime="20201104 13:09:16.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:16.864" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:16.865" starttime="20201104 13:09:16.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:16.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:16.865" starttime="20201104 13:09:16.865"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.866" starttime="20201104 13:09:16.528"></status>
</kw>
<msg timestamp="20201104 13:09:16.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:16.866" starttime="20201104 13:09:16.528"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:16.866" starttime="20201104 13:09:16.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:16.871" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:17.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:17.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:17.210" starttime="20201104 13:09:16.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:17.211" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:17.211" starttime="20201104 13:09:17.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:17.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:17.212" starttime="20201104 13:09:17.211"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.212" starttime="20201104 13:09:16.868"></status>
</kw>
<msg timestamp="20201104 13:09:17.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:17.212" starttime="20201104 13:09:16.867"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.212" starttime="20201104 13:09:16.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:17.218" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:17.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:17.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:17.552" starttime="20201104 13:09:17.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:17.553" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:17.553" starttime="20201104 13:09:17.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:17.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:17.554" starttime="20201104 13:09:17.553"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.554" starttime="20201104 13:09:17.213"></status>
</kw>
<msg timestamp="20201104 13:09:17.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:17.554" starttime="20201104 13:09:17.213"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.555" starttime="20201104 13:09:17.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:17.559" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:17.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:17.889" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:17.889" starttime="20201104 13:09:17.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:17.890" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:17.890" starttime="20201104 13:09:17.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:17.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:17.891" starttime="20201104 13:09:17.891"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.891" starttime="20201104 13:09:17.555"></status>
</kw>
<msg timestamp="20201104 13:09:17.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:17.892" starttime="20201104 13:09:17.555"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.892" starttime="20201104 13:09:17.555"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.892" starttime="20201104 13:09:16.527"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.892" starttime="20201104 13:09:16.527"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.892" starttime="20201104 13:09:16.525"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:17.892" starttime="20201104 13:09:16.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:09:17.894" level="INFO">${postfix} = 75395</msg>
<status status="PASS" endtime="20201104 13:09:17.894" starttime="20201104 13:09:17.893"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:09:17.894" level="INFO">${bucket} = bucket-75395</msg>
<status status="PASS" endtime="20201104 13:09:17.894" starttime="20201104 13:09:17.894"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:17.898" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-75395 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:18.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:18.420" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-75395"
}</msg>
<status status="PASS" endtime="20201104 13:09:18.420" starttime="20201104 13:09:17.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:18.421" level="INFO">{
    "Location": "http://s3g:9878/bucket-75395"
}</msg>
<status status="PASS" endtime="20201104 13:09:18.421" starttime="20201104 13:09:18.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:18.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:18.422" starttime="20201104 13:09:18.421"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:18.423" starttime="20201104 13:09:17.896"></status>
</kw>
<msg timestamp="20201104 13:09:18.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:18.423" starttime="20201104 13:09:17.895"></status>
</kw>
<msg timestamp="20201104 13:09:18.424" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-75395"
}</msg>
<status status="PASS" endtime="20201104 13:09:18.424" starttime="20201104 13:09:17.895"></status>
</kw>
<msg timestamp="20201104 13:09:18.424" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-75395"
}</msg>
<status status="PASS" endtime="20201104 13:09:18.424" starttime="20201104 13:09:17.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:18.424" starttime="20201104 13:09:18.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:18.425" starttime="20201104 13:09:18.425"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:18.425" starttime="20201104 13:09:17.894"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:18.425" starttime="20201104 13:09:17.893"></status>
</kw>
<msg timestamp="20201104 13:09:18.426" level="INFO">${BUCKET} = bucket-75395</msg>
<status status="PASS" endtime="20201104 13:09:18.426" starttime="20201104 13:09:17.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:09:18.426" level="INFO">${BUCKET} = bucket-75395</msg>
<status status="PASS" endtime="20201104 13:09:18.426" starttime="20201104 13:09:18.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:18.427" starttime="20201104 13:09:18.427"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:18.427" starttime="20201104 13:09:15.971"></status>
</kw>
<test id="s1-s3-s6-t1" name="Test Multipart Upload">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:18.430" level="INFO">${random} = 83879</msg>
<status status="PASS" endtime="20201104 13:09:18.430" starttime="20201104 13:09:18.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:18.431" level="INFO">${PREFIX} = 83879</msg>
<status status="PASS" endtime="20201104 13:09:18.431" starttime="20201104 13:09:18.430"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:18.431" starttime="20201104 13:09:18.429"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:18.436" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 83879/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:19.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:19.052" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.052" starttime="20201104 13:09:18.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:19.056" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.056" starttime="20201104 13:09:19.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:19.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:19.057" starttime="20201104 13:09:19.056"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:19.057" starttime="20201104 13:09:18.433"></status>
</kw>
<msg timestamp="20201104 13:09:19.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:19.057" starttime="20201104 13:09:18.433"></status>
</kw>
<msg timestamp="20201104 13:09:19.058" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.058" starttime="20201104 13:09:18.432"></status>
</kw>
<msg timestamp="20201104 13:09:19.058" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.058" starttime="20201104 13:09:18.431"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:19.068" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466", 
    "Key": "83879/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:19.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:19.120" level="INFO">${output} = 73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466</msg>
<status status="PASS" endtime="20201104 13:09:19.120" starttime="20201104 13:09:19.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:19.121" level="INFO">73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466</msg>
<status status="PASS" endtime="20201104 13:09:19.121" starttime="20201104 13:09:19.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:19.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:19.122" starttime="20201104 13:09:19.122"></status>
</kw>
<msg timestamp="20201104 13:09:19.122" level="INFO">${uploadID} = 73950fe1-5b4e-4cbb-8f50-bb55a16afb47-105152207839166466</msg>
<status status="PASS" endtime="20201104 13:09:19.123" starttime="20201104 13:09:19.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:19.123" starttime="20201104 13:09:19.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:19.124" starttime="20201104 13:09:19.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:19.124" starttime="20201104 13:09:19.124"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:19.129" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 83879/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:19.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:19.956" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.957" starttime="20201104 13:09:19.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:19.958" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.958" starttime="20201104 13:09:19.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:19.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:19.959" starttime="20201104 13:09:19.958"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:19.959" starttime="20201104 13:09:19.126"></status>
</kw>
<msg timestamp="20201104 13:09:19.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:19.959" starttime="20201104 13:09:19.125"></status>
</kw>
<msg timestamp="20201104 13:09:19.960" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.960" starttime="20201104 13:09:19.125"></status>
</kw>
<msg timestamp="20201104 13:09:19.960" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971", 
    "Key": "83879/multipartKey"
}</msg>
<status status="PASS" endtime="20201104 13:09:19.960" starttime="20201104 13:09:19.124"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${nextUploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:19.963" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971", 
    "Key": "83879/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:20.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:20.006" level="INFO">${output} = 68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971</msg>
<status status="PASS" endtime="20201104 13:09:20.006" starttime="20201104 13:09:19.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:20.007" level="INFO">68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971</msg>
<status status="PASS" endtime="20201104 13:09:20.007" starttime="20201104 13:09:20.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:20.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:20.008" starttime="20201104 13:09:20.007"></status>
</kw>
<msg timestamp="20201104 13:09:20.008" level="INFO">${nextUploadID} = 68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971</msg>
<status status="PASS" endtime="20201104 13:09:20.008" starttime="20201104 13:09:19.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:20.009" starttime="20201104 13:09:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:20.009" starttime="20201104 13:09:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:20.010" starttime="20201104 13:09:20.010"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:20.011" starttime="20201104 13:09:20.010"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:20.016" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:20.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:20.065" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0448379 s, 117 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:20.065" starttime="20201104 13:09:20.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:20.066" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0448379 s, 117 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:20.066" starttime="20201104 13:09:20.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:20.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:20.067" starttime="20201104 13:09:20.067"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:20.067" starttime="20201104 13:09:20.013"></status>
</kw>
<msg timestamp="20201104 13:09:20.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:20.068" starttime="20201104 13:09:20.013"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:20.068" starttime="20201104 13:09:20.012"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:20.068" starttime="20201104 13:09:20.011"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:20.068" starttime="20201104 13:09:20.011"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:20.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 83879/multipartKey --part-number 1 --body /tmp/part1 --upload-id 68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:21.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:21.521" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152207948218372"
}</msg>
<status status="PASS" endtime="20201104 13:09:21.521" starttime="20201104 13:09:20.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:21.526" level="INFO">{
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152207948218372"
}</msg>
<status status="PASS" endtime="20201104 13:09:21.526" starttime="20201104 13:09:21.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:21.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:21.537" starttime="20201104 13:09:21.527"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:21.538" starttime="20201104 13:09:20.070"></status>
</kw>
<msg timestamp="20201104 13:09:21.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:21.538" starttime="20201104 13:09:20.070"></status>
</kw>
<msg timestamp="20201104 13:09:21.538" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152207948218372"
}</msg>
<status status="PASS" endtime="20201104 13:09:21.538" starttime="20201104 13:09:20.069"></status>
</kw>
<msg timestamp="20201104 13:09:21.545" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152207948218372"
}</msg>
<status status="PASS" endtime="20201104 13:09:21.546" starttime="20201104 13:09:20.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:21.546" starttime="20201104 13:09:21.546"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:21.559" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:21.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:21.631" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0611264 s, 85.8 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:21.631" starttime="20201104 13:09:21.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:21.633" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0611264 s, 85.8 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:21.633" starttime="20201104 13:09:21.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:21.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:21.634" starttime="20201104 13:09:21.633"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:21.634" starttime="20201104 13:09:21.554"></status>
</kw>
<msg timestamp="20201104 13:09:21.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:21.634" starttime="20201104 13:09:21.554"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:21.634" starttime="20201104 13:09:21.553"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:21.635" starttime="20201104 13:09:21.547"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:21.635" starttime="20201104 13:09:21.546"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:21.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 83879/multipartKey --part-number 1 --body /tmp/part1 --upload-id 68629b5e-6ebc-453f-a9d1-84dfa2c70360-105152207905619971 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:22.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:22.821" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152208053075973"
}</msg>
<status status="PASS" endtime="20201104 13:09:22.821" starttime="20201104 13:09:21.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:22.822" level="INFO">{
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152208053075973"
}</msg>
<status status="PASS" endtime="20201104 13:09:22.822" starttime="20201104 13:09:22.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:22.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:22.823" starttime="20201104 13:09:22.823"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:22.824" starttime="20201104 13:09:21.639"></status>
</kw>
<msg timestamp="20201104 13:09:22.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:22.824" starttime="20201104 13:09:21.638"></status>
</kw>
<msg timestamp="20201104 13:09:22.825" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152208053075973"
}</msg>
<status status="PASS" endtime="20201104 13:09:22.825" starttime="20201104 13:09:21.635"></status>
</kw>
<msg timestamp="20201104 13:09:22.825" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/83879/multipartKey105152208053075973"
}</msg>
<status status="PASS" endtime="20201104 13:09:22.825" starttime="20201104 13:09:21.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:22.826" starttime="20201104 13:09:22.825"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:22.826" critical="yes" starttime="20201104 13:09:18.427"></status>
</test>
<test id="s1-s3-s6-t2" name="Test Multipart Upload Complete">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:22.830" level="INFO">${random} = 17965</msg>
<status status="PASS" endtime="20201104 13:09:22.830" starttime="20201104 13:09:22.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:22.831" level="INFO">${PREFIX} = 17965</msg>
<status status="PASS" endtime="20201104 13:09:22.831" starttime="20201104 13:09:22.830"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:22.832" starttime="20201104 13:09:22.829"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:22.837" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 17965/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:23.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:23.351" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:23.351" starttime="20201104 13:09:22.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:23.352" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:23.352" starttime="20201104 13:09:23.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:23.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:23.353" starttime="20201104 13:09:23.353"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:23.353" starttime="20201104 13:09:22.834"></status>
</kw>
<msg timestamp="20201104 13:09:23.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:23.354" starttime="20201104 13:09:22.833"></status>
</kw>
<msg timestamp="20201104 13:09:23.354" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:23.354" starttime="20201104 13:09:22.833"></status>
</kw>
<msg timestamp="20201104 13:09:23.354" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:23.354" starttime="20201104 13:09:22.832"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:23.358" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766", 
    "Key": "17965/multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:23.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:23.400" level="INFO">${output} = 3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766</msg>
<status status="PASS" endtime="20201104 13:09:23.400" starttime="20201104 13:09:23.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:23.401" level="INFO">3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766</msg>
<status status="PASS" endtime="20201104 13:09:23.401" starttime="20201104 13:09:23.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:23.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:23.402" starttime="20201104 13:09:23.401"></status>
</kw>
<msg timestamp="20201104 13:09:23.402" level="INFO">${uploadID} = 3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766</msg>
<status status="PASS" endtime="20201104 13:09:23.402" starttime="20201104 13:09:23.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:23.403" starttime="20201104 13:09:23.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:23.404" starttime="20201104 13:09:23.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:23.404" starttime="20201104 13:09:23.404"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:23.409" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:23.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:23.453" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0395117 s, 133 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:23.453" starttime="20201104 13:09:23.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:23.454" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0395117 s, 133 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:23.454" starttime="20201104 13:09:23.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:23.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:23.455" starttime="20201104 13:09:23.454"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:23.455" starttime="20201104 13:09:23.406"></status>
</kw>
<msg timestamp="20201104 13:09:23.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:23.455" starttime="20201104 13:09:23.406"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:23.455" starttime="20201104 13:09:23.405"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:23.455" starttime="20201104 13:09:23.405"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:23.456" starttime="20201104 13:09:23.404"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:23.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 17965/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:24.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:24.423" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208170975239"
}</msg>
<status status="PASS" endtime="20201104 13:09:24.423" starttime="20201104 13:09:23.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:24.424" level="INFO">{
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208170975239"
}</msg>
<status status="PASS" endtime="20201104 13:09:24.424" starttime="20201104 13:09:24.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:24.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:24.425" starttime="20201104 13:09:24.424"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:24.425" starttime="20201104 13:09:23.457"></status>
</kw>
<msg timestamp="20201104 13:09:24.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:24.425" starttime="20201104 13:09:23.457"></status>
</kw>
<msg timestamp="20201104 13:09:24.426" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208170975239"
}</msg>
<status status="PASS" endtime="20201104 13:09:24.426" starttime="20201104 13:09:23.456"></status>
</kw>
<msg timestamp="20201104 13:09:24.426" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208170975239"
}</msg>
<status status="PASS" endtime="20201104 13:09:24.426" starttime="20201104 13:09:23.456"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:24.429" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208170975239"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:24.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:24.470" level="INFO">${output} = /s3v/bucket-75395/17965/multipartKey1105152208170975239</msg>
<status status="PASS" endtime="20201104 13:09:24.470" starttime="20201104 13:09:24.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:24.471" level="INFO">/s3v/bucket-75395/17965/multipartKey1105152208170975239</msg>
<status status="PASS" endtime="20201104 13:09:24.471" starttime="20201104 13:09:24.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:24.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:24.472" starttime="20201104 13:09:24.471"></status>
</kw>
<msg timestamp="20201104 13:09:24.472" level="INFO">${eTag1} = /s3v/bucket-75395/17965/multipartKey1105152208170975239</msg>
<status status="PASS" endtime="20201104 13:09:24.472" starttime="20201104 13:09:24.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:24.473" starttime="20201104 13:09:24.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:24.477" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20201104 13:09:24.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:24.478" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:24.478" starttime="20201104 13:09:24.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:24.479" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:24.479" starttime="20201104 13:09:24.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:24.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:24.480" starttime="20201104 13:09:24.479"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:24.480" starttime="20201104 13:09:24.474"></status>
</kw>
<msg timestamp="20201104 13:09:24.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:24.481" starttime="20201104 13:09:24.473"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:24.481" starttime="20201104 13:09:24.473"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:24.485" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 17965/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:25.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:25.194" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208236052488"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.195" starttime="20201104 13:09:24.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:25.196" level="INFO">{
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208236052488"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.196" starttime="20201104 13:09:25.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:25.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:25.197" starttime="20201104 13:09:25.196"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:25.197" starttime="20201104 13:09:24.482"></status>
</kw>
<msg timestamp="20201104 13:09:25.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:25.197" starttime="20201104 13:09:24.482"></status>
</kw>
<msg timestamp="20201104 13:09:25.197" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208236052488"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.197" starttime="20201104 13:09:24.482"></status>
</kw>
<msg timestamp="20201104 13:09:25.198" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208236052488"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.198" starttime="20201104 13:09:24.481"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:25.201" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/17965/multipartKey1105152208236052488"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:25.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:25.259" level="INFO">${output} = /s3v/bucket-75395/17965/multipartKey1105152208236052488</msg>
<status status="PASS" endtime="20201104 13:09:25.259" starttime="20201104 13:09:25.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:25.260" level="INFO">/s3v/bucket-75395/17965/multipartKey1105152208236052488</msg>
<status status="PASS" endtime="20201104 13:09:25.261" starttime="20201104 13:09:25.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:25.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:25.261" starttime="20201104 13:09:25.261"></status>
</kw>
<msg timestamp="20201104 13:09:25.262" level="INFO">${eTag2} = /s3v/bucket-75395/17965/multipartKey1105152208236052488</msg>
<status status="PASS" endtime="20201104 13:09:25.262" starttime="20201104 13:09:25.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:25.262" starttime="20201104 13:09:25.262"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:25.267" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 3b46cdbb-5ae3-46b5-a0a2-4c3dcb48a730-105152208128245766 --bucket bucket-75395 --key 17965/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/bucket-75395/17965/multipartKey1105152208170975239,PartNumber=1},{ETag=/s3v/bucket-75395/17965/multipartKey1105152208236052488,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:25.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:25.996" level="INFO">${output} = {
    "ETag": "17c6f446722937a82236a73d53a17e90604f37869f5952b10e6185d6473e9d79", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.996" starttime="20201104 13:09:25.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:25.997" level="INFO">{
    "ETag": "17c6f446722937a82236a73d53a17e90604f37869f5952b10e6185d6473e9d79", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.997" starttime="20201104 13:09:25.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:25.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:25.998" starttime="20201104 13:09:25.998"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:25.998" starttime="20201104 13:09:25.264"></status>
</kw>
<msg timestamp="20201104 13:09:25.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:25.999" starttime="20201104 13:09:25.264"></status>
</kw>
<msg timestamp="20201104 13:09:25.999" level="INFO">${output} = {
    "ETag": "17c6f446722937a82236a73d53a17e90604f37869f5952b10e6185d6473e9d79", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.999" starttime="20201104 13:09:25.264"></status>
</kw>
<msg timestamp="20201104 13:09:25.999" level="INFO">${result} = {
    "ETag": "17c6f446722937a82236a73d53a17e90604f37869f5952b10e6185d6473e9d79", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "17965/multipartKey1"
}</msg>
<status status="PASS" endtime="20201104 13:09:25.999" starttime="20201104 13:09:25.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:26.000" starttime="20201104 13:09:25.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:26.000" starttime="20201104 13:09:26.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:26.001" starttime="20201104 13:09:26.000"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:26.017" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-75395 --key 17965/multipartKey1 /tmp/17965-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:27.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:27.315" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:25 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:27.315" starttime="20201104 13:09:26.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.316" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:25 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13:09:26 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:09:27.316" starttime="20201104 13:09:27.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:27.318" starttime="20201104 13:09:27.316"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:27.318" starttime="20201104 13:09:26.012"></status>
</kw>
<msg timestamp="20201104 13:09:27.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:27.318" starttime="20201104 13:09:26.011"></status>
</kw>
<msg timestamp="20201104 13:09:27.319" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:25 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:27.319" starttime="20201104 13:09:26.002"></status>
</kw>
<msg timestamp="20201104 13:09:27.321" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:25 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:27.321" starttime="20201104 13:09:26.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:27.330" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/17965-multipartKey1'.</msg>
<msg timestamp="20201104 13:09:27.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:27.358" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:27.358" starttime="20201104 13:09:27.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.360" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:27.360" starttime="20201104 13:09:27.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:27.360" starttime="20201104 13:09:27.360"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:27.361" starttime="20201104 13:09:27.322"></status>
</kw>
<msg timestamp="20201104 13:09:27.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:27.361" starttime="20201104 13:09:27.322"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:27.361" starttime="20201104 13:09:27.321"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:27.369" level="INFO">Running command 'md5sum /tmp/17965-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:27.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:27.645" level="INFO">${output} = 6c6f28a5d9967cf9b163699438b78aca</msg>
<status status="PASS" endtime="20201104 13:09:27.645" starttime="20201104 13:09:27.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.646" level="INFO">6c6f28a5d9967cf9b163699438b78aca</msg>
<status status="PASS" endtime="20201104 13:09:27.646" starttime="20201104 13:09:27.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:27.647" starttime="20201104 13:09:27.647"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:27.647" starttime="20201104 13:09:27.363"></status>
</kw>
<msg timestamp="20201104 13:09:27.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:27.648" starttime="20201104 13:09:27.362"></status>
</kw>
<msg timestamp="20201104 13:09:27.648" level="INFO">${checksumbefore} = 6c6f28a5d9967cf9b163699438b78aca</msg>
<status status="PASS" endtime="20201104 13:09:27.648" starttime="20201104 13:09:27.362"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:27.652" level="INFO">Running command 'md5sum /tmp/17965-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:27.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:27.668" level="INFO">${output} = 6c6f28a5d9967cf9b163699438b78aca</msg>
<status status="PASS" endtime="20201104 13:09:27.668" starttime="20201104 13:09:27.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.669" level="INFO">6c6f28a5d9967cf9b163699438b78aca</msg>
<status status="PASS" endtime="20201104 13:09:27.669" starttime="20201104 13:09:27.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:27.670" starttime="20201104 13:09:27.669"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:27.670" starttime="20201104 13:09:27.649"></status>
</kw>
<msg timestamp="20201104 13:09:27.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:27.670" starttime="20201104 13:09:27.649"></status>
</kw>
<msg timestamp="20201104 13:09:27.671" level="INFO">${checksumafter} = 6c6f28a5d9967cf9b163699438b78aca</msg>
<status status="PASS" endtime="20201104 13:09:27.671" starttime="20201104 13:09:27.648"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:27.671" starttime="20201104 13:09:27.671"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:27.671" starttime="20201104 13:09:27.361"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:27.672" critical="yes" starttime="20201104 13:09:22.828"></status>
</test>
<test id="s1-s3-s6-t3" name="Test Multipart Upload Complete Entity too small">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:27.675" level="INFO">${random} = 26289</msg>
<status status="PASS" endtime="20201104 13:09:27.675" starttime="20201104 13:09:27.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:27.675" level="INFO">${PREFIX} = 26289</msg>
<status status="PASS" endtime="20201104 13:09:27.675" starttime="20201104 13:09:27.675"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:27.675" starttime="20201104 13:09:27.673"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:27.680" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 26289/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:28.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:28.175" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041", 
    "Key": "26289/multipartKey2"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.175" starttime="20201104 13:09:27.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.177" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041", 
    "Key": "26289/multipartKey2"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.177" starttime="20201104 13:09:28.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:28.177" starttime="20201104 13:09:28.177"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:28.178" starttime="20201104 13:09:27.677"></status>
</kw>
<msg timestamp="20201104 13:09:28.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:28.178" starttime="20201104 13:09:27.677"></status>
</kw>
<msg timestamp="20201104 13:09:28.178" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041", 
    "Key": "26289/multipartKey2"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.178" starttime="20201104 13:09:27.676"></status>
</kw>
<msg timestamp="20201104 13:09:28.178" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041", 
    "Key": "26289/multipartKey2"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.178" starttime="20201104 13:09:27.676"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:28.183" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041", 
    "Key": "26289/multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:28.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:28.223" level="INFO">${output} = dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041</msg>
<status status="PASS" endtime="20201104 13:09:28.223" starttime="20201104 13:09:28.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.224" level="INFO">dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041</msg>
<status status="PASS" endtime="20201104 13:09:28.224" starttime="20201104 13:09:28.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:28.225" starttime="20201104 13:09:28.224"></status>
</kw>
<msg timestamp="20201104 13:09:28.225" level="INFO">${uploadID} = dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041</msg>
<status status="PASS" endtime="20201104 13:09:28.225" starttime="20201104 13:09:28.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:28.226" starttime="20201104 13:09:28.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:28.226" starttime="20201104 13:09:28.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:28.227" starttime="20201104 13:09:28.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part1" &gt; /tmp/part1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:28.232" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20201104 13:09:28.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:28.233" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:28.233" starttime="20201104 13:09:28.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.234" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:28.234" starttime="20201104 13:09:28.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:28.235" starttime="20201104 13:09:28.234"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:28.235" starttime="20201104 13:09:28.227"></status>
</kw>
<msg timestamp="20201104 13:09:28.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:28.236" starttime="20201104 13:09:28.227"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:28.236" starttime="20201104 13:09:28.227"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:28.241" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 26289/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:28.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:28.955" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208481615882"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.955" starttime="20201104 13:09:28.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.956" level="INFO">{
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208481615882"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.956" starttime="20201104 13:09:28.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:28.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:28.957" starttime="20201104 13:09:28.957"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:28.958" starttime="20201104 13:09:28.237"></status>
</kw>
<msg timestamp="20201104 13:09:28.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:28.958" starttime="20201104 13:09:28.237"></status>
</kw>
<msg timestamp="20201104 13:09:28.958" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208481615882"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.958" starttime="20201104 13:09:28.236"></status>
</kw>
<msg timestamp="20201104 13:09:28.958" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208481615882"
}</msg>
<status status="PASS" endtime="20201104 13:09:28.958" starttime="20201104 13:09:28.236"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:28.963" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208481615882"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:29.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:29.004" level="INFO">${output} = /s3v/bucket-75395/26289/multipartKey2105152208481615882</msg>
<status status="PASS" endtime="20201104 13:09:29.004" starttime="20201104 13:09:28.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.005" level="INFO">/s3v/bucket-75395/26289/multipartKey2105152208481615882</msg>
<status status="PASS" endtime="20201104 13:09:29.005" starttime="20201104 13:09:29.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:29.006" starttime="20201104 13:09:29.005"></status>
</kw>
<msg timestamp="20201104 13:09:29.006" level="INFO">${eTag1} = /s3v/bucket-75395/26289/multipartKey2105152208481615882</msg>
<status status="PASS" endtime="20201104 13:09:29.006" starttime="20201104 13:09:28.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:29.006" starttime="20201104 13:09:29.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:29.011" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20201104 13:09:29.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:29.012" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:29.012" starttime="20201104 13:09:29.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.013" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:29.013" starttime="20201104 13:09:29.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:29.014" starttime="20201104 13:09:29.013"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:29.014" starttime="20201104 13:09:29.007"></status>
</kw>
<msg timestamp="20201104 13:09:29.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:29.015" starttime="20201104 13:09:29.007"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:29.015" starttime="20201104 13:09:29.007"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:29.019" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 26289/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:29.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:29.668" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208531619851"
}</msg>
<status status="PASS" endtime="20201104 13:09:29.668" starttime="20201104 13:09:29.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.669" level="INFO">{
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208531619851"
}</msg>
<status status="PASS" endtime="20201104 13:09:29.670" starttime="20201104 13:09:29.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:29.670" starttime="20201104 13:09:29.670"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:29.671" starttime="20201104 13:09:29.017"></status>
</kw>
<msg timestamp="20201104 13:09:29.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:29.671" starttime="20201104 13:09:29.017"></status>
</kw>
<msg timestamp="20201104 13:09:29.671" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208531619851"
}</msg>
<status status="PASS" endtime="20201104 13:09:29.671" starttime="20201104 13:09:29.016"></status>
</kw>
<msg timestamp="20201104 13:09:29.671" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208531619851"
}</msg>
<status status="PASS" endtime="20201104 13:09:29.671" starttime="20201104 13:09:29.015"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:29.675" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/26289/multipartKey2105152208531619851"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:29.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:29.717" level="INFO">${output} = /s3v/bucket-75395/26289/multipartKey2105152208531619851</msg>
<status status="PASS" endtime="20201104 13:09:29.717" starttime="20201104 13:09:29.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.718" level="INFO">/s3v/bucket-75395/26289/multipartKey2105152208531619851</msg>
<status status="PASS" endtime="20201104 13:09:29.719" starttime="20201104 13:09:29.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:29.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:29.719" starttime="20201104 13:09:29.719"></status>
</kw>
<msg timestamp="20201104 13:09:29.720" level="INFO">${eTag2} = /s3v/bucket-75395/26289/multipartKey2105152208531619851</msg>
<status status="PASS" endtime="20201104 13:09:29.720" starttime="20201104 13:09:29.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:29.720" starttime="20201104 13:09:29.720"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:29.735" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id dfa2e1c2-9411-4a3e-b431-199a6dc8e5b7-105152208444588041 --bucket bucket-75395 --key 26289/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/bucket-75395/26289/multipartKey2105152208481615882,PartNumber=1},{ETag=/s3v/bucket-75395/26289/multipartKey2105152208531619851,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:30.233" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:30.233" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20201104 13:09:30.233" starttime="20201104 13:09:29.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:30.234" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" endtime="20201104 13:09:30.234" starttime="20201104 13:09:30.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:30.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:30.235" starttime="20201104 13:09:30.234"></status>
</kw>
<msg timestamp="20201104 13:09:30.236" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20201104 13:09:30.236" starttime="20201104 13:09:29.721"></status>
</kw>
<msg timestamp="20201104 13:09:30.236" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20201104 13:09:30.236" starttime="20201104 13:09:29.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:30.236" starttime="20201104 13:09:30.236"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:30.237" critical="yes" starttime="20201104 13:09:27.672"></status>
</test>
<test id="s1-s3-s6-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:30.240" level="INFO">${random} = 28648</msg>
<status status="PASS" endtime="20201104 13:09:30.240" starttime="20201104 13:09:30.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:30.240" level="INFO">${PREFIX} = 28648</msg>
<status status="PASS" endtime="20201104 13:09:30.240" starttime="20201104 13:09:30.240"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:30.241" starttime="20201104 13:09:30.238"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:30.245" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 28648/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:30.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:30.747" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:30.747" starttime="20201104 13:09:30.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:30.748" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:30.748" starttime="20201104 13:09:30.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:30.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:30.749" starttime="20201104 13:09:30.749"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:30.749" starttime="20201104 13:09:30.242"></status>
</kw>
<msg timestamp="20201104 13:09:30.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:30.750" starttime="20201104 13:09:30.242"></status>
</kw>
<msg timestamp="20201104 13:09:30.750" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:30.750" starttime="20201104 13:09:30.241"></status>
</kw>
<msg timestamp="20201104 13:09:30.750" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:30.750" starttime="20201104 13:09:30.241"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:30.755" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956", 
    "Key": "28648/multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:30.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:30.796" level="INFO">${output} = 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956</msg>
<status status="PASS" endtime="20201104 13:09:30.796" starttime="20201104 13:09:30.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:30.797" level="INFO">9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956</msg>
<status status="PASS" endtime="20201104 13:09:30.797" starttime="20201104 13:09:30.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:30.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:30.798" starttime="20201104 13:09:30.798"></status>
</kw>
<msg timestamp="20201104 13:09:30.799" level="INFO">${uploadID} = 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956</msg>
<status status="PASS" endtime="20201104 13:09:30.799" starttime="20201104 13:09:30.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:30.799" starttime="20201104 13:09:30.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:30.800" starttime="20201104 13:09:30.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:30.801" starttime="20201104 13:09:30.800"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:30.804" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 --bucket bucket-75395 --key 28648/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:31.352" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:31.352" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:31.352" starttime="20201104 13:09:30.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:31.353" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20201104 13:09:31.353" starttime="20201104 13:09:31.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:31.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:31.354" starttime="20201104 13:09:31.353"></status>
</kw>
<msg timestamp="20201104 13:09:31.354" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:31.354" starttime="20201104 13:09:30.802"></status>
</kw>
<msg timestamp="20201104 13:09:31.354" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:31.354" starttime="20201104 13:09:30.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:31.355" starttime="20201104 13:09:31.355"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:31.359" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 --bucket bucket-75395 --key 28648/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:31.882" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:31.882" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:31.882" starttime="20201104 13:09:31.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:31.883" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20201104 13:09:31.883" starttime="20201104 13:09:31.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:31.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:31.884" starttime="20201104 13:09:31.883"></status>
</kw>
<msg timestamp="20201104 13:09:31.884" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:31.884" starttime="20201104 13:09:31.356"></status>
</kw>
<msg timestamp="20201104 13:09:31.885" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:31.885" starttime="20201104 13:09:31.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:31.885" starttime="20201104 13:09:31.885"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:31.890" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:31.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:31.943" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0495583 s, 106 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:31.943" starttime="20201104 13:09:31.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:31.944" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0495583 s, 106 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:31.944" starttime="20201104 13:09:31.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:31.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:31.945" starttime="20201104 13:09:31.944"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:31.945" starttime="20201104 13:09:31.887"></status>
</kw>
<msg timestamp="20201104 13:09:31.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:31.945" starttime="20201104 13:09:31.887"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:31.946" starttime="20201104 13:09:31.886"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:31.946" starttime="20201104 13:09:31.886"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:31.946" starttime="20201104 13:09:31.885"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:31.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 28648/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:32.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:32.911" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208726654989"
}</msg>
<status status="PASS" endtime="20201104 13:09:32.911" starttime="20201104 13:09:31.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:32.912" level="INFO">{
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208726654989"
}</msg>
<status status="PASS" endtime="20201104 13:09:32.912" starttime="20201104 13:09:32.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:32.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:32.913" starttime="20201104 13:09:32.912"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:32.913" starttime="20201104 13:09:31.947"></status>
</kw>
<msg timestamp="20201104 13:09:32.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:32.913" starttime="20201104 13:09:31.947"></status>
</kw>
<msg timestamp="20201104 13:09:32.914" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208726654989"
}</msg>
<status status="PASS" endtime="20201104 13:09:32.914" starttime="20201104 13:09:31.947"></status>
</kw>
<msg timestamp="20201104 13:09:32.914" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208726654989"
}</msg>
<status status="PASS" endtime="20201104 13:09:32.914" starttime="20201104 13:09:31.946"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:32.917" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208726654989"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:32.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:32.961" level="INFO">${output} = /s3v/bucket-75395/28648/multipartKey3105152208726654989</msg>
<status status="PASS" endtime="20201104 13:09:32.961" starttime="20201104 13:09:32.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:32.962" level="INFO">/s3v/bucket-75395/28648/multipartKey3105152208726654989</msg>
<status status="PASS" endtime="20201104 13:09:32.962" starttime="20201104 13:09:32.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:32.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:32.963" starttime="20201104 13:09:32.963"></status>
</kw>
<msg timestamp="20201104 13:09:32.963" level="INFO">${eTag1} = /s3v/bucket-75395/28648/multipartKey3105152208726654989</msg>
<status status="PASS" endtime="20201104 13:09:32.963" starttime="20201104 13:09:32.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:32.964" starttime="20201104 13:09:32.964"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:32.969" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 28648/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:36.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:36.350" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208792518670"
}</msg>
<status status="PASS" endtime="20201104 13:09:36.350" starttime="20201104 13:09:32.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:36.352" level="INFO">{
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208792518670"
}</msg>
<status status="PASS" endtime="20201104 13:09:36.352" starttime="20201104 13:09:36.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:36.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:36.352" starttime="20201104 13:09:36.352"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:36.353" starttime="20201104 13:09:32.966"></status>
</kw>
<msg timestamp="20201104 13:09:36.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:36.353" starttime="20201104 13:09:32.965"></status>
</kw>
<msg timestamp="20201104 13:09:36.353" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208792518670"
}</msg>
<status status="PASS" endtime="20201104 13:09:36.353" starttime="20201104 13:09:32.965"></status>
</kw>
<msg timestamp="20201104 13:09:36.353" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208792518670"
}</msg>
<status status="PASS" endtime="20201104 13:09:36.353" starttime="20201104 13:09:32.964"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:36.356" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152208792518670"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:36.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:36.397" level="INFO">${output} = /s3v/bucket-75395/28648/multipartKey3105152208792518670</msg>
<status status="PASS" endtime="20201104 13:09:36.397" starttime="20201104 13:09:36.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:36.398" level="INFO">/s3v/bucket-75395/28648/multipartKey3105152208792518670</msg>
<status status="PASS" endtime="20201104 13:09:36.399" starttime="20201104 13:09:36.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:36.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:36.399" starttime="20201104 13:09:36.399"></status>
</kw>
<msg timestamp="20201104 13:09:36.399" level="INFO">${eTag2} = /s3v/bucket-75395/28648/multipartKey3105152208792518670</msg>
<status status="PASS" endtime="20201104 13:09:36.400" starttime="20201104 13:09:36.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:36.400" starttime="20201104 13:09:36.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part3" &gt; /tmp/part3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:36.404" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20201104 13:09:36.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:36.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:36.405" starttime="20201104 13:09:36.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:36.406" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:36.407" starttime="20201104 13:09:36.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:36.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:36.408" starttime="20201104 13:09:36.407"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:36.408" starttime="20201104 13:09:36.401"></status>
</kw>
<msg timestamp="20201104 13:09:36.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:36.408" starttime="20201104 13:09:36.401"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:36.408" starttime="20201104 13:09:36.400"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:36.413" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 28648/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:37.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:37.075" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152209016258575"
}</msg>
<status status="PASS" endtime="20201104 13:09:37.075" starttime="20201104 13:09:36.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:37.076" level="INFO">{
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152209016258575"
}</msg>
<status status="PASS" endtime="20201104 13:09:37.076" starttime="20201104 13:09:37.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:37.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:37.077" starttime="20201104 13:09:37.076"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:37.077" starttime="20201104 13:09:36.410"></status>
</kw>
<msg timestamp="20201104 13:09:37.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:37.077" starttime="20201104 13:09:36.410"></status>
</kw>
<msg timestamp="20201104 13:09:37.077" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152209016258575"
}</msg>
<status status="PASS" endtime="20201104 13:09:37.077" starttime="20201104 13:09:36.409"></status>
</kw>
<msg timestamp="20201104 13:09:37.078" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152209016258575"
}</msg>
<status status="PASS" endtime="20201104 13:09:37.078" starttime="20201104 13:09:36.408"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag3}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:37.084" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/28648/multipartKey3105152209016258575"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:37.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:37.126" level="INFO">${output} = /s3v/bucket-75395/28648/multipartKey3105152209016258575</msg>
<status status="PASS" endtime="20201104 13:09:37.126" starttime="20201104 13:09:37.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:37.127" level="INFO">/s3v/bucket-75395/28648/multipartKey3105152209016258575</msg>
<status status="PASS" endtime="20201104 13:09:37.127" starttime="20201104 13:09:37.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:37.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:37.128" starttime="20201104 13:09:37.127"></status>
</kw>
<msg timestamp="20201104 13:09:37.128" level="INFO">${eTag3} = /s3v/bucket-75395/28648/multipartKey3105152209016258575</msg>
<status status="PASS" endtime="20201104 13:09:37.128" starttime="20201104 13:09:37.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:37.129" starttime="20201104 13:09:37.128"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:37.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 --bucket bucket-75395 --key 28648/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:37.682" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:37.682" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:37.682" starttime="20201104 13:09:37.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:37.683" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20201104 13:09:37.683" starttime="20201104 13:09:37.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:37.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:37.684" starttime="20201104 13:09:37.684"></status>
</kw>
<msg timestamp="20201104 13:09:37.685" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:37.685" starttime="20201104 13:09:37.130"></status>
</kw>
<msg timestamp="20201104 13:09:37.685" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:37.685" starttime="20201104 13:09:37.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:37.686" starttime="20201104 13:09:37.685"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:37.691" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 --bucket bucket-75395 --key 28648/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-75395/28648/multipartKey3105152208726654989,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:38.199" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:38.199" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:38.199" starttime="20201104 13:09:37.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:38.200" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20201104 13:09:38.200" starttime="20201104 13:09:38.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:38.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:38.201" starttime="20201104 13:09:38.200"></status>
</kw>
<msg timestamp="20201104 13:09:38.201" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:38.201" starttime="20201104 13:09:37.687"></status>
</kw>
<msg timestamp="20201104 13:09:38.201" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20201104 13:09:38.202" starttime="20201104 13:09:37.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:38.202" starttime="20201104 13:09:38.202"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:38.206" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 --bucket bucket-75395 --key 28648/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-75395/28648/multipartKey3105152208726654989,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:38.709" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:38.709" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20201104 13:09:38.709" starttime="20201104 13:09:38.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:38.710" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20201104 13:09:38.710" starttime="20201104 13:09:38.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:38.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:38.711" starttime="20201104 13:09:38.711"></status>
</kw>
<msg timestamp="20201104 13:09:38.711" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20201104 13:09:38.712" starttime="20201104 13:09:38.203"></status>
</kw>
<msg timestamp="20201104 13:09:38.712" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20201104 13:09:38.712" starttime="20201104 13:09:38.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:38.712" starttime="20201104 13:09:38.712"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:38.717" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9a4a704d-4946-40e8-af5e-d89d7174020a-105152208612818956 --bucket bucket-75395 --key 28648/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-75395/28648/multipartKey3105152208726654989,PartNumber=1},{ETag=/s3v/bucket-75395/28648/multipartKey3105152209016258575,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:39.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:39.219" level="INFO">${output} = {
    "ETag": "2a2729198dc617ee5f2d9ecb7a8377e60e0695bc099467182f60e9290205a662", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:39.219" starttime="20201104 13:09:38.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:39.220" level="INFO">{
    "ETag": "2a2729198dc617ee5f2d9ecb7a8377e60e0695bc099467182f60e9290205a662", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:39.220" starttime="20201104 13:09:39.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:39.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:39.221" starttime="20201104 13:09:39.221"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:39.221" starttime="20201104 13:09:38.714"></status>
</kw>
<msg timestamp="20201104 13:09:39.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:39.222" starttime="20201104 13:09:38.714"></status>
</kw>
<msg timestamp="20201104 13:09:39.222" level="INFO">${output} = {
    "ETag": "2a2729198dc617ee5f2d9ecb7a8377e60e0695bc099467182f60e9290205a662", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:39.222" starttime="20201104 13:09:38.713"></status>
</kw>
<msg timestamp="20201104 13:09:39.222" level="INFO">${result} = {
    "ETag": "2a2729198dc617ee5f2d9ecb7a8377e60e0695bc099467182f60e9290205a662", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "28648/multipartKey3"
}</msg>
<status status="PASS" endtime="20201104 13:09:39.222" starttime="20201104 13:09:38.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:39.223" starttime="20201104 13:09:39.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:39.224" starttime="20201104 13:09:39.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:39.224" starttime="20201104 13:09:39.224"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:39.228" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-75395 --key 28648/multipartKey3 /tmp/28648-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:39.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:39.977" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:39 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:39.977" starttime="20201104 13:09:39.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:39.978" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:39 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13:09:39 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:09:39.978" starttime="20201104 13:09:39.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:39.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:39.979" starttime="20201104 13:09:39.979"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:39.979" starttime="20201104 13:09:39.226"></status>
</kw>
<msg timestamp="20201104 13:09:39.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:39.980" starttime="20201104 13:09:39.225"></status>
</kw>
<msg timestamp="20201104 13:09:39.980" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:39 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:39.980" starttime="20201104 13:09:39.225"></status>
</kw>
<msg timestamp="20201104 13:09:39.980" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:39 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:39.980" starttime="20201104 13:09:39.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:39.985" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/28648-multipartKey3'.</msg>
<msg timestamp="20201104 13:09:39.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:39.991" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:39.991" starttime="20201104 13:09:39.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:39.993" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:39.993" starttime="20201104 13:09:39.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:39.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:39.994" starttime="20201104 13:09:39.993"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:39.994" starttime="20201104 13:09:39.981"></status>
</kw>
<msg timestamp="20201104 13:09:39.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:39.994" starttime="20201104 13:09:39.981"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:39.995" starttime="20201104 13:09:39.980"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:40.000" level="INFO">Running command 'md5sum /tmp/28648-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:40.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:40.014" level="INFO">${output} = bc555330d857e3360af0a63ebe626513</msg>
<status status="PASS" endtime="20201104 13:09:40.014" starttime="20201104 13:09:39.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.015" level="INFO">bc555330d857e3360af0a63ebe626513</msg>
<status status="PASS" endtime="20201104 13:09:40.015" starttime="20201104 13:09:40.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:40.016" starttime="20201104 13:09:40.015"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:40.016" starttime="20201104 13:09:39.996"></status>
</kw>
<msg timestamp="20201104 13:09:40.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:40.016" starttime="20201104 13:09:39.996"></status>
</kw>
<msg timestamp="20201104 13:09:40.016" level="INFO">${checksumbefore} = bc555330d857e3360af0a63ebe626513</msg>
<status status="PASS" endtime="20201104 13:09:40.016" starttime="20201104 13:09:39.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:40.021" level="INFO">Running command 'md5sum /tmp/28648-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:40.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:40.035" level="INFO">${output} = bc555330d857e3360af0a63ebe626513</msg>
<status status="PASS" endtime="20201104 13:09:40.035" starttime="20201104 13:09:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.036" level="INFO">bc555330d857e3360af0a63ebe626513</msg>
<status status="PASS" endtime="20201104 13:09:40.036" starttime="20201104 13:09:40.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:40.037" starttime="20201104 13:09:40.036"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:40.037" starttime="20201104 13:09:40.017"></status>
</kw>
<msg timestamp="20201104 13:09:40.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:40.037" starttime="20201104 13:09:40.017"></status>
</kw>
<msg timestamp="20201104 13:09:40.037" level="INFO">${checksumafter} = bc555330d857e3360af0a63ebe626513</msg>
<status status="PASS" endtime="20201104 13:09:40.037" starttime="20201104 13:09:40.017"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:40.038" starttime="20201104 13:09:40.038"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:40.038" starttime="20201104 13:09:39.995"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:40.038" critical="yes" starttime="20201104 13:09:30.237"></status>
</test>
<test id="s1-s3-s6-t5" name="Test abort Multipart upload">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:40.041" level="INFO">${random} = 59961</msg>
<status status="PASS" endtime="20201104 13:09:40.041" starttime="20201104 13:09:40.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.042" level="INFO">${PREFIX} = 59961</msg>
<status status="PASS" endtime="20201104 13:09:40.042" starttime="20201104 13:09:40.041"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:40.042" starttime="20201104 13:09:40.040"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:40.046" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 59961/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:40.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:40.534" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328", 
    "Key": "59961/multipartKey4"
}</msg>
<status status="PASS" endtime="20201104 13:09:40.534" starttime="20201104 13:09:40.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.535" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328", 
    "Key": "59961/multipartKey4"
}</msg>
<status status="PASS" endtime="20201104 13:09:40.535" starttime="20201104 13:09:40.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:40.536" starttime="20201104 13:09:40.535"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:40.536" starttime="20201104 13:09:40.043"></status>
</kw>
<msg timestamp="20201104 13:09:40.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:40.536" starttime="20201104 13:09:40.043"></status>
</kw>
<msg timestamp="20201104 13:09:40.536" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328", 
    "Key": "59961/multipartKey4"
}</msg>
<status status="PASS" endtime="20201104 13:09:40.537" starttime="20201104 13:09:40.043"></status>
</kw>
<msg timestamp="20201104 13:09:40.537" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328", 
    "Key": "59961/multipartKey4"
}</msg>
<status status="PASS" endtime="20201104 13:09:40.537" starttime="20201104 13:09:40.042"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:40.541" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328", 
    "Key": "59961/multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:40.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:40.582" level="INFO">${output} = 28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328</msg>
<status status="PASS" endtime="20201104 13:09:40.582" starttime="20201104 13:09:40.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.583" level="INFO">28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328</msg>
<status status="PASS" endtime="20201104 13:09:40.583" starttime="20201104 13:09:40.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:40.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:40.584" starttime="20201104 13:09:40.583"></status>
</kw>
<msg timestamp="20201104 13:09:40.584" level="INFO">${uploadID} = 28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328</msg>
<status status="PASS" endtime="20201104 13:09:40.584" starttime="20201104 13:09:40.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:40.585" starttime="20201104 13:09:40.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:40.585" starttime="20201104 13:09:40.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:40.586" starttime="20201104 13:09:40.585"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:40.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-75395 --key 59961/multipartKey4 --upload-id 28eead62-d4b1-4cbc-a229-b56643d1f764-105152209254285328 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:41.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:41.184" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:41.184" starttime="20201104 13:09:40.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.185" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:41.185" starttime="20201104 13:09:41.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:41.186" starttime="20201104 13:09:41.185"></status>
</kw>
<msg timestamp="20201104 13:09:41.186" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:41.186" starttime="20201104 13:09:40.586"></status>
</kw>
<msg timestamp="20201104 13:09:41.186" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:09:41.186" starttime="20201104 13:09:40.586"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:41.187" critical="yes" starttime="20201104 13:09:40.039"></status>
</test>
<test id="s1-s3-s6-t6" name="Test abort Multipart upload with invalid uploadId">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:41.190" level="INFO">${random} = 05213</msg>
<status status="PASS" endtime="20201104 13:09:41.190" starttime="20201104 13:09:41.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.191" level="INFO">${PREFIX} = 05213</msg>
<status status="PASS" endtime="20201104 13:09:41.191" starttime="20201104 13:09:41.191"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:41.191" starttime="20201104 13:09:41.190"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:41.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-75395 --key 05213/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:41.688" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:41.688" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20201104 13:09:41.688" starttime="20201104 13:09:41.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.689" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" endtime="20201104 13:09:41.689" starttime="20201104 13:09:41.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:41.690" starttime="20201104 13:09:41.690"></status>
</kw>
<msg timestamp="20201104 13:09:41.690" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20201104 13:09:41.690" starttime="20201104 13:09:41.192"></status>
</kw>
<msg timestamp="20201104 13:09:41.691" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20201104 13:09:41.691" starttime="20201104 13:09:41.191"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:41.691" critical="yes" starttime="20201104 13:09:41.188"></status>
</test>
<test id="s1-s3-s6-t7" name="Upload part with Incorrect uploadID">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:41.694" level="INFO">${random} = 75703</msg>
<status status="PASS" endtime="20201104 13:09:41.694" starttime="20201104 13:09:41.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.694" level="INFO">${PREFIX} = 75703</msg>
<status status="PASS" endtime="20201104 13:09:41.695" starttime="20201104 13:09:41.694"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:41.695" starttime="20201104 13:09:41.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:41.699" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20201104 13:09:41.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:41.700" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:41.700" starttime="20201104 13:09:41.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.701" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:41.701" starttime="20201104 13:09:41.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:41.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:41.702" starttime="20201104 13:09:41.702"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:41.702" starttime="20201104 13:09:41.695"></status>
</kw>
<msg timestamp="20201104 13:09:41.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:41.703" starttime="20201104 13:09:41.695"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:41.703" starttime="20201104 13:09:41.695"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:41.707" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 75703/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:42.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:09:42.206" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20201104 13:09:42.206" starttime="20201104 13:09:41.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.207" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" endtime="20201104 13:09:42.208" starttime="20201104 13:09:42.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:42.208" starttime="20201104 13:09:42.208"></status>
</kw>
<msg timestamp="20201104 13:09:42.209" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20201104 13:09:42.209" starttime="20201104 13:09:41.703"></status>
</kw>
<msg timestamp="20201104 13:09:42.209" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20201104 13:09:42.209" starttime="20201104 13:09:41.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:42.210" starttime="20201104 13:09:42.209"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:42.210" critical="yes" starttime="20201104 13:09:41.692"></status>
</test>
<test id="s1-s3-s6-t8" name="Test list parts">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:42.213" level="INFO">${random} = 59574</msg>
<status status="PASS" endtime="20201104 13:09:42.213" starttime="20201104 13:09:42.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.213" level="INFO">${PREFIX} = 59574</msg>
<status status="PASS" endtime="20201104 13:09:42.213" starttime="20201104 13:09:42.213"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:42.213" starttime="20201104 13:09:42.212"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:42.218" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 59574/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:42.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:42.744" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418", 
    "Key": "59574/multipartKey5"
}</msg>
<status status="PASS" endtime="20201104 13:09:42.744" starttime="20201104 13:09:42.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.749" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418", 
    "Key": "59574/multipartKey5"
}</msg>
<status status="PASS" endtime="20201104 13:09:42.749" starttime="20201104 13:09:42.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:42.750" starttime="20201104 13:09:42.749"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:42.750" starttime="20201104 13:09:42.215"></status>
</kw>
<msg timestamp="20201104 13:09:42.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:42.750" starttime="20201104 13:09:42.215"></status>
</kw>
<msg timestamp="20201104 13:09:42.751" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418", 
    "Key": "59574/multipartKey5"
}</msg>
<status status="PASS" endtime="20201104 13:09:42.751" starttime="20201104 13:09:42.214"></status>
</kw>
<msg timestamp="20201104 13:09:42.751" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418", 
    "Key": "59574/multipartKey5"
}</msg>
<status status="PASS" endtime="20201104 13:09:42.751" starttime="20201104 13:09:42.214"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:42.755" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418", 
    "Key": "59574/multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:42.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:42.801" level="INFO">${output} = ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418</msg>
<status status="PASS" endtime="20201104 13:09:42.801" starttime="20201104 13:09:42.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.803" level="INFO">ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418</msg>
<status status="PASS" endtime="20201104 13:09:42.803" starttime="20201104 13:09:42.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:42.804" starttime="20201104 13:09:42.803"></status>
</kw>
<msg timestamp="20201104 13:09:42.804" level="INFO">${uploadID} = ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418</msg>
<status status="PASS" endtime="20201104 13:09:42.804" starttime="20201104 13:09:42.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:42.805" starttime="20201104 13:09:42.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:42.805" starttime="20201104 13:09:42.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:42.806" starttime="20201104 13:09:42.805"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:42.811" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:42.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:42.868" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0528989 s, 99.1 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:42.868" starttime="20201104 13:09:42.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.869" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0528989 s, 99.1 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:42.869" starttime="20201104 13:09:42.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:42.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:42.870" starttime="20201104 13:09:42.869"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:42.870" starttime="20201104 13:09:42.808"></status>
</kw>
<msg timestamp="20201104 13:09:42.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:42.870" starttime="20201104 13:09:42.808"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:42.871" starttime="20201104 13:09:42.807"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:42.871" starttime="20201104 13:09:42.806"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:42.871" starttime="20201104 13:09:42.806"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:42.875" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 59574/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:43.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:43.857" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011"
}</msg>
<status status="PASS" endtime="20201104 13:09:43.857" starttime="20201104 13:09:42.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:43.858" level="INFO">{
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011"
}</msg>
<status status="PASS" endtime="20201104 13:09:43.858" starttime="20201104 13:09:43.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:43.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:43.859" starttime="20201104 13:09:43.859"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:43.859" starttime="20201104 13:09:42.873"></status>
</kw>
<msg timestamp="20201104 13:09:43.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:43.860" starttime="20201104 13:09:42.872"></status>
</kw>
<msg timestamp="20201104 13:09:43.860" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011"
}</msg>
<status status="PASS" endtime="20201104 13:09:43.860" starttime="20201104 13:09:42.872"></status>
</kw>
<msg timestamp="20201104 13:09:43.860" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011"
}</msg>
<status status="PASS" endtime="20201104 13:09:43.860" starttime="20201104 13:09:42.871"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:43.864" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:43.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:43.906" level="INFO">${output} = /s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:43.906" starttime="20201104 13:09:43.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:43.907" level="INFO">/s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:43.907" starttime="20201104 13:09:43.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:43.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:43.907" starttime="20201104 13:09:43.907"></status>
</kw>
<msg timestamp="20201104 13:09:43.908" level="INFO">${eTag1} = /s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:43.908" starttime="20201104 13:09:43.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:43.908" starttime="20201104 13:09:43.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:43.912" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20201104 13:09:43.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:43.914" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:43.914" starttime="20201104 13:09:43.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:43.915" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:43.915" starttime="20201104 13:09:43.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:43.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:43.916" starttime="20201104 13:09:43.915"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:43.916" starttime="20201104 13:09:43.909"></status>
</kw>
<msg timestamp="20201104 13:09:43.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:43.916" starttime="20201104 13:09:43.909"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:43.916" starttime="20201104 13:09:43.909"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:43.920" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-75395 --key 59574/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:44.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:44.686" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900"
}</msg>
<status status="PASS" endtime="20201104 13:09:44.686" starttime="20201104 13:09:43.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:44.687" level="INFO">{
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900"
}</msg>
<status status="PASS" endtime="20201104 13:09:44.687" starttime="20201104 13:09:44.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:44.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:44.688" starttime="20201104 13:09:44.688"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:44.688" starttime="20201104 13:09:43.918"></status>
</kw>
<msg timestamp="20201104 13:09:44.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:44.689" starttime="20201104 13:09:43.918"></status>
</kw>
<msg timestamp="20201104 13:09:44.689" level="INFO">${output} = {
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900"
}</msg>
<status status="PASS" endtime="20201104 13:09:44.689" starttime="20201104 13:09:43.917"></status>
</kw>
<msg timestamp="20201104 13:09:44.689" level="INFO">${result} = {
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900"
}</msg>
<status status="PASS" endtime="20201104 13:09:44.689" starttime="20201104 13:09:43.917"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:44.692" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:44.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:44.733" level="INFO">${output} = /s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:44.733" starttime="20201104 13:09:44.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:44.734" level="INFO">/s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:44.734" starttime="20201104 13:09:44.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:44.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:44.735" starttime="20201104 13:09:44.734"></status>
</kw>
<msg timestamp="20201104 13:09:44.735" level="INFO">${eTag2} = /s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:44.735" starttime="20201104 13:09:44.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:44.736" starttime="20201104 13:09:44.735"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:44.740" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-75395 --key 59574/multipartKey5 --upload-id ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:45.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:45.261" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:45.262" starttime="20201104 13:09:44.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.263" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20201104 13:09:45.263" starttime="20201104 13:09:45.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:45.264" starttime="20201104 13:09:45.263"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:45.264" starttime="20201104 13:09:44.737"></status>
</kw>
<msg timestamp="20201104 13:09:45.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:45.264" starttime="20201104 13:09:44.737"></status>
</kw>
<msg timestamp="20201104 13:09:45.264" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:45.264" starttime="20201104 13:09:44.736"></status>
</kw>
<msg timestamp="20201104 13:09:45.265" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:45.265" starttime="20201104 13:09:44.736"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:45.268" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:45.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:45.310" level="INFO">${output} = /s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:45.310" starttime="20201104 13:09:45.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.311" level="INFO">/s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:45.311" starttime="20201104 13:09:45.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:45.312" starttime="20201104 13:09:45.311"></status>
</kw>
<msg timestamp="20201104 13:09:45.312" level="INFO">${part1} = /s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:45.312" starttime="20201104 13:09:45.265"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:45.316" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:45.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:45.358" level="INFO">${output} = /s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:45.358" starttime="20201104 13:09:45.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.359" level="INFO">/s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:45.360" starttime="20201104 13:09:45.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:45.360" starttime="20201104 13:09:45.360"></status>
</kw>
<msg timestamp="20201104 13:09:45.361" level="INFO">${part2} = /s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:45.361" starttime="20201104 13:09:45.312"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:45.361" starttime="20201104 13:09:45.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:45.362" starttime="20201104 13:09:45.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:45.363" starttime="20201104 13:09:45.362"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:45.368" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-75395 --key 59574/multipartKey5 --upload-id ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:45.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:45.850" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:45.850" starttime="20201104 13:09:45.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.851" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20201104 13:09:45.851" starttime="20201104 13:09:45.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:45.852" starttime="20201104 13:09:45.851"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:45.852" starttime="20201104 13:09:45.364"></status>
</kw>
<msg timestamp="20201104 13:09:45.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:45.852" starttime="20201104 13:09:45.364"></status>
</kw>
<msg timestamp="20201104 13:09:45.853" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:45.853" starttime="20201104 13:09:45.364"></status>
</kw>
<msg timestamp="20201104 13:09:45.853" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:45.853" starttime="20201104 13:09:45.363"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:45.856" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:45.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:45.900" level="INFO">${output} = /s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:45.900" starttime="20201104 13:09:45.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.901" level="INFO">/s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:45.901" starttime="20201104 13:09:45.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:45.902" starttime="20201104 13:09:45.901"></status>
</kw>
<msg timestamp="20201104 13:09:45.902" level="INFO">${part1} = /s3v/bucket-75395/59574/multipartKey5105152209443029011</msg>
<status status="PASS" endtime="20201104 13:09:45.902" starttime="20201104 13:09:45.853"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:45.905" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:43.689Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209443029011", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:45.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:45.946" level="INFO">${output} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20201104 13:09:45.946" starttime="20201104 13:09:45.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.947" level="INFO">eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20201104 13:09:45.947" starttime="20201104 13:09:45.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:45.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:45.948" starttime="20201104 13:09:45.947"></status>
</kw>
<msg timestamp="20201104 13:09:45.948" level="INFO">${token} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20201104 13:09:45.948" starttime="20201104 13:09:45.903"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:45.949" starttime="20201104 13:09:45.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:45.949" starttime="20201104 13:09:45.949"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:45.954" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-75395 --key 59574/multipartKey5 --upload-id ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418 --max-items 1 --starting-token eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:46.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:46.433" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:46.433" starttime="20201104 13:09:45.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:46.434" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20201104 13:09:46.434" starttime="20201104 13:09:46.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:46.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:46.435" starttime="20201104 13:09:46.434"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:46.435" starttime="20201104 13:09:45.951"></status>
</kw>
<msg timestamp="20201104 13:09:46.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:46.435" starttime="20201104 13:09:45.950"></status>
</kw>
<msg timestamp="20201104 13:09:46.435" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:46.435" starttime="20201104 13:09:45.950"></status>
</kw>
<msg timestamp="20201104 13:09:46.436" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/595...</msg>
<status status="PASS" endtime="20201104 13:09:46.436" starttime="20201104 13:09:45.949"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:46.439" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-11-04T13:09:44.460Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-75395/59574/multipartKey5105152209507450900", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:46.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:46.480" level="INFO">${output} = /s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:46.480" starttime="20201104 13:09:46.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:46.481" level="INFO">/s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:46.481" starttime="20201104 13:09:46.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:46.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:46.482" starttime="20201104 13:09:46.481"></status>
</kw>
<msg timestamp="20201104 13:09:46.482" level="INFO">${part2} = /s3v/bucket-75395/59574/multipartKey5105152209507450900</msg>
<status status="PASS" endtime="20201104 13:09:46.482" starttime="20201104 13:09:46.436"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:46.483" starttime="20201104 13:09:46.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:46.483" starttime="20201104 13:09:46.483"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:46.488" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-75395 --key 59574/multipartKey5 --upload-id ea8c7ec7-b979-483b-9051-39c0a6ee95dd-105152209397350418 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:47.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:47.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:47.079" starttime="20201104 13:09:46.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:47.080" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:47.081" starttime="20201104 13:09:47.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:47.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:47.081" starttime="20201104 13:09:47.081"></status>
</kw>
<msg timestamp="20201104 13:09:47.082" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:47.082" starttime="20201104 13:09:46.484"></status>
</kw>
<msg timestamp="20201104 13:09:47.082" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:09:47.082" starttime="20201104 13:09:46.483"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:47.083" critical="yes" starttime="20201104 13:09:42.211"></status>
</test>
<test id="s1-s3-s6-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:47.086" level="INFO">${random} = 84408</msg>
<status status="PASS" endtime="20201104 13:09:47.086" starttime="20201104 13:09:47.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:47.087" level="INFO">${PREFIX} = 84408</msg>
<status status="PASS" endtime="20201104 13:09:47.087" starttime="20201104 13:09:47.086"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:47.087" starttime="20201104 13:09:47.085"></status>
</kw>
<kw name="Create Random file">
<arguments>
<arg>22</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:47.096" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:47.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:47.268" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.168527 s, 137 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:47.268" starttime="20201104 13:09:47.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:47.269" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.168527 s, 137 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:47.269" starttime="20201104 13:09:47.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:47.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:47.270" starttime="20201104 13:09:47.269"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:47.270" starttime="20201104 13:09:47.089"></status>
</kw>
<msg timestamp="20201104 13:09:47.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:47.270" starttime="20201104 13:09:47.088"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:47.270" starttime="20201104 13:09:47.088"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:47.270" starttime="20201104 13:09:47.087"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:47.276" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://bucket-75395/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:49.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:49.451" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20201104 13:09:49.452" starttime="20201104 13:09:47.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:49.453" level="INFO">Completed 256.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (5.6 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (10.9 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (11.8 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (12.6 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (13.0 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (13.9 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (14.9 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (15.7 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (17.0 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (18.0 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (18.7 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (19.3 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (20.4 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (21.0 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (21.7 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (22.1 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (22.7 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (23.4 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (24.0 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (24.2 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (24.8 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (25.3 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (25.8 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (26.5 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (27.4 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (27.8 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (28.1 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (28.1 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (28.6 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (29.1 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (28.8 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (29.3 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (28.0 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (28.5 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (29.0 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (29.5 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (30.0 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (30.5 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (30.7 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (31.3 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (31.8 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (32.3 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (33.1 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (33.6 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (34.1 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (34.6 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (34.7 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (35.6 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (36.1 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (37.3 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (35.6 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (33.3 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (33.0 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (33.4 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (33.8 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (34.2 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (34.6 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (35.0 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (35.4 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (33.5 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (33.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (32.1 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (32.8 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (33.1 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://bucket-75395/mpyawscli           </msg>
<status status="PASS" endtime="20201104 13:09:49.453" starttime="20201104 13:09:49.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:49.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:49.454" starttime="20201104 13:09:49.453"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:49.454" starttime="20201104 13:09:47.272"></status>
</kw>
<msg timestamp="20201104 13:09:49.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:49.454" starttime="20201104 13:09:47.272"></status>
</kw>
<msg timestamp="20201104 13:09:49.454" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20201104 13:09:49.454" starttime="20201104 13:09:47.271"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:49.455" starttime="20201104 13:09:47.271"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:49.459" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://bucket-75395/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:50.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:50.546" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20201104 13:09:50.546" starttime="20201104 13:09:49.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:50.548" level="INFO">Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (9.6 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (11.2 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (12.8 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (10.1 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (11.2 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (12.3 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (15.1 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (17.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (18.0 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (18.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (20.0 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (20.9 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (21.1 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (22.0 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (22.8 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (23.7 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (23.2 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (24.7 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (25.2 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (26.0 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (26.9 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (26.4 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (27.9 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (28.6 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (29.2 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (30.0 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (30.8 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (29.9 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (30.6 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (31.3 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (31.2 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (31.9 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (30.2 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (30.8 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (31.7 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (31.9 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (32.5 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (33.1 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (33.7 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (34.0 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (34.6 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (34.5 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (32.8 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (33.3 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (33.9 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (34.4 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (34.9 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (34.9 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (35.0 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (36.4 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (36.9 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (37.6 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (38.1 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (37.6 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (38.0 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (38.5 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (38.9 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (36.5 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (36.9 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (37.4 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (37.8 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (38.0 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (38.8 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining
download: s3://bucket-75395/mpyawscli to ../../tmp/part1.result  </msg>
<status status="PASS" endtime="20201104 13:09:50.548" starttime="20201104 13:09:50.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:50.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:50.548" starttime="20201104 13:09:50.548"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:50.549" starttime="20201104 13:09:49.456"></status>
</kw>
<msg timestamp="20201104 13:09:50.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:50.556" starttime="20201104 13:09:49.456"></status>
</kw>
<msg timestamp="20201104 13:09:50.560" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20201104 13:09:50.560" starttime="20201104 13:09:49.455"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:50.560" starttime="20201104 13:09:49.455"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>rm s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:50.585" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-75395/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:51.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:51.126" level="INFO">${output} = delete: s3://bucket-75395/mpyawscli</msg>
<status status="PASS" endtime="20201104 13:09:51.126" starttime="20201104 13:09:50.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.128" level="INFO">delete: s3://bucket-75395/mpyawscli</msg>
<status status="PASS" endtime="20201104 13:09:51.128" starttime="20201104 13:09:51.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:51.128" starttime="20201104 13:09:51.128"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.129" starttime="20201104 13:09:50.567"></status>
</kw>
<msg timestamp="20201104 13:09:51.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:51.129" starttime="20201104 13:09:50.567"></status>
</kw>
<msg timestamp="20201104 13:09:51.129" level="INFO">${output} = delete: s3://bucket-75395/mpyawscli</msg>
<status status="PASS" endtime="20201104 13:09:51.129" starttime="20201104 13:09:50.561"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.129" starttime="20201104 13:09:50.560"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:51.134" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:51.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:51.206" level="INFO">${output} = 6c0165532f5915684419e1c5cf249cf5</msg>
<status status="PASS" endtime="20201104 13:09:51.206" starttime="20201104 13:09:51.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.208" level="INFO">6c0165532f5915684419e1c5cf249cf5</msg>
<status status="PASS" endtime="20201104 13:09:51.208" starttime="20201104 13:09:51.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:51.209" starttime="20201104 13:09:51.208"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.209" starttime="20201104 13:09:51.131"></status>
</kw>
<msg timestamp="20201104 13:09:51.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:51.209" starttime="20201104 13:09:51.131"></status>
</kw>
<msg timestamp="20201104 13:09:51.209" level="INFO">${checksumbefore} = 6c0165532f5915684419e1c5cf249cf5</msg>
<status status="PASS" endtime="20201104 13:09:51.209" starttime="20201104 13:09:51.130"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:51.213" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:51.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:51.270" level="INFO">${output} = 6c0165532f5915684419e1c5cf249cf5</msg>
<status status="PASS" endtime="20201104 13:09:51.271" starttime="20201104 13:09:51.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.272" level="INFO">6c0165532f5915684419e1c5cf249cf5</msg>
<status status="PASS" endtime="20201104 13:09:51.272" starttime="20201104 13:09:51.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:51.272" starttime="20201104 13:09:51.272"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.273" starttime="20201104 13:09:51.210"></status>
</kw>
<msg timestamp="20201104 13:09:51.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:51.273" starttime="20201104 13:09:51.210"></status>
</kw>
<msg timestamp="20201104 13:09:51.273" level="INFO">${checksumafter} = 6c0165532f5915684419e1c5cf249cf5</msg>
<status status="PASS" endtime="20201104 13:09:51.273" starttime="20201104 13:09:51.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:51.274" starttime="20201104 13:09:51.274"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.274" starttime="20201104 13:09:51.130"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:51.274" critical="yes" starttime="20201104 13:09:47.084"></status>
</test>
<test id="s1-s3-s6-t10" name="Test Multipart Upload Put With Copy">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:51.278" level="INFO">${random} = 54687</msg>
<status status="PASS" endtime="20201104 13:09:51.278" starttime="20201104 13:09:51.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.278" level="INFO">${PREFIX} = 54687</msg>
<status status="PASS" endtime="20201104 13:09:51.279" starttime="20201104 13:09:51.278"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.279" starttime="20201104 13:09:51.277"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:51.283" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:51.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:51.330" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0401253 s, 131 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:51.330" starttime="20201104 13:09:51.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.331" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0401253 s, 131 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:51.331" starttime="20201104 13:09:51.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:51.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:51.332" starttime="20201104 13:09:51.331"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.332" starttime="20201104 13:09:51.280"></status>
</kw>
<msg timestamp="20201104 13:09:51.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:51.332" starttime="20201104 13:09:51.280"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.333" starttime="20201104 13:09:51.280"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.333" starttime="20201104 13:09:51.279"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:51.333" starttime="20201104 13:09:51.279"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:51.338" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-75395 --key 54687/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:54.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:54.831" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:54.831" starttime="20201104 13:09:51.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:54.832" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:54.832" starttime="20201104 13:09:54.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:54.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:54.833" starttime="20201104 13:09:54.832"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:54.833" starttime="20201104 13:09:51.334"></status>
</kw>
<msg timestamp="20201104 13:09:54.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:54.834" starttime="20201104 13:09:51.334"></status>
</kw>
<msg timestamp="20201104 13:09:54.834" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:54.834" starttime="20201104 13:09:51.334"></status>
</kw>
<msg timestamp="20201104 13:09:54.834" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:09:54.834" starttime="20201104 13:09:51.333"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:54.839" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 54687/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:55.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:55.321" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "49a494e0-70ea-441d-895f-7e5929339641-105152210223628314", 
    "Key": "54687/copytest/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:55.321" starttime="20201104 13:09:54.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:55.322" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "49a494e0-70ea-441d-895f-7e5929339641-105152210223628314", 
    "Key": "54687/copytest/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:55.322" starttime="20201104 13:09:55.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:55.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:55.323" starttime="20201104 13:09:55.322"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:55.323" starttime="20201104 13:09:54.836"></status>
</kw>
<msg timestamp="20201104 13:09:55.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:55.324" starttime="20201104 13:09:54.835"></status>
</kw>
<msg timestamp="20201104 13:09:55.324" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "49a494e0-70ea-441d-895f-7e5929339641-105152210223628314", 
    "Key": "54687/copytest/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:55.324" starttime="20201104 13:09:54.835"></status>
</kw>
<msg timestamp="20201104 13:09:55.324" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "49a494e0-70ea-441d-895f-7e5929339641-105152210223628314", 
    "Key": "54687/copytest/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:55.324" starttime="20201104 13:09:54.834"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:55.328" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "49a494e0-70ea-441d-895f-7e5929339641-105152210223628314", 
    "Key": "54687/copytest/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:55.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:55.368" level="INFO">${output} = 49a494e0-70ea-441d-895f-7e5929339641-105152210223628314</msg>
<status status="PASS" endtime="20201104 13:09:55.368" starttime="20201104 13:09:55.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:55.369" level="INFO">49a494e0-70ea-441d-895f-7e5929339641-105152210223628314</msg>
<status status="PASS" endtime="20201104 13:09:55.369" starttime="20201104 13:09:55.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:55.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:55.370" starttime="20201104 13:09:55.369"></status>
</kw>
<msg timestamp="20201104 13:09:55.370" level="INFO">${uploadID} = 49a494e0-70ea-441d-895f-7e5929339641-105152210223628314</msg>
<status status="PASS" endtime="20201104 13:09:55.370" starttime="20201104 13:09:55.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:55.371" starttime="20201104 13:09:55.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:55.371" starttime="20201104 13:09:55.371"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:55.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-75395 --key 54687/copytest/destination --upload-id 49a494e0-70ea-441d-895f-7e5929339641-105152210223628314 --part-number 1 --copy-source bucket-75395/54687/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:56.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:56.278" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:09:56.206Z", 
        "ETag": "/s3v/bucket-75395/54687/copytest/destination105152210260000795"
    }
}</msg>
<status status="PASS" endtime="20201104 13:09:56.278" starttime="20201104 13:09:55.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:56.280" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:09:56.206Z", 
        "ETag": "/s3v/bucket-75395/54687/copytest/destination105152210260000795"
    }
}</msg>
<status status="PASS" endtime="20201104 13:09:56.280" starttime="20201104 13:09:56.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:56.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:56.280" starttime="20201104 13:09:56.280"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:56.281" starttime="20201104 13:09:55.373"></status>
</kw>
<msg timestamp="20201104 13:09:56.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:56.281" starttime="20201104 13:09:55.372"></status>
</kw>
<msg timestamp="20201104 13:09:56.281" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:09:56.206Z", 
        "ETag": "/s3v/bucket-75395/54687/copytest/destination105152210260000795"
    }
}</msg>
<status status="PASS" endtime="20201104 13:09:56.281" starttime="20201104 13:09:55.372"></status>
</kw>
<msg timestamp="20201104 13:09:56.282" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:09:56.206Z", 
        "ETag": "/s3v/bucket-75395/54687/copytest/destination105152210260000795"
    }
}</msg>
<status status="PASS" endtime="20201104 13:09:56.282" starttime="20201104 13:09:55.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:56.282" starttime="20201104 13:09:56.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:56.283" starttime="20201104 13:09:56.282"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:56.286" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:09:56.206Z", 
        "ETag": "/s3v/bucket-75395/54687/copytest/destination105152210260000795"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:56.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:56.327" level="INFO">${output} = /s3v/bucket-75395/54687/copytest/destination105152210260000795</msg>
<status status="PASS" endtime="20201104 13:09:56.327" starttime="20201104 13:09:56.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:56.333" level="INFO">/s3v/bucket-75395/54687/copytest/destination105152210260000795</msg>
<status status="PASS" endtime="20201104 13:09:56.333" starttime="20201104 13:09:56.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:56.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:56.334" starttime="20201104 13:09:56.333"></status>
</kw>
<msg timestamp="20201104 13:09:56.335" level="INFO">${eTag1} = /s3v/bucket-75395/54687/copytest/destination105152210260000795</msg>
<status status="PASS" endtime="20201104 13:09:56.335" starttime="20201104 13:09:56.283"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:56.341" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 49a494e0-70ea-441d-895f-7e5929339641-105152210223628314 --bucket bucket-75395 --key 54687/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-75395/54687/copytest/destination105152210260000795,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:56.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:56.857" level="INFO">${output} = {
    "ETag": "9ca712d8dbcafe9173bd1f6454710bdfce1ef42e375ddcc4bc5383258a37c2a5", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "54687/copytest/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:56.857" starttime="20201104 13:09:56.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:56.858" level="INFO">{
    "ETag": "9ca712d8dbcafe9173bd1f6454710bdfce1ef42e375ddcc4bc5383258a37c2a5", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "54687/copytest/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:56.858" starttime="20201104 13:09:56.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:56.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:56.859" starttime="20201104 13:09:56.859"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:56.859" starttime="20201104 13:09:56.337"></status>
</kw>
<msg timestamp="20201104 13:09:56.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:56.860" starttime="20201104 13:09:56.337"></status>
</kw>
<msg timestamp="20201104 13:09:56.860" level="INFO">${output} = {
    "ETag": "9ca712d8dbcafe9173bd1f6454710bdfce1ef42e375ddcc4bc5383258a37c2a5", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "54687/copytest/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:56.860" starttime="20201104 13:09:56.336"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:56.860" starttime="20201104 13:09:56.335"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:56.864" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-75395 --key 54687/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:57.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:57.540" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:56 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:57.540" starttime="20201104 13:09:56.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.541" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:56 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 04 Nov 2020 13:09:57 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:09:57.542" starttime="20201104 13:09:57.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:57.542" starttime="20201104 13:09:57.542"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.543" starttime="20201104 13:09:56.862"></status>
</kw>
<msg timestamp="20201104 13:09:57.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:57.543" starttime="20201104 13:09:56.861"></status>
</kw>
<msg timestamp="20201104 13:09:57.543" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:09:56 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 04 Nov 2020 13...</msg>
<status status="PASS" endtime="20201104 13:09:57.543" starttime="20201104 13:09:56.861"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.544" starttime="20201104 13:09:56.860"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:57.549" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:57.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:57.564" level="INFO">${output} = a5a96bf4be0a71d54cbd20035f3d6bff</msg>
<status status="PASS" endtime="20201104 13:09:57.564" starttime="20201104 13:09:57.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.565" level="INFO">a5a96bf4be0a71d54cbd20035f3d6bff</msg>
<status status="PASS" endtime="20201104 13:09:57.565" starttime="20201104 13:09:57.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:57.566" starttime="20201104 13:09:57.565"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.566" starttime="20201104 13:09:57.545"></status>
</kw>
<msg timestamp="20201104 13:09:57.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:57.566" starttime="20201104 13:09:57.545"></status>
</kw>
<msg timestamp="20201104 13:09:57.567" level="INFO">${checksumbefore} = a5a96bf4be0a71d54cbd20035f3d6bff</msg>
<status status="PASS" endtime="20201104 13:09:57.567" starttime="20201104 13:09:57.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:57.571" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:57.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:57.586" level="INFO">${output} = a5a96bf4be0a71d54cbd20035f3d6bff</msg>
<status status="PASS" endtime="20201104 13:09:57.586" starttime="20201104 13:09:57.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.588" level="INFO">a5a96bf4be0a71d54cbd20035f3d6bff</msg>
<status status="PASS" endtime="20201104 13:09:57.588" starttime="20201104 13:09:57.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:57.588" starttime="20201104 13:09:57.588"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.589" starttime="20201104 13:09:57.568"></status>
</kw>
<msg timestamp="20201104 13:09:57.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:57.589" starttime="20201104 13:09:57.567"></status>
</kw>
<msg timestamp="20201104 13:09:57.589" level="INFO">${checksumafter} = a5a96bf4be0a71d54cbd20035f3d6bff</msg>
<status status="PASS" endtime="20201104 13:09:57.589" starttime="20201104 13:09:57.567"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:57.590" starttime="20201104 13:09:57.589"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.590" starttime="20201104 13:09:57.544"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:09:57.590" critical="yes" starttime="20201104 13:09:51.276"></status>
</test>
<test id="s1-s3-s6-t11" name="Test Multipart Upload Put With Copy and range">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:09:57.593" level="INFO">${random} = 32213</msg>
<status status="PASS" endtime="20201104 13:09:57.593" starttime="20201104 13:09:57.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.594" level="INFO">${PREFIX} = 32213</msg>
<status status="PASS" endtime="20201104 13:09:57.594" starttime="20201104 13:09:57.593"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.594" starttime="20201104 13:09:57.592"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>10</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>10</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:57.599" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:57.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:57.682" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0782798 s, 134 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:57.682" starttime="20201104 13:09:57.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.683" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0782798 s, 134 MB/s</msg>
<status status="PASS" endtime="20201104 13:09:57.683" starttime="20201104 13:09:57.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:57.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:57.684" starttime="20201104 13:09:57.683"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.684" starttime="20201104 13:09:57.596"></status>
</kw>
<msg timestamp="20201104 13:09:57.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:57.684" starttime="20201104 13:09:57.596"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.684" starttime="20201104 13:09:57.595"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.684" starttime="20201104 13:09:57.595"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:57.684" starttime="20201104 13:09:57.594"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:57.689" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-75395 --key 32213/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:58.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:58.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:58.932" starttime="20201104 13:09:57.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:58.933" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:09:58.933" starttime="20201104 13:09:58.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:58.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:58.934" starttime="20201104 13:09:58.934"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:58.934" starttime="20201104 13:09:57.686"></status>
</kw>
<msg timestamp="20201104 13:09:58.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:58.935" starttime="20201104 13:09:57.686"></status>
</kw>
<msg timestamp="20201104 13:09:58.935" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:09:58.935" starttime="20201104 13:09:57.685"></status>
</kw>
<msg timestamp="20201104 13:09:58.935" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:09:58.935" starttime="20201104 13:09:57.685"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:58.940" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 32213/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:59.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:59.453" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853", 
    "Key": "32213/copyrange/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:59.453" starttime="20201104 13:09:58.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:59.454" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853", 
    "Key": "32213/copyrange/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:59.455" starttime="20201104 13:09:59.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:59.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:59.455" starttime="20201104 13:09:59.455"></status>
</kw>
<status status="PASS" endtime="20201104 13:09:59.456" starttime="20201104 13:09:58.937"></status>
</kw>
<msg timestamp="20201104 13:09:59.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:09:59.456" starttime="20201104 13:09:58.937"></status>
</kw>
<msg timestamp="20201104 13:09:59.456" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853", 
    "Key": "32213/copyrange/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:59.456" starttime="20201104 13:09:58.936"></status>
</kw>
<msg timestamp="20201104 13:09:59.456" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853", 
    "Key": "32213/copyrange/destination"
}</msg>
<status status="PASS" endtime="20201104 13:09:59.456" starttime="20201104 13:09:58.935"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:59.460" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853", 
    "Key": "32213/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:09:59.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:09:59.505" level="INFO">${output} = 417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853</msg>
<status status="PASS" endtime="20201104 13:09:59.505" starttime="20201104 13:09:59.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:09:59.506" level="INFO">417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853</msg>
<status status="PASS" endtime="20201104 13:09:59.507" starttime="20201104 13:09:59.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:09:59.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:09:59.507" starttime="20201104 13:09:59.507"></status>
</kw>
<msg timestamp="20201104 13:09:59.508" level="INFO">${uploadID} = 417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853</msg>
<status status="PASS" endtime="20201104 13:09:59.508" starttime="20201104 13:09:59.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:59.508" starttime="20201104 13:09:59.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:09:59.509" starttime="20201104 13:09:59.509"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:09:59.515" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-75395 --key 32213/copyrange/destination --upload-id 417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853 --part-number 1 --copy-source bucket-75395/32213/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:00.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:00.657" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:00.549Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210530664478"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:00.657" starttime="20201104 13:09:59.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:00.658" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:00.549Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210530664478"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:00.658" starttime="20201104 13:10:00.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:00.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:00.659" starttime="20201104 13:10:00.658"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:00.659" starttime="20201104 13:09:59.511"></status>
</kw>
<msg timestamp="20201104 13:10:00.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:00.659" starttime="20201104 13:09:59.511"></status>
</kw>
<msg timestamp="20201104 13:10:00.660" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:00.549Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210530664478"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:00.660" starttime="20201104 13:09:59.510"></status>
</kw>
<msg timestamp="20201104 13:10:00.660" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:00.549Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210530664478"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:00.660" starttime="20201104 13:09:59.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:00.660" starttime="20201104 13:10:00.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:00.661" starttime="20201104 13:10:00.660"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:00.691" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:00.549Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210530664478"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:00.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:00.754" level="INFO">${output} = /s3v/bucket-75395/32213/copyrange/destination105152210530664478</msg>
<status status="PASS" endtime="20201104 13:10:00.754" starttime="20201104 13:10:00.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:00.755" level="INFO">/s3v/bucket-75395/32213/copyrange/destination105152210530664478</msg>
<status status="PASS" endtime="20201104 13:10:00.756" starttime="20201104 13:10:00.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:00.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:00.756" starttime="20201104 13:10:00.756"></status>
</kw>
<msg timestamp="20201104 13:10:00.757" level="INFO">${eTag1} = /s3v/bucket-75395/32213/copyrange/destination105152210530664478</msg>
<status status="PASS" endtime="20201104 13:10:00.757" starttime="20201104 13:10:00.674"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:00.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-75395 --key 32213/copyrange/destination --upload-id 417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853 --part-number 2 --copy-source bucket-75395/32213/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:01.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:01.447" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:01.388Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210611601439"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:01.447" starttime="20201104 13:10:00.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:01.448" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:01.388Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210611601439"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:01.448" starttime="20201104 13:10:01.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:01.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:01.449" starttime="20201104 13:10:01.448"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:01.449" starttime="20201104 13:10:00.759"></status>
</kw>
<msg timestamp="20201104 13:10:01.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:01.449" starttime="20201104 13:10:00.759"></status>
</kw>
<msg timestamp="20201104 13:10:01.450" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:01.388Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210611601439"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:01.450" starttime="20201104 13:10:00.758"></status>
</kw>
<msg timestamp="20201104 13:10:01.450" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:01.388Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210611601439"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:01.450" starttime="20201104 13:10:00.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:01.451" starttime="20201104 13:10:01.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:01.451" starttime="20201104 13:10:01.451"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:01.454" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2020-11-04T13:10:01.388Z", 
        "ETag": "/s3v/bucket-75395/32213/copyrange/destination105152210611601439"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:01.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:01.500" level="INFO">${output} = /s3v/bucket-75395/32213/copyrange/destination105152210611601439</msg>
<status status="PASS" endtime="20201104 13:10:01.500" starttime="20201104 13:10:01.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:01.501" level="INFO">/s3v/bucket-75395/32213/copyrange/destination105152210611601439</msg>
<status status="PASS" endtime="20201104 13:10:01.501" starttime="20201104 13:10:01.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:01.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:01.502" starttime="20201104 13:10:01.501"></status>
</kw>
<msg timestamp="20201104 13:10:01.502" level="INFO">${eTag2} = /s3v/bucket-75395/32213/copyrange/destination105152210611601439</msg>
<status status="PASS" endtime="20201104 13:10:01.502" starttime="20201104 13:10:01.451"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:01.509" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 417a95ac-6232-49c5-a37a-ba3f4e51bfe1-105152210494029853 --bucket bucket-75395 --key 32213/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-75395/32213/copyrange/destination105152210530664478,PartNumber=1},{ETag=/s3v/bucket-75395/32213/copyrange/destination105152210611601439,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:02.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:02.011" level="INFO">${output} = {
    "ETag": "13f381a237f93cdf2a1e5725610a5a847b9b6e84c8084ac700181c4e41ee8895", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "32213/copyrange/destination"
}</msg>
<status status="PASS" endtime="20201104 13:10:02.011" starttime="20201104 13:10:01.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.012" level="INFO">{
    "ETag": "13f381a237f93cdf2a1e5725610a5a847b9b6e84c8084ac700181c4e41ee8895", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "32213/copyrange/destination"
}</msg>
<status status="PASS" endtime="20201104 13:10:02.012" starttime="20201104 13:10:02.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:02.013" starttime="20201104 13:10:02.012"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.013" starttime="20201104 13:10:01.505"></status>
</kw>
<msg timestamp="20201104 13:10:02.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:02.017" starttime="20201104 13:10:01.504"></status>
</kw>
<msg timestamp="20201104 13:10:02.018" level="INFO">${output} = {
    "ETag": "13f381a237f93cdf2a1e5725610a5a847b9b6e84c8084ac700181c4e41ee8895", 
    "Bucket": "bucket-75395", 
    "Location": "bucket-75395", 
    "Key": "32213/copyrange/destination"
}</msg>
<status status="PASS" endtime="20201104 13:10:02.018" starttime="20201104 13:10:01.504"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.019" starttime="20201104 13:10:01.502"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:02.023" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-75395 --key 32213/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:02.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:02.750" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:01 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 04 Nov 2020 1...</msg>
<status status="PASS" endtime="20201104 13:10:02.750" starttime="20201104 13:10:02.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.751" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:01 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 04 Nov 2020 13:10:02 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:02.751" starttime="20201104 13:10:02.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:02.752" starttime="20201104 13:10:02.751"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.753" starttime="20201104 13:10:02.020"></status>
</kw>
<msg timestamp="20201104 13:10:02.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:02.753" starttime="20201104 13:10:02.020"></status>
</kw>
<msg timestamp="20201104 13:10:02.753" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:01 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 04 Nov 2020 1...</msg>
<status status="PASS" endtime="20201104 13:10:02.753" starttime="20201104 13:10:02.020"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.753" starttime="20201104 13:10:02.019"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:02.758" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:02.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:02.788" level="INFO">${output} = 889904c52a9da27a2042f5168bd1063b</msg>
<status status="PASS" endtime="20201104 13:10:02.788" starttime="20201104 13:10:02.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.789" level="INFO">889904c52a9da27a2042f5168bd1063b</msg>
<status status="PASS" endtime="20201104 13:10:02.789" starttime="20201104 13:10:02.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:02.790" starttime="20201104 13:10:02.789"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.790" starttime="20201104 13:10:02.755"></status>
</kw>
<msg timestamp="20201104 13:10:02.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:02.790" starttime="20201104 13:10:02.755"></status>
</kw>
<msg timestamp="20201104 13:10:02.790" level="INFO">${checksumbefore} = 889904c52a9da27a2042f5168bd1063b</msg>
<status status="PASS" endtime="20201104 13:10:02.790" starttime="20201104 13:10:02.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:02.795" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:02.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:02.827" level="INFO">${output} = 889904c52a9da27a2042f5168bd1063b</msg>
<status status="PASS" endtime="20201104 13:10:02.827" starttime="20201104 13:10:02.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.828" level="INFO">889904c52a9da27a2042f5168bd1063b</msg>
<status status="PASS" endtime="20201104 13:10:02.828" starttime="20201104 13:10:02.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:02.829" starttime="20201104 13:10:02.828"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.829" starttime="20201104 13:10:02.792"></status>
</kw>
<msg timestamp="20201104 13:10:02.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:02.830" starttime="20201104 13:10:02.791"></status>
</kw>
<msg timestamp="20201104 13:10:02.830" level="INFO">${checksumafter} = 889904c52a9da27a2042f5168bd1063b</msg>
<status status="PASS" endtime="20201104 13:10:02.830" starttime="20201104 13:10:02.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:02.831" starttime="20201104 13:10:02.830"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.831" starttime="20201104 13:10:02.754"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:02.831" critical="yes" starttime="20201104 13:09:57.591"></status>
</test>
<test id="s1-s3-s6-t12" name="Test Multipart Upload list">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:10:02.834" level="INFO">${random} = 16708</msg>
<status status="PASS" endtime="20201104 13:10:02.834" starttime="20201104 13:10:02.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:10:02.834" level="INFO">${PREFIX} = 16708</msg>
<status status="PASS" endtime="20201104 13:10:02.834" starttime="20201104 13:10:02.834"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:02.835" starttime="20201104 13:10:02.833"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:02.840" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 16708/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:03.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:03.332" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896", 
    "Key": "16708/listtest/key1"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.332" starttime="20201104 13:10:02.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:03.334" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896", 
    "Key": "16708/listtest/key1"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.334" starttime="20201104 13:10:03.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:03.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:03.335" starttime="20201104 13:10:03.334"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:03.335" starttime="20201104 13:10:02.837"></status>
</kw>
<msg timestamp="20201104 13:10:03.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:03.336" starttime="20201104 13:10:02.836"></status>
</kw>
<msg timestamp="20201104 13:10:03.336" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896", 
    "Key": "16708/listtest/key1"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.336" starttime="20201104 13:10:02.836"></status>
</kw>
<msg timestamp="20201104 13:10:03.337" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896", 
    "Key": "16708/listtest/key1"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.337" starttime="20201104 13:10:02.835"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:03.340" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896", 
    "Key": "16708/listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:03.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:03.387" level="INFO">${output} = cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896</msg>
<status status="PASS" endtime="20201104 13:10:03.387" starttime="20201104 13:10:03.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:03.388" level="INFO">cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896</msg>
<status status="PASS" endtime="20201104 13:10:03.388" starttime="20201104 13:10:03.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:03.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:03.389" starttime="20201104 13:10:03.389"></status>
</kw>
<msg timestamp="20201104 13:10:03.390" level="INFO">${uploadID1} = cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896</msg>
<status status="PASS" endtime="20201104 13:10:03.390" starttime="20201104 13:10:03.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:03.390" starttime="20201104 13:10:03.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:03.391" starttime="20201104 13:10:03.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:03.392" starttime="20201104 13:10:03.391"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:03.398" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-75395 --key 16708/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:03.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:03.952" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777", 
    "Key": "16708/listtest/key2"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.952" starttime="20201104 13:10:03.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:03.953" level="INFO">{
    "Bucket": "bucket-75395", 
    "UploadId": "725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777", 
    "Key": "16708/listtest/key2"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.953" starttime="20201104 13:10:03.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:03.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:03.954" starttime="20201104 13:10:03.953"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:03.954" starttime="20201104 13:10:03.394"></status>
</kw>
<msg timestamp="20201104 13:10:03.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:03.955" starttime="20201104 13:10:03.393"></status>
</kw>
<msg timestamp="20201104 13:10:03.955" level="INFO">${output} = {
    "Bucket": "bucket-75395", 
    "UploadId": "725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777", 
    "Key": "16708/listtest/key2"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.955" starttime="20201104 13:10:03.392"></status>
</kw>
<msg timestamp="20201104 13:10:03.955" level="INFO">${result} = {
    "Bucket": "bucket-75395", 
    "UploadId": "725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777", 
    "Key": "16708/listtest/key2"
}</msg>
<status status="PASS" endtime="20201104 13:10:03.955" starttime="20201104 13:10:03.392"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:03.960" level="INFO">Running command 'echo '{
    "Bucket": "bucket-75395", 
    "UploadId": "725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777", 
    "Key": "16708/listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:04.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:04.009" level="INFO">${output} = 725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777</msg>
<status status="PASS" endtime="20201104 13:10:04.009" starttime="20201104 13:10:03.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:04.011" level="INFO">725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777</msg>
<status status="PASS" endtime="20201104 13:10:04.011" starttime="20201104 13:10:04.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:04.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:04.012" starttime="20201104 13:10:04.011"></status>
</kw>
<msg timestamp="20201104 13:10:04.012" level="INFO">${uploadID2} = 725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777</msg>
<status status="PASS" endtime="20201104 13:10:04.012" starttime="20201104 13:10:03.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:04.013" starttime="20201104 13:10:04.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:04.013" starttime="20201104 13:10:04.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:04.014" starttime="20201104 13:10:04.013"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:04.018" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-75395 --prefix 16708/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:04.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:04.523" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-11-04T13:1...</msg>
<status status="PASS" endtime="20201104 13:10:04.523" starttime="20201104 13:10:04.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:04.525" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-11-04T13:10:03.274Z", 
            "UploadId": "cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896", 
            "StorageClass": "STANDARD", 
            "Key": "16708/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-11-04T13:10:03.854Z", 
            "UploadId": "725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777", 
            "StorageClass": "STANDARD", 
            "Key": "16708/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:04.525" starttime="20201104 13:10:04.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:04.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:04.525" starttime="20201104 13:10:04.525"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:04.526" starttime="20201104 13:10:04.015"></status>
</kw>
<msg timestamp="20201104 13:10:04.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:04.526" starttime="20201104 13:10:04.015"></status>
</kw>
<msg timestamp="20201104 13:10:04.526" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-11-04T13:1...</msg>
<status status="PASS" endtime="20201104 13:10:04.526" starttime="20201104 13:10:04.014"></status>
</kw>
<msg timestamp="20201104 13:10:04.526" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-11-04T13:1...</msg>
<status status="PASS" endtime="20201104 13:10:04.527" starttime="20201104 13:10:04.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID1}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:04.527" starttime="20201104 13:10:04.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID2}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:04.528" starttime="20201104 13:10:04.527"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:04.532" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-11-04T13:10:03.274Z", 
            "UploadId": "cec30ea5-808c-4b21-bfad-65020b1c8356-105152210748964896", 
            "StorageClass": "STANDARD", 
            "Key": "16708/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-11-04T13:10:03.854Z", 
            "UploadId": "725c5f93-3d77-4aa1-bac0-01d7ca9bf26f-105152210786975777", 
            "StorageClass": "STANDARD", 
            "Key": "16708/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:04.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:04.572" level="INFO">${output} = 2</msg>
<status status="PASS" endtime="20201104 13:10:04.572" starttime="20201104 13:10:04.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:04.573" level="INFO">2</msg>
<status status="PASS" endtime="20201104 13:10:04.574" starttime="20201104 13:10:04.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:04.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:04.574" starttime="20201104 13:10:04.574"></status>
</kw>
<msg timestamp="20201104 13:10:04.575" level="INFO">${count} = 2</msg>
<status status="PASS" endtime="20201104 13:10:04.575" starttime="20201104 13:10:04.528"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${count}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:04.575" starttime="20201104 13:10:04.575"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:04.575" critical="yes" starttime="20201104 13:10:02.832"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:10:04.578" starttime="20201104 13:09:15.961"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectcopy.robot" id="s1-s3-s7" name="Objectcopy">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:10:04.593" level="INFO">${random} = 48648</msg>
<status status="PASS" endtime="20201104 13:10:04.593" starttime="20201104 13:10:04.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:10:04.594" level="INFO">${PREFIX} = 48648</msg>
<status status="PASS" endtime="20201104 13:10:04.594" starttime="20201104 13:10:04.593"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:04.594" starttime="20201104 13:10:04.592"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:04.594" starttime="20201104 13:10:04.592"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:04.599" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:04.600" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:10:04.600" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:10:04.600" starttime="20201104 13:10:04.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:04.601" starttime="20201104 13:10:04.600"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:04.603" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:04.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:04.744" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:10:04.744" starttime="20201104 13:10:04.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:04.750" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:05.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:05.128" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:10:05.128" starttime="20201104 13:10:04.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:05.129" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:10:05.129" starttime="20201104 13:10:05.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:05.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:05.130" starttime="20201104 13:10:05.129"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.130" starttime="20201104 13:10:04.746"></status>
</kw>
<msg timestamp="20201104 13:10:05.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:05.130" starttime="20201104 13:10:04.746"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.131" starttime="20201104 13:10:04.746"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.131" starttime="20201104 13:10:04.745"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.131" starttime="20201104 13:10:04.745"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.131" starttime="20201104 13:10:04.595"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.131" starttime="20201104 13:10:04.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:05.133" starttime="20201104 13:10:05.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:05.133" starttime="20201104 13:10:05.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:05.138" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:05.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:05.465" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:05.465" starttime="20201104 13:10:05.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:05.467" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:05.467" starttime="20201104 13:10:05.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:05.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:05.467" starttime="20201104 13:10:05.467"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.468" starttime="20201104 13:10:05.135"></status>
</kw>
<msg timestamp="20201104 13:10:05.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:05.468" starttime="20201104 13:10:05.134"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.468" starttime="20201104 13:10:05.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:05.472" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:05.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:05.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:05.813" starttime="20201104 13:10:05.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:05.814" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:05.814" starttime="20201104 13:10:05.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:05.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:05.814" starttime="20201104 13:10:05.814"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.814" starttime="20201104 13:10:05.469"></status>
</kw>
<msg timestamp="20201104 13:10:05.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:05.815" starttime="20201104 13:10:05.469"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:05.815" starttime="20201104 13:10:05.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:05.820" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:06.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:06.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:06.156" starttime="20201104 13:10:05.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:06.157" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:06.157" starttime="20201104 13:10:06.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:06.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:06.158" starttime="20201104 13:10:06.157"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.158" starttime="20201104 13:10:05.816"></status>
</kw>
<msg timestamp="20201104 13:10:06.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:06.158" starttime="20201104 13:10:05.816"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.159" starttime="20201104 13:10:05.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:06.163" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:06.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:06.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:06.516" starttime="20201104 13:10:06.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:06.517" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:06.517" starttime="20201104 13:10:06.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:06.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:06.517" starttime="20201104 13:10:06.517"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.518" starttime="20201104 13:10:06.160"></status>
</kw>
<msg timestamp="20201104 13:10:06.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:06.518" starttime="20201104 13:10:06.159"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.518" starttime="20201104 13:10:06.159"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.518" starttime="20201104 13:10:05.134"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.518" starttime="20201104 13:10:05.133"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.518" starttime="20201104 13:10:05.132"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:06.518" starttime="20201104 13:10:05.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:10:06.520" level="INFO">${postfix} = 19275</msg>
<status status="PASS" endtime="20201104 13:10:06.520" starttime="20201104 13:10:06.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:10:06.520" level="INFO">${bucket} = bucket-19275</msg>
<status status="PASS" endtime="20201104 13:10:06.520" starttime="20201104 13:10:06.520"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:06.525" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-19275 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:07.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:07.092" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-19275"
}</msg>
<status status="PASS" endtime="20201104 13:10:07.092" starttime="20201104 13:10:06.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.094" level="INFO">{
    "Location": "http://s3g:9878/bucket-19275"
}</msg>
<status status="PASS" endtime="20201104 13:10:07.094" starttime="20201104 13:10:07.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:07.095" starttime="20201104 13:10:07.094"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.095" starttime="20201104 13:10:06.522"></status>
</kw>
<msg timestamp="20201104 13:10:07.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:07.096" starttime="20201104 13:10:06.522"></status>
</kw>
<msg timestamp="20201104 13:10:07.096" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-19275"
}</msg>
<status status="PASS" endtime="20201104 13:10:07.096" starttime="20201104 13:10:06.521"></status>
</kw>
<msg timestamp="20201104 13:10:07.096" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-19275"
}</msg>
<status status="PASS" endtime="20201104 13:10:07.096" starttime="20201104 13:10:06.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:07.097" starttime="20201104 13:10:07.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:07.098" starttime="20201104 13:10:07.097"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.098" starttime="20201104 13:10:06.521"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.099" starttime="20201104 13:10:06.519"></status>
</kw>
<msg timestamp="20201104 13:10:07.099" level="INFO">${BUCKET} = bucket-19275</msg>
<status status="PASS" endtime="20201104 13:10:07.099" starttime="20201104 13:10:06.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.100" level="INFO">${BUCKET} = bucket-19275</msg>
<status status="PASS" endtime="20201104 13:10:07.100" starttime="20201104 13:10:07.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:07.100" starttime="20201104 13:10:07.100"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.101" starttime="20201104 13:10:04.592"></status>
</kw>
<test id="s1-s3-s7-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
</arguments>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:10:07.105" level="INFO">${postfix} = 70258</msg>
<status status="PASS" endtime="20201104 13:10:07.105" starttime="20201104 13:10:07.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.105" level="INFO">${DESTBUCKET} = destbucket-70258</msg>
<status status="PASS" endtime="20201104 13:10:07.105" starttime="20201104 13:10:07.105"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:07.110" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-70258 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:07.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:07.698" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-70258"
}</msg>
<status status="PASS" endtime="20201104 13:10:07.698" starttime="20201104 13:10:07.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.699" level="INFO">{
    "Location": "http://s3g:9878/destbucket-70258"
}</msg>
<status status="PASS" endtime="20201104 13:10:07.699" starttime="20201104 13:10:07.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:07.700" starttime="20201104 13:10:07.700"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.701" starttime="20201104 13:10:07.107"></status>
</kw>
<msg timestamp="20201104 13:10:07.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:07.701" starttime="20201104 13:10:07.107"></status>
</kw>
<msg timestamp="20201104 13:10:07.701" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-70258"
}</msg>
<status status="PASS" endtime="20201104 13:10:07.701" starttime="20201104 13:10:07.106"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.701" starttime="20201104 13:10:07.105"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.701" starttime="20201104 13:10:07.103"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.702" starttime="20201104 13:10:07.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/copyfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:07.705" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20201104 13:10:07.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:07.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:07.708" starttime="20201104 13:10:07.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.709" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:07.709" starttime="20201104 13:10:07.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:07.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:07.710" starttime="20201104 13:10:07.709"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.710" starttime="20201104 13:10:07.702"></status>
</kw>
<msg timestamp="20201104 13:10:07.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:07.710" starttime="20201104 13:10:07.702"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:07.710" starttime="20201104 13:10:07.702"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/f1 --body /tmp/copyfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:07.715" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-19275 --key 48648/copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:08.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:08.394" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:08.394" starttime="20201104 13:10:07.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:08.395" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:08.395" starttime="20201104 13:10:08.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:08.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:08.396" starttime="20201104 13:10:08.395"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:08.396" starttime="20201104 13:10:07.712"></status>
</kw>
<msg timestamp="20201104 13:10:08.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:08.397" starttime="20201104 13:10:07.712"></status>
</kw>
<msg timestamp="20201104 13:10:08.397" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:08.397" starttime="20201104 13:10:07.711"></status>
</kw>
<msg timestamp="20201104 13:10:08.397" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:08.397" starttime="20201104 13:10:07.710"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:08.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-19275 --prefix 48648/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:08.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:08.894" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:08.240Z", 
            "ETag": "2020-11-04T13:10:08.240Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:08.894" starttime="20201104 13:10:08.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:08.896" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:08.240Z", 
            "ETag": "2020-11-04T13:10:08.240Z", 
            "StorageClass": "STANDARD", 
            "Key": "48648/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:08.896" starttime="20201104 13:10:08.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:08.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:08.897" starttime="20201104 13:10:08.896"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:08.897" starttime="20201104 13:10:08.400"></status>
</kw>
<msg timestamp="20201104 13:10:08.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:08.897" starttime="20201104 13:10:08.399"></status>
</kw>
<msg timestamp="20201104 13:10:08.897" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:08.240Z", 
            "ETag": "2020-11-04T13:10:08.240Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:08.897" starttime="20201104 13:10:08.398"></status>
</kw>
<msg timestamp="20201104 13:10:08.898" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:08.240Z", 
            "ETag": "2020-11-04T13:10:08.240Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:08.898" starttime="20201104 13:10:08.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:08.898" starttime="20201104 13:10:08.898"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:08.904" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-70258 --key 48648/copyobject/f1 --copy-source bucket-19275/48648/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:09.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:09.546" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:09.478Z", 
        "ETag": "8cac45ac-43b5-49b4-a64b-4a76b2dc482e"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:09.546" starttime="20201104 13:10:08.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:09.547" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:09.478Z", 
        "ETag": "8cac45ac-43b5-49b4-a64b-4a76b2dc482e"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:09.547" starttime="20201104 13:10:09.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:09.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:09.548" starttime="20201104 13:10:09.547"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:09.548" starttime="20201104 13:10:08.900"></status>
</kw>
<msg timestamp="20201104 13:10:09.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:09.548" starttime="20201104 13:10:08.900"></status>
</kw>
<msg timestamp="20201104 13:10:09.549" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:09.478Z", 
        "ETag": "8cac45ac-43b5-49b4-a64b-4a76b2dc482e"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:09.549" starttime="20201104 13:10:08.899"></status>
</kw>
<msg timestamp="20201104 13:10:09.549" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:09.478Z", 
        "ETag": "8cac45ac-43b5-49b4-a64b-4a76b2dc482e"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:09.549" starttime="20201104 13:10:08.898"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:09.555" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-70258 --prefix 48648/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:10.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:10.015" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:09.478Z", 
            "ETag": "2020-11-04T13:10:09.478Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:10.015" starttime="20201104 13:10:09.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:10.017" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:09.478Z", 
            "ETag": "2020-11-04T13:10:09.478Z", 
            "StorageClass": "STANDARD", 
            "Key": "48648/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:10.017" starttime="20201104 13:10:10.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:10.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:10.018" starttime="20201104 13:10:10.017"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:10.018" starttime="20201104 13:10:09.551"></status>
</kw>
<msg timestamp="20201104 13:10:10.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:10.018" starttime="20201104 13:10:09.550"></status>
</kw>
<msg timestamp="20201104 13:10:10.018" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:09.478Z", 
            "ETag": "2020-11-04T13:10:09.478Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:10.018" starttime="20201104 13:10:09.550"></status>
</kw>
<msg timestamp="20201104 13:10:10.019" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:09.478Z", 
            "ETag": "2020-11-04T13:10:09.478Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:10.019" starttime="20201104 13:10:09.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:10.019" starttime="20201104 13:10:10.019"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:10.024" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-70258 --key 48648/copyobject/f1 --copy-source bucket-19275/48648/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:10.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:10.722" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:10.607Z", 
        "ETag": "d853e676-e870-4c19-b6d6-118f08b37e65"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:10.722" starttime="20201104 13:10:10.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:10.723" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:10.607Z", 
        "ETag": "d853e676-e870-4c19-b6d6-118f08b37e65"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:10.723" starttime="20201104 13:10:10.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:10.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:10.724" starttime="20201104 13:10:10.723"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:10.725" starttime="20201104 13:10:10.021"></status>
</kw>
<msg timestamp="20201104 13:10:10.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:10.725" starttime="20201104 13:10:10.021"></status>
</kw>
<msg timestamp="20201104 13:10:10.725" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:10.607Z", 
        "ETag": "d853e676-e870-4c19-b6d6-118f08b37e65"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:10.725" starttime="20201104 13:10:10.020"></status>
</kw>
<msg timestamp="20201104 13:10:10.725" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:10.607Z", 
        "ETag": "d853e676-e870-4c19-b6d6-118f08b37e65"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:10.725" starttime="20201104 13:10:10.019"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:10.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-70258 --prefix 48648/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:11.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:11.367" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:10.607Z", 
            "ETag": "2020-11-04T13:10:10.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:11.367" starttime="20201104 13:10:10.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:11.368" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:10.607Z", 
            "ETag": "2020-11-04T13:10:10.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "48648/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:11.368" starttime="20201104 13:10:11.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:11.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:11.369" starttime="20201104 13:10:11.369"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:11.369" starttime="20201104 13:10:10.730"></status>
</kw>
<msg timestamp="20201104 13:10:11.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:11.370" starttime="20201104 13:10:10.729"></status>
</kw>
<msg timestamp="20201104 13:10:11.370" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:10.607Z", 
            "ETag": "2020-11-04T13:10:10.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:11.370" starttime="20201104 13:10:10.726"></status>
</kw>
<msg timestamp="20201104 13:10:11.370" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:10.607Z", 
            "ETag": "2020-11-04T13:10:10.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "486...</msg>
<status status="PASS" endtime="20201104 13:10:11.370" starttime="20201104 13:10:10.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:11.371" starttime="20201104 13:10:11.370"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:11.371" critical="yes" starttime="20201104 13:10:07.101"></status>
</test>
<test id="s1-s3-s7-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:11.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key 48648/copyobject/f1 --copy-source bucket-19275/48648/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:11.854" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:11.854" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:11.854" starttime="20201104 13:10:11.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:11.855" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:11.855" starttime="20201104 13:10:11.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:11.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:11.856" starttime="20201104 13:10:11.855"></status>
</kw>
<msg timestamp="20201104 13:10:11.856" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:11.856" starttime="20201104 13:10:11.373"></status>
</kw>
<msg timestamp="20201104 13:10:11.856" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:11.856" starttime="20201104 13:10:11.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:11.857" starttime="20201104 13:10:11.856"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:11.861" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-70258 --key 48648/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/48648/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:12.331" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:12.331" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:12.331" starttime="20201104 13:10:11.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:12.332" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:12.333" starttime="20201104 13:10:12.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:12.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:12.334" starttime="20201104 13:10:12.333"></status>
</kw>
<msg timestamp="20201104 13:10:12.334" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:12.334" starttime="20201104 13:10:11.858"></status>
</kw>
<msg timestamp="20201104 13:10:12.335" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:12.335" starttime="20201104 13:10:11.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:12.336" starttime="20201104 13:10:12.335"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:12.336" critical="yes" starttime="20201104 13:10:11.372"></status>
</test>
<test id="s1-s3-s7-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:12.345" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-70258 --key 48648/copyobject/f1 --copy-source destbucket-70258/48648/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:12.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:12.806" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:12.765Z", 
        "ETag": "0892443f-0e4d-4a5f-9a32-5fa87f1d1d98"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:12.807" starttime="20201104 13:10:12.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:12.808" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:12.765Z", 
        "ETag": "0892443f-0e4d-4a5f-9a32-5fa87f1d1d98"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:12.808" starttime="20201104 13:10:12.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:12.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:12.809" starttime="20201104 13:10:12.808"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:12.809" starttime="20201104 13:10:12.341"></status>
</kw>
<msg timestamp="20201104 13:10:12.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:12.809" starttime="20201104 13:10:12.341"></status>
</kw>
<msg timestamp="20201104 13:10:12.809" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:12.765Z", 
        "ETag": "0892443f-0e4d-4a5f-9a32-5fa87f1d1d98"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:12.809" starttime="20201104 13:10:12.340"></status>
</kw>
<msg timestamp="20201104 13:10:12.810" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2020-11-04T13:10:12.765Z", 
        "ETag": "0892443f-0e4d-4a5f-9a32-5fa87f1d1d98"
    }
}</msg>
<status status="PASS" endtime="20201104 13:10:12.810" starttime="20201104 13:10:12.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:12.810" starttime="20201104 13:10:12.810"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:12.810" critical="yes" starttime="20201104 13:10:12.338"></status>
</test>
<test id="s1-s3-s7-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:12.815" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-70258 --key 48648/copyobject/f1 --copy-source bucket-19275/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:13.324" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:13.324" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20201104 13:10:13.324" starttime="20201104 13:10:12.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:13.325" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20201104 13:10:13.325" starttime="20201104 13:10:13.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:13.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:13.326" starttime="20201104 13:10:13.325"></status>
</kw>
<msg timestamp="20201104 13:10:13.326" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20201104 13:10:13.326" starttime="20201104 13:10:12.813"></status>
</kw>
<msg timestamp="20201104 13:10:13.327" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20201104 13:10:13.327" starttime="20201104 13:10:12.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchKey</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:13.327" starttime="20201104 13:10:13.327"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:13.328" critical="yes" starttime="20201104 13:10:12.811"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:10:13.329" starttime="20201104 13:10:04.582"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectdelete.robot" id="s1-s3-s8" name="Objectdelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:10:13.341" level="INFO">${random} = 04487</msg>
<status status="PASS" endtime="20201104 13:10:13.341" starttime="20201104 13:10:13.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:10:13.342" level="INFO">${PREFIX} = 04487</msg>
<status status="PASS" endtime="20201104 13:10:13.342" starttime="20201104 13:10:13.341"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.342" starttime="20201104 13:10:13.340"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.342" starttime="20201104 13:10:13.340"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:13.345" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:13.347" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:10:13.347" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:10:13.347" starttime="20201104 13:10:13.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:13.348" starttime="20201104 13:10:13.348"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:13.351" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:13.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:13.508" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:10:13.508" starttime="20201104 13:10:13.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:13.515" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:13.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:13.921" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:10:13.922" starttime="20201104 13:10:13.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:13.923" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:10:13.923" starttime="20201104 13:10:13.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:13.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:13.923" starttime="20201104 13:10:13.923"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.924" starttime="20201104 13:10:13.511"></status>
</kw>
<msg timestamp="20201104 13:10:13.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:13.924" starttime="20201104 13:10:13.510"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.924" starttime="20201104 13:10:13.510"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.924" starttime="20201104 13:10:13.510"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.924" starttime="20201104 13:10:13.509"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.924" starttime="20201104 13:10:13.343"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:13.924" starttime="20201104 13:10:13.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:13.926" starttime="20201104 13:10:13.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:13.926" starttime="20201104 13:10:13.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:13.930" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:14.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:14.273" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:14.273" starttime="20201104 13:10:13.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:14.274" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:14.274" starttime="20201104 13:10:14.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:14.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:14.275" starttime="20201104 13:10:14.274"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:14.275" starttime="20201104 13:10:13.927"></status>
</kw>
<msg timestamp="20201104 13:10:14.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:14.275" starttime="20201104 13:10:13.927"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:14.275" starttime="20201104 13:10:13.927"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:14.280" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:14.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:14.604" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:14.604" starttime="20201104 13:10:14.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:14.605" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:14.605" starttime="20201104 13:10:14.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:14.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:14.605" starttime="20201104 13:10:14.605"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:14.606" starttime="20201104 13:10:14.276"></status>
</kw>
<msg timestamp="20201104 13:10:14.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:14.606" starttime="20201104 13:10:14.276"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:14.606" starttime="20201104 13:10:14.275"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:14.610" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:14.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:14.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:14.942" starttime="20201104 13:10:14.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:14.943" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:14.943" starttime="20201104 13:10:14.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:14.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:14.943" starttime="20201104 13:10:14.943"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:14.944" starttime="20201104 13:10:14.607"></status>
</kw>
<msg timestamp="20201104 13:10:14.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:14.944" starttime="20201104 13:10:14.607"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:14.944" starttime="20201104 13:10:14.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:14.948" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:15.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:15.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:15.282" starttime="20201104 13:10:14.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:15.283" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:15.283" starttime="20201104 13:10:15.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:15.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:15.284" starttime="20201104 13:10:15.283"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.284" starttime="20201104 13:10:14.945"></status>
</kw>
<msg timestamp="20201104 13:10:15.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:15.284" starttime="20201104 13:10:14.945"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.285" starttime="20201104 13:10:14.944"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.285" starttime="20201104 13:10:13.927"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.285" starttime="20201104 13:10:13.926"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.285" starttime="20201104 13:10:13.925"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.285" starttime="20201104 13:10:13.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:10:15.287" level="INFO">${postfix} = 92549</msg>
<status status="PASS" endtime="20201104 13:10:15.287" starttime="20201104 13:10:15.286"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:10:15.287" level="INFO">${bucket} = bucket-92549</msg>
<status status="PASS" endtime="20201104 13:10:15.287" starttime="20201104 13:10:15.287"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:15.292" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-92549 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:15.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:15.873" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-92549"
}</msg>
<status status="PASS" endtime="20201104 13:10:15.873" starttime="20201104 13:10:15.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:15.874" level="INFO">{
    "Location": "http://s3g:9878/bucket-92549"
}</msg>
<status status="PASS" endtime="20201104 13:10:15.874" starttime="20201104 13:10:15.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:15.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:15.875" starttime="20201104 13:10:15.874"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.875" starttime="20201104 13:10:15.289"></status>
</kw>
<msg timestamp="20201104 13:10:15.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:15.875" starttime="20201104 13:10:15.289"></status>
</kw>
<msg timestamp="20201104 13:10:15.875" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-92549"
}</msg>
<status status="PASS" endtime="20201104 13:10:15.876" starttime="20201104 13:10:15.288"></status>
</kw>
<msg timestamp="20201104 13:10:15.876" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-92549"
}</msg>
<status status="PASS" endtime="20201104 13:10:15.876" starttime="20201104 13:10:15.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:15.876" starttime="20201104 13:10:15.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:15.877" starttime="20201104 13:10:15.876"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.877" starttime="20201104 13:10:15.287"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.877" starttime="20201104 13:10:15.286"></status>
</kw>
<msg timestamp="20201104 13:10:15.877" level="INFO">${BUCKET} = bucket-92549</msg>
<status status="PASS" endtime="20201104 13:10:15.877" starttime="20201104 13:10:15.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:10:15.878" level="INFO">${BUCKET} = bucket-92549</msg>
<status status="PASS" endtime="20201104 13:10:15.878" starttime="20201104 13:10:15.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:15.878" starttime="20201104 13:10:15.878"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.879" starttime="20201104 13:10:13.340"></status>
</kw>
<test id="s1-s3-s8-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:15.884" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20201104 13:10:15.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:15.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:15.887" starttime="20201104 13:10:15.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:15.888" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:15.888" starttime="20201104 13:10:15.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:15.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:15.888" starttime="20201104 13:10:15.888"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.889" starttime="20201104 13:10:15.880"></status>
</kw>
<msg timestamp="20201104 13:10:15.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:15.889" starttime="20201104 13:10:15.880"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:15.889" starttime="20201104 13:10:15.880"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:15.893" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-92549 --key 04487/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:16.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:16.628" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:16.628" starttime="20201104 13:10:15.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:16.631" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:16.631" starttime="20201104 13:10:16.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:16.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:16.631" starttime="20201104 13:10:16.631"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:16.632" starttime="20201104 13:10:15.891"></status>
</kw>
<msg timestamp="20201104 13:10:16.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:16.632" starttime="20201104 13:10:15.890"></status>
</kw>
<msg timestamp="20201104 13:10:16.632" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:16.632" starttime="20201104 13:10:15.890"></status>
</kw>
<msg timestamp="20201104 13:10:16.633" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:16.633" starttime="20201104 13:10:15.889"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:16.637" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-92549 --prefix 04487/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:17.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:17.111" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:16.468Z", 
            "ETag": "2020-11-04T13:10:16.468Z", 
            "StorageClass": "STANDARD", 
            "Key": "044...</msg>
<status status="PASS" endtime="20201104 13:10:17.111" starttime="20201104 13:10:16.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:17.112" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:16.468Z", 
            "ETag": "2020-11-04T13:10:16.468Z", 
            "StorageClass": "STANDARD", 
            "Key": "04487/deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:17.112" starttime="20201104 13:10:17.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:17.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:17.113" starttime="20201104 13:10:17.113"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:17.113" starttime="20201104 13:10:16.634"></status>
</kw>
<msg timestamp="20201104 13:10:17.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:17.114" starttime="20201104 13:10:16.634"></status>
</kw>
<msg timestamp="20201104 13:10:17.114" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:16.468Z", 
            "ETag": "2020-11-04T13:10:16.468Z", 
            "StorageClass": "STANDARD", 
            "Key": "044...</msg>
<status status="PASS" endtime="20201104 13:10:17.114" starttime="20201104 13:10:16.633"></status>
</kw>
<msg timestamp="20201104 13:10:17.114" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:16.468Z", 
            "ETag": "2020-11-04T13:10:16.468Z", 
            "StorageClass": "STANDARD", 
            "Key": "044...</msg>
<status status="PASS" endtime="20201104 13:10:17.114" starttime="20201104 13:10:16.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:17.115" starttime="20201104 13:10:17.114"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:17.121" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-92549 --key 04487/deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:17.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:17.592" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:17.592" starttime="20201104 13:10:17.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:17.593" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:17.593" starttime="20201104 13:10:17.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:17.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:17.594" starttime="20201104 13:10:17.593"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:17.594" starttime="20201104 13:10:17.116"></status>
</kw>
<msg timestamp="20201104 13:10:17.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:17.594" starttime="20201104 13:10:17.116"></status>
</kw>
<msg timestamp="20201104 13:10:17.594" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:17.594" starttime="20201104 13:10:17.116"></status>
</kw>
<msg timestamp="20201104 13:10:17.595" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:17.595" starttime="20201104 13:10:17.115"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:17.600" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-92549 --prefix 04487/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:18.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:18.051" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:18.052" starttime="20201104 13:10:17.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:18.053" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:18.053" starttime="20201104 13:10:18.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:18.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:18.054" starttime="20201104 13:10:18.053"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:18.054" starttime="20201104 13:10:17.596"></status>
</kw>
<msg timestamp="20201104 13:10:18.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:18.054" starttime="20201104 13:10:17.596"></status>
</kw>
<msg timestamp="20201104 13:10:18.054" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:18.054" starttime="20201104 13:10:17.595"></status>
</kw>
<msg timestamp="20201104 13:10:18.055" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:18.055" starttime="20201104 13:10:17.595"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:18.055" starttime="20201104 13:10:18.055"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>500</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:18.056" starttime="20201104 13:10:18.055"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:18.056" critical="yes" starttime="20201104 13:10:15.879"></status>
</test>
<test id="s1-s3-s8-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:18.063" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-92549/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:18.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:18.508" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:18.508" starttime="20201104 13:10:18.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:18.509" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:18.509" starttime="20201104 13:10:18.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:18.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:18.510" starttime="20201104 13:10:18.509"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:18.510" starttime="20201104 13:10:18.059"></status>
</kw>
<msg timestamp="20201104 13:10:18.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:18.510" starttime="20201104 13:10:18.059"></status>
</kw>
<msg timestamp="20201104 13:10:18.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:18.511" starttime="20201104 13:10:18.058"></status>
</kw>
<msg timestamp="20201104 13:10:18.511" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:18.511" starttime="20201104 13:10:18.058"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:18.511" starttime="20201104 13:10:18.511"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:18.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-92549 --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:19.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:19.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:19.073" starttime="20201104 13:10:18.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:19.074" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:19.074" starttime="20201104 13:10:19.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:19.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:19.075" starttime="20201104 13:10:19.074"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:19.075" starttime="20201104 13:10:18.513"></status>
</kw>
<msg timestamp="20201104 13:10:19.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:19.075" starttime="20201104 13:10:18.513"></status>
</kw>
<msg timestamp="20201104 13:10:19.076" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:19.076" starttime="20201104 13:10:18.512"></status>
</kw>
<msg timestamp="20201104 13:10:19.076" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:19.076" starttime="20201104 13:10:18.512"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:19.082" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-92549/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:19.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:19.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:19.522" starttime="20201104 13:10:19.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:19.523" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:19.523" starttime="20201104 13:10:19.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:19.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:19.524" starttime="20201104 13:10:19.523"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:19.524" starttime="20201104 13:10:19.078"></status>
</kw>
<msg timestamp="20201104 13:10:19.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:19.524" starttime="20201104 13:10:19.077"></status>
</kw>
<msg timestamp="20201104 13:10:19.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:19.524" starttime="20201104 13:10:19.077"></status>
</kw>
<msg timestamp="20201104 13:10:19.525" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:19.525" starttime="20201104 13:10:19.076"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:19.525" starttime="20201104 13:10:19.525"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:19.525" critical="yes" starttime="20201104 13:10:18.057"></status>
</test>
<test id="s1-s3-s8-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:19.532" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20201104 13:10:19.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:19.534" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:19.534" starttime="20201104 13:10:19.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:19.535" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:19.535" starttime="20201104 13:10:19.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:19.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:19.536" starttime="20201104 13:10:19.535"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:19.536" starttime="20201104 13:10:19.528"></status>
</kw>
<msg timestamp="20201104 13:10:19.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:19.537" starttime="20201104 13:10:19.528"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:19.537" starttime="20201104 13:10:19.527"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:19.543" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-92549/04487/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:20.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:20.249" level="INFO">${output} = Completed 29 Bytes/29 Bytes (121 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapidir/f1</msg>
<status status="PASS" endtime="20201104 13:10:20.249" starttime="20201104 13:10:19.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:20.250" level="INFO">Completed 29 Bytes/29 Bytes (121 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapidir/f1</msg>
<status status="PASS" endtime="20201104 13:10:20.250" starttime="20201104 13:10:20.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:20.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:20.251" starttime="20201104 13:10:20.250"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:20.251" starttime="20201104 13:10:19.539"></status>
</kw>
<msg timestamp="20201104 13:10:20.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:20.251" starttime="20201104 13:10:19.539"></status>
</kw>
<msg timestamp="20201104 13:10:20.251" level="INFO">${output} = Completed 29 Bytes/29 Bytes (121 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapidir/f1</msg>
<status status="PASS" endtime="20201104 13:10:20.251" starttime="20201104 13:10:19.538"></status>
</kw>
<msg timestamp="20201104 13:10:20.252" level="INFO">${result} = Completed 29 Bytes/29 Bytes (121 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapidir/f1</msg>
<status status="PASS" endtime="20201104 13:10:20.252" starttime="20201104 13:10:19.538"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:20.256" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-92549/04487/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:20.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:20.710" level="INFO">${output} = 2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:20.710" starttime="20201104 13:10:20.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:20.711" level="INFO">2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:20.711" starttime="20201104 13:10:20.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:20.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:20.712" starttime="20201104 13:10:20.711"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:20.712" starttime="20201104 13:10:20.253"></status>
</kw>
<msg timestamp="20201104 13:10:20.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:20.712" starttime="20201104 13:10:20.253"></status>
</kw>
<msg timestamp="20201104 13:10:20.712" level="INFO">${output} = 2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:20.712" starttime="20201104 13:10:20.252"></status>
</kw>
<msg timestamp="20201104 13:10:20.713" level="INFO">${result} = 2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:20.713" starttime="20201104 13:10:20.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:20.713" starttime="20201104 13:10:20.713"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:20.718" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-92549 --key 04487/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:21.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:21.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:21.270" starttime="20201104 13:10:20.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:21.271" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:21.271" starttime="20201104 13:10:21.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:21.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:21.272" starttime="20201104 13:10:21.271"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:21.272" starttime="20201104 13:10:20.715"></status>
</kw>
<msg timestamp="20201104 13:10:21.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:21.273" starttime="20201104 13:10:20.714"></status>
</kw>
<msg timestamp="20201104 13:10:21.273" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:21.273" starttime="20201104 13:10:20.714"></status>
</kw>
<msg timestamp="20201104 13:10:21.273" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:21.273" starttime="20201104 13:10:20.713"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:21.278" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-92549/04487/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:21.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:21.723" level="INFO">${output} = 2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:21.723" starttime="20201104 13:10:21.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:21.726" level="INFO">2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:21.726" starttime="20201104 13:10:21.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:21.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:21.727" starttime="20201104 13:10:21.727"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:21.727" starttime="20201104 13:10:21.275"></status>
</kw>
<msg timestamp="20201104 13:10:21.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:21.728" starttime="20201104 13:10:21.275"></status>
</kw>
<msg timestamp="20201104 13:10:21.728" level="INFO">${output} = 2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:21.728" starttime="20201104 13:10:21.274"></status>
</kw>
<msg timestamp="20201104 13:10:21.728" level="INFO">${result} = 2020-11-04 13:10:20         29 f1</msg>
<status status="PASS" endtime="20201104 13:10:21.728" starttime="20201104 13:10:21.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:21.729" starttime="20201104 13:10:21.728"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:21.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-92549 --key 04487/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:22.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:22.321" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:22.321" starttime="20201104 13:10:21.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:22.322" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:22.323" starttime="20201104 13:10:22.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:22.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:22.323" starttime="20201104 13:10:22.323"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:22.323" starttime="20201104 13:10:21.730"></status>
</kw>
<msg timestamp="20201104 13:10:22.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:22.324" starttime="20201104 13:10:21.730"></status>
</kw>
<msg timestamp="20201104 13:10:22.324" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:22.324" starttime="20201104 13:10:21.729"></status>
</kw>
<msg timestamp="20201104 13:10:22.324" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:22.324" starttime="20201104 13:10:21.729"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:22.324" critical="yes" starttime="20201104 13:10:19.526"></status>
</test>
<test id="s1-s3-s8-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:22.330" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20201104 13:10:22.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:22.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:22.333" starttime="20201104 13:10:22.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:22.334" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:22.334" starttime="20201104 13:10:22.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:22.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:22.335" starttime="20201104 13:10:22.334"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:22.335" starttime="20201104 13:10:22.327"></status>
</kw>
<msg timestamp="20201104 13:10:22.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:22.335" starttime="20201104 13:10:22.327"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:22.335" starttime="20201104 13:10:22.326"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:22.341" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-92549/04487/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:23.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:23.069" level="INFO">${output} = Completed 29 Bytes/29 Bytes (127 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.069" starttime="20201104 13:10:22.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:23.070" level="INFO">Completed 29 Bytes/29 Bytes (127 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.070" starttime="20201104 13:10:23.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:23.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:23.071" starttime="20201104 13:10:23.070"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:23.071" starttime="20201104 13:10:22.337"></status>
</kw>
<msg timestamp="20201104 13:10:23.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:23.071" starttime="20201104 13:10:22.337"></status>
</kw>
<msg timestamp="20201104 13:10:23.072" level="INFO">${output} = Completed 29 Bytes/29 Bytes (127 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.072" starttime="20201104 13:10:22.336"></status>
</kw>
<msg timestamp="20201104 13:10:23.072" level="INFO">${result} = Completed 29 Bytes/29 Bytes (127 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-92549/04487/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.072" starttime="20201104 13:10:22.335"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:23.077" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-92549/04487/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:23.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:23.543" level="INFO">${output} = 2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.543" starttime="20201104 13:10:23.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:23.544" level="INFO">2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.544" starttime="20201104 13:10:23.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:23.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:23.545" starttime="20201104 13:10:23.544"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:23.545" starttime="20201104 13:10:23.074"></status>
</kw>
<msg timestamp="20201104 13:10:23.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:23.546" starttime="20201104 13:10:23.074"></status>
</kw>
<msg timestamp="20201104 13:10:23.546" level="INFO">${output} = 2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.546" starttime="20201104 13:10:23.073"></status>
</kw>
<msg timestamp="20201104 13:10:23.546" level="INFO">${result} = 2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:23.546" starttime="20201104 13:10:23.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:23.547" starttime="20201104 13:10:23.546"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:23.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-92549 --key 04487/deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:24.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:24.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:24.111" starttime="20201104 13:10:23.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:24.112" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:24.113" starttime="20201104 13:10:24.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:24.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:24.113" starttime="20201104 13:10:24.113"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:24.114" starttime="20201104 13:10:23.548"></status>
</kw>
<msg timestamp="20201104 13:10:24.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:24.114" starttime="20201104 13:10:23.548"></status>
</kw>
<msg timestamp="20201104 13:10:24.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:24.114" starttime="20201104 13:10:23.548"></status>
</kw>
<msg timestamp="20201104 13:10:24.114" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:24.114" starttime="20201104 13:10:23.547"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:24.119" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-92549/04487/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:24.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:24.586" level="INFO">${output} = 2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:24.586" starttime="20201104 13:10:24.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:24.588" level="INFO">2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:24.588" starttime="20201104 13:10:24.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:24.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:24.588" starttime="20201104 13:10:24.588"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:24.589" starttime="20201104 13:10:24.116"></status>
</kw>
<msg timestamp="20201104 13:10:24.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:24.589" starttime="20201104 13:10:24.116"></status>
</kw>
<msg timestamp="20201104 13:10:24.589" level="INFO">${output} = 2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:24.589" starttime="20201104 13:10:24.115"></status>
</kw>
<msg timestamp="20201104 13:10:24.589" level="INFO">${result} = 2020-11-04 13:10:22         29 filefile</msg>
<status status="PASS" endtime="20201104 13:10:24.590" starttime="20201104 13:10:24.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:24.590" starttime="20201104 13:10:24.590"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:24.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-92549 --key 04487/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:25.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:25.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:25.207" starttime="20201104 13:10:24.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:25.208" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:25.208" starttime="20201104 13:10:25.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:25.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:25.209" starttime="20201104 13:10:25.208"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:25.209" starttime="20201104 13:10:24.592"></status>
</kw>
<msg timestamp="20201104 13:10:25.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:25.210" starttime="20201104 13:10:24.591"></status>
</kw>
<msg timestamp="20201104 13:10:25.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:25.210" starttime="20201104 13:10:24.591"></status>
</kw>
<msg timestamp="20201104 13:10:25.210" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:25.210" starttime="20201104 13:10:24.590"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:25.211" critical="yes" starttime="20201104 13:10:22.325"></status>
</test>
<test id="s1-s3-s8-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:25.218" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-92549-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:25.700" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:25.700" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:25.700" starttime="20201104 13:10:25.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:25.701" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:25.701" starttime="20201104 13:10:25.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:25.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:25.702" starttime="20201104 13:10:25.701"></status>
</kw>
<msg timestamp="20201104 13:10:25.702" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:25.702" starttime="20201104 13:10:25.213"></status>
</kw>
<msg timestamp="20201104 13:10:25.703" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20201104 13:10:25.703" starttime="20201104 13:10:25.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:25.703" starttime="20201104 13:10:25.703"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:25.703" critical="yes" starttime="20201104 13:10:25.212"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:10:25.705" starttime="20201104 13:10:13.331"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectmultidelete.robot" id="s1-s3-s9" name="Objectmultidelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:10:25.717" level="INFO">${random} = 94667</msg>
<status status="PASS" endtime="20201104 13:10:25.717" starttime="20201104 13:10:25.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:10:25.718" level="INFO">${PREFIX} = 94667</msg>
<status status="PASS" endtime="20201104 13:10:25.718" starttime="20201104 13:10:25.717"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:25.718" starttime="20201104 13:10:25.716"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:25.718" starttime="20201104 13:10:25.716"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:25.721" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:25.724" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:10:25.724" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:10:25.724" starttime="20201104 13:10:25.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:25.725" starttime="20201104 13:10:25.724"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:25.728" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:25.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:25.864" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:10:25.864" starttime="20201104 13:10:25.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:25.872" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:26.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:26.252" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:10:26.252" starttime="20201104 13:10:25.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:26.253" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:10:26.253" starttime="20201104 13:10:26.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:26.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:26.254" starttime="20201104 13:10:26.253"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.254" starttime="20201104 13:10:25.867"></status>
</kw>
<msg timestamp="20201104 13:10:26.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:26.254" starttime="20201104 13:10:25.867"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.254" starttime="20201104 13:10:25.866"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.254" starttime="20201104 13:10:25.866"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.255" starttime="20201104 13:10:25.865"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.255" starttime="20201104 13:10:25.718"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.255" starttime="20201104 13:10:25.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:26.256" starttime="20201104 13:10:26.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:26.257" starttime="20201104 13:10:26.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:26.261" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:26.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:26.594" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:26.595" starttime="20201104 13:10:26.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:26.596" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:26.596" starttime="20201104 13:10:26.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:26.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:26.597" starttime="20201104 13:10:26.597"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.598" starttime="20201104 13:10:26.258"></status>
</kw>
<msg timestamp="20201104 13:10:26.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:26.598" starttime="20201104 13:10:26.258"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.599" starttime="20201104 13:10:26.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:26.606" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:26.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:26.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:26.931" starttime="20201104 13:10:26.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:26.932" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:26.932" starttime="20201104 13:10:26.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:26.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:26.933" starttime="20201104 13:10:26.932"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.933" starttime="20201104 13:10:26.600"></status>
</kw>
<msg timestamp="20201104 13:10:26.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:26.933" starttime="20201104 13:10:26.600"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:26.934" starttime="20201104 13:10:26.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:26.938" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:27.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:27.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:27.265" starttime="20201104 13:10:26.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:27.266" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:27.266" starttime="20201104 13:10:27.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:27.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:27.266" starttime="20201104 13:10:27.266"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.267" starttime="20201104 13:10:26.935"></status>
</kw>
<msg timestamp="20201104 13:10:27.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:27.267" starttime="20201104 13:10:26.934"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.267" starttime="20201104 13:10:26.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:27.271" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:27.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:27.620" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:27.620" starttime="20201104 13:10:27.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:27.621" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:27.621" starttime="20201104 13:10:27.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:27.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:27.622" starttime="20201104 13:10:27.622"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.622" starttime="20201104 13:10:27.268"></status>
</kw>
<msg timestamp="20201104 13:10:27.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:27.623" starttime="20201104 13:10:27.268"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.623" starttime="20201104 13:10:27.267"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.623" starttime="20201104 13:10:26.257"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.623" starttime="20201104 13:10:26.257"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.623" starttime="20201104 13:10:26.256"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:27.623" starttime="20201104 13:10:26.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:10:27.625" level="INFO">${postfix} = 65552</msg>
<status status="PASS" endtime="20201104 13:10:27.625" starttime="20201104 13:10:27.624"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:10:27.625" level="INFO">${bucket} = bucket-65552</msg>
<status status="PASS" endtime="20201104 13:10:27.625" starttime="20201104 13:10:27.625"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:27.631" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-65552 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:28.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:28.205" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-65552"
}</msg>
<status status="PASS" endtime="20201104 13:10:28.205" starttime="20201104 13:10:27.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:28.207" level="INFO">{
    "Location": "http://s3g:9878/bucket-65552"
}</msg>
<status status="PASS" endtime="20201104 13:10:28.207" starttime="20201104 13:10:28.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:28.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:28.207" starttime="20201104 13:10:28.207"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:28.208" starttime="20201104 13:10:27.627"></status>
</kw>
<msg timestamp="20201104 13:10:28.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:28.208" starttime="20201104 13:10:27.626"></status>
</kw>
<msg timestamp="20201104 13:10:28.208" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-65552"
}</msg>
<status status="PASS" endtime="20201104 13:10:28.208" starttime="20201104 13:10:27.626"></status>
</kw>
<msg timestamp="20201104 13:10:28.209" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-65552"
}</msg>
<status status="PASS" endtime="20201104 13:10:28.209" starttime="20201104 13:10:27.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:28.209" starttime="20201104 13:10:28.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:28.210" starttime="20201104 13:10:28.209"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:28.210" starttime="20201104 13:10:27.625"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:28.210" starttime="20201104 13:10:27.624"></status>
</kw>
<msg timestamp="20201104 13:10:28.210" level="INFO">${BUCKET} = bucket-65552</msg>
<status status="PASS" endtime="20201104 13:10:28.210" starttime="20201104 13:10:27.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:10:28.211" level="INFO">${BUCKET} = bucket-65552</msg>
<status status="PASS" endtime="20201104 13:10:28.211" starttime="20201104 13:10:28.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:28.211" starttime="20201104 13:10:28.211"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:28.212" starttime="20201104 13:10:25.716"></status>
</kw>
<test id="s1-s3-s9-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:28.217" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20201104 13:10:28.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:28.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:28.220" starttime="20201104 13:10:28.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:28.221" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:28.221" starttime="20201104 13:10:28.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:28.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:28.222" starttime="20201104 13:10:28.221"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:28.223" starttime="20201104 13:10:28.214"></status>
</kw>
<msg timestamp="20201104 13:10:28.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:28.223" starttime="20201104 13:10:28.214"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:28.223" starttime="20201104 13:10:28.213"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:28.236" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-65552 --key 94667/multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:28.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:28.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:28.947" starttime="20201104 13:10:28.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:28.949" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:28.949" starttime="20201104 13:10:28.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:28.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:28.949" starttime="20201104 13:10:28.949"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:28.950" starttime="20201104 13:10:28.225"></status>
</kw>
<msg timestamp="20201104 13:10:28.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:28.950" starttime="20201104 13:10:28.225"></status>
</kw>
<msg timestamp="20201104 13:10:28.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:28.950" starttime="20201104 13:10:28.224"></status>
</kw>
<msg timestamp="20201104 13:10:28.951" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:28.951" starttime="20201104 13:10:28.224"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f2 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:28.955" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-65552 --key 94667/multidelete/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:29.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:29.624" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:29.624" starttime="20201104 13:10:28.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:29.626" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:29.626" starttime="20201104 13:10:29.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:29.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:29.627" starttime="20201104 13:10:29.626"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:29.627" starttime="20201104 13:10:28.952"></status>
</kw>
<msg timestamp="20201104 13:10:29.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:29.627" starttime="20201104 13:10:28.952"></status>
</kw>
<msg timestamp="20201104 13:10:29.627" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:29.627" starttime="20201104 13:10:28.952"></status>
</kw>
<msg timestamp="20201104 13:10:29.628" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:29.628" starttime="20201104 13:10:28.951"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f3 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:29.633" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-65552 --key 94667/multidelete/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:30.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:30.574" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:30.574" starttime="20201104 13:10:29.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:30.575" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:30.575" starttime="20201104 13:10:30.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:30.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:30.576" starttime="20201104 13:10:30.576"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:30.576" starttime="20201104 13:10:29.630"></status>
</kw>
<msg timestamp="20201104 13:10:30.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:30.577" starttime="20201104 13:10:29.630"></status>
</kw>
<msg timestamp="20201104 13:10:30.577" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:30.577" starttime="20201104 13:10:29.629"></status>
</kw>
<msg timestamp="20201104 13:10:30.577" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:30.577" starttime="20201104 13:10:29.628"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:30.582" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-65552 --prefix 94667/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:31.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:31.051" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:28.791Z", 
            "ETag": "2020-11-04T13:10:28.791Z", 
            "StorageClass": "STANDARD", 
            "Key": "946...</msg>
<status status="PASS" endtime="20201104 13:10:31.051" starttime="20201104 13:10:30.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:31.053" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:28.791Z", 
            "ETag": "2020-11-04T13:10:28.791Z", 
            "StorageClass": "STANDARD", 
            "Key": "94667/multidelete/f1", 
            "Size": 29
        }, 
        {
            "LastModified": "2020-11-04T13:10:29.459Z", 
            "ETag": "2020-11-04T13:10:29.459Z", 
            "StorageClass": "STANDARD", 
            "Key": "94667/multidelete/f2", 
            "Size": 29
        }, 
        {
            "LastModified": "2020-11-04T13:10:30.409Z", 
            "ETag": "2020-11-04T13:10:30.409Z", 
            "StorageClass": "STANDARD", 
            "Key": "94667/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:31.053" starttime="20201104 13:10:31.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:31.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:31.054" starttime="20201104 13:10:31.053"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:31.054" starttime="20201104 13:10:30.579"></status>
</kw>
<msg timestamp="20201104 13:10:31.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:31.055" starttime="20201104 13:10:30.578"></status>
</kw>
<msg timestamp="20201104 13:10:31.055" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:28.791Z", 
            "ETag": "2020-11-04T13:10:28.791Z", 
            "StorageClass": "STANDARD", 
            "Key": "946...</msg>
<status status="PASS" endtime="20201104 13:10:31.055" starttime="20201104 13:10:30.578"></status>
</kw>
<msg timestamp="20201104 13:10:31.055" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:28.791Z", 
            "ETag": "2020-11-04T13:10:28.791Z", 
            "StorageClass": "STANDARD", 
            "Key": "946...</msg>
<status status="PASS" endtime="20201104 13:10:31.055" starttime="20201104 13:10:30.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:31.056" starttime="20201104 13:10:31.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:31.056" starttime="20201104 13:10:31.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:31.057" starttime="20201104 13:10:31.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:31.057" starttime="20201104 13:10:31.057"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:31.058" starttime="20201104 13:10:31.058"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/f1},{Key=${PREFIX}/multidelete/f2},{Key=${PREFIX}/multidelete/f4}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:31.064" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket bucket-65552 --delete 'Objects=[{Key=94667/multidelete/f1},{Key=94667/multidelete/f2},{Key=94667/multidelete/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:31.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:31.594" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "94667/multidelete/f1"
        }, 
        {
            "Key": "94667/multidelete/f2"
        }, 
        {
            "Key": "94667/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20201104 13:10:31.594" starttime="20201104 13:10:31.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:31.595" level="INFO">{
    "Deleted": [
        {
            "Key": "94667/multidelete/f1"
        }, 
        {
            "Key": "94667/multidelete/f2"
        }, 
        {
            "Key": "94667/multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:31.595" starttime="20201104 13:10:31.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:31.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:31.596" starttime="20201104 13:10:31.596"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:31.596" starttime="20201104 13:10:31.060"></status>
</kw>
<msg timestamp="20201104 13:10:31.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:31.597" starttime="20201104 13:10:31.059"></status>
</kw>
<msg timestamp="20201104 13:10:31.597" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "94667/multidelete/f1"
        }, 
        {
            "Key": "94667/multidelete/f2"
        }, 
        {
            "Key": "94667/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20201104 13:10:31.597" starttime="20201104 13:10:31.059"></status>
</kw>
<msg timestamp="20201104 13:10:31.597" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "94667/multidelete/f1"
        }, 
        {
            "Key": "94667/multidelete/f2"
        }, 
        {
            "Key": "94667/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20201104 13:10:31.597" starttime="20201104 13:10:31.058"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Error</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:31.598" starttime="20201104 13:10:31.598"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:31.603" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-65552 --prefix 94667/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:32.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:32.078" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:30.409Z", 
            "ETag": "2020-11-04T13:10:30.409Z", 
            "StorageClass": "STANDARD", 
            "Key": "946...</msg>
<status status="PASS" endtime="20201104 13:10:32.078" starttime="20201104 13:10:31.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:32.079" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:30.409Z", 
            "ETag": "2020-11-04T13:10:30.409Z", 
            "StorageClass": "STANDARD", 
            "Key": "94667/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:32.079" starttime="20201104 13:10:32.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:32.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:32.080" starttime="20201104 13:10:32.080"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.081" starttime="20201104 13:10:31.599"></status>
</kw>
<msg timestamp="20201104 13:10:32.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:32.081" starttime="20201104 13:10:31.599"></status>
</kw>
<msg timestamp="20201104 13:10:32.081" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:30.409Z", 
            "ETag": "2020-11-04T13:10:30.409Z", 
            "StorageClass": "STANDARD", 
            "Key": "946...</msg>
<status status="PASS" endtime="20201104 13:10:32.081" starttime="20201104 13:10:31.599"></status>
</kw>
<msg timestamp="20201104 13:10:32.081" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:30.409Z", 
            "ETag": "2020-11-04T13:10:30.409Z", 
            "StorageClass": "STANDARD", 
            "Key": "946...</msg>
<status status="PASS" endtime="20201104 13:10:32.082" starttime="20201104 13:10:31.598"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.082" starttime="20201104 13:10:32.082"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.083" starttime="20201104 13:10:32.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.083" starttime="20201104 13:10:32.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.084" starttime="20201104 13:10:32.083"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.084" starttime="20201104 13:10:32.084"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:32.084" critical="yes" starttime="20201104 13:10:28.212"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:10:32.085" starttime="20201104 13:10:25.707"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectputget.robot" id="s1-s3-s10" name="Objectputget">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:10:32.097" level="INFO">${random} = 77573</msg>
<status status="PASS" endtime="20201104 13:10:32.097" starttime="20201104 13:10:32.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:10:32.098" level="INFO">${PREFIX} = 77573</msg>
<status status="PASS" endtime="20201104 13:10:32.098" starttime="20201104 13:10:32.097"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.098" starttime="20201104 13:10:32.096"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.098" starttime="20201104 13:10:32.096"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:32.101" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:32.104" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:10:32.104" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:10:32.104" starttime="20201104 13:10:32.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.105" starttime="20201104 13:10:32.104"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:32.107" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:32.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:32.247" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:10:32.247" starttime="20201104 13:10:32.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:32.252" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:32.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:32.676" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:10:32.676" starttime="20201104 13:10:32.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:32.677" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:10:32.677" starttime="20201104 13:10:32.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:32.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:32.678" starttime="20201104 13:10:32.677"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.678" starttime="20201104 13:10:32.250"></status>
</kw>
<msg timestamp="20201104 13:10:32.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:32.678" starttime="20201104 13:10:32.249"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.679" starttime="20201104 13:10:32.249"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.679" starttime="20201104 13:10:32.248"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.679" starttime="20201104 13:10:32.248"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.679" starttime="20201104 13:10:32.099"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:32.679" starttime="20201104 13:10:32.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.681" starttime="20201104 13:10:32.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:32.681" starttime="20201104 13:10:32.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:32.685" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:33.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:33.010" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:33.010" starttime="20201104 13:10:32.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:33.011" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:33.011" starttime="20201104 13:10:33.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:33.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:33.012" starttime="20201104 13:10:33.011"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:33.012" starttime="20201104 13:10:32.683"></status>
</kw>
<msg timestamp="20201104 13:10:33.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:33.012" starttime="20201104 13:10:32.682"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:33.012" starttime="20201104 13:10:32.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:33.017" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:33.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:33.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:33.362" starttime="20201104 13:10:33.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:33.363" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:33.363" starttime="20201104 13:10:33.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:33.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:33.364" starttime="20201104 13:10:33.363"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:33.364" starttime="20201104 13:10:33.013"></status>
</kw>
<msg timestamp="20201104 13:10:33.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:33.364" starttime="20201104 13:10:33.013"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:33.365" starttime="20201104 13:10:33.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:33.369" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:33.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:33.726" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:33.726" starttime="20201104 13:10:33.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:33.727" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:33.727" starttime="20201104 13:10:33.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:33.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:33.729" starttime="20201104 13:10:33.728"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:33.729" starttime="20201104 13:10:33.366"></status>
</kw>
<msg timestamp="20201104 13:10:33.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:33.729" starttime="20201104 13:10:33.365"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:33.729" starttime="20201104 13:10:33.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:33.738" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:34.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:34.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:34.103" starttime="20201104 13:10:33.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:34.104" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:34.104" starttime="20201104 13:10:34.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:34.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:34.105" starttime="20201104 13:10:34.104"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.105" starttime="20201104 13:10:33.730"></status>
</kw>
<msg timestamp="20201104 13:10:34.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:34.105" starttime="20201104 13:10:33.730"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.106" starttime="20201104 13:10:33.729"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.106" starttime="20201104 13:10:32.682"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.106" starttime="20201104 13:10:32.681"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.106" starttime="20201104 13:10:32.680"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.106" starttime="20201104 13:10:32.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:10:34.107" level="INFO">${postfix} = 81853</msg>
<status status="PASS" endtime="20201104 13:10:34.107" starttime="20201104 13:10:34.107"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:10:34.108" level="INFO">${bucket} = bucket-81853</msg>
<status status="PASS" endtime="20201104 13:10:34.108" starttime="20201104 13:10:34.108"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:34.112" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-81853 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:34.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:34.702" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-81853"
}</msg>
<status status="PASS" endtime="20201104 13:10:34.702" starttime="20201104 13:10:34.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:34.703" level="INFO">{
    "Location": "http://s3g:9878/bucket-81853"
}</msg>
<status status="PASS" endtime="20201104 13:10:34.704" starttime="20201104 13:10:34.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:34.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:34.704" starttime="20201104 13:10:34.704"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.704" starttime="20201104 13:10:34.109"></status>
</kw>
<msg timestamp="20201104 13:10:34.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:34.705" starttime="20201104 13:10:34.109"></status>
</kw>
<msg timestamp="20201104 13:10:34.705" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-81853"
}</msg>
<status status="PASS" endtime="20201104 13:10:34.705" starttime="20201104 13:10:34.109"></status>
</kw>
<msg timestamp="20201104 13:10:34.705" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-81853"
}</msg>
<status status="PASS" endtime="20201104 13:10:34.705" starttime="20201104 13:10:34.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:34.706" starttime="20201104 13:10:34.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:34.706" starttime="20201104 13:10:34.706"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.706" starttime="20201104 13:10:34.108"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.707" starttime="20201104 13:10:34.107"></status>
</kw>
<msg timestamp="20201104 13:10:34.707" level="INFO">${BUCKET} = bucket-81853</msg>
<status status="PASS" endtime="20201104 13:10:34.707" starttime="20201104 13:10:34.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:10:34.707" level="INFO">${BUCKET} = bucket-81853</msg>
<status status="PASS" endtime="20201104 13:10:34.707" starttime="20201104 13:10:34.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:34.708" starttime="20201104 13:10:34.707"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.708" starttime="20201104 13:10:32.096"></status>
</kw>
<test id="s1-s3-s10-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arguments>
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:34.714" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20201104 13:10:34.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:34.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:34.716" starttime="20201104 13:10:34.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:34.717" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:34.717" starttime="20201104 13:10:34.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:34.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:34.718" starttime="20201104 13:10:34.717"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.718" starttime="20201104 13:10:34.710"></status>
</kw>
<msg timestamp="20201104 13:10:34.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:34.718" starttime="20201104 13:10:34.710"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:34.718" starttime="20201104 13:10:34.709"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:34.726" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-81853 --key 77573/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:35.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:35.492" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:35.492" starttime="20201104 13:10:34.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:35.493" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:35.494" starttime="20201104 13:10:35.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:35.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:35.494" starttime="20201104 13:10:35.494"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:35.495" starttime="20201104 13:10:34.720"></status>
</kw>
<msg timestamp="20201104 13:10:35.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:35.495" starttime="20201104 13:10:34.720"></status>
</kw>
<msg timestamp="20201104 13:10:35.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:35.495" starttime="20201104 13:10:34.719"></status>
</kw>
<msg timestamp="20201104 13:10:35.496" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:35.496" starttime="20201104 13:10:34.719"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:35.501" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-81853 --prefix 77573/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:35.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:35.989" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "775...</msg>
<status status="PASS" endtime="20201104 13:10:35.989" starttime="20201104 13:10:35.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:35.991" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "77573/putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:35.991" starttime="20201104 13:10:35.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:35.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:35.991" starttime="20201104 13:10:35.991"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:35.992" starttime="20201104 13:10:35.498"></status>
</kw>
<msg timestamp="20201104 13:10:35.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:35.992" starttime="20201104 13:10:35.497"></status>
</kw>
<msg timestamp="20201104 13:10:35.992" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "775...</msg>
<status status="PASS" endtime="20201104 13:10:35.992" starttime="20201104 13:10:35.497"></status>
</kw>
<msg timestamp="20201104 13:10:35.992" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "775...</msg>
<status status="PASS" endtime="20201104 13:10:35.992" starttime="20201104 13:10:35.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:35.993" starttime="20201104 13:10:35.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>touch -f /tmp/zerobyte</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:35.997" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:36.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:36.000" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:36.000" starttime="20201104 13:10:35.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:36.001" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:36.001" starttime="20201104 13:10:36.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:36.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:36.002" starttime="20201104 13:10:36.001"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:36.002" starttime="20201104 13:10:35.994"></status>
</kw>
<msg timestamp="20201104 13:10:36.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:36.003" starttime="20201104 13:10:35.994"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:36.003" starttime="20201104 13:10:35.993"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:36.008" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-81853 --key 77573/putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:36.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:36.617" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:36.617" starttime="20201104 13:10:36.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:36.619" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:36.619" starttime="20201104 13:10:36.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:36.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:36.619" starttime="20201104 13:10:36.619"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:36.620" starttime="20201104 13:10:36.004"></status>
</kw>
<msg timestamp="20201104 13:10:36.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:36.620" starttime="20201104 13:10:36.004"></status>
</kw>
<msg timestamp="20201104 13:10:36.620" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:36.620" starttime="20201104 13:10:36.003"></status>
</kw>
<msg timestamp="20201104 13:10:36.621" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201104 13:10:36.621" starttime="20201104 13:10:36.003"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:36.626" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-81853 --prefix 77573/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:37.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:37.096" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "775...</msg>
<status status="PASS" endtime="20201104 13:10:37.097" starttime="20201104 13:10:36.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.098" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "77573/putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2020-11-04T13:10:36.453Z", 
            "ETag": "2020-11-04T13:10:36.453Z", 
            "StorageClass": "STANDARD", 
            "Key": "77573/putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" endtime="20201104 13:10:37.098" starttime="20201104 13:10:37.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:37.099" starttime="20201104 13:10:37.098"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:37.099" starttime="20201104 13:10:36.622"></status>
</kw>
<msg timestamp="20201104 13:10:37.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:37.099" starttime="20201104 13:10:36.622"></status>
</kw>
<msg timestamp="20201104 13:10:37.099" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "775...</msg>
<status status="PASS" endtime="20201104 13:10:37.099" starttime="20201104 13:10:36.621"></status>
</kw>
<msg timestamp="20201104 13:10:37.100" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-11-04T13:10:35.323Z", 
            "ETag": "2020-11-04T13:10:35.323Z", 
            "StorageClass": "STANDARD", 
            "Key": "775...</msg>
<status status="PASS" endtime="20201104 13:10:37.100" starttime="20201104 13:10:36.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>zerobyte</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:37.100" starttime="20201104 13:10:37.100"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:37.100" critical="yes" starttime="20201104 13:10:34.708"></status>
</test>
<test id="s1-s3-s10-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:37.107" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:37.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:37.603" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:3...</msg>
<status status="PASS" endtime="20201104 13:10:37.603" starttime="20201104 13:10:37.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.605" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:37 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:37.605" starttime="20201104 13:10:37.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:37.606" starttime="20201104 13:10:37.605"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:37.606" starttime="20201104 13:10:37.103"></status>
</kw>
<msg timestamp="20201104 13:10:37.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:37.606" starttime="20201104 13:10:37.103"></status>
</kw>
<msg timestamp="20201104 13:10:37.606" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:3...</msg>
<status status="PASS" endtime="20201104 13:10:37.606" starttime="20201104 13:10:37.102"></status>
</kw>
<msg timestamp="20201104 13:10:37.607" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:3...</msg>
<status status="PASS" endtime="20201104 13:10:37.607" starttime="20201104 13:10:37.102"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:37.612" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:37.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:37.615" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20201104 13:10:37.615" starttime="20201104 13:10:37.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.616" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20201104 13:10:37.616" starttime="20201104 13:10:37.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:37.616" starttime="20201104 13:10:37.616"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:37.617" starttime="20201104 13:10:37.608"></status>
</kw>
<msg timestamp="20201104 13:10:37.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:37.617" starttime="20201104 13:10:37.608"></status>
</kw>
<msg timestamp="20201104 13:10:37.617" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20201104 13:10:37.617" starttime="20201104 13:10:37.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:37.621" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:37.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:37.624" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20201104 13:10:37.624" starttime="20201104 13:10:37.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.625" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20201104 13:10:37.625" starttime="20201104 13:10:37.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:37.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:37.626" starttime="20201104 13:10:37.625"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:37.626" starttime="20201104 13:10:37.618"></status>
</kw>
<msg timestamp="20201104 13:10:37.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:37.626" starttime="20201104 13:10:37.618"></status>
</kw>
<msg timestamp="20201104 13:10:37.626" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20201104 13:10:37.626" starttime="20201104 13:10:37.617"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:37.627" starttime="20201104 13:10:37.626"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:37.627" starttime="20201104 13:10:37.607"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:37.627" critical="yes" starttime="20201104 13:10:37.101"></status>
</test>
<test id="s1-s3-s10-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:37.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:38.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:38.133" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:38.134" starttime="20201104 13:10:37.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.135" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:38 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:38.135" starttime="20201104 13:10:38.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:38.136" starttime="20201104 13:10:38.135"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:38.136" starttime="20201104 13:10:37.631"></status>
</kw>
<msg timestamp="20201104 13:10:38.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:38.136" starttime="20201104 13:10:37.631"></status>
</kw>
<msg timestamp="20201104 13:10:38.136" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:38.136" starttime="20201104 13:10:37.630"></status>
</kw>
<msg timestamp="20201104 13:10:38.137" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:38.137" starttime="20201104 13:10:37.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.138" starttime="20201104 13:10:38.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.138" starttime="20201104 13:10:38.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.139" starttime="20201104 13:10:38.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:38.143" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20201104 13:10:38.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:38.145" level="INFO">${output} = Rando</msg>
<status status="PASS" endtime="20201104 13:10:38.145" starttime="20201104 13:10:38.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.146" level="INFO">Rando</msg>
<status status="PASS" endtime="20201104 13:10:38.146" starttime="20201104 13:10:38.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:38.147" starttime="20201104 13:10:38.147"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:38.147" starttime="20201104 13:10:38.140"></status>
</kw>
<msg timestamp="20201104 13:10:38.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:38.148" starttime="20201104 13:10:38.139"></status>
</kw>
<msg timestamp="20201104 13:10:38.148" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" endtime="20201104 13:10:38.148" starttime="20201104 13:10:38.139"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:38.153" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:38.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:38.154" level="INFO">${output} = Rando</msg>
<status status="PASS" endtime="20201104 13:10:38.154" starttime="20201104 13:10:38.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.155" level="INFO">Rando</msg>
<status status="PASS" endtime="20201104 13:10:38.155" starttime="20201104 13:10:38.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:38.155" starttime="20201104 13:10:38.155"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:38.156" starttime="20201104 13:10:38.149"></status>
</kw>
<msg timestamp="20201104 13:10:38.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:38.156" starttime="20201104 13:10:38.148"></status>
</kw>
<msg timestamp="20201104 13:10:38.156" level="INFO">${actualData} = Rando</msg>
<status status="PASS" endtime="20201104 13:10:38.156" starttime="20201104 13:10:38.148"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.157" starttime="20201104 13:10:38.156"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:38.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:38.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:38.655" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:38.656" starttime="20201104 13:10:38.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.657" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:38 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:38.657" starttime="20201104 13:10:38.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:38.658" starttime="20201104 13:10:38.657"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:38.658" starttime="20201104 13:10:38.158"></status>
</kw>
<msg timestamp="20201104 13:10:38.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:38.658" starttime="20201104 13:10:38.158"></status>
</kw>
<msg timestamp="20201104 13:10:38.658" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:38.658" starttime="20201104 13:10:38.158"></status>
</kw>
<msg timestamp="20201104 13:10:38.659" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:38.659" starttime="20201104 13:10:38.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.659" starttime="20201104 13:10:38.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.660" starttime="20201104 13:10:38.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.660" starttime="20201104 13:10:38.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:38.665" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20201104 13:10:38.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:38.667" level="INFO">${output} = ndo</msg>
<status status="PASS" endtime="20201104 13:10:38.667" starttime="20201104 13:10:38.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.668" level="INFO">ndo</msg>
<status status="PASS" endtime="20201104 13:10:38.668" starttime="20201104 13:10:38.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:38.669" starttime="20201104 13:10:38.668"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:38.669" starttime="20201104 13:10:38.661"></status>
</kw>
<msg timestamp="20201104 13:10:38.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:38.669" starttime="20201104 13:10:38.661"></status>
</kw>
<msg timestamp="20201104 13:10:38.670" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" endtime="20201104 13:10:38.670" starttime="20201104 13:10:38.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:38.673" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:38.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:38.675" level="INFO">${output} = ndo</msg>
<status status="PASS" endtime="20201104 13:10:38.675" starttime="20201104 13:10:38.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.676" level="INFO">ndo</msg>
<status status="PASS" endtime="20201104 13:10:38.676" starttime="20201104 13:10:38.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:38.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:38.677" starttime="20201104 13:10:38.677"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:38.677" starttime="20201104 13:10:38.671"></status>
</kw>
<msg timestamp="20201104 13:10:38.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:38.678" starttime="20201104 13:10:38.670"></status>
</kw>
<msg timestamp="20201104 13:10:38.678" level="INFO">${actualData} = ndo</msg>
<status status="PASS" endtime="20201104 13:10:38.678" starttime="20201104 13:10:38.670"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:38.679" starttime="20201104 13:10:38.678"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:38.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:39.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:39.176" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:39.176" starttime="20201104 13:10:38.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.177" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:39 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:39.178" starttime="20201104 13:10:39.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:39.178" starttime="20201104 13:10:39.178"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:39.179" starttime="20201104 13:10:38.680"></status>
</kw>
<msg timestamp="20201104 13:10:39.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:39.179" starttime="20201104 13:10:38.680"></status>
</kw>
<msg timestamp="20201104 13:10:39.179" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:39.179" starttime="20201104 13:10:38.679"></status>
</kw>
<msg timestamp="20201104 13:10:39.179" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:39.179" starttime="20201104 13:10:38.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:39.180" starttime="20201104 13:10:39.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:39.180" starttime="20201104 13:10:39.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:39.181" starttime="20201104 13:10:39.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:39.185" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20201104 13:10:39.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:39.187" level="INFO">${output} = ndomtext</msg>
<status status="PASS" endtime="20201104 13:10:39.188" starttime="20201104 13:10:39.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.189" level="INFO">ndomtext</msg>
<status status="PASS" endtime="20201104 13:10:39.189" starttime="20201104 13:10:39.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:39.189" starttime="20201104 13:10:39.189"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:39.190" starttime="20201104 13:10:39.182"></status>
</kw>
<msg timestamp="20201104 13:10:39.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:39.190" starttime="20201104 13:10:39.182"></status>
</kw>
<msg timestamp="20201104 13:10:39.190" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" endtime="20201104 13:10:39.190" starttime="20201104 13:10:39.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:39.195" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:39.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:39.197" level="INFO">${output} = ndomtext</msg>
<status status="PASS" endtime="20201104 13:10:39.197" starttime="20201104 13:10:39.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.198" level="INFO">ndomtext</msg>
<status status="PASS" endtime="20201104 13:10:39.198" starttime="20201104 13:10:39.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:39.199" starttime="20201104 13:10:39.198"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:39.199" starttime="20201104 13:10:39.191"></status>
</kw>
<msg timestamp="20201104 13:10:39.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:39.199" starttime="20201104 13:10:39.191"></status>
</kw>
<msg timestamp="20201104 13:10:39.200" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" endtime="20201104 13:10:39.200" starttime="20201104 13:10:39.190"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:39.200" starttime="20201104 13:10:39.200"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:39.200" critical="yes" starttime="20201104 13:10:37.628"></status>
</test>
<test id="s1-s3-s10-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:39.207" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:39.673" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:39.673" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:39.674" starttime="20201104 13:10:39.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.675" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:39.675" starttime="20201104 13:10:39.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:39.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:39.675" starttime="20201104 13:10:39.675"></status>
</kw>
<msg timestamp="20201104 13:10:39.676" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:39.676" starttime="20201104 13:10:39.203"></status>
</kw>
<msg timestamp="20201104 13:10:39.676" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:39.676" starttime="20201104 13:10:39.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:39.677" starttime="20201104 13:10:39.676"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:39.677" critical="yes" starttime="20201104 13:10:39.201"></status>
</test>
<test id="s1-s3-s10-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:39.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:40.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:40.194" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:40.194" starttime="20201104 13:10:39.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.196" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:40 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:40.196" starttime="20201104 13:10:40.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:40.197" starttime="20201104 13:10:40.196"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:40.197" starttime="20201104 13:10:39.680"></status>
</kw>
<msg timestamp="20201104 13:10:40.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:40.198" starttime="20201104 13:10:39.680"></status>
</kw>
<msg timestamp="20201104 13:10:40.198" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:40.198" starttime="20201104 13:10:39.679"></status>
</kw>
<msg timestamp="20201104 13:10:40.206" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:40.206" starttime="20201104 13:10:39.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.207" starttime="20201104 13:10:40.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.208" starttime="20201104 13:10:40.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.208" starttime="20201104 13:10:40.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:40.213" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:40.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:40.215" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.215" starttime="20201104 13:10:40.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.216" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.216" starttime="20201104 13:10:40.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:40.217" starttime="20201104 13:10:40.216"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:40.217" starttime="20201104 13:10:40.209"></status>
</kw>
<msg timestamp="20201104 13:10:40.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:40.217" starttime="20201104 13:10:40.209"></status>
</kw>
<msg timestamp="20201104 13:10:40.217" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.217" starttime="20201104 13:10:40.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:40.221" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:40.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:40.224" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.224" starttime="20201104 13:10:40.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.225" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.225" starttime="20201104 13:10:40.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:40.226" starttime="20201104 13:10:40.225"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:40.226" starttime="20201104 13:10:40.218"></status>
</kw>
<msg timestamp="20201104 13:10:40.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:40.227" starttime="20201104 13:10:40.218"></status>
</kw>
<msg timestamp="20201104 13:10:40.227" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.227" starttime="20201104 13:10:40.218"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.228" starttime="20201104 13:10:40.227"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:40.228" critical="yes" starttime="20201104 13:10:39.678"></status>
</test>
<test id="s1-s3-s10-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:40.236" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:40.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:40.790" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:40.790" starttime="20201104 13:10:40.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.791" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:40 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:40.791" starttime="20201104 13:10:40.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:40.792" starttime="20201104 13:10:40.791"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:40.792" starttime="20201104 13:10:40.232"></status>
</kw>
<msg timestamp="20201104 13:10:40.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:40.793" starttime="20201104 13:10:40.232"></status>
</kw>
<msg timestamp="20201104 13:10:40.793" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:40.793" starttime="20201104 13:10:40.231"></status>
</kw>
<msg timestamp="20201104 13:10:40.793" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:40.793" starttime="20201104 13:10:40.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.794" starttime="20201104 13:10:40.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.794" starttime="20201104 13:10:40.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.796" starttime="20201104 13:10:40.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:40.801" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:40.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:40.803" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.803" starttime="20201104 13:10:40.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.805" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.805" starttime="20201104 13:10:40.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:40.805" starttime="20201104 13:10:40.805"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:40.806" starttime="20201104 13:10:40.797"></status>
</kw>
<msg timestamp="20201104 13:10:40.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:40.806" starttime="20201104 13:10:40.796"></status>
</kw>
<msg timestamp="20201104 13:10:40.806" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.806" starttime="20201104 13:10:40.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:40.810" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:40.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:40.812" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.812" starttime="20201104 13:10:40.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.813" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.813" starttime="20201104 13:10:40.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:40.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:40.814" starttime="20201104 13:10:40.814"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:40.814" starttime="20201104 13:10:40.807"></status>
</kw>
<msg timestamp="20201104 13:10:40.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:40.815" starttime="20201104 13:10:40.807"></status>
</kw>
<msg timestamp="20201104 13:10:40.815" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:40.815" starttime="20201104 13:10:40.806"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:40.816" starttime="20201104 13:10:40.815"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:40.816" critical="yes" starttime="20201104 13:10:40.229"></status>
</test>
<test id="s1-s3-s10-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:40.823" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:41.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:41.337" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:41.337" starttime="20201104 13:10:40.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.338" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:41 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:41.338" starttime="20201104 13:10:41.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:41.339" starttime="20201104 13:10:41.338"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:41.339" starttime="20201104 13:10:40.819"></status>
</kw>
<msg timestamp="20201104 13:10:41.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:41.339" starttime="20201104 13:10:40.819"></status>
</kw>
<msg timestamp="20201104 13:10:41.339" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:41.339" starttime="20201104 13:10:40.818"></status>
</kw>
<msg timestamp="20201104 13:10:41.340" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:41.340" starttime="20201104 13:10:40.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.340" starttime="20201104 13:10:41.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.341" starttime="20201104 13:10:41.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.341" starttime="20201104 13:10:41.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:41.346" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20201104 13:10:41.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:41.348" level="INFO">${output} = R</msg>
<status status="PASS" endtime="20201104 13:10:41.348" starttime="20201104 13:10:41.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.349" level="INFO">R</msg>
<status status="PASS" endtime="20201104 13:10:41.349" starttime="20201104 13:10:41.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:41.350" starttime="20201104 13:10:41.349"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:41.350" starttime="20201104 13:10:41.343"></status>
</kw>
<msg timestamp="20201104 13:10:41.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:41.350" starttime="20201104 13:10:41.342"></status>
</kw>
<msg timestamp="20201104 13:10:41.350" level="INFO">${expectedData} = R</msg>
<status status="PASS" endtime="20201104 13:10:41.350" starttime="20201104 13:10:41.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:41.354" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:41.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:41.357" level="INFO">${output} = R</msg>
<status status="PASS" endtime="20201104 13:10:41.357" starttime="20201104 13:10:41.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.358" level="INFO">R</msg>
<status status="PASS" endtime="20201104 13:10:41.358" starttime="20201104 13:10:41.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:41.359" starttime="20201104 13:10:41.358"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:41.359" starttime="20201104 13:10:41.351"></status>
</kw>
<msg timestamp="20201104 13:10:41.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:41.359" starttime="20201104 13:10:41.351"></status>
</kw>
<msg timestamp="20201104 13:10:41.359" level="INFO">${actualData} = R</msg>
<status status="PASS" endtime="20201104 13:10:41.359" starttime="20201104 13:10:41.351"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.360" starttime="20201104 13:10:41.359"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:41.364" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:41.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:41.858" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:41.858" starttime="20201104 13:10:41.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.860" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:41 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:41.860" starttime="20201104 13:10:41.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:41.860" starttime="20201104 13:10:41.860"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:41.861" starttime="20201104 13:10:41.362"></status>
</kw>
<msg timestamp="20201104 13:10:41.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:41.861" starttime="20201104 13:10:41.361"></status>
</kw>
<msg timestamp="20201104 13:10:41.861" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:41.861" starttime="20201104 13:10:41.361"></status>
</kw>
<msg timestamp="20201104 13:10:41.861" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 04 Nov 2...</msg>
<status status="PASS" endtime="20201104 13:10:41.862" starttime="20201104 13:10:41.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.862" starttime="20201104 13:10:41.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.863" starttime="20201104 13:10:41.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.863" starttime="20201104 13:10:41.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:41.868" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20201104 13:10:41.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:41.871" level="INFO">${output} = o</msg>
<status status="PASS" endtime="20201104 13:10:41.871" starttime="20201104 13:10:41.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.872" level="INFO">o</msg>
<status status="PASS" endtime="20201104 13:10:41.872" starttime="20201104 13:10:41.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:41.873" starttime="20201104 13:10:41.872"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:41.873" starttime="20201104 13:10:41.864"></status>
</kw>
<msg timestamp="20201104 13:10:41.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:41.873" starttime="20201104 13:10:41.864"></status>
</kw>
<msg timestamp="20201104 13:10:41.873" level="INFO">${expectedData} = o</msg>
<status status="PASS" endtime="20201104 13:10:41.874" starttime="20201104 13:10:41.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:41.879" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:41.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:41.881" level="INFO">${output} = o</msg>
<status status="PASS" endtime="20201104 13:10:41.881" starttime="20201104 13:10:41.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.882" level="INFO">o</msg>
<status status="PASS" endtime="20201104 13:10:41.883" starttime="20201104 13:10:41.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:41.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:41.883" starttime="20201104 13:10:41.883"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:41.884" starttime="20201104 13:10:41.875"></status>
</kw>
<msg timestamp="20201104 13:10:41.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:41.884" starttime="20201104 13:10:41.874"></status>
</kw>
<msg timestamp="20201104 13:10:41.884" level="INFO">${actualData} = o</msg>
<status status="PASS" endtime="20201104 13:10:41.884" starttime="20201104 13:10:41.874"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:41.885" starttime="20201104 13:10:41.884"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:41.885" critical="yes" starttime="20201104 13:10:40.817"></status>
</test>
<test id="s1-s3-s10-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:41.891" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:42.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:42.392" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:42.393" starttime="20201104 13:10:41.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.394" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:42 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:42.394" starttime="20201104 13:10:42.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:42.395" starttime="20201104 13:10:42.394"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:42.395" starttime="20201104 13:10:41.888"></status>
</kw>
<msg timestamp="20201104 13:10:42.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:42.396" starttime="20201104 13:10:41.888"></status>
</kw>
<msg timestamp="20201104 13:10:42.396" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:42.396" starttime="20201104 13:10:41.887"></status>
</kw>
<msg timestamp="20201104 13:10:42.396" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:42.396" starttime="20201104 13:10:41.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.397" starttime="20201104 13:10:42.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.398" starttime="20201104 13:10:42.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.398" starttime="20201104 13:10:42.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:42.404" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20201104 13:10:42.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:42.406" level="INFO">${output} = ext</msg>
<status status="PASS" endtime="20201104 13:10:42.406" starttime="20201104 13:10:42.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.407" level="INFO">ext</msg>
<status status="PASS" endtime="20201104 13:10:42.407" starttime="20201104 13:10:42.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:42.408" starttime="20201104 13:10:42.407"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:42.408" starttime="20201104 13:10:42.400"></status>
</kw>
<msg timestamp="20201104 13:10:42.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:42.408" starttime="20201104 13:10:42.399"></status>
</kw>
<msg timestamp="20201104 13:10:42.408" level="INFO">${expectedData} = ext</msg>
<status status="PASS" endtime="20201104 13:10:42.408" starttime="20201104 13:10:42.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:42.413" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:42.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:42.416" level="INFO">${output} = ext</msg>
<status status="PASS" endtime="20201104 13:10:42.416" starttime="20201104 13:10:42.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.417" level="INFO">ext</msg>
<status status="PASS" endtime="20201104 13:10:42.417" starttime="20201104 13:10:42.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:42.418" starttime="20201104 13:10:42.417"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:42.418" starttime="20201104 13:10:42.410"></status>
</kw>
<msg timestamp="20201104 13:10:42.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:42.419" starttime="20201104 13:10:42.409"></status>
</kw>
<msg timestamp="20201104 13:10:42.419" level="INFO">${actualData} = ext</msg>
<status status="PASS" endtime="20201104 13:10:42.419" starttime="20201104 13:10:42.409"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.419" starttime="20201104 13:10:42.419"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:42.424" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:42.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:42.942" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:42.943" starttime="20201104 13:10:42.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.944" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov 2020 13:10:42 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:42.945" starttime="20201104 13:10:42.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:42.945" starttime="20201104 13:10:42.945"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:42.946" starttime="20201104 13:10:42.421"></status>
</kw>
<msg timestamp="20201104 13:10:42.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:42.946" starttime="20201104 13:10:42.421"></status>
</kw>
<msg timestamp="20201104 13:10:42.946" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:42.946" starttime="20201104 13:10:42.420"></status>
</kw>
<msg timestamp="20201104 13:10:42.947" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 04 Nov ...</msg>
<status status="PASS" endtime="20201104 13:10:42.947" starttime="20201104 13:10:42.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.947" starttime="20201104 13:10:42.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.948" starttime="20201104 13:10:42.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.948" starttime="20201104 13:10:42.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:42.952" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:42.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:42.955" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:42.955" starttime="20201104 13:10:42.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.956" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:42.956" starttime="20201104 13:10:42.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:42.957" starttime="20201104 13:10:42.956"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:42.957" starttime="20201104 13:10:42.949"></status>
</kw>
<msg timestamp="20201104 13:10:42.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:42.958" starttime="20201104 13:10:42.949"></status>
</kw>
<msg timestamp="20201104 13:10:42.958" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:42.958" starttime="20201104 13:10:42.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:42.963" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:42.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:42.966" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:42.966" starttime="20201104 13:10:42.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.967" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:42.967" starttime="20201104 13:10:42.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:42.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:42.968" starttime="20201104 13:10:42.967"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:42.968" starttime="20201104 13:10:42.960"></status>
</kw>
<msg timestamp="20201104 13:10:42.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:42.968" starttime="20201104 13:10:42.959"></status>
</kw>
<msg timestamp="20201104 13:10:42.969" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:42.969" starttime="20201104 13:10:42.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:42.969" starttime="20201104 13:10:42.969"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:42.970" critical="yes" starttime="20201104 13:10:41.886"></status>
</test>
<test id="s1-s3-s10-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:42.976" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:43.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:43.465" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:4...</msg>
<status status="PASS" endtime="20201104 13:10:43.465" starttime="20201104 13:10:42.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:43.466" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:43 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:43.467" starttime="20201104 13:10:43.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:43.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:43.468" starttime="20201104 13:10:43.467"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:43.468" starttime="20201104 13:10:42.973"></status>
</kw>
<msg timestamp="20201104 13:10:43.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:43.468" starttime="20201104 13:10:42.973"></status>
</kw>
<msg timestamp="20201104 13:10:43.468" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:4...</msg>
<status status="PASS" endtime="20201104 13:10:43.468" starttime="20201104 13:10:42.972"></status>
</kw>
<msg timestamp="20201104 13:10:43.469" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:4...</msg>
<status status="PASS" endtime="20201104 13:10:43.469" starttime="20201104 13:10:42.972"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:43.469" starttime="20201104 13:10:43.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:43.470" starttime="20201104 13:10:43.469"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:43.474" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:43.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:43.477" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:43.477" starttime="20201104 13:10:43.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:43.478" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:43.478" starttime="20201104 13:10:43.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:43.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:43.479" starttime="20201104 13:10:43.478"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:43.479" starttime="20201104 13:10:43.471"></status>
</kw>
<msg timestamp="20201104 13:10:43.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:43.479" starttime="20201104 13:10:43.470"></status>
</kw>
<msg timestamp="20201104 13:10:43.479" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:43.480" starttime="20201104 13:10:43.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:43.485" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:43.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:43.487" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:43.488" starttime="20201104 13:10:43.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:43.489" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:43.489" starttime="20201104 13:10:43.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:43.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:43.489" starttime="20201104 13:10:43.489"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:43.490" starttime="20201104 13:10:43.480"></status>
</kw>
<msg timestamp="20201104 13:10:43.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:43.490" starttime="20201104 13:10:43.480"></status>
</kw>
<msg timestamp="20201104 13:10:43.490" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:43.490" starttime="20201104 13:10:43.480"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:43.491" starttime="20201104 13:10:43.490"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:43.497" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:44.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:44.035" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:4...</msg>
<status status="PASS" endtime="20201104 13:10:44.035" starttime="20201104 13:10:43.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.036" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:43 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20201104 13:10:44.037" starttime="20201104 13:10:44.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:44.037" starttime="20201104 13:10:44.037"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:44.038" starttime="20201104 13:10:43.493"></status>
</kw>
<msg timestamp="20201104 13:10:44.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:44.038" starttime="20201104 13:10:43.493"></status>
</kw>
<msg timestamp="20201104 13:10:44.038" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:4...</msg>
<status status="PASS" endtime="20201104 13:10:44.038" starttime="20201104 13:10:43.492"></status>
</kw>
<msg timestamp="20201104 13:10:44.038" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 04 Nov 2020 13:10:35 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 04 Nov 2020 13:10:4...</msg>
<status status="PASS" endtime="20201104 13:10:44.038" starttime="20201104 13:10:43.491"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:44.039" starttime="20201104 13:10:44.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:44.039" starttime="20201104 13:10:44.039"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:44.045" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:44.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:44.046" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:44.046" starttime="20201104 13:10:44.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.047" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:44.047" starttime="20201104 13:10:44.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:44.048" starttime="20201104 13:10:44.047"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:44.048" starttime="20201104 13:10:44.040"></status>
</kw>
<msg timestamp="20201104 13:10:44.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:44.048" starttime="20201104 13:10:44.040"></status>
</kw>
<msg timestamp="20201104 13:10:44.049" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:44.049" starttime="20201104 13:10:44.040"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:44.053" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:44.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:44.057" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:44.057" starttime="20201104 13:10:44.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.058" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:44.058" starttime="20201104 13:10:44.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:44.059" starttime="20201104 13:10:44.059"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:44.059" starttime="20201104 13:10:44.050"></status>
</kw>
<msg timestamp="20201104 13:10:44.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:44.060" starttime="20201104 13:10:44.050"></status>
</kw>
<msg timestamp="20201104 13:10:44.060" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20201104 13:10:44.060" starttime="20201104 13:10:44.049"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:44.061" starttime="20201104 13:10:44.060"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:44.061" critical="yes" starttime="20201104 13:10:42.971"></status>
</test>
<test id="s1-s3-s10-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:44.069" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:44.567" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:44.567" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:44.567" starttime="20201104 13:10:44.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.568" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:44.568" starttime="20201104 13:10:44.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:44.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:44.569" starttime="20201104 13:10:44.568"></status>
</kw>
<msg timestamp="20201104 13:10:44.569" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:44.569" starttime="20201104 13:10:44.064"></status>
</kw>
<msg timestamp="20201104 13:10:44.569" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:44.569" starttime="20201104 13:10:44.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:44.570" starttime="20201104 13:10:44.570"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:44.574" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:45.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:45.059" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.059" starttime="20201104 13:10:44.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:45.060" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.060" starttime="20201104 13:10:45.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:45.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:45.061" starttime="20201104 13:10:45.060"></status>
</kw>
<msg timestamp="20201104 13:10:45.061" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.061" starttime="20201104 13:10:44.571"></status>
</kw>
<msg timestamp="20201104 13:10:45.062" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.062" starttime="20201104 13:10:44.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:45.062" starttime="20201104 13:10:45.062"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:45.066" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-81853 --key 77573/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:45.586" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:10:45.587" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.587" starttime="20201104 13:10:45.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:45.588" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.588" starttime="20201104 13:10:45.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:45.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:45.589" starttime="20201104 13:10:45.588"></status>
</kw>
<msg timestamp="20201104 13:10:45.589" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.589" starttime="20201104 13:10:45.063"></status>
</kw>
<msg timestamp="20201104 13:10:45.590" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20201104 13:10:45.590" starttime="20201104 13:10:45.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:45.590" starttime="20201104 13:10:45.590"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:45.590" critical="yes" starttime="20201104 13:10:44.062"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20201104 13:10:45.592" starttime="20201104 13:10:32.087"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/webui.robot" id="s1-s3-s11" name="Webui">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:10:45.607" level="INFO">${random} = 20118</msg>
<status status="PASS" endtime="20201104 13:10:45.607" starttime="20201104 13:10:45.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201104 13:10:45.608" level="INFO">${PREFIX} = 20118</msg>
<status status="PASS" endtime="20201104 13:10:45.608" starttime="20201104 13:10:45.607"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:45.609" starttime="20201104 13:10:45.606"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:45.609" starttime="20201104 13:10:45.606"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:45.612" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:45.614" level="INFO">${rc} = 1</msg>
<msg timestamp="20201104 13:10:45.614" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20201104 13:10:45.615" starttime="20201104 13:10:45.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:45.615" starttime="20201104 13:10:45.615"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:45.618" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:45.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:45.758" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/.dbenv.lock'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20201104 13:10:45.759" starttime="20201104 13:10:45.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:45.764" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:46.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:46.138" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Pa...</msg>
<status status="PASS" endtime="20201104 13:10:46.138" starttime="20201104 13:10:45.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:46.139" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: centos5.zswap.net
 * epel: mirror.cs.pitt.edu
 * extras: mirror.rackspace.com
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20201104 13:10:46.139" starttime="20201104 13:10:46.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:46.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:46.139" starttime="20201104 13:10:46.139"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.140" starttime="20201104 13:10:45.761"></status>
</kw>
<msg timestamp="20201104 13:10:46.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:46.140" starttime="20201104 13:10:45.761"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.140" starttime="20201104 13:10:45.760"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.140" starttime="20201104 13:10:45.760"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.140" starttime="20201104 13:10:45.759"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.141" starttime="20201104 13:10:45.609"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.141" starttime="20201104 13:10:45.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:46.142" starttime="20201104 13:10:46.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:46.142" starttime="20201104 13:10:46.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:46.147" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:46.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:46.479" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:46.479" starttime="20201104 13:10:46.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:46.480" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:46.480" starttime="20201104 13:10:46.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:46.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:46.480" starttime="20201104 13:10:46.480"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.481" starttime="20201104 13:10:46.144"></status>
</kw>
<msg timestamp="20201104 13:10:46.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:46.481" starttime="20201104 13:10:46.144"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.481" starttime="20201104 13:10:46.143"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:46.485" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:46.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:46.818" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:46.818" starttime="20201104 13:10:46.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:46.819" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:46.819" starttime="20201104 13:10:46.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:46.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:46.820" starttime="20201104 13:10:46.819"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.821" starttime="20201104 13:10:46.482"></status>
</kw>
<msg timestamp="20201104 13:10:46.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:46.821" starttime="20201104 13:10:46.482"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:46.821" starttime="20201104 13:10:46.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:46.824" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:47.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:47.177" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:47.177" starttime="20201104 13:10:46.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:47.179" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:47.179" starttime="20201104 13:10:47.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:47.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:47.179" starttime="20201104 13:10:47.179"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.180" starttime="20201104 13:10:46.822"></status>
</kw>
<msg timestamp="20201104 13:10:47.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:47.180" starttime="20201104 13:10:46.822"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.180" starttime="20201104 13:10:46.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:47.184" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:47.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:47.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:10:47.518" starttime="20201104 13:10:47.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:47.519" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:10:47.519" starttime="20201104 13:10:47.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:47.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:47.520" starttime="20201104 13:10:47.520"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.521" starttime="20201104 13:10:47.181"></status>
</kw>
<msg timestamp="20201104 13:10:47.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:47.521" starttime="20201104 13:10:47.181"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.521" starttime="20201104 13:10:47.180"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.521" starttime="20201104 13:10:46.143"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.521" starttime="20201104 13:10:46.143"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.522" starttime="20201104 13:10:46.141"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:47.522" starttime="20201104 13:10:46.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:10:47.523" level="INFO">${postfix} = 35992</msg>
<status status="PASS" endtime="20201104 13:10:47.523" starttime="20201104 13:10:47.523"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20201104 13:10:47.524" level="INFO">${bucket} = bucket-35992</msg>
<status status="PASS" endtime="20201104 13:10:47.524" starttime="20201104 13:10:47.524"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:47.534" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-35992 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:48.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:48.115" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-35992"
}</msg>
<status status="PASS" endtime="20201104 13:10:48.115" starttime="20201104 13:10:47.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:48.116" level="INFO">{
    "Location": "http://s3g:9878/bucket-35992"
}</msg>
<status status="PASS" endtime="20201104 13:10:48.116" starttime="20201104 13:10:48.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:48.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:48.117" starttime="20201104 13:10:48.117"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:48.117" starttime="20201104 13:10:47.526"></status>
</kw>
<msg timestamp="20201104 13:10:48.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:48.118" starttime="20201104 13:10:47.526"></status>
</kw>
<msg timestamp="20201104 13:10:48.118" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-35992"
}</msg>
<status status="PASS" endtime="20201104 13:10:48.118" starttime="20201104 13:10:47.525"></status>
</kw>
<msg timestamp="20201104 13:10:48.118" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-35992"
}</msg>
<status status="PASS" endtime="20201104 13:10:48.118" starttime="20201104 13:10:47.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:48.119" starttime="20201104 13:10:48.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:48.119" starttime="20201104 13:10:48.119"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:48.119" starttime="20201104 13:10:47.524"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:48.119" starttime="20201104 13:10:47.522"></status>
</kw>
<msg timestamp="20201104 13:10:48.119" level="INFO">${BUCKET} = bucket-35992</msg>
<status status="PASS" endtime="20201104 13:10:48.120" starttime="20201104 13:10:47.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20201104 13:10:48.120" level="INFO">${BUCKET} = bucket-35992</msg>
<status status="PASS" endtime="20201104 13:10:48.120" starttime="20201104 13:10:48.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:48.121" starttime="20201104 13:10:48.120"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:48.121" starttime="20201104 13:10:45.606"></status>
</kw>
<test id="s1-s3-s11-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:48.122" starttime="20201104 13:10:48.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:48.127" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:48.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:48.140" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20201104 13:10:48.141" starttime="20201104 13:10:48.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:48.142" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.23.0.7...
* Connected to s3g (172.23.0.7) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Wed, 04 Nov 2020 13:10:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 04 Nov 2020 13:10:48 GMT
&lt; Date: Wed, 04 Nov 2020 13:10:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" endtime="20201104 13:10:48.142" starttime="20201104 13:10:48.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:48.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:48.143" starttime="20201104 13:10:48.142"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:48.143" starttime="20201104 13:10:48.123"></status>
</kw>
<msg timestamp="20201104 13:10:48.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:48.143" starttime="20201104 13:10:48.123"></status>
</kw>
<msg timestamp="20201104 13:10:48.143" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20201104 13:10:48.143" starttime="20201104 13:10:48.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:48.144" starttime="20201104 13:10:48.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>/static/</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:48.144" starttime="20201104 13:10:48.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:10:48.149" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:10:48.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:10:48.164" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20201104 13:10:48.164" starttime="20201104 13:10:48.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:10:48.166" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.23.0.7...
* Connected to s3g (172.23.0.7) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 04 Nov 2020 13:10:48 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Wed, 04 Nov 2020 12:43:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3127
&lt; 
{ [data not shown]

100  3127  100  3127    0     0   329k      0 --:--:-- --:--:-- --:--:--  339k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Hadoop Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Hadoop Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Hadoop Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" endtime="20201104 13:10:48.166" starttime="20201104 13:10:48.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:10:48.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:10:48.167" starttime="20201104 13:10:48.166"></status>
</kw>
<status status="PASS" endtime="20201104 13:10:48.167" starttime="20201104 13:10:48.145"></status>
</kw>
<msg timestamp="20201104 13:10:48.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:10:48.167" starttime="20201104 13:10:48.145"></status>
</kw>
<msg timestamp="20201104 13:10:48.168" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20201104 13:10:48.168" starttime="20201104 13:10:48.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Apache Hadoop Ozone S3</arg>
</arguments>
<status status="PASS" endtime="20201104 13:10:48.168" starttime="20201104 13:10:48.168"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:10:48.169" critical="yes" starttime="20201104 13:10:48.121"></status>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" endtime="20201104 13:10:48.169" starttime="20201104 13:10:45.596"></status>
</suite>
<status status="PASS" endtime="20201104 13:10:48.175" starttime="20201104 13:08:26.346"></status>
</suite>
<status status="PASS" elapsedtime="290396" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="60">Critical Tests</stat>
<stat fail="0" pass="60">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-om-ha-s3" pass="60">ozone-om-ha-s3</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-om-ha-s3.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozone-om-ha-s3.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Links" pass="15">ozone-om-ha-s3.Links</stat>
<stat fail="0" id="s1-s3" name="S3" pass="41">ozone-om-ha-s3.S3</stat>
<stat fail="0" id="s1-s3-s1" name="Awss3" pass="1">ozone-om-ha-s3.S3.Awss3</stat>
<stat fail="0" id="s1-s3-s2" name="Bucketcreate" pass="3">ozone-om-ha-s3.S3.Bucketcreate</stat>
<stat fail="0" id="s1-s3-s3" name="Bucketdelete" pass="2">ozone-om-ha-s3.S3.Bucketdelete</stat>
<stat fail="0" id="s1-s3-s4" name="Buckethead" pass="1">ozone-om-ha-s3.S3.Buckethead</stat>
<stat fail="0" id="s1-s3-s5" name="Bucketlist" pass="1">ozone-om-ha-s3.S3.Bucketlist</stat>
<stat fail="0" id="s1-s3-s6" name="MultipartUpload" pass="12">ozone-om-ha-s3.S3.MultipartUpload</stat>
<stat fail="0" id="s1-s3-s7" name="Objectcopy" pass="4">ozone-om-ha-s3.S3.Objectcopy</stat>
<stat fail="0" id="s1-s3-s8" name="Objectdelete" pass="5">ozone-om-ha-s3.S3.Objectdelete</stat>
<stat fail="0" id="s1-s3-s9" name="Objectmultidelete" pass="1">ozone-om-ha-s3.S3.Objectmultidelete</stat>
<stat fail="0" id="s1-s3-s10" name="Objectputget" pass="10">ozone-om-ha-s3.S3.Objectputget</stat>
<stat fail="0" id="s1-s3-s11" name="Webui" pass="1">ozone-om-ha-s3.S3.Webui</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
