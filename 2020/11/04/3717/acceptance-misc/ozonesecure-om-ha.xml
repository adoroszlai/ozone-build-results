<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201104 13:39:12.103" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:34:56.232" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:08.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:08.045" level="INFO">${output} = 2020-11-04 13:34:57,900 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:34:58,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:08.045" starttime="20201104 13:34:56.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:08.046" level="INFO">2020-11-04 13:34:57,900 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:34:58,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:34:58,027 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-04 13:35:00,728 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-04 13:35:02,037 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-04 13:35:02,038 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-04 13:35:02,038 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-04 13:35:02,039 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-04 13:35:02,040 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-04 13:35:02,040 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-04 13:35:02,040 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-04 13:35:02,045 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-04 13:35:02,060 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:02,101 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-27188, with testuser/scm@EXAMPLE.COM as owner.
2020-11-04 13:35:02,687 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27188/bucket-0-17316, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:35:03,064 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:04,065 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:05,065 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:05,554 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-04 13:35:06,065 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,561
Average Time spent in bucket creation: 00:00:00,250
Average Time spent in key creation: 00:00:01,308
Average Time spent in key write: 00:00:01,575
Total bytes written: 10240
Total Execution time: 00:00:09,263
***************************************************</msg>
<status status="PASS" endtime="20201104 13:35:08.046" starttime="20201104 13:35:08.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:08.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:08.047" starttime="20201104 13:35:08.046"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:08.047" starttime="20201104 13:34:56.227"></status>
</kw>
<msg timestamp="20201104 13:35:08.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:08.047" starttime="20201104 13:34:56.226"></status>
</kw>
<msg timestamp="20201104 13:35:08.047" level="INFO">${result} = 2020-11-04 13:34:57,900 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:34:58,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:08.047" starttime="20201104 13:34:56.225"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:35:08.049" starttime="20201104 13:35:08.048"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:08.049" starttime="20201104 13:35:08.048"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:35:08.049" critical="yes" starttime="20201104 13:34:56.225"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:08.054" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:16.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:16.784" level="INFO">${output} = 2020-11-04 13:35:09,755 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:09,960 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:16.784" starttime="20201104 13:35:08.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:16.786" level="INFO">2020-11-04 13:35:09,755 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:09,960 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:35:09,960 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:35:10,164 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xw9tm6vwur
2020-11-04 13:35:10,180 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-04 13:35:11,193 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:11,316 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-04 13:35:11,864 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-04 13:35:11,933 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-04 13:35:12,193 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:12,596 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-04 13:35:12,945 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-04 13:35:12,945 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B4B4666E6413-&gt;f1759c6b-094d-4815-b5d0-2a0edcd65414
2020-11-04 13:35:12,947 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-04 13:35:13,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:14,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:15,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:16,195 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-04 13:35:16,336 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3248.747881, max=3248.747881, mean=3248.747881, stddev=0.0, median=3248.747881, p75=3248.747881, p95=3248.747881, p98=3248.747881, p99=3248.747881, p999=3248.747881, mean_rate=0.2311092663127209, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-04 13:35:16,337 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-04 13:35:16,358 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-04 13:35:16,358 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201104 13:35:16.787" starttime="20201104 13:35:16.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:16.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:16.787" starttime="20201104 13:35:16.787"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:16.788" starttime="20201104 13:35:08.051"></status>
</kw>
<msg timestamp="20201104 13:35:16.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:16.788" starttime="20201104 13:35:08.051"></status>
</kw>
<msg timestamp="20201104 13:35:16.788" level="INFO">${result} = 2020-11-04 13:35:09,755 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:09,960 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:16.788" starttime="20201104 13:35:08.050"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:35:16.789" starttime="20201104 13:35:16.789"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:16.789" starttime="20201104 13:35:16.788"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:35:16.790" critical="yes" starttime="20201104 13:35:08.049"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:16.795" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:21.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:21.718" level="INFO">${output} = 2020-11-04 13:35:18,579 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:18,715 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:21.718" starttime="20201104 13:35:16.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:21.719" level="INFO">2020-11-04 13:35:18,579 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:18,715 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:35:18,715 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:35:18,907 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7f2lml29kw
2020-11-04 13:35:18,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-04 13:35:19,933 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:20,060 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-04 13:35:20,685 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-04 13:35:20,934 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-04 13:35:21,689 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=313.461794, max=313.461794, mean=313.461794, stddev=0.0, median=313.461794, p75=313.461794, p95=313.461794, p98=313.461794, p99=313.461794, p999=313.461794, mean_rate=0.8725415263409755, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-04 13:35:21,690 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-04 13:35:21,690 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-04 13:35:21,690 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201104 13:35:21.719" starttime="20201104 13:35:21.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:21.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:21.720" starttime="20201104 13:35:21.720"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:21.720" starttime="20201104 13:35:16.792"></status>
</kw>
<msg timestamp="20201104 13:35:21.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:21.721" starttime="20201104 13:35:16.792"></status>
</kw>
<msg timestamp="20201104 13:35:21.721" level="INFO">${result} = 2020-11-04 13:35:18,579 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:18,715 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:21.721" starttime="20201104 13:35:16.791"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:35:21.722" starttime="20201104 13:35:21.722"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:21.722" starttime="20201104 13:35:21.721"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:35:21.722" critical="yes" starttime="20201104 13:35:16.790"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:21.729" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:26.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:26.326" level="INFO">${output} = 2020-11-04 13:35:23,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:23,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:26.326" starttime="20201104 13:35:21.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:26.327" level="INFO">2020-11-04 13:35:23,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:23,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-04 13:35:23,601 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-04 13:35:23,773 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2wzkqhztm1
2020-11-04 13:35:23,799 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-04 13:35:24,761 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-04 13:35:24,803 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-04 13:35:25,249 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-04 13:35:25,803 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-04 13:35:26,260 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=146.442993, max=146.442993, mean=146.442993, stddev=0.0, median=146.442993, p75=146.442993, p95=146.442993, p98=146.442993, p99=146.442993, p999=146.442993, mean_rate=0.8967674211318947, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-04 13:35:26,261 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-04 13:35:26,261 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-04 13:35:26,261 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201104 13:35:26.327" starttime="20201104 13:35:26.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:26.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:26.328" starttime="20201104 13:35:26.327"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:26.328" starttime="20201104 13:35:21.725"></status>
</kw>
<msg timestamp="20201104 13:35:26.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:26.328" starttime="20201104 13:35:21.725"></status>
</kw>
<msg timestamp="20201104 13:35:26.329" level="INFO">${result} = 2020-11-04 13:35:23,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-04 13:35:23,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201104 13:35:26.329" starttime="20201104 13:35:21.724"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:35:26.330" starttime="20201104 13:35:26.329"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:26.330" starttime="20201104 13:35:26.329"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201104 13:35:26.330" critical="yes" starttime="20201104 13:35:21.723"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201104 13:35:26.331" starttime="20201104 13:34:56.199"></status>
</suite>
<status status="PASS" endtime="20201104 13:35:26.334" starttime="20201104 13:34:56.166"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:34:49.279" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:34:49.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:34:49.285" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:34:49.285" starttime="20201104 13:34:49.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:34:49.286" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:34:49.286" starttime="20201104 13:34:49.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:34:49.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:34:49.287" starttime="20201104 13:34:49.286"></status>
</kw>
<status status="PASS" endtime="20201104 13:34:49.287" starttime="20201104 13:34:49.256"></status>
</kw>
<msg timestamp="20201104 13:34:49.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:34:49.287" starttime="20201104 13:34:49.256"></status>
</kw>
<msg timestamp="20201104 13:34:49.287" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:34:49.288" starttime="20201104 13:34:49.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:34:49.288" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:34:49.289" starttime="20201104 13:34:49.288"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:34:49.299" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:34:49.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:34:49.328" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:34:49.328" starttime="20201104 13:34:49.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:34:49.329" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:34:49.329" starttime="20201104 13:34:49.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:34:49.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:34:49.330" starttime="20201104 13:34:49.329"></status>
</kw>
<status status="PASS" endtime="20201104 13:34:49.330" starttime="20201104 13:34:49.294"></status>
</kw>
<msg timestamp="20201104 13:34:49.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:34:49.330" starttime="20201104 13:34:49.294"></status>
</kw>
<status status="PASS" endtime="20201104 13:34:49.330" starttime="20201104 13:34:49.290"></status>
</kw>
<status status="PASS" endtime="20201104 13:34:49.330" starttime="20201104 13:34:49.290"></status>
</kw>
<status status="PASS" endtime="20201104 13:34:49.330" starttime="20201104 13:34:49.254"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:34:49.331" critical="yes" starttime="20201104 13:34:49.253"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201104 13:34:49.333" starttime="20201104 13:34:49.136"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201104 13:35:32.271" level="INFO">${random} = 52721</msg>
<status status="PASS" endtime="20201104 13:35:32.271" starttime="20201104 13:35:32.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201104 13:35:32.272" level="INFO">${source} = 52721-source</msg>
<status status="PASS" endtime="20201104 13:35:32.272" starttime="20201104 13:35:32.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201104 13:35:32.273" level="INFO">${target} = 52721-target</msg>
<status status="PASS" endtime="20201104 13:35:32.273" starttime="20201104 13:35:32.272"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:32.279" level="INFO">Running command 'ozone sh volume create 52721-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:35.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:35.842" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:35:35.842" starttime="20201104 13:35:32.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:35.843" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:35:35.843" starttime="20201104 13:35:35.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:35.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:35.844" starttime="20201104 13:35:35.844"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:35.844" starttime="20201104 13:35:32.274"></status>
</kw>
<msg timestamp="20201104 13:35:35.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:35.845" starttime="20201104 13:35:32.274"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:35.845" starttime="20201104 13:35:32.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:35.848" level="INFO">Running command 'ozone sh volume create 52721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:39.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:39.644" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:35:39.644" starttime="20201104 13:35:35.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:39.646" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:35:39.647" starttime="20201104 13:35:39.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:39.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:39.650" starttime="20201104 13:35:39.649"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:39.650" starttime="20201104 13:35:35.846"></status>
</kw>
<msg timestamp="20201104 13:35:39.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:39.650" starttime="20201104 13:35:35.845"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:39.650" starttime="20201104 13:35:35.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:39.659" level="INFO">Running command 'ozone sh bucket create 52721-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:43.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:43.702" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:35:43.702" starttime="20201104 13:35:39.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:43.703" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:35:43.703" starttime="20201104 13:35:43.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:43.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:43.704" starttime="20201104 13:35:43.703"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:43.704" starttime="20201104 13:35:39.652"></status>
</kw>
<msg timestamp="20201104 13:35:43.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:43.704" starttime="20201104 13:35:39.652"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:43.705" starttime="20201104 13:35:39.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:43.708" level="INFO">Running command 'ozone sh key put 52721-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:50.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:50.047" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:35:50.047" starttime="20201104 13:35:43.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:50.048" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:35:50.048" starttime="20201104 13:35:50.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:50.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:50.049" starttime="20201104 13:35:50.048"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:50.049" starttime="20201104 13:35:43.706"></status>
</kw>
<msg timestamp="20201104 13:35:50.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:50.050" starttime="20201104 13:35:43.706"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:50.050" starttime="20201104 13:35:43.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:50.054" level="INFO">Running command 'ozone sh bucket create 52721-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:53.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:53.604" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:35:53.604" starttime="20201104 13:35:50.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:53.605" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:35:53.606" starttime="20201104 13:35:53.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:53.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:53.606" starttime="20201104 13:35:53.606"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:53.606" starttime="20201104 13:35:50.051"></status>
</kw>
<msg timestamp="20201104 13:35:53.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:53.607" starttime="20201104 13:35:50.050"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:53.607" starttime="20201104 13:35:50.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:53.610" level="INFO">Running command 'ozone sh bucket link 52721-source/readable-bucket 52721-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:35:57.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:35:57.050" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:35:57.051" starttime="20201104 13:35:53.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:35:57.052" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:35:57.052" starttime="20201104 13:35:57.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:35:57.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:35:57.053" starttime="20201104 13:35:57.052"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:57.053" starttime="20201104 13:35:53.608"></status>
</kw>
<msg timestamp="20201104 13:35:57.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:35:57.053" starttime="20201104 13:35:53.608"></status>
</kw>
<status status="PASS" endtime="20201104 13:35:57.053" starttime="20201104 13:35:53.607"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:35:57.058" level="INFO">Running command 'ozone sh bucket link 52721-source/readable-bucket 52721-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:00.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:00.652" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:00.652" starttime="20201104 13:35:57.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:00.653" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:00.653" starttime="20201104 13:36:00.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:00.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:00.654" starttime="20201104 13:36:00.653"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:00.654" starttime="20201104 13:35:57.054"></status>
</kw>
<msg timestamp="20201104 13:36:00.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:00.654" starttime="20201104 13:35:57.054"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:00.655" starttime="20201104 13:35:57.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:00.659" level="INFO">Running command 'ozone sh bucket link 52721-source/unreadable-bucket 52721-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:04.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:04.347" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:04.347" starttime="20201104 13:36:00.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:04.348" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:04.348" starttime="20201104 13:36:04.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:04.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:04.349" starttime="20201104 13:36:04.348"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:04.349" starttime="20201104 13:36:00.655"></status>
</kw>
<msg timestamp="20201104 13:36:04.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:04.349" starttime="20201104 13:36:00.655"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:04.350" starttime="20201104 13:36:00.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:04.353" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:08.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:08.112" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:08.112" starttime="20201104 13:36:04.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:08.113" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:36:08.113" starttime="20201104 13:36:08.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:08.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:08.114" starttime="20201104 13:36:08.113"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:08.114" starttime="20201104 13:36:04.351"></status>
</kw>
<msg timestamp="20201104 13:36:08.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:08.114" starttime="20201104 13:36:04.350"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:08.114" starttime="20201104 13:36:04.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:08.119" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 52721-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:11.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:11.718" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:11.718" starttime="20201104 13:36:08.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:11.719" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:36:11.719" starttime="20201104 13:36:11.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:11.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:11.720" starttime="20201104 13:36:11.720"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:11.720" starttime="20201104 13:36:08.115"></status>
</kw>
<msg timestamp="20201104 13:36:11.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:11.721" starttime="20201104 13:36:08.115"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:11.721" starttime="20201104 13:36:08.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:11.725" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 52721-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:15.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:15.389" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:15.389" starttime="20201104 13:36:11.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:15.390" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:36:15.390" starttime="20201104 13:36:15.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:15.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:15.391" starttime="20201104 13:36:15.391"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:15.391" starttime="20201104 13:36:11.722"></status>
</kw>
<msg timestamp="20201104 13:36:15.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:15.391" starttime="20201104 13:36:11.722"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:15.392" starttime="20201104 13:36:11.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:15.395" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52721-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:18.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:18.885" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:18.885" starttime="20201104 13:36:15.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:18.886" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:36:18.886" starttime="20201104 13:36:18.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:18.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:18.887" starttime="20201104 13:36:18.886"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:18.887" starttime="20201104 13:36:15.393"></status>
</kw>
<msg timestamp="20201104 13:36:18.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:18.887" starttime="20201104 13:36:15.392"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:18.887" starttime="20201104 13:36:15.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:18.892" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52721-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:22.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:22.875" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:22.875" starttime="20201104 13:36:18.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:22.877" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:36:22.877" starttime="20201104 13:36:22.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:22.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:22.877" starttime="20201104 13:36:22.877"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.878" starttime="20201104 13:36:18.888"></status>
</kw>
<msg timestamp="20201104 13:36:22.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:22.878" starttime="20201104 13:36:18.888"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.878" starttime="20201104 13:36:18.888"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.878" starttime="20201104 13:35:39.651"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.878" starttime="20201104 13:35:39.651"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.879" starttime="20201104 13:35:32.270"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:22.885" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:22.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:22.888" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:36:22.888" starttime="20201104 13:36:22.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:22.889" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:36:22.889" starttime="20201104 13:36:22.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:22.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:22.890" starttime="20201104 13:36:22.889"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.890" starttime="20201104 13:36:22.882"></status>
</kw>
<msg timestamp="20201104 13:36:22.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:22.890" starttime="20201104 13:36:22.882"></status>
</kw>
<msg timestamp="20201104 13:36:22.890" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:36:22.890" starttime="20201104 13:36:22.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:36:22.892" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:36:22.892" starttime="20201104 13:36:22.891"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:22.897" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:22.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:22.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:36:22.907" starttime="20201104 13:36:22.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:22.908" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:36:22.908" starttime="20201104 13:36:22.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:22.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:22.909" starttime="20201104 13:36:22.909"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.909" starttime="20201104 13:36:22.893"></status>
</kw>
<msg timestamp="20201104 13:36:22.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:22.910" starttime="20201104 13:36:22.893"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.910" starttime="20201104 13:36:22.892"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.910" starttime="20201104 13:36:22.892"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.910" starttime="20201104 13:36:22.881"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:22.910" starttime="20201104 13:36:22.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:22.916" level="INFO">Running command 'ozone sh bucket link 52721-source/no-such-bucket 52721-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:26.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:26.587" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:26.587" starttime="20201104 13:36:22.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:26.589" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:26.589" starttime="20201104 13:36:26.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:26.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:26.590" starttime="20201104 13:36:26.589"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:26.590" starttime="20201104 13:36:22.912"></status>
</kw>
<msg timestamp="20201104 13:36:26.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:26.590" starttime="20201104 13:36:22.912"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:26.591" starttime="20201104 13:36:22.910"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:26.594" level="INFO">Running command 'ozone sh key list 52721-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:30.311" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:36:30.311" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:30.311" starttime="20201104 13:36:26.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:30.313" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201104 13:36:30.313" starttime="20201104 13:36:30.312"></status>
</kw>
<msg timestamp="20201104 13:36:30.313" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:30.313" starttime="20201104 13:36:26.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201104 13:36:30.314" starttime="20201104 13:36:30.313"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:36:30.314" critical="yes" starttime="20201104 13:36:22.879"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:30.321" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:30.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:30.323" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:36:30.323" starttime="20201104 13:36:30.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:30.324" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:36:30.324" starttime="20201104 13:36:30.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:30.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:30.325" starttime="20201104 13:36:30.324"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:30.325" starttime="20201104 13:36:30.318"></status>
</kw>
<msg timestamp="20201104 13:36:30.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:30.326" starttime="20201104 13:36:30.318"></status>
</kw>
<msg timestamp="20201104 13:36:30.326" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:36:30.326" starttime="20201104 13:36:30.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:36:30.326" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:36:30.327" starttime="20201104 13:36:30.326"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:30.332" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:30.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:30.346" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:36:30.347" starttime="20201104 13:36:30.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:30.348" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:36:30.348" starttime="20201104 13:36:30.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:30.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:30.349" starttime="20201104 13:36:30.348"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:30.349" starttime="20201104 13:36:30.328"></status>
</kw>
<msg timestamp="20201104 13:36:30.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:30.349" starttime="20201104 13:36:30.328"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:30.351" starttime="20201104 13:36:30.327"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:30.351" starttime="20201104 13:36:30.327"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:30.351" starttime="20201104 13:36:30.317"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:30.351" starttime="20201104 13:36:30.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:30.355" level="INFO">Running command 'ozone sh bucket link 52721-source/bucket1 52721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:33.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:33.796" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:33.796" starttime="20201104 13:36:30.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:33.797" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:33.798" starttime="20201104 13:36:33.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:33.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:33.798" starttime="20201104 13:36:33.798"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:33.798" starttime="20201104 13:36:30.352"></status>
</kw>
<msg timestamp="20201104 13:36:33.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:33.799" starttime="20201104 13:36:30.352"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:33.799" starttime="20201104 13:36:30.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:33.804" level="INFO">Running command 'ozone sh bucket create 52721-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:37.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:37.549" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:37.549" starttime="20201104 13:36:33.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:37.550" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:37.550" starttime="20201104 13:36:37.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:37.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:37.551" starttime="20201104 13:36:37.551"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:37.551" starttime="20201104 13:36:33.800"></status>
</kw>
<msg timestamp="20201104 13:36:37.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:37.552" starttime="20201104 13:36:33.800"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:37.552" starttime="20201104 13:36:33.799"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:37.556" level="INFO">Running command 'ozone sh key put 52721-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:44.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:44.004" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:44.004" starttime="20201104 13:36:37.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:44.005" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:44.005" starttime="20201104 13:36:44.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:44.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:44.006" starttime="20201104 13:36:44.006"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:44.006" starttime="20201104 13:36:37.553"></status>
</kw>
<msg timestamp="20201104 13:36:44.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:44.007" starttime="20201104 13:36:37.553"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:44.007" starttime="20201104 13:36:37.552"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:36:44.009" level="INFO">${postfix} = 57263</msg>
<status status="PASS" endtime="20201104 13:36:44.009" starttime="20201104 13:36:44.008"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201104 13:36:44.009" level="INFO">${tmpfile} = /tmp/tempkey-57263</msg>
<status status="PASS" endtime="20201104 13:36:44.009" starttime="20201104 13:36:44.009"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:44.013" level="INFO">Running command 'ozone sh key get -f 52721-target/link1/key1 /tmp/tempkey-57263 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:50.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:50.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:50.231" starttime="20201104 13:36:44.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.232" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:50.232" starttime="20201104 13:36:50.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:50.233" starttime="20201104 13:36:50.233"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.234" starttime="20201104 13:36:44.010"></status>
</kw>
<msg timestamp="20201104 13:36:50.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:50.234" starttime="20201104 13:36:44.010"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.234" starttime="20201104 13:36:44.009"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201104 13:36:50.237" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-57263 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:50.240" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201104 13:36:50.240" starttime="20201104 13:36:50.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:50.245" level="INFO">Running command 'rm -f /tmp/tempkey-57263 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:50.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:50.247" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:36:50.247" starttime="20201104 13:36:50.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.248" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:36:50.249" starttime="20201104 13:36:50.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:50.249" starttime="20201104 13:36:50.249"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.250" starttime="20201104 13:36:50.241"></status>
</kw>
<msg timestamp="20201104 13:36:50.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:50.250" starttime="20201104 13:36:50.241"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.250" starttime="20201104 13:36:50.240"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:36:50.250" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201104 13:36:50.250" starttime="20201104 13:36:50.250"></status>
</kw>
<msg timestamp="20201104 13:36:50.251" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201104 13:36:50.251" starttime="20201104 13:36:44.008"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:36:50.251" starttime="20201104 13:36:50.251"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.251" starttime="20201104 13:36:44.007"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:36:50.252" critical="yes" starttime="20201104 13:36:30.315"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:50.259" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:50.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:50.260" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:36:50.260" starttime="20201104 13:36:50.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.261" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:36:50.261" starttime="20201104 13:36:50.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:50.262" starttime="20201104 13:36:50.261"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.262" starttime="20201104 13:36:50.255"></status>
</kw>
<msg timestamp="20201104 13:36:50.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:50.262" starttime="20201104 13:36:50.255"></status>
</kw>
<msg timestamp="20201104 13:36:50.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:36:50.263" starttime="20201104 13:36:50.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:36:50.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:36:50.263" starttime="20201104 13:36:50.263"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:50.268" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:50.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:50.277" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:36:50.277" starttime="20201104 13:36:50.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.278" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:36:50.279" starttime="20201104 13:36:50.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:50.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:50.279" starttime="20201104 13:36:50.279"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.280" starttime="20201104 13:36:50.265"></status>
</kw>
<msg timestamp="20201104 13:36:50.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:50.280" starttime="20201104 13:36:50.264"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.280" starttime="20201104 13:36:50.264"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.280" starttime="20201104 13:36:50.263"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.280" starttime="20201104 13:36:50.254"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:50.281" starttime="20201104 13:36:50.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:50.285" level="INFO">Running command 'ozone sh key put 52721-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:36:56.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:36:56.176" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:36:56.176" starttime="20201104 13:36:50.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:36:56.178" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:36:56.178" starttime="20201104 13:36:56.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:36:56.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:36:56.178" starttime="20201104 13:36:56.178"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:56.179" starttime="20201104 13:36:50.282"></status>
</kw>
<msg timestamp="20201104 13:36:56.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:36:56.179" starttime="20201104 13:36:50.282"></status>
</kw>
<status status="PASS" endtime="20201104 13:36:56.179" starttime="20201104 13:36:50.281"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:36:56.181" level="INFO">${postfix} = 56654</msg>
<status status="PASS" endtime="20201104 13:36:56.181" starttime="20201104 13:36:56.181"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201104 13:36:56.182" level="INFO">${tmpfile} = /tmp/tempkey-56654</msg>
<status status="PASS" endtime="20201104 13:36:56.182" starttime="20201104 13:36:56.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:36:56.186" level="INFO">Running command 'ozone sh key get -f 52721-source/bucket1/key2 /tmp/tempkey-56654 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:01.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:01.841" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:01.842" starttime="20201104 13:36:56.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.843" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:37:01.843" starttime="20201104 13:37:01.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:01.844" starttime="20201104 13:37:01.843"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.844" starttime="20201104 13:36:56.183"></status>
</kw>
<msg timestamp="20201104 13:37:01.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:01.844" starttime="20201104 13:36:56.183"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.844" starttime="20201104 13:36:56.182"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201104 13:37:01.848" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-56654 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:01.850" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201104 13:37:01.850" starttime="20201104 13:37:01.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:01.854" level="INFO">Running command 'rm -f /tmp/tempkey-56654 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:01.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:01.856" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:01.856" starttime="20201104 13:37:01.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.857" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:01.858" starttime="20201104 13:37:01.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:01.858" starttime="20201104 13:37:01.858"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.858" starttime="20201104 13:37:01.851"></status>
</kw>
<msg timestamp="20201104 13:37:01.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:01.859" starttime="20201104 13:37:01.851"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.859" starttime="20201104 13:37:01.850"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:37:01.859" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201104 13:37:01.859" starttime="20201104 13:37:01.859"></status>
</kw>
<msg timestamp="20201104 13:37:01.860" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201104 13:37:01.860" starttime="20201104 13:36:56.180"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:01.860" starttime="20201104 13:37:01.860"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.860" starttime="20201104 13:36:56.179"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:37:01.861" critical="yes" starttime="20201104 13:36:50.253"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:01.868" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:01.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:01.870" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:37:01.870" starttime="20201104 13:37:01.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.871" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:37:01.871" starttime="20201104 13:37:01.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:01.871" starttime="20201104 13:37:01.871"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.872" starttime="20201104 13:37:01.864"></status>
</kw>
<msg timestamp="20201104 13:37:01.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:01.872" starttime="20201104 13:37:01.864"></status>
</kw>
<msg timestamp="20201104 13:37:01.872" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:37:01.872" starttime="20201104 13:37:01.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:37:01.873" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:37:01.873" starttime="20201104 13:37:01.872"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:01.877" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:01.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:01.888" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:01.888" starttime="20201104 13:37:01.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.889" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:01.889" starttime="20201104 13:37:01.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:01.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:01.890" starttime="20201104 13:37:01.889"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.890" starttime="20201104 13:37:01.874"></status>
</kw>
<msg timestamp="20201104 13:37:01.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:01.890" starttime="20201104 13:37:01.874"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.891" starttime="20201104 13:37:01.873"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.891" starttime="20201104 13:37:01.873"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.891" starttime="20201104 13:37:01.863"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:01.891" starttime="20201104 13:37:01.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:01.896" level="INFO">Running command 'ozone sh key list 52721-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:05.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:05.787" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:37:05.787" starttime="20201104 13:37:01.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:05.788" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201104 13:37:05.788" starttime="20201104 13:37:05.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:05.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:05.789" starttime="20201104 13:37:05.788"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:05.789" starttime="20201104 13:37:01.892"></status>
</kw>
<msg timestamp="20201104 13:37:05.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:05.789" starttime="20201104 13:37:01.892"></status>
</kw>
<msg timestamp="20201104 13:37:05.790" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:37:05.790" starttime="20201104 13:37:01.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:05.794" level="INFO">Running command 'ozone sh key list 52721-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:09.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:09.662" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:37:09.662" starttime="20201104 13:37:05.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:09.664" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201104 13:37:09.664" starttime="20201104 13:37:09.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:09.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:09.664" starttime="20201104 13:37:09.664"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:09.665" starttime="20201104 13:37:05.791"></status>
</kw>
<msg timestamp="20201104 13:37:09.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:09.665" starttime="20201104 13:37:05.791"></status>
</kw>
<msg timestamp="20201104 13:37:09.665" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201104 13:37:09.665" starttime="20201104 13:37:05.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:09.666" starttime="20201104 13:37:09.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:09.666" starttime="20201104 13:37:09.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:09.667" starttime="20201104 13:37:09.667"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:37:09.667" critical="yes" starttime="20201104 13:37:01.862"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:09.673" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:09.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:09.676" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:37:09.676" starttime="20201104 13:37:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:09.677" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:37:09.677" starttime="20201104 13:37:09.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:09.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:09.678" starttime="20201104 13:37:09.677"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:09.678" starttime="20201104 13:37:09.670"></status>
</kw>
<msg timestamp="20201104 13:37:09.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:09.678" starttime="20201104 13:37:09.670"></status>
</kw>
<msg timestamp="20201104 13:37:09.678" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:37:09.678" starttime="20201104 13:37:09.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:37:09.679" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:37:09.679" starttime="20201104 13:37:09.679"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:09.684" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:09.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:09.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:09.699" starttime="20201104 13:37:09.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:09.700" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:09.700" starttime="20201104 13:37:09.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:09.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:09.701" starttime="20201104 13:37:09.700"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:09.701" starttime="20201104 13:37:09.681"></status>
</kw>
<msg timestamp="20201104 13:37:09.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:09.701" starttime="20201104 13:37:09.680"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:09.702" starttime="20201104 13:37:09.680"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:09.702" starttime="20201104 13:37:09.679"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:09.702" starttime="20201104 13:37:09.669"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:09.702" starttime="20201104 13:37:09.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:09.707" level="INFO">Running command 'ozone sh key delete 52721-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:13.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:13.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:13.476" starttime="20201104 13:37:09.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:13.477" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:37:13.477" starttime="20201104 13:37:13.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:13.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:13.477" starttime="20201104 13:37:13.477"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:13.478" starttime="20201104 13:37:09.703"></status>
</kw>
<msg timestamp="20201104 13:37:13.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:13.478" starttime="20201104 13:37:09.703"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:13.478" starttime="20201104 13:37:09.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:13.483" level="INFO">Running command 'ozone sh key list 52721-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:17.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:17.603" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201104 13:37:17.603" starttime="20201104 13:37:13.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:17.604" level="INFO">key1</msg>
<status status="PASS" endtime="20201104 13:37:17.604" starttime="20201104 13:37:17.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:17.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:17.605" starttime="20201104 13:37:17.604"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:17.605" starttime="20201104 13:37:13.479"></status>
</kw>
<msg timestamp="20201104 13:37:17.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:17.605" starttime="20201104 13:37:13.479"></status>
</kw>
<msg timestamp="20201104 13:37:17.606" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201104 13:37:17.606" starttime="20201104 13:37:13.478"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:17.606" starttime="20201104 13:37:17.606"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:37:17.606" critical="yes" starttime="20201104 13:37:09.668"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:17.614" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:17.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:17.616" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:37:17.616" starttime="20201104 13:37:17.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:17.617" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:37:17.617" starttime="20201104 13:37:17.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:17.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:17.618" starttime="20201104 13:37:17.618"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:17.618" starttime="20201104 13:37:17.611"></status>
</kw>
<msg timestamp="20201104 13:37:17.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:17.619" starttime="20201104 13:37:17.611"></status>
</kw>
<msg timestamp="20201104 13:37:17.619" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:37:17.619" starttime="20201104 13:37:17.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:37:17.620" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:37:17.620" starttime="20201104 13:37:17.619"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:17.625" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:17.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:17.639" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:17.639" starttime="20201104 13:37:17.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:17.640" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:17.640" starttime="20201104 13:37:17.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:17.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:17.641" starttime="20201104 13:37:17.640"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:17.642" starttime="20201104 13:37:17.621"></status>
</kw>
<msg timestamp="20201104 13:37:17.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:17.642" starttime="20201104 13:37:17.621"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:17.642" starttime="20201104 13:37:17.620"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:17.642" starttime="20201104 13:37:17.620"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:17.642" starttime="20201104 13:37:17.609"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:17.642" starttime="20201104 13:37:17.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:17.647" level="INFO">Running command 'ozone sh bucket list 52721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:21.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:21.430" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:21.430" starttime="20201104 13:37:17.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:21.431" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:26.380Z",
  "modificationTime" : "2020-11-04T13:36:26.380Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:04.134Z",
  "modificationTime" : "2020-11-04T13:36:22.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:33.671Z",
  "modificationTime" : "2020-11-04T13:36:33.671Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:35:56.957Z",
  "modificationTime" : "2020-11-04T13:36:18.713Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:00.532Z",
  "modificationTime" : "2020-11-04T13:36:00.532Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 13:37:21.431" starttime="20201104 13:37:21.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:21.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:21.432" starttime="20201104 13:37:21.431"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:21.432" starttime="20201104 13:37:17.644"></status>
</kw>
<msg timestamp="20201104 13:37:21.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:21.432" starttime="20201104 13:37:17.643"></status>
</kw>
<msg timestamp="20201104 13:37:21.433" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:21.433" starttime="20201104 13:37:17.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:21.439" starttime="20201104 13:37:21.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:21.439" starttime="20201104 13:37:21.439"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:37:21.440" critical="yes" starttime="20201104 13:37:17.607"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:21.447" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:21.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:21.449" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:37:21.449" starttime="20201104 13:37:21.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:21.450" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:37:21.450" starttime="20201104 13:37:21.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:21.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:21.451" starttime="20201104 13:37:21.450"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:21.451" starttime="20201104 13:37:21.443"></status>
</kw>
<msg timestamp="20201104 13:37:21.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:21.451" starttime="20201104 13:37:21.443"></status>
</kw>
<msg timestamp="20201104 13:37:21.452" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:37:21.452" starttime="20201104 13:37:21.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:37:21.452" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:37:21.452" starttime="20201104 13:37:21.452"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:21.457" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:21.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:21.467" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:21.467" starttime="20201104 13:37:21.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:21.468" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:21.468" starttime="20201104 13:37:21.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:21.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:21.469" starttime="20201104 13:37:21.468"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:21.469" starttime="20201104 13:37:21.454"></status>
</kw>
<msg timestamp="20201104 13:37:21.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:21.469" starttime="20201104 13:37:21.454"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:21.470" starttime="20201104 13:37:21.453"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:21.470" starttime="20201104 13:37:21.453"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:21.470" starttime="20201104 13:37:21.442"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:21.470" starttime="20201104 13:37:21.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:21.475" level="INFO">Running command 'ozone sh bucket info 52721-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:25.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:25.324" level="INFO">${output} = 52721-source bucket1</msg>
<status status="PASS" endtime="20201104 13:37:25.324" starttime="20201104 13:37:21.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:25.325" level="INFO">52721-source bucket1</msg>
<status status="PASS" endtime="20201104 13:37:25.325" starttime="20201104 13:37:25.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:25.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:25.326" starttime="20201104 13:37:25.325"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:25.326" starttime="20201104 13:37:21.471"></status>
</kw>
<msg timestamp="20201104 13:37:25.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:25.326" starttime="20201104 13:37:21.471"></status>
</kw>
<msg timestamp="20201104 13:37:25.326" level="INFO">${result} = 52721-source bucket1</msg>
<status status="PASS" endtime="20201104 13:37:25.327" starttime="20201104 13:37:21.470"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:25.327" starttime="20201104 13:37:25.327"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:37:25.327" critical="yes" starttime="20201104 13:37:21.441"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:25.333" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:25.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:25.336" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:37:25.336" starttime="20201104 13:37:25.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:25.337" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:37:25.337" starttime="20201104 13:37:25.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:25.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:25.338" starttime="20201104 13:37:25.337"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:25.338" starttime="20201104 13:37:25.331"></status>
</kw>
<msg timestamp="20201104 13:37:25.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:25.338" starttime="20201104 13:37:25.330"></status>
</kw>
<msg timestamp="20201104 13:37:25.339" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:37:25.339" starttime="20201104 13:37:25.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:37:25.339" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:37:25.339" starttime="20201104 13:37:25.339"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:25.345" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:25.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:25.356" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:25.356" starttime="20201104 13:37:25.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:25.358" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:25.358" starttime="20201104 13:37:25.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:25.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:25.359" starttime="20201104 13:37:25.358"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:25.359" starttime="20201104 13:37:25.341"></status>
</kw>
<msg timestamp="20201104 13:37:25.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:25.359" starttime="20201104 13:37:25.341"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:25.359" starttime="20201104 13:37:25.340"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:25.359" starttime="20201104 13:37:25.340"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:25.359" starttime="20201104 13:37:25.329"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:25.359" starttime="20201104 13:37:25.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:25.364" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 52721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:28.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:28.913" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:28.913" starttime="20201104 13:37:25.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:28.914" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:37:28.915" starttime="20201104 13:37:28.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:28.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:28.915" starttime="20201104 13:37:28.915"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:28.916" starttime="20201104 13:37:25.360"></status>
</kw>
<msg timestamp="20201104 13:37:28.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:28.916" starttime="20201104 13:37:25.360"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:28.916" starttime="20201104 13:37:25.360"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:28.921" level="INFO">Running command 'ozone sh bucket getacl 52721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:32.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:32.766" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201104 13:37:32.766" starttime="20201104 13:37:28.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:32.767" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201104 13:37:32.767" starttime="20201104 13:37:32.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:32.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:32.768" starttime="20201104 13:37:32.767"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:32.768" starttime="20201104 13:37:28.918"></status>
</kw>
<msg timestamp="20201104 13:37:32.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:32.768" starttime="20201104 13:37:28.918"></status>
</kw>
<msg timestamp="20201104 13:37:32.768" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201104 13:37:32.769" starttime="20201104 13:37:28.917"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:32.769" starttime="20201104 13:37:32.769"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:32.769" starttime="20201104 13:37:28.916"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:32.774" level="INFO">Running command 'ozone sh bucket getacl 52721-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:36.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:36.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:36.821" starttime="20201104 13:37:32.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:36.822" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:36.822" starttime="20201104 13:37:36.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:36.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:36.823" starttime="20201104 13:37:36.822"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:36.823" starttime="20201104 13:37:32.771"></status>
</kw>
<msg timestamp="20201104 13:37:36.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:36.823" starttime="20201104 13:37:32.771"></status>
</kw>
<msg timestamp="20201104 13:37:36.824" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201104 13:37:36.824" starttime="20201104 13:37:32.770"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:36.824" starttime="20201104 13:37:36.824"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:36.824" starttime="20201104 13:37:32.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:36.832" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 52721-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:40.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:40.700" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:40.700" starttime="20201104 13:37:36.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:40.701" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201104 13:37:40.701" starttime="20201104 13:37:40.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:40.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:40.702" starttime="20201104 13:37:40.701"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:40.702" starttime="20201104 13:37:36.827"></status>
</kw>
<msg timestamp="20201104 13:37:40.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:40.703" starttime="20201104 13:37:36.826"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:40.703" starttime="20201104 13:37:36.825"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:40.708" level="INFO">Running command 'ozone sh bucket getacl 52721-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:44.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:44.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:44.754" starttime="20201104 13:37:40.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:44.755" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:44.755" starttime="20201104 13:37:44.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:44.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:44.755" starttime="20201104 13:37:44.755"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:44.756" starttime="20201104 13:37:40.705"></status>
</kw>
<msg timestamp="20201104 13:37:44.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:44.756" starttime="20201104 13:37:40.704"></status>
</kw>
<msg timestamp="20201104 13:37:44.756" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201104 13:37:44.756" starttime="20201104 13:37:40.704"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:44.757" starttime="20201104 13:37:44.757"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:44.757" starttime="20201104 13:37:40.703"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:44.762" level="INFO">Running command 'ozone sh bucket getacl 52721-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:48.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:48.381" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201104 13:37:48.381" starttime="20201104 13:37:44.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:48.382" level="INFO">READ</msg>
<status status="PASS" endtime="20201104 13:37:48.382" starttime="20201104 13:37:48.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:48.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:48.383" starttime="20201104 13:37:48.382"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.383" starttime="20201104 13:37:44.759"></status>
</kw>
<msg timestamp="20201104 13:37:48.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:48.383" starttime="20201104 13:37:44.759"></status>
</kw>
<msg timestamp="20201104 13:37:48.384" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201104 13:37:48.384" starttime="20201104 13:37:44.758"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:48.384" starttime="20201104 13:37:48.384"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.384" starttime="20201104 13:37:44.757"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:37:48.385" critical="yes" starttime="20201104 13:37:25.328"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:48.392" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:48.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:48.394" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:37:48.394" starttime="20201104 13:37:48.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:48.395" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:37:48.395" starttime="20201104 13:37:48.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:48.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:48.395" starttime="20201104 13:37:48.395"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.396" starttime="20201104 13:37:48.388"></status>
</kw>
<msg timestamp="20201104 13:37:48.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:48.396" starttime="20201104 13:37:48.388"></status>
</kw>
<msg timestamp="20201104 13:37:48.396" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:37:48.396" starttime="20201104 13:37:48.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:37:48.397" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:37:48.397" starttime="20201104 13:37:48.396"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:48.401" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:48.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:48.411" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:37:48.411" starttime="20201104 13:37:48.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:48.412" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:37:48.412" starttime="20201104 13:37:48.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:48.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:48.413" starttime="20201104 13:37:48.412"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.413" starttime="20201104 13:37:48.398"></status>
</kw>
<msg timestamp="20201104 13:37:48.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:48.413" starttime="20201104 13:37:48.398"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.414" starttime="20201104 13:37:48.397"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.414" starttime="20201104 13:37:48.397"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.414" starttime="20201104 13:37:48.387"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:48.414" starttime="20201104 13:37:48.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:48.419" level="INFO">Running command 'ozone sh bucket link 52721-source/bucket2 52721-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:52.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:37:52.370" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:52.370" starttime="20201104 13:37:48.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:52.371" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:37:52.371" starttime="20201104 13:37:52.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:37:52.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:37:52.372" starttime="20201104 13:37:52.371"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:52.372" starttime="20201104 13:37:48.415"></status>
</kw>
<msg timestamp="20201104 13:37:52.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:37:52.372" starttime="20201104 13:37:48.415"></status>
</kw>
<status status="PASS" endtime="20201104 13:37:52.373" starttime="20201104 13:37:48.414"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:52.376" level="INFO">Running command 'ozone sh bucket create 52721-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:37:55.971" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:37:55.971" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:55.971" starttime="20201104 13:37:52.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:37:55.972" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:37:55.972" starttime="20201104 13:37:55.971"></status>
</kw>
<msg timestamp="20201104 13:37:55.973" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:37:55.973" starttime="20201104 13:37:52.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201104 13:37:55.974" starttime="20201104 13:37:55.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:37:55.978" level="INFO">Running command 'ozone sh bucket create 52721-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:00.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:00.536" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:00.536" starttime="20201104 13:37:55.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:00.537" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:00.538" starttime="20201104 13:38:00.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:00.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:00.538" starttime="20201104 13:38:00.538"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:00.539" starttime="20201104 13:37:55.975"></status>
</kw>
<msg timestamp="20201104 13:38:00.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:00.539" starttime="20201104 13:37:55.974"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:00.539" starttime="20201104 13:37:55.974"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:00.542" level="INFO">Running command 'ozone sh bucket link 52721-source/bucket1 52721-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:04.058" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:38:04.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:04.058" starttime="20201104 13:38:00.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201104 13:38:04.059" starttime="20201104 13:38:04.059"></status>
</kw>
<msg timestamp="20201104 13:38:04.060" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:04.060" starttime="20201104 13:38:00.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:04.060" starttime="20201104 13:38:04.060"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:38:04.061" critical="yes" starttime="20201104 13:37:48.385"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:04.068" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:04.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:04.069" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:04.069" starttime="20201104 13:38:04.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.070" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:04.070" starttime="20201104 13:38:04.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:04.071" starttime="20201104 13:38:04.070"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.071" starttime="20201104 13:38:04.064"></status>
</kw>
<msg timestamp="20201104 13:38:04.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:04.071" starttime="20201104 13:38:04.063"></status>
</kw>
<msg timestamp="20201104 13:38:04.072" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:04.072" starttime="20201104 13:38:04.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:04.072" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:04.072" starttime="20201104 13:38:04.072"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:04.077" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:04.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:04.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:04.092" starttime="20201104 13:38:04.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.093" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:04.093" starttime="20201104 13:38:04.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:04.094" starttime="20201104 13:38:04.093"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.094" starttime="20201104 13:38:04.074"></status>
</kw>
<msg timestamp="20201104 13:38:04.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:04.094" starttime="20201104 13:38:04.074"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.094" starttime="20201104 13:38:04.073"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.095" starttime="20201104 13:38:04.072"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.095" starttime="20201104 13:38:04.063"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.095" starttime="20201104 13:38:04.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:04.101" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:04.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:04.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:04.103" starttime="20201104 13:38:04.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.104" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:04.105" starttime="20201104 13:38:04.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:04.105" starttime="20201104 13:38:04.105"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.106" starttime="20201104 13:38:04.097"></status>
</kw>
<msg timestamp="20201104 13:38:04.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:04.106" starttime="20201104 13:38:04.097"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.106" starttime="20201104 13:38:04.096"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:04.111" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:04.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:04.113" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:04.113" starttime="20201104 13:38:04.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.114" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:04.114" starttime="20201104 13:38:04.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:04.114" starttime="20201104 13:38:04.114"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.115" starttime="20201104 13:38:04.108"></status>
</kw>
<msg timestamp="20201104 13:38:04.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:04.115" starttime="20201104 13:38:04.107"></status>
</kw>
<msg timestamp="20201104 13:38:04.115" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:04.115" starttime="20201104 13:38:04.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:04.116" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:04.116" starttime="20201104 13:38:04.115"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:04.120" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:04.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:04.136" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:04.136" starttime="20201104 13:38:04.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.137" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:04.137" starttime="20201104 13:38:04.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:04.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:04.138" starttime="20201104 13:38:04.137"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.139" starttime="20201104 13:38:04.117"></status>
</kw>
<msg timestamp="20201104 13:38:04.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:04.139" starttime="20201104 13:38:04.117"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.139" starttime="20201104 13:38:04.116"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.139" starttime="20201104 13:38:04.116"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.139" starttime="20201104 13:38:04.106"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:04.139" starttime="20201104 13:38:04.106"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:04.143" level="INFO">Running command 'ozone sh key list 52721-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:08.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:08.344" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:08.344" starttime="20201104 13:38:04.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "52721-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-04T13:35:47.383Z",
  "modificationTime" : "2020-11-04T13:35:49.476Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201104 13:38:08.345" starttime="20201104 13:38:08.345"></status>
</kw>
<msg timestamp="20201104 13:38:08.346" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:08.346" starttime="20201104 13:38:04.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:08.346" starttime="20201104 13:38:08.346"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.346" starttime="20201104 13:38:04.095"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.347" starttime="20201104 13:38:04.095"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:38:08.347" critical="yes" starttime="20201104 13:38:04.061"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:08.353" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:08.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:08.356" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:08.356" starttime="20201104 13:38:08.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.357" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:08.357" starttime="20201104 13:38:08.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:08.358" starttime="20201104 13:38:08.357"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.358" starttime="20201104 13:38:08.350"></status>
</kw>
<msg timestamp="20201104 13:38:08.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:08.358" starttime="20201104 13:38:08.350"></status>
</kw>
<msg timestamp="20201104 13:38:08.358" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:08.358" starttime="20201104 13:38:08.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:08.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:08.359" starttime="20201104 13:38:08.359"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:08.363" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:08.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:08.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:08.377" starttime="20201104 13:38:08.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.378" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:08.378" starttime="20201104 13:38:08.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:08.378" starttime="20201104 13:38:08.378"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.379" starttime="20201104 13:38:08.361"></status>
</kw>
<msg timestamp="20201104 13:38:08.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:08.379" starttime="20201104 13:38:08.360"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.379" starttime="20201104 13:38:08.360"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.379" starttime="20201104 13:38:08.359"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.379" starttime="20201104 13:38:08.349"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.379" starttime="20201104 13:38:08.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:08.385" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:08.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:08.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:08.388" starttime="20201104 13:38:08.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.389" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:08.389" starttime="20201104 13:38:08.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:08.390" starttime="20201104 13:38:08.389"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.390" starttime="20201104 13:38:08.382"></status>
</kw>
<msg timestamp="20201104 13:38:08.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:08.390" starttime="20201104 13:38:08.381"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.391" starttime="20201104 13:38:08.381"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:08.396" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:08.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:08.397" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:08.397" starttime="20201104 13:38:08.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.398" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:08.398" starttime="20201104 13:38:08.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:08.399" starttime="20201104 13:38:08.398"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.399" starttime="20201104 13:38:08.392"></status>
</kw>
<msg timestamp="20201104 13:38:08.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:08.399" starttime="20201104 13:38:08.392"></status>
</kw>
<msg timestamp="20201104 13:38:08.400" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:08.400" starttime="20201104 13:38:08.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:08.400" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:08.400" starttime="20201104 13:38:08.400"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:08.405" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:08.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:08.414" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:08.414" starttime="20201104 13:38:08.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.415" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:08.416" starttime="20201104 13:38:08.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:08.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:08.416" starttime="20201104 13:38:08.416"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.417" starttime="20201104 13:38:08.402"></status>
</kw>
<msg timestamp="20201104 13:38:08.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:08.417" starttime="20201104 13:38:08.402"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.417" starttime="20201104 13:38:08.401"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.417" starttime="20201104 13:38:08.401"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.418" starttime="20201104 13:38:08.391"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:08.418" starttime="20201104 13:38:08.391"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:08.421" level="INFO">Running command 'ozone sh key list 52721-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:12.400" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:38:12.400" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:12.400" starttime="20201104 13:38:08.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.401" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201104 13:38:12.401" starttime="20201104 13:38:12.400"></status>
</kw>
<msg timestamp="20201104 13:38:12.402" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:12.402" starttime="20201104 13:38:08.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:12.402" starttime="20201104 13:38:12.402"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.402" starttime="20201104 13:38:08.380"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.403" starttime="20201104 13:38:08.380"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:38:12.403" critical="yes" starttime="20201104 13:38:08.348"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:12.408" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:12.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:12.411" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:12.411" starttime="20201104 13:38:12.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.412" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:12.412" starttime="20201104 13:38:12.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:12.413" starttime="20201104 13:38:12.412"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.413" starttime="20201104 13:38:12.406"></status>
</kw>
<msg timestamp="20201104 13:38:12.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:12.413" starttime="20201104 13:38:12.406"></status>
</kw>
<msg timestamp="20201104 13:38:12.414" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:12.414" starttime="20201104 13:38:12.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:12.414" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:12.414" starttime="20201104 13:38:12.414"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:12.418" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:12.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:12.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:12.428" starttime="20201104 13:38:12.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.429" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:12.429" starttime="20201104 13:38:12.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:12.430" starttime="20201104 13:38:12.430"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.430" starttime="20201104 13:38:12.416"></status>
</kw>
<msg timestamp="20201104 13:38:12.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:12.430" starttime="20201104 13:38:12.416"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.431" starttime="20201104 13:38:12.415"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.431" starttime="20201104 13:38:12.414"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.431" starttime="20201104 13:38:12.405"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.431" starttime="20201104 13:38:12.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:12.436" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:12.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:12.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:12.439" starttime="20201104 13:38:12.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.440" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:12.440" starttime="20201104 13:38:12.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:12.441" starttime="20201104 13:38:12.440"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.441" starttime="20201104 13:38:12.433"></status>
</kw>
<msg timestamp="20201104 13:38:12.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:12.441" starttime="20201104 13:38:12.432"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.441" starttime="20201104 13:38:12.432"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:12.445" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:12.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:12.448" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:12.448" starttime="20201104 13:38:12.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.449" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:12.449" starttime="20201104 13:38:12.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:12.449" starttime="20201104 13:38:12.449"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.450" starttime="20201104 13:38:12.443"></status>
</kw>
<msg timestamp="20201104 13:38:12.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:12.450" starttime="20201104 13:38:12.443"></status>
</kw>
<msg timestamp="20201104 13:38:12.450" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:12.450" starttime="20201104 13:38:12.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:12.451" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:12.451" starttime="20201104 13:38:12.450"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:12.456" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:12.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:12.471" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:12.471" starttime="20201104 13:38:12.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.472" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:12.472" starttime="20201104 13:38:12.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:12.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:12.473" starttime="20201104 13:38:12.472"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.473" starttime="20201104 13:38:12.452"></status>
</kw>
<msg timestamp="20201104 13:38:12.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:12.473" starttime="20201104 13:38:12.452"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.474" starttime="20201104 13:38:12.451"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.474" starttime="20201104 13:38:12.451"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.474" starttime="20201104 13:38:12.442"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:12.474" starttime="20201104 13:38:12.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:12.479" level="INFO">Running command 'ozone sh bucket info 52721-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:16.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:16.442" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:16.442" starttime="20201104 13:38:12.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:16.444" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:04.134Z",
  "modificationTime" : "2020-11-04T13:36:22.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 13:38:16.444" starttime="20201104 13:38:16.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:16.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:16.444" starttime="20201104 13:38:16.444"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:16.445" starttime="20201104 13:38:12.475"></status>
</kw>
<msg timestamp="20201104 13:38:16.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:16.445" starttime="20201104 13:38:12.475"></status>
</kw>
<msg timestamp="20201104 13:38:16.445" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:16.445" starttime="20201104 13:38:12.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:16.446" starttime="20201104 13:38:16.445"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:16.446" starttime="20201104 13:38:16.446"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:16.449" level="INFO">Running command 'ozone sh key list 52721-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:20.048" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:38:20.048" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:20.048" starttime="20201104 13:38:16.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:20.049" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201104 13:38:20.049" starttime="20201104 13:38:20.049"></status>
</kw>
<msg timestamp="20201104 13:38:20.050" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:20.050" starttime="20201104 13:38:16.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:20.050" starttime="20201104 13:38:20.050"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.050" starttime="20201104 13:38:12.432"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.051" starttime="20201104 13:38:12.431"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:38:20.051" critical="yes" starttime="20201104 13:38:12.403"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:20.057" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:20.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:20.060" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:20.060" starttime="20201104 13:38:20.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:20.061" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:20.061" starttime="20201104 13:38:20.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:20.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:20.062" starttime="20201104 13:38:20.061"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.062" starttime="20201104 13:38:20.054"></status>
</kw>
<msg timestamp="20201104 13:38:20.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:20.062" starttime="20201104 13:38:20.054"></status>
</kw>
<msg timestamp="20201104 13:38:20.063" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:20.063" starttime="20201104 13:38:20.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:20.063" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:20.063" starttime="20201104 13:38:20.063"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:20.068" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:20.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:20.078" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:20.078" starttime="20201104 13:38:20.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:20.079" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:20.079" starttime="20201104 13:38:20.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:20.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:20.079" starttime="20201104 13:38:20.079"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.080" starttime="20201104 13:38:20.065"></status>
</kw>
<msg timestamp="20201104 13:38:20.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:20.080" starttime="20201104 13:38:20.064"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.080" starttime="20201104 13:38:20.064"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.080" starttime="20201104 13:38:20.063"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.080" starttime="20201104 13:38:20.053"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:20.080" starttime="20201104 13:38:20.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:20.085" level="INFO">Running command 'ozone sh bucket link 52721-target/loop1 52721-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:23.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:23.755" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:23.755" starttime="20201104 13:38:20.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:23.756" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:23.756" starttime="20201104 13:38:23.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:23.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:23.757" starttime="20201104 13:38:23.756"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:23.757" starttime="20201104 13:38:20.081"></status>
</kw>
<msg timestamp="20201104 13:38:23.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:23.757" starttime="20201104 13:38:20.081"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:23.758" starttime="20201104 13:38:20.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:23.762" level="INFO">Running command 'ozone sh bucket link 52721-target/loop2 52721-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:27.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:27.244" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:27.244" starttime="20201104 13:38:23.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:27.246" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:27.246" starttime="20201104 13:38:27.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:27.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:27.247" starttime="20201104 13:38:27.246"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:27.247" starttime="20201104 13:38:23.759"></status>
</kw>
<msg timestamp="20201104 13:38:27.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:27.247" starttime="20201104 13:38:23.758"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:27.247" starttime="20201104 13:38:23.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:27.251" level="INFO">Running command 'ozone sh bucket link 52721-target/loop3 52721-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:30.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:30.987" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:30.987" starttime="20201104 13:38:27.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:30.988" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:30.988" starttime="20201104 13:38:30.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:30.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:30.989" starttime="20201104 13:38:30.989"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:30.990" starttime="20201104 13:38:27.248"></status>
</kw>
<msg timestamp="20201104 13:38:30.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:30.990" starttime="20201104 13:38:27.248"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:30.990" starttime="20201104 13:38:27.247"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:30.993" level="INFO">Running command 'ozone sh key list 52721-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:34.508" level="INFO">${rc} = 255</msg>
<msg timestamp="20201104 13:38:34.508" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:34.508" starttime="20201104 13:38:30.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:34.509" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201104 13:38:34.509" starttime="20201104 13:38:34.509"></status>
</kw>
<msg timestamp="20201104 13:38:34.510" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:34.510" starttime="20201104 13:38:30.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:34.510" starttime="20201104 13:38:34.510"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:38:34.511" critical="yes" starttime="20201104 13:38:20.052"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:34.518" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:34.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:34.523" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:34.523" starttime="20201104 13:38:34.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:34.524" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:34.524" starttime="20201104 13:38:34.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:34.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:34.525" starttime="20201104 13:38:34.525"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:34.525" starttime="20201104 13:38:34.514"></status>
</kw>
<msg timestamp="20201104 13:38:34.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:34.526" starttime="20201104 13:38:34.514"></status>
</kw>
<msg timestamp="20201104 13:38:34.526" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:34.526" starttime="20201104 13:38:34.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:34.527" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:34.527" starttime="20201104 13:38:34.526"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:34.531" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:34.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:34.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:34.560" starttime="20201104 13:38:34.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:34.561" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:34.561" starttime="20201104 13:38:34.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:34.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:34.562" starttime="20201104 13:38:34.561"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:34.562" starttime="20201104 13:38:34.528"></status>
</kw>
<msg timestamp="20201104 13:38:34.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:34.562" starttime="20201104 13:38:34.528"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:34.563" starttime="20201104 13:38:34.527"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:34.563" starttime="20201104 13:38:34.527"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:34.563" starttime="20201104 13:38:34.513"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:34.563" starttime="20201104 13:38:34.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:34.567" level="INFO">Running command 'ozone sh bucket link 52721-source/bucket1 52721-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:38.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:38.073" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:38.073" starttime="20201104 13:38:34.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:38.074" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:38.074" starttime="20201104 13:38:38.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:38.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:38.075" starttime="20201104 13:38:38.074"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:38.075" starttime="20201104 13:38:34.564"></status>
</kw>
<msg timestamp="20201104 13:38:38.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:38.075" starttime="20201104 13:38:34.564"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:38.075" starttime="20201104 13:38:34.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:38.081" level="INFO">Running command 'ozone sh key put 52721-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:44.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:44.017" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:44.017" starttime="20201104 13:38:38.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:44.019" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:44.019" starttime="20201104 13:38:44.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:44.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:44.020" starttime="20201104 13:38:44.019"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:44.020" starttime="20201104 13:38:38.077"></status>
</kw>
<msg timestamp="20201104 13:38:44.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:44.021" starttime="20201104 13:38:38.076"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:44.021" starttime="20201104 13:38:38.076"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201104 13:38:44.024" level="INFO">${postfix} = 96167</msg>
<status status="PASS" endtime="20201104 13:38:44.024" starttime="20201104 13:38:44.023"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201104 13:38:44.024" level="INFO">${tmpfile} = /tmp/tempkey-96167</msg>
<status status="PASS" endtime="20201104 13:38:44.024" starttime="20201104 13:38:44.024"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:44.028" level="INFO">Running command 'ozone sh key get -f 52721-target/link1/key3 /tmp/tempkey-96167 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:49.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:49.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:49.833" starttime="20201104 13:38:44.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.835" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:49.835" starttime="20201104 13:38:49.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:49.836" starttime="20201104 13:38:49.835"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.836" starttime="20201104 13:38:44.025"></status>
</kw>
<msg timestamp="20201104 13:38:49.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:49.836" starttime="20201104 13:38:44.025"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.837" starttime="20201104 13:38:44.024"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201104 13:38:49.841" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-96167 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:49.843" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201104 13:38:49.843" starttime="20201104 13:38:49.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:49.848" level="INFO">Running command 'rm -f /tmp/tempkey-96167 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:49.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:49.850" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:49.850" starttime="20201104 13:38:49.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.851" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:49.851" starttime="20201104 13:38:49.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:49.852" starttime="20201104 13:38:49.851"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.853" starttime="20201104 13:38:49.844"></status>
</kw>
<msg timestamp="20201104 13:38:49.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:49.853" starttime="20201104 13:38:49.844"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.853" starttime="20201104 13:38:49.843"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201104 13:38:49.854" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201104 13:38:49.854" starttime="20201104 13:38:49.853"></status>
</kw>
<msg timestamp="20201104 13:38:49.854" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201104 13:38:49.854" starttime="20201104 13:38:44.022"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:49.855" starttime="20201104 13:38:49.855"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.855" starttime="20201104 13:38:44.021"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:38:49.855" critical="yes" starttime="20201104 13:38:34.511"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:49.862" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:49.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:49.865" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201104 13:38:49.865" starttime="20201104 13:38:49.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.866" level="INFO">scm</msg>
<status status="PASS" endtime="20201104 13:38:49.866" starttime="20201104 13:38:49.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:49.867" starttime="20201104 13:38:49.866"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.868" starttime="20201104 13:38:49.859"></status>
</kw>
<msg timestamp="20201104 13:38:49.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:49.868" starttime="20201104 13:38:49.859"></status>
</kw>
<msg timestamp="20201104 13:38:49.868" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201104 13:38:49.868" starttime="20201104 13:38:49.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201104 13:38:49.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201104 13:38:49.869" starttime="20201104 13:38:49.868"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:49.873" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:49.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:49.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201104 13:38:49.890" starttime="20201104 13:38:49.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.891" level="INFO"></msg>
<status status="PASS" endtime="20201104 13:38:49.892" starttime="20201104 13:38:49.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:49.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:49.893" starttime="20201104 13:38:49.892"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.893" starttime="20201104 13:38:49.871"></status>
</kw>
<msg timestamp="20201104 13:38:49.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:49.893" starttime="20201104 13:38:49.870"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.894" starttime="20201104 13:38:49.870"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.894" starttime="20201104 13:38:49.869"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.894" starttime="20201104 13:38:49.858"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:49.894" starttime="20201104 13:38:49.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:49.898" level="INFO">Running command 'ozone sh bucket delete 52721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:53.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:53.689" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:53.689" starttime="20201104 13:38:49.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:53.690" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201104 13:38:53.690" starttime="20201104 13:38:53.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:53.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:53.691" starttime="20201104 13:38:53.690"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:53.691" starttime="20201104 13:38:49.895"></status>
</kw>
<msg timestamp="20201104 13:38:53.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:53.691" starttime="20201104 13:38:49.895"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:53.692" starttime="20201104 13:38:49.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:53.695" level="INFO">Running command 'ozone sh bucket list 52721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:38:57.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:38:57.866" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:57.866" starttime="20201104 13:38:53.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:38:57.867" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:38:00.440Z",
  "modificationTime" : "2020-11-04T13:38:00.440Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:26.380Z",
  "modificationTime" : "2020-11-04T13:36:26.380Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:04.134Z",
  "modificationTime" : "2020-11-04T13:36:22.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:37:52.196Z",
  "modificationTime" : "2020-11-04T13:37:52.196Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:38:37.981Z",
  "modificationTime" : "2020-11-04T13:38:37.981Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:38:30.821Z",
  "modificationTime" : "2020-11-04T13:38:30.821Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:38:23.627Z",
  "modificationTime" : "2020-11-04T13:38:23.627Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:38:27.052Z",
  "modificationTime" : "2020-11-04T13:38:27.052Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:35:56.957Z",
  "modificationTime" : "2020-11-04T13:36:18.713Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "52721-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-04T13:36:00.532Z",
  "modificationTime" : "2020-11-04T13:36:00.532Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52721-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201104 13:38:57.867" starttime="20201104 13:38:57.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:38:57.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:38:57.868" starttime="20201104 13:38:57.867"></status>
</kw>
<status status="PASS" endtime="20201104 13:38:57.868" starttime="20201104 13:38:53.693"></status>
</kw>
<msg timestamp="20201104 13:38:57.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:38:57.868" starttime="20201104 13:38:53.692"></status>
</kw>
<msg timestamp="20201104 13:38:57.869" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201104 13:38:57.869" starttime="20201104 13:38:53.692"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:38:57.869" starttime="20201104 13:38:57.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201104 13:38:57.875" level="INFO">Running command 'ozone sh key list 52721-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201104 13:39:02.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201104 13:39:02.218" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201104 13:39:02.218" starttime="20201104 13:38:57.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201104 13:39:02.219" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201104 13:39:02.219" starttime="20201104 13:39:02.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201104 13:39:02.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201104 13:39:02.220" starttime="20201104 13:39:02.219"></status>
</kw>
<status status="PASS" endtime="20201104 13:39:02.220" starttime="20201104 13:38:57.870"></status>
</kw>
<msg timestamp="20201104 13:39:02.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201104 13:39:02.220" starttime="20201104 13:38:57.870"></status>
</kw>
<msg timestamp="20201104 13:39:02.221" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201104 13:39:02.221" starttime="20201104 13:38:57.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201104 13:39:02.221" starttime="20201104 13:39:02.221"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201104 13:39:02.222" critical="yes" starttime="20201104 13:38:49.856"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201104 13:39:02.224" starttime="20201104 13:35:32.215"></status>
</suite>
<status status="PASS" elapsedtime="240374" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
