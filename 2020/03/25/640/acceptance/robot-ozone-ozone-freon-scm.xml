<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200325 10:50:53.830" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 10:50:53.879" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 10:51:01.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 10:51:01.294" level="INFO">${output} = 2020-03-25 10:50:54,781 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:50:54,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:01.295" starttime="20200325 10:50:53.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 10:51:01.296" level="INFO">2020-03-25 10:50:54,781 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:50:54,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 10:50:54,944 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 10:50:55,943 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-25 10:50:55,943 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-25 10:50:55,943 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-25 10:50:55,944 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-25 10:50:55,944 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-25 10:50:55,944 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-25 10:50:55,944 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-25 10:50:55,945 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-25 10:50:55,952 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 10:50:55,987 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-73541, with hadoop as owner.
2020-03-25 10:50:56,008 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-73541/bucket-0-87317, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 10:50:56,475 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 10:50:56,955 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,054
Average Time spent in bucket creation: 00:00:00,007
Average Time spent in key creation: 00:00:00,030
Average Time spent in key write: 00:00:00,601
Total bytes written: 10240
Total Execution time: 00:00:05,734
***************************************************</msg>
<status status="PASS" endtime="20200325 10:51:01.296" starttime="20200325 10:51:01.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 10:51:01.296" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 10:51:01.296" starttime="20200325 10:51:01.296"></status>
</kw>
<msg timestamp="20200325 10:51:01.297" level="INFO">${result} = 2020-03-25 10:50:54,781 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:50:54,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:01.297" starttime="20200325 10:50:53.877"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 10:51:01.298" starttime="20200325 10:51:01.297"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:01.298" starttime="20200325 10:51:01.297"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:01.298" critical="yes" starttime="20200325 10:50:53.876"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 10:51:01.301" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 10:51:06.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 10:51:06.110" level="INFO">${output} = 2020-03-25 10:51:02,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:02,416 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:06.110" starttime="20200325 10:51:01.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 10:51:06.111" level="INFO">2020-03-25 10:51:02,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:02,416 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 10:51:02,416 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 10:51:02,728 [main] INFO freon.BaseFreonGenerator: Executing test with prefix DaBS0SsOaa
2020-03-25 10:51:02,736 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 10:51:03,595 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-25 10:51:03,617 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 10:51:03,743 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 10:51:04,184 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 10:51:04,748 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 10:51:05,748 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 10:51:05,775 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1514.266879, max=1514.266879, mean=1514.266879, stddev=0.0, median=1514.266879, p75=1514.266879, p95=1514.266879, p98=1514.266879, p99=1514.266879, p999=1514.266879, mean_rate=0.46814777170740396, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 10:51:05,775 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-25 10:51:05,780 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 10:51:05,780 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 10:51:06.112" starttime="20200325 10:51:06.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 10:51:06.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 10:51:06.112" starttime="20200325 10:51:06.112"></status>
</kw>
<msg timestamp="20200325 10:51:06.113" level="INFO">${result} = 2020-03-25 10:51:02,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:02,416 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:06.113" starttime="20200325 10:51:01.299"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 10:51:06.113" starttime="20200325 10:51:06.113"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:06.114" starttime="20200325 10:51:06.113"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:06.114" critical="yes" starttime="20200325 10:51:01.299"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 10:51:06.117" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 10:51:09.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 10:51:09.534" level="INFO">${output} = 2020-03-25 10:51:07,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:07,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:09.534" starttime="20200325 10:51:06.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 10:51:09.535" level="INFO">2020-03-25 10:51:07,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:07,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 10:51:07,298 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 10:51:07,633 [main] INFO freon.BaseFreonGenerator: Executing test with prefix DpnaAwBZ06
2020-03-25 10:51:07,655 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 10:51:08,658 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 10:51:09,521 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=32.461853, max=32.461853, mean=32.461853, stddev=0.0, median=32.461853, p75=32.461853, p95=32.461853, p98=32.461853, p99=32.461853, p999=32.461853, mean_rate=0.9854189373018292, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 10:51:09,522 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 10:51:09,522 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 10:51:09,522 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 10:51:09.536" starttime="20200325 10:51:09.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 10:51:09.536" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 10:51:09.536" starttime="20200325 10:51:09.536"></status>
</kw>
<msg timestamp="20200325 10:51:09.537" level="INFO">${result} = 2020-03-25 10:51:07,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:07,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:09.537" starttime="20200325 10:51:06.115"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 10:51:09.538" starttime="20200325 10:51:09.537"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:09.538" starttime="20200325 10:51:09.537"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:09.538" critical="yes" starttime="20200325 10:51:06.114"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 10:51:09.541" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 10:51:12.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 10:51:12.980" level="INFO">${output} = 2020-03-25 10:51:10,515 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:10,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:12.980" starttime="20200325 10:51:09.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 10:51:12.981" level="INFO">2020-03-25 10:51:10,515 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:10,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 10:51:10,708 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 10:51:11,022 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1r0HbdmRC4
2020-03-25 10:51:11,051 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 10:51:12,060 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 10:51:12,967 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=9.595986, max=9.595986, mean=9.595986, stddev=0.0, median=9.595986, p75=9.595986, p95=9.595986, p98=9.595986, p99=9.595986, p999=9.595986, mean_rate=0.9829161158470281, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 10:51:12,968 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 10:51:12,968 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 10:51:12,968 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 10:51:12.981" starttime="20200325 10:51:12.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 10:51:12.981" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 10:51:12.982" starttime="20200325 10:51:12.981"></status>
</kw>
<msg timestamp="20200325 10:51:12.982" level="INFO">${result} = 2020-03-25 10:51:10,515 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 10:51:10,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 10:51:12.982" starttime="20200325 10:51:09.539"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 10:51:12.983" starttime="20200325 10:51:12.983"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:12.983" starttime="20200325 10:51:12.982"></status>
</kw>
<status status="PASS" endtime="20200325 10:51:12.983" critical="yes" starttime="20200325 10:51:09.538"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200325 10:51:12.984" starttime="20200325 10:50:53.855"></status>
</suite>
<status status="PASS" endtime="20200325 10:51:12.987" starttime="20200325 10:50:53.831"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
