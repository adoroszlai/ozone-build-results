<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200325 11:09:04.685" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/recon" id="s1" name="ozonesecure-recon">
<suite source="/opt/hadoop/smoketest/recon/recon-api.robot" id="s1-s1" name="Recon-Api">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:04.737" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:04.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:04.739" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200325 11:09:04.739" starttime="20200325 11:09:04.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:04.741" level="INFO">scm</msg>
<status status="PASS" endtime="20200325 11:09:04.741" starttime="20200325 11:09:04.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:04.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:04.741" starttime="20200325 11:09:04.741"></status>
</kw>
<msg timestamp="20200325 11:09:04.742" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200325 11:09:04.742" starttime="20200325 11:09:04.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200325 11:09:04.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200325 11:09:04.743" starttime="20200325 11:09:04.742"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:04.745" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:04.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:04.757" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200325 11:09:04.757" starttime="20200325 11:09:04.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:04.758" level="INFO"></msg>
<status status="PASS" endtime="20200325 11:09:04.758" starttime="20200325 11:09:04.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:04.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:04.758" starttime="20200325 11:09:04.758"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:04.759" starttime="20200325 11:09:04.744"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:04.759" starttime="20200325 11:09:04.743"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:04.759" starttime="20200325 11:09:04.734"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:04.759" starttime="20200325 11:09:04.734"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:04.760" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:12.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:12.799" level="INFO">${output} = 2020-03-25 11:09:05,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 11:09:05,861 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 11:09:12.799" starttime="20200325 11:09:04.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:12.800" level="INFO">2020-03-25 11:09:05,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 11:09:05,861 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 11:09:05,861 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-03-25 11:09:07,407 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-03-25 11:09:07,409 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-25 11:09:07,409 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-25 11:09:07,410 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-03-25 11:09:07,410 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-03-25 11:09:07,410 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-25 11:09:07,410 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-25 11:09:07,418 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-25 11:09:07,419 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-03-25 11:09:07,453 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-62623, with testuser/scm@EXAMPLE.COM as owner.
2020-03-25 11:09:07,478 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-62623/bucket-0-45583, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 11:09:08,432 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-03-25 11:09:08,770 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 11:09:09,432 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,667
Average Time spent in key write: 00:00:00,712
Total bytes written: 10250
Total Execution time: 00:00:06,298
***************************************************</msg>
<status status="PASS" endtime="20200325 11:09:12.801" starttime="20200325 11:09:12.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:12.801" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:12.801" starttime="20200325 11:09:12.801"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:12.802" starttime="20200325 11:09:04.759"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:12.802" critical="yes" starttime="20200325 11:09:04.733"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:12.807" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:12.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:12.810" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200325 11:09:12.810" starttime="20200325 11:09:12.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:12.811" level="INFO">scm</msg>
<status status="PASS" endtime="20200325 11:09:12.811" starttime="20200325 11:09:12.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:12.811" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:12.811" starttime="20200325 11:09:12.811"></status>
</kw>
<msg timestamp="20200325 11:09:12.812" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200325 11:09:12.812" starttime="20200325 11:09:12.805"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:12.815" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:12.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:12.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200325 11:09:12.830" starttime="20200325 11:09:12.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:12.831" level="INFO"></msg>
<status status="PASS" endtime="20200325 11:09:12.831" starttime="20200325 11:09:12.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:12.831" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:12.832" starttime="20200325 11:09:12.831"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:12.832" starttime="20200325 11:09:12.813"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:12.832" starttime="20200325 11:09:12.812"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:12.832" starttime="20200325 11:09:12.805"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:12.832" starttime="20200325 11:09:12.804"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:12.834" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:13.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:13.053" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:13.053" starttime="20200325 11:09:12.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:13.054" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:12 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]
100    77  100    77    0     0    363      0 --:--:-- --:--:-- --:--:--   363
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" endtime="20200325 11:09:13.054" starttime="20200325 11:09:13.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:13.055" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:13.055" starttime="20200325 11:09:13.054"></status>
</kw>
<msg timestamp="20200325 11:09:13.055" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:13.055" starttime="20200325 11:09:12.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:13.056" starttime="20200325 11:09:13.056"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:13.058" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:13.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:13.096" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:13.096" starttime="20200325 11:09:13.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:13.097" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:13 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:13 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:13 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]
100  1423  100  1423    0     0  56249      0 --:--:-- --:--:-- --:--:-- 54730100  1423  100  1423    0     0  56074      0 --:--:-- --:--:-- --:--:-- 54730
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":11},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]</msg>
<status status="PASS" endtime="20200325 11:09:13.097" starttime="20200325 11:09:13.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:13.098" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:13.098" starttime="20200325 11:09:13.097"></status>
</kw>
<msg timestamp="20200325 11:09:13.098" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:13.098" starttime="20200325 11:09:13.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200325 11:09:13.101" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:13 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:13 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:13 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]
100  1423  100  1423    0     0  56249      0 --:--:-- --:--:-- --:--:-- 54730100  1423  100  1423    0     0  56074      0 --:--:-- --:--:-- --:--:-- 54730
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":11},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" endtime="20200325 11:09:13.101" starttime="20200325 11:09:13.100"></status>
</kw>
<status status="FAIL" endtime="20200325 11:09:13.101" starttime="20200325 11:09:12.804"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.106" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.109" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200325 11:09:23.109" starttime="20200325 11:09:23.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.110" level="INFO">scm</msg>
<status status="PASS" endtime="20200325 11:09:23.110" starttime="20200325 11:09:23.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.111" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.111" starttime="20200325 11:09:23.110"></status>
</kw>
<msg timestamp="20200325 11:09:23.111" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200325 11:09:23.111" starttime="20200325 11:09:23.104"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.114" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.126" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200325 11:09:23.126" starttime="20200325 11:09:23.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.128" level="INFO"></msg>
<status status="PASS" endtime="20200325 11:09:23.128" starttime="20200325 11:09:23.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.128" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.128" starttime="20200325 11:09:23.128"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.129" starttime="20200325 11:09:23.112"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.129" starttime="20200325 11:09:23.111"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.129" starttime="20200325 11:09:23.103"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.129" starttime="20200325 11:09:23.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.131" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.153" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.153" starttime="20200325 11:09:23.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.154" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]
100   182  100   182    0     0  14918      0 --:--:-- --:--:-- --:--:-- 15166
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" endtime="20200325 11:09:23.154" starttime="20200325 11:09:23.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.155" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.155" starttime="20200325 11:09:23.154"></status>
</kw>
<msg timestamp="20200325 11:09:23.155" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.155" starttime="20200325 11:09:23.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.156" starttime="20200325 11:09:23.155"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.158" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.172" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.172" starttime="20200325 11:09:23.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.173" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1424
&lt; 
{ [data not shown]
100  1424  100  1424    0     0   224k      0 --:--:-- --:--:-- --:--:--  278k
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":10},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]</msg>
<status status="PASS" endtime="20200325 11:09:23.173" starttime="20200325 11:09:23.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.174" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.174" starttime="20200325 11:09:23.174"></status>
</kw>
<msg timestamp="20200325 11:09:23.174" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.174" starttime="20200325 11:09:23.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.175" starttime="20200325 11:09:23.175"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.175" starttime="20200325 11:09:23.102"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.175" starttime="20200325 11:09:12.803"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.175" critical="yes" starttime="20200325 11:09:12.803"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.179" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.211" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.211" starttime="20200325 11:09:23.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.212" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1275
&lt; 
{ [data not shown]
100  1275  100  1275    0     0  52729      0 --:--:-- --:--:-- --:--:-- 53125
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1585134549824,"storageReport":{"capacity":89311358976,"used":8192,"remaining":6698815488},"pipelines":[{"pipelineID":"0f151522-94d8-4fb5-80dc-a52de272742d","replicationType":"RATIS","replicationFactor":1},{"pipelineID":"53fca977-8b0c-4b07-986c-6de4c91e0ced","replicationType":"RATIS","replicationFactor":3}],"containers":2},{"hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1585134549862,"storageReport":{"capacity":89311358976,"used":8192,"remaining":6698803200},"pipelines":[{"pipelineID":"6699c27e-9faf-48c4-97cd-ea79ec79af95","replicationType":"RATIS","replicationFactor":1},{"pipelineID":"53fca977-8b0c-4b07-986c-6de4c91e0ced","replicationType":"RATIS","replicationFactor":3}],"containers":2},{"hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1585134549856,"storageReport":{"capacity":89311358976,"used":8192,"remaining":6698835968},"pipelines":[{"pipelineID":"6848a98b-99e5-45bf-910c-e1a63b97597e","replicationType":"RATIS","replicationFactor":1},{"pipelineID":"53fca977-8b0c-4b07-986c-6de4c91e0ced","replicationType":"RATIS","replicationFactor":3}],"containers":2}]}</msg>
<status status="PASS" endtime="20200325 11:09:23.212" starttime="20200325 11:09:23.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.213" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.213" starttime="20200325 11:09:23.212"></status>
</kw>
<msg timestamp="20200325 11:09:23.213" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.213" starttime="20200325 11:09:23.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.214" starttime="20200325 11:09:23.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.214" starttime="20200325 11:09:23.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.215" starttime="20200325 11:09:23.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.215" starttime="20200325 11:09:23.215"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.217" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.241" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.241" starttime="20200325 11:09:23.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.242" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1364
&lt; 
{ [data not shown]
100  1364  100  1364    0     0  84093      0 --:--:-- --:--:-- --:--:-- 85250
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"0f151522-94d8-4fb5-80dc-a52de272742d","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":739680,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"6699c27e-9faf-48c4-97cd-ea79ec79af95","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":739190,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"6848a98b-99e5-45bf-910c-e1a63b97597e","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":739060,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"53fca977-8b0c-4b07-986c-6de4c91e0ced","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":739050,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" endtime="20200325 11:09:23.242" starttime="20200325 11:09:23.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.243" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.243" starttime="20200325 11:09:23.242"></status>
</kw>
<msg timestamp="20200325 11:09:23.243" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.243" starttime="20200325 11:09:23.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.244" starttime="20200325 11:09:23.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.244" starttime="20200325 11:09:23.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.245" starttime="20200325 11:09:23.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.245" starttime="20200325 11:09:23.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.246" starttime="20200325 11:09:23.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.246" starttime="20200325 11:09:23.246"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.249" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.267" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.267" starttime="20200325 11:09:23.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.268" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]
100   186  100   186    0     0  16074      0 --:--:-- --:--:-- --:--:-- 16909
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":20096454656},"containers":4,"volumes":26,"buckets":51,"keys":168}</msg>
<status status="PASS" endtime="20200325 11:09:23.268" starttime="20200325 11:09:23.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.269" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.269" starttime="20200325 11:09:23.268"></status>
</kw>
<msg timestamp="20200325 11:09:23.269" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.269" starttime="20200325 11:09:23.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.270" starttime="20200325 11:09:23.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.270" starttime="20200325 11:09:23.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.271" starttime="20200325 11:09:23.270"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.271" critical="yes" starttime="20200325 11:09:23.176"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.275" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.278" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200325 11:09:23.278" starttime="20200325 11:09:23.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.279" level="INFO">scm</msg>
<status status="PASS" endtime="20200325 11:09:23.279" starttime="20200325 11:09:23.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.280" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.280" starttime="20200325 11:09:23.279"></status>
</kw>
<msg timestamp="20200325 11:09:23.280" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200325 11:09:23.280" starttime="20200325 11:09:23.273"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.283" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200325 11:09:23.305" starttime="20200325 11:09:23.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.306" level="INFO"></msg>
<status status="PASS" endtime="20200325 11:09:23.306" starttime="20200325 11:09:23.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.307" starttime="20200325 11:09:23.306"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.307" starttime="20200325 11:09:23.281"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.307" starttime="20200325 11:09:23.281"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.307" starttime="20200325 11:09:23.273"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.307" starttime="20200325 11:09:23.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 11:09:23.310" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 11:09:23.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 11:09:23.326" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.326" starttime="20200325 11:09:23.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 11:09:23.327" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.2...
* Connected to recon (172.25.0.2) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Date: Wed, 25 Mar 2020 11:09:23 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Wed, 25 Mar 2020 10:20:16 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2200
&lt; 
{ [data not shown]
100  2200  100  2200    0     0   244k      0 --:--:-- --:--:-- --:--:--  268k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.4fb42e85.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0f6d3c91.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(l){function e(e){for(var r,t,n=e[0],o=e[1],u=e[2],f=0,i=[];f&lt;n.length;f++)t=n[f],p[t]&amp;&amp;i.push(p[t][0]),p[t]=0;for(r in o)Object.prototype.hasOwnProperty.call(o,r)&amp;&amp;(l[r]=o[r]);for(s&amp;&amp;s(e);i.length;)i.shift()();return c.push.apply(c,u||[]),a()}function a(){for(var e,r=0;r&lt;c.length;r++){for(var t=c[r],n=!0,o=1;o&lt;t.length;o++){var u=t[o];0!==p[u]&amp;&amp;(n=!1)}n&amp;&amp;(c.splice(r--,1),e=f(f.s=t[0]))}return e}var t={},p={1:0},c=[];function f(e){if(t[e])return t[e].exports;var r=t[e]={i:e,l:!1,exports:{}};return l[e].call(r.exports,r,r.exports,f),r.l=!0,r.exports}f.m=l,f.c=t,f.d=function(e,r,t){f.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},f.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},f.t=function(r,e){if(1&amp;e&amp;&amp;(r=f(r)),8&amp;e)return r;if(4&amp;e&amp;&amp;"object"==typeof r&amp;&amp;r&amp;&amp;r.__esModule)return r;var t=Object.create(null);if(f.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:r}),2&amp;e&amp;&amp;"string"!=typeof r)for(var n in r)f.d(t,n,function(e){return r[e]}.bind(null,n));return t},f.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return f.d(r,"a",r),r},f.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},f.p="/";var r=window.webpackJsonp=window.webpackJsonp||[],n=r.push.bind(r);r.push=e,r=r.slice();for(var o=0;o&lt;r.length;o++)e(r[o]);var s=n;a()}([])&lt;/script&gt;&lt;script src="/static/js/2.07d0ce26.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.9b1e1ae8.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.327" starttime="20200325 11:09:23.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 11:09:23.328" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 11:09:23.328" starttime="20200325 11:09:23.327"></status>
</kw>
<msg timestamp="20200325 11:09:23.329" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20200325 11:09:23.329" starttime="20200325 11:09:23.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" endtime="20200325 11:09:23.329" starttime="20200325 11:09:23.329"></status>
</kw>
<status status="PASS" endtime="20200325 11:09:23.330" critical="yes" starttime="20200325 11:09:23.272"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" endtime="20200325 11:09:23.331" starttime="20200325 11:09:04.710"></status>
</suite>
<status status="PASS" endtime="20200325 11:09:23.334" starttime="20200325 11:09:04.686"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-recon" pass="4">ozonesecure-recon</stat>
<stat fail="0" id="s1-s1" name="Recon-Api" pass="4">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
