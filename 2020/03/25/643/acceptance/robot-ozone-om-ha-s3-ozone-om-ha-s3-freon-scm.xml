<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200325 22:11:47.258" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-om-ha-s3-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:11:47.313" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:11:56.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:11:56.121" level="INFO">${output} = 2020-03-25 22:11:49,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:11:49,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:11:56.121" starttime="20200325 22:11:47.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:11:56.122" level="INFO">2020-03-25 22:11:49,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:11:49,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:11:49,295 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:11:50,744 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-25 22:11:50,745 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-25 22:11:50,745 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-25 22:11:50,745 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-25 22:11:50,745 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-25 22:11:50,747 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-25 22:11:50,747 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-25 22:11:50,754 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-25 22:11:50,762 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:11:50,800 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-41610, with hadoop as owner.
2020-03-25 22:11:50,842 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-41610/bucket-0-30068, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 22:11:51,423 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 22:11:51,765 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,072
Average Time spent in bucket creation: 00:00:00,022
Average Time spent in key creation: 00:00:00,088
Average Time spent in key write: 00:00:00,716
Total bytes written: 10240
Total Execution time: 00:00:06,038
***************************************************</msg>
<status status="PASS" endtime="20200325 22:11:56.122" starttime="20200325 22:11:56.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:11:56.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:11:56.123" starttime="20200325 22:11:56.122"></status>
</kw>
<msg timestamp="20200325 22:11:56.123" level="INFO">${result} = 2020-03-25 22:11:49,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:11:49,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:11:56.123" starttime="20200325 22:11:47.311"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:11:56.124" starttime="20200325 22:11:56.124"></status>
</kw>
<status status="PASS" endtime="20200325 22:11:56.124" starttime="20200325 22:11:56.123"></status>
</kw>
<status status="PASS" endtime="20200325 22:11:56.124" critical="yes" starttime="20200325 22:11:47.311"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:11:56.127" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:12:01.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:12:01.140" level="INFO">${output} = 2020-03-25 22:11:57,161 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:11:57,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:12:01.140" starttime="20200325 22:11:56.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:12:01.141" level="INFO">2020-03-25 22:11:57,161 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:11:57,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:11:57,366 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:11:57,655 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bvFiayBYLe
2020-03-25 22:11:57,673 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:11:58,680 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:11:58,705 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-25 22:11:58,733 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 22:11:59,350 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 22:11:59,680 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:12:00,681 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 22:12:00,805 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1541.839068, max=1541.839068, mean=1541.839068, stddev=0.0, median=1541.839068, p75=1541.839068, p95=1541.839068, p98=1541.839068, p99=1541.839068, p999=1541.839068, mean_rate=0.4900305778100493, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 22:12:00,806 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-25 22:12:00,806 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 22:12:00,806 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 22:12:01.141" starttime="20200325 22:12:01.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:12:01.141" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:12:01.142" starttime="20200325 22:12:01.141"></status>
</kw>
<msg timestamp="20200325 22:12:01.142" level="INFO">${result} = 2020-03-25 22:11:57,161 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:11:57,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:12:01.142" starttime="20200325 22:11:56.126"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:12:01.143" starttime="20200325 22:12:01.143"></status>
</kw>
<status status="PASS" endtime="20200325 22:12:01.143" starttime="20200325 22:12:01.142"></status>
</kw>
<status status="PASS" endtime="20200325 22:12:01.143" critical="yes" starttime="20200325 22:11:56.125"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:12:01.146" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:12:04.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:12:04.814" level="INFO">${output} = 2020-03-25 22:12:02,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:12:02,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:12:04.814" starttime="20200325 22:12:01.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:12:04.815" level="INFO">2020-03-25 22:12:02,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:12:02,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:12:02,410 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:12:02,749 [main] INFO freon.BaseFreonGenerator: Executing test with prefix SUavHORrrT
2020-03-25 22:12:02,773 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:12:03,783 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:12:04,785 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 22:12:04,801 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=61.101005, max=61.101005, mean=61.101005, stddev=0.0, median=61.101005, p75=61.101005, p95=61.101005, p98=61.101005, p99=61.101005, p999=61.101005, mean_rate=0.9578129917277207, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 22:12:04,801 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 22:12:04,802 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 22:12:04,802 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 22:12:04.815" starttime="20200325 22:12:04.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:12:04.816" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:12:04.816" starttime="20200325 22:12:04.815"></status>
</kw>
<msg timestamp="20200325 22:12:04.816" level="INFO">${result} = 2020-03-25 22:12:02,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:12:02,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:12:04.816" starttime="20200325 22:12:01.144"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:12:04.817" starttime="20200325 22:12:04.817"></status>
</kw>
<status status="PASS" endtime="20200325 22:12:04.818" starttime="20200325 22:12:04.816"></status>
</kw>
<status status="PASS" endtime="20200325 22:12:04.818" critical="yes" starttime="20200325 22:12:01.144"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:12:04.821" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:12:08.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:12:08.405" level="INFO">${output} = 2020-03-25 22:12:05,859 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:12:06,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:12:08.405" starttime="20200325 22:12:04.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:12:08.406" level="INFO">2020-03-25 22:12:05,859 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:12:06,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:12:06,063 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:12:06,424 [main] INFO freon.BaseFreonGenerator: Executing test with prefix G0f0GOBHg0
2020-03-25 22:12:06,434 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:12:07,437 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 22:12:08,377 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=30.113485, max=30.113485, mean=30.113485, stddev=0.0, median=30.113485, p75=30.113485, p95=30.113485, p98=30.113485, p99=30.113485, p999=30.113485, mean_rate=0.9774119568958902, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 22:12:08,377 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 22:12:08,378 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 22:12:08,378 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 22:12:08.406" starttime="20200325 22:12:08.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:12:08.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:12:08.408" starttime="20200325 22:12:08.407"></status>
</kw>
<msg timestamp="20200325 22:12:08.408" level="INFO">${result} = 2020-03-25 22:12:05,859 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:12:06,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:12:08.408" starttime="20200325 22:12:04.819"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:12:08.409" starttime="20200325 22:12:08.409"></status>
</kw>
<status status="PASS" endtime="20200325 22:12:08.409" starttime="20200325 22:12:08.408"></status>
</kw>
<status status="PASS" endtime="20200325 22:12:08.409" critical="yes" starttime="20200325 22:12:04.818"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200325 22:12:08.411" starttime="20200325 22:11:47.286"></status>
</suite>
<status status="PASS" endtime="20200325 22:12:08.415" starttime="20200325 22:11:47.259"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-om-ha-s3-freon" pass="4">ozone-om-ha-s3-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
