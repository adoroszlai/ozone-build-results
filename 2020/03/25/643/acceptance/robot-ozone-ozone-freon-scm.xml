<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200325 22:25:22.496" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:25:22.550" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:25:30.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:25:30.469" level="INFO">${output} = 2020-03-25 22:25:23,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:23,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:30.469" starttime="20200325 22:25:22.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:25:30.470" level="INFO">2020-03-25 22:25:23,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:23,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:25:23,753 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:25:25,090 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-25 22:25:25,091 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-25 22:25:25,091 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-25 22:25:25,091 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-25 22:25:25,091 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-25 22:25:25,091 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-25 22:25:25,091 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-25 22:25:25,096 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-25 22:25:25,103 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:25:25,137 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-37802, with hadoop as owner.
2020-03-25 22:25:25,159 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-37802/bucket-0-81611, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 22:25:25,726 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 22:25:26,107 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,045
Average Time spent in bucket creation: 00:00:00,011
Average Time spent in key creation: 00:00:00,049
Average Time spent in key write: 00:00:00,694
Total bytes written: 10240
Total Execution time: 00:00:06,027
***************************************************</msg>
<status status="PASS" endtime="20200325 22:25:30.470" starttime="20200325 22:25:30.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:25:30.471" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:25:30.471" starttime="20200325 22:25:30.470"></status>
</kw>
<msg timestamp="20200325 22:25:30.471" level="INFO">${result} = 2020-03-25 22:25:23,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:23,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:30.471" starttime="20200325 22:25:22.548"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:25:30.473" starttime="20200325 22:25:30.472"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:30.473" starttime="20200325 22:25:30.472"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:30.474" critical="yes" starttime="20200325 22:25:22.547"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:25:30.477" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:25:35.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:25:35.392" level="INFO">${output} = 2020-03-25 22:25:31,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:31,659 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:35.392" starttime="20200325 22:25:30.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:25:35.393" level="INFO">2020-03-25 22:25:31,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:31,659 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:25:31,659 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:25:31,991 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qU1DFhHKOI
2020-03-25 22:25:32,012 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:25:32,968 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-25 22:25:32,983 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 22:25:33,023 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:25:33,588 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 22:25:34,023 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:25:35,024 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 22:25:35,060 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1611.354873, max=1611.354873, mean=1611.354873, stddev=0.0, median=1611.354873, p75=1611.354873, p95=1611.354873, p98=1611.354873, p99=1611.354873, p999=1611.354873, mean_rate=0.4851452860318801, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 22:25:35,060 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-25 22:25:35,060 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 22:25:35,061 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 22:25:35.393" starttime="20200325 22:25:35.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:25:35.394" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:25:35.394" starttime="20200325 22:25:35.393"></status>
</kw>
<msg timestamp="20200325 22:25:35.394" level="INFO">${result} = 2020-03-25 22:25:31,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:31,659 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:35.394" starttime="20200325 22:25:30.475"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:25:35.396" starttime="20200325 22:25:35.395"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:35.396" starttime="20200325 22:25:35.395"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:35.396" critical="yes" starttime="20200325 22:25:30.474"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:25:35.399" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:25:38.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:25:38.903" level="INFO">${output} = 2020-03-25 22:25:36,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:36,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:38.903" starttime="20200325 22:25:35.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:25:38.904" level="INFO">2020-03-25 22:25:36,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:36,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:25:36,622 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:25:36,910 [main] INFO freon.BaseFreonGenerator: Executing test with prefix X9BUREJAEV
2020-03-25 22:25:36,928 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:25:37,930 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 22:25:38,889 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=26.676576, max=26.676576, mean=26.676576, stddev=0.0, median=26.676576, p75=26.676576, p95=26.676576, p98=26.676576, p99=26.676576, p999=26.676576, mean_rate=0.9883204519005923, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 22:25:38,890 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 22:25:38,890 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 22:25:38,890 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 22:25:38.904" starttime="20200325 22:25:38.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:25:38.904" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:25:38.904" starttime="20200325 22:25:38.904"></status>
</kw>
<msg timestamp="20200325 22:25:38.905" level="INFO">${result} = 2020-03-25 22:25:36,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:36,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:38.905" starttime="20200325 22:25:35.397"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:25:38.906" starttime="20200325 22:25:38.906"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:38.906" starttime="20200325 22:25:38.905"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:38.906" critical="yes" starttime="20200325 22:25:35.397"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 22:25:38.910" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 22:25:42.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 22:25:42.387" level="INFO">${output} = 2020-03-25 22:25:39,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:40,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:42.387" starttime="20200325 22:25:38.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 22:25:42.388" level="INFO">2020-03-25 22:25:39,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:40,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 22:25:40,090 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 22:25:40,408 [main] INFO freon.BaseFreonGenerator: Executing test with prefix HGpSAsZWMJ
2020-03-25 22:25:40,422 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 22:25:41,424 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 22:25:42,369 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.271678, max=8.271678, mean=8.271678, stddev=0.0, median=8.271678, p75=8.271678, p95=8.271678, p98=8.271678, p99=8.271678, p999=8.271678, mean_rate=0.9883060143659985, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 22:25:42,371 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 22:25:42,372 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 22:25:42,372 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 22:25:42.388" starttime="20200325 22:25:42.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 22:25:42.389" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 22:25:42.389" starttime="20200325 22:25:42.389"></status>
</kw>
<msg timestamp="20200325 22:25:42.390" level="INFO">${result} = 2020-03-25 22:25:39,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 22:25:40,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 22:25:42.390" starttime="20200325 22:25:38.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 22:25:42.391" starttime="20200325 22:25:42.391"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:42.391" starttime="20200325 22:25:42.390"></status>
</kw>
<status status="PASS" endtime="20200325 22:25:42.391" critical="yes" starttime="20200325 22:25:38.907"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200325 22:25:42.392" starttime="20200325 22:25:22.522"></status>
</suite>
<status status="PASS" endtime="20200325 22:25:42.396" starttime="20200325 22:25:22.497"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
