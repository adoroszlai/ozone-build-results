<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200325 16:44:59.046" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-om-ha-s3-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:44:59.102" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:45:07.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:45:07.080" level="INFO">${output} = 2020-03-25 16:45:00,192 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:00,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:07.081" starttime="20200325 16:44:59.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:45:07.082" level="INFO">2020-03-25 16:45:00,192 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:00,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:45:00,417 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:45:01,710 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-25 16:45:01,711 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-25 16:45:01,711 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-25 16:45:01,711 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-25 16:45:01,712 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-25 16:45:01,713 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-25 16:45:01,713 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-25 16:45:01,717 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-25 16:45:01,725 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:45:01,750 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-17144, with hadoop as owner.
2020-03-25 16:45:01,783 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-17144/bucket-0-42440, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 16:45:02,442 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 16:45:02,730 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,054
Average Time spent in bucket creation: 00:00:00,033
Average Time spent in key creation: 00:00:00,046
Average Time spent in key write: 00:00:00,776
Total bytes written: 10240
Total Execution time: 00:00:05,998
***************************************************</msg>
<status status="PASS" endtime="20200325 16:45:07.082" starttime="20200325 16:45:07.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:45:07.083" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:45:07.083" starttime="20200325 16:45:07.082"></status>
</kw>
<msg timestamp="20200325 16:45:07.083" level="INFO">${result} = 2020-03-25 16:45:00,192 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:00,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:07.083" starttime="20200325 16:44:59.100"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:45:07.084" starttime="20200325 16:45:07.084"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:07.084" starttime="20200325 16:45:07.083"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:07.084" critical="yes" starttime="20200325 16:44:59.099"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:45:07.087" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:45:12.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:45:12.228" level="INFO">${output} = 2020-03-25 16:45:08,179 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:08,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:12.228" starttime="20200325 16:45:07.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:45:12.229" level="INFO">2020-03-25 16:45:08,179 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:08,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:45:08,431 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:45:08,820 [main] INFO freon.BaseFreonGenerator: Executing test with prefix CUCTy2vryQ
2020-03-25 16:45:08,838 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:45:09,790 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-25 16:45:09,819 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 16:45:09,842 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:45:10,458 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 16:45:10,843 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:45:11,843 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 16:45:11,894 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1603.080193, max=1603.080193, mean=1603.080193, stddev=0.0, median=1603.080193, p75=1603.080193, p95=1603.080193, p98=1603.080193, p99=1603.080193, p999=1603.080193, mean_rate=0.4907741986491775, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 16:45:11,894 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-25 16:45:11,895 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 16:45:11,895 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 16:45:12.229" starttime="20200325 16:45:12.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:45:12.230" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:45:12.230" starttime="20200325 16:45:12.229"></status>
</kw>
<msg timestamp="20200325 16:45:12.230" level="INFO">${result} = 2020-03-25 16:45:08,179 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:08,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:12.230" starttime="20200325 16:45:07.085"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:45:12.231" starttime="20200325 16:45:12.231"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:12.231" starttime="20200325 16:45:12.230"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:12.231" critical="yes" starttime="20200325 16:45:07.085"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:45:12.235" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:45:15.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:45:15.776" level="INFO">${output} = 2020-03-25 16:45:13,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:13,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:15.776" starttime="20200325 16:45:12.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:45:15.777" level="INFO">2020-03-25 16:45:13,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:13,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:45:13,452 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:45:13,801 [main] INFO freon.BaseFreonGenerator: Executing test with prefix vIg3saYer6
2020-03-25 16:45:13,819 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:45:14,823 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 16:45:15,747 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=69.487089, max=69.487089, mean=69.487089, stddev=0.0, median=69.487089, p75=69.487089, p95=69.487089, p98=69.487089, p99=69.487089, p999=69.487089, mean_rate=0.9845332058407464, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 16:45:15,753 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 16:45:15,753 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 16:45:15,753 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 16:45:15.777" starttime="20200325 16:45:15.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:45:15.778" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:45:15.778" starttime="20200325 16:45:15.778"></status>
</kw>
<msg timestamp="20200325 16:45:15.778" level="INFO">${result} = 2020-03-25 16:45:13,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:13,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:15.778" starttime="20200325 16:45:12.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:45:15.779" starttime="20200325 16:45:15.779"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:15.780" starttime="20200325 16:45:15.779"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:15.780" critical="yes" starttime="20200325 16:45:12.232"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:45:15.783" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:45:19.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:45:19.292" level="INFO">${output} = 2020-03-25 16:45:16,815 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:17,045 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:19.292" starttime="20200325 16:45:15.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:45:19.293" level="INFO">2020-03-25 16:45:16,815 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:17,045 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:45:17,045 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:45:17,358 [main] INFO freon.BaseFreonGenerator: Executing test with prefix UEzCzXUp7r
2020-03-25 16:45:17,370 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:45:18,382 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 16:45:19,273 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=26.320546, max=26.320546, mean=26.320546, stddev=0.0, median=26.320546, p75=26.320546, p95=26.320546, p98=26.320546, p99=26.320546, p999=26.320546, mean_rate=0.9878030660806587, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 16:45:19,276 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 16:45:19,277 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 16:45:19,278 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 16:45:19.293" starttime="20200325 16:45:19.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:45:19.294" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:45:19.294" starttime="20200325 16:45:19.293"></status>
</kw>
<msg timestamp="20200325 16:45:19.294" level="INFO">${result} = 2020-03-25 16:45:16,815 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:45:17,045 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:45:19.294" starttime="20200325 16:45:15.781"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:45:19.296" starttime="20200325 16:45:19.295"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:19.296" starttime="20200325 16:45:19.295"></status>
</kw>
<status status="PASS" endtime="20200325 16:45:19.296" critical="yes" starttime="20200325 16:45:15.780"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200325 16:45:19.297" starttime="20200325 16:44:59.073"></status>
</suite>
<status status="PASS" endtime="20200325 16:45:19.301" starttime="20200325 16:44:59.047"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-om-ha-s3-freon" pass="4">ozone-om-ha-s3-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
