<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200325 16:58:21.689" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:58:21.743" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:58:29.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:58:29.423" level="INFO">${output} = 2020-03-25 16:58:22,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:22,890 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:29.423" starttime="20200325 16:58:21.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:58:29.424" level="INFO">2020-03-25 16:58:22,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:22,890 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:58:22,890 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:58:24,055 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-25 16:58:24,056 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-25 16:58:24,056 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-25 16:58:24,057 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-25 16:58:24,057 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-25 16:58:24,057 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-25 16:58:24,057 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-25 16:58:24,059 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-25 16:58:24,065 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:58:24,106 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-60047, with hadoop as owner.
2020-03-25 16:58:24,121 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-60047/bucket-0-71297, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 16:58:24,591 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 16:58:25,090 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,054
Average Time spent in bucket creation: 00:00:00,010
Average Time spent in key creation: 00:00:00,036
Average Time spent in key write: 00:00:00,622
Total bytes written: 10240
Total Execution time: 00:00:05,897
***************************************************</msg>
<status status="PASS" endtime="20200325 16:58:29.424" starttime="20200325 16:58:29.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:58:29.424" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:58:29.425" starttime="20200325 16:58:29.424"></status>
</kw>
<msg timestamp="20200325 16:58:29.425" level="INFO">${result} = 2020-03-25 16:58:22,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:22,890 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:29.425" starttime="20200325 16:58:21.740"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:58:29.426" starttime="20200325 16:58:29.426"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:29.426" starttime="20200325 16:58:29.425"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:29.426" critical="yes" starttime="20200325 16:58:21.740"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:58:29.429" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:58:34.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:58:34.333" level="INFO">${output} = 2020-03-25 16:58:30,433 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:30,606 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:34.333" starttime="20200325 16:58:29.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:58:34.335" level="INFO">2020-03-25 16:58:30,433 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:30,606 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:58:30,606 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:58:30,932 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mqzN3mF5uu
2020-03-25 16:58:30,955 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:58:31,827 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-25 16:58:31,843 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-25 16:58:31,958 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:58:32,404 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-25 16:58:32,959 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:58:33,959 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 16:58:34,003 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1442.838693, max=1442.838693, mean=1442.838693, stddev=0.0, median=1442.838693, p75=1442.838693, p95=1442.838693, p98=1442.838693, p99=1442.838693, p999=1442.838693, mean_rate=0.46784196421584795, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 16:58:34,003 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-25 16:58:34,003 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 16:58:34,003 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 16:58:34.335" starttime="20200325 16:58:34.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:58:34.335" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:58:34.335" starttime="20200325 16:58:34.335"></status>
</kw>
<msg timestamp="20200325 16:58:34.336" level="INFO">${result} = 2020-03-25 16:58:30,433 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:30,606 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:34.336" starttime="20200325 16:58:29.427"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:58:34.337" starttime="20200325 16:58:34.337"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:34.337" starttime="20200325 16:58:34.336"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:34.337" critical="yes" starttime="20200325 16:58:29.427"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:58:34.340" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:58:37.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:58:37.696" level="INFO">${output} = 2020-03-25 16:58:35,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:35,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:37.696" starttime="20200325 16:58:34.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:58:37.697" level="INFO">2020-03-25 16:58:35,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:35,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:58:35,530 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:58:35,835 [main] INFO freon.BaseFreonGenerator: Executing test with prefix YQmFL0YiJp
2020-03-25 16:58:35,843 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:58:36,846 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 16:58:37,682 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=24.970705, max=24.970705, mean=24.970705, stddev=0.0, median=24.970705, p75=24.970705, p95=24.970705, p98=24.970705, p99=24.970705, p999=24.970705, mean_rate=0.9838962909631558, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 16:58:37,684 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 16:58:37,684 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 16:58:37,684 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 16:58:37.697" starttime="20200325 16:58:37.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:58:37.698" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:58:37.698" starttime="20200325 16:58:37.698"></status>
</kw>
<msg timestamp="20200325 16:58:37.698" level="INFO">${result} = 2020-03-25 16:58:35,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:35,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:37.698" starttime="20200325 16:58:34.338"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:58:37.699" starttime="20200325 16:58:37.699"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:37.699" starttime="20200325 16:58:37.698"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:37.700" critical="yes" starttime="20200325 16:58:34.338"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200325 16:58:37.703" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200325 16:58:41.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200325 16:58:41.083" level="INFO">${output} = 2020-03-25 16:58:38,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:38,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:41.083" starttime="20200325 16:58:37.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200325 16:58:41.084" level="INFO">2020-03-25 16:58:38,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:38,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-25 16:58:38,819 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-25 16:58:39,110 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bKXaM67h9e
2020-03-25 16:58:39,133 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-25 16:58:40,141 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-25 16:58:41,070 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.164134, max=8.164134, mean=8.164134, stddev=0.0, median=8.164134, p75=8.164134, p95=8.164134, p98=8.164134, p99=8.164134, p999=8.164134, mean_rate=0.9905790523559324, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-25 16:58:41,071 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-25 16:58:41,071 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-25 16:58:41,071 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200325 16:58:41.084" starttime="20200325 16:58:41.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200325 16:58:41.085" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200325 16:58:41.085" starttime="20200325 16:58:41.084"></status>
</kw>
<msg timestamp="20200325 16:58:41.085" level="INFO">${result} = 2020-03-25 16:58:38,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-25 16:58:38,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200325 16:58:41.085" starttime="20200325 16:58:37.701"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200325 16:58:41.086" starttime="20200325 16:58:41.086"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:41.087" starttime="20200325 16:58:41.086"></status>
</kw>
<status status="PASS" endtime="20200325 16:58:41.087" critical="yes" starttime="20200325 16:58:37.700"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200325 16:58:41.088" starttime="20200325 16:58:21.715"></status>
</suite>
<status status="PASS" endtime="20200325 16:58:41.091" starttime="20200325 16:58:21.690"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
