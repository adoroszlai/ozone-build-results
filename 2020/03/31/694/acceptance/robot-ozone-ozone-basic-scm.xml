<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200331 18:03:04.517" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozone-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200331 18:03:04.557" starttime="20200331 18:03:04.557"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:03:04.559" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:03:04.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:03:04.626" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 31 Mar 2020 18:03:04 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 31 Mar 2020 17:41:08 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200331 18:03:04.626" starttime="20200331 18:03:04.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:03:04.627" level="INFO">HTTP/1.1 200 OK
Date: Tue, 31 Mar 2020 18:03:04 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 31 Mar 2020 17:41:08 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200331 18:03:04.627" starttime="20200331 18:03:04.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:03:04.628" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:03:04.628" starttime="20200331 18:03:04.627"></status>
</kw>
<msg timestamp="20200331 18:03:04.628" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 31 Mar 2020 18:03:04 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 31 Mar 2020 17:41:08 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200331 18:03:04.628" starttime="20200331 18:03:04.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200331 18:03:04.629" starttime="20200331 18:03:04.628"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:03:04.629" critical="yes" starttime="20200331 18:03:04.556"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200331 18:03:04.630" starttime="20200331 18:03:04.630"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:03:04.632" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:21.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:21.693" level="INFO">${output} = 2020-03-31 18:03:05,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:03:05,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:04:21.693" starttime="20200331 18:03:04.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:21.694" level="INFO">2020-03-31 18:03:05,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:03:05,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-31 18:03:05,693 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-31 18:03:07,062 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-31 18:03:07,062 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-03-31 18:03:07,062 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-03-31 18:03:07,063 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-03-31 18:03:07,063 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-31 18:03:07,063 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-31 18:03:07,064 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-03-31 18:03:07,065 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-03-31 18:03:07,069 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-31 18:03:07,078 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-03-31 18:03:07,100 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-24282, with hadoop as owner.
2020-03-31 18:03:07,188 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-50419, with hadoop as owner.
2020-03-31 18:03:07,204 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-12048, with hadoop as owner.
2020-03-31 18:03:07,210 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-55552, with hadoop as owner.
2020-03-31 18:03:07,215 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-66929, with hadoop as owner.
2020-03-31 18:03:07,222 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24282/bucket-0-16418, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,248 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50419/bucket-0-70017, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,253 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12048/bucket-0-16795, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,262 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-55552/bucket-0-39615, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,267 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-66929/bucket-0-36763, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,275 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24282/bucket-1-85320, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,279 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50419/bucket-1-43163, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,284 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12048/bucket-1-02575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,288 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-55552/bucket-1-08428, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,296 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-66929/bucket-1-38926, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,301 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24282/bucket-2-78957, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,314 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50419/bucket-2-65826, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,323 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12048/bucket-2-86326, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,328 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-55552/bucket-2-31740, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,333 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-66929/bucket-2-34333, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,338 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24282/bucket-3-56192, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,351 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50419/bucket-3-23038, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12048/bucket-3-30802, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,364 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-55552/bucket-3-60484, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,369 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-66929/bucket-3-33297, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,375 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24282/bucket-4-63935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,380 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-50419/bucket-4-90117, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,384 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12048/bucket-4-86026, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,389 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-55552/bucket-4-84368, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:07,394 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-66929/bucket-4-81373, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:03:08,082 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-03-31 18:03:08,155 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-31 18:03:09,082 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-31 18:03:10,083 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-31 18:03:11,084 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-03-31 18:03:12,084 [Thread-8] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-03-31 18:03:13,085 [Thread-8] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-03-31 18:03:14,085 [Thread-8] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-03-31 18:03:15,086 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-03-31 18:03:16,086 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-03-31 18:03:17,086 [Thread-8] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-03-31 18:03:18,087 [Thread-8] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-03-31 18:03:19,088 [Thread-8] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-03-31 18:03:20,089 [Thread-8] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-03-31 18:03:21,089 [Thread-8] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-03-31 18:03:22,090 [Thread-8] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-03-31 18:03:23,090 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-03-31 18:03:24,091 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-03-31 18:03:25,091 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-03-31 18:03:26,092 [Thread-8] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-03-31 18:03:27,092 [Thread-8] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-03-31 18:03:28,095 [Thread-8] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-03-31 18:03:29,098 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-03-31 18:03:30,098 [Thread-8] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-03-31 18:03:31,098 [Thread-8] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-03-31 18:03:32,099 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-03-31 18:03:33,099 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-03-31 18:03:34,100 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-03-31 18:03:35,100 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-03-31 18:03:36,100 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-03-31 18:03:37,101 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-03-31 18:03:38,101 [Thread-8] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-03-31 18:03:39,102 [Thread-8] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-03-31 18:03:40,102 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-03-31 18:03:41,102 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-03-31 18:03:42,103 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-03-31 18:03:43,103 [Thread-8] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-03-31 18:03:44,104 [Thread-8] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-03-31 18:03:45,104 [Thread-8] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-03-31 18:03:46,105 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-03-31 18:03:47,105 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-03-31 18:03:48,106 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-03-31 18:03:49,106 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-03-31 18:03:50,107 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-03-31 18:03:51,107 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-03-31 18:03:52,108 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-03-31 18:03:53,108 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-03-31 18:03:54,108 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-03-31 18:03:55,109 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-03-31 18:03:56,109 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-03-31 18:03:57,110 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-03-31 18:03:58,111 [Thread-8] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-03-31 18:03:59,111 [Thread-8] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-03-31 18:04:00,111 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-03-31 18:04:01,112 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-03-31 18:04:02,112 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-03-31 18:04:03,113 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-03-31 18:04:04,113 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-03-31 18:04:05,114 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-03-31 18:04:06,114 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-03-31 18:04:07,114 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-03-31 18:04:08,115 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-03-31 18:04:09,115 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-03-31 18:04:10,115 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-03-31 18:04:11,116 [Thread-8] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-03-31 18:04:12,116 [Thread-8] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-03-31 18:04:13,117 [Thread-8] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-03-31 18:04:14,117 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-03-31 18:04:15,117 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-03-31 18:04:16,118 [Thread-8] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-03-31 18:04:17,118 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,130
Average Time spent in bucket creation: 00:00:00,120
Average Time spent in key creation: 00:00:01,507
Average Time spent in key write: 00:00:00,916
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:15,365
***************************************************</msg>
<status status="PASS" endtime="20200331 18:04:21.694" starttime="20200331 18:04:21.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:21.695" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:21.695" starttime="20200331 18:04:21.694"></status>
</kw>
<msg timestamp="20200331 18:04:21.695" level="INFO">${result} = 2020-03-31 18:03:05,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:03:05,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:04:21.695" starttime="20200331 18:03:04.630"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:21.696" starttime="20200331 18:04:21.696"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:21.696" starttime="20200331 18:04:21.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:21.697" starttime="20200331 18:04:21.696"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:04:21.697" critical="yes" starttime="20200331 18:03:04.629"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200331 18:04:21.697" starttime="20200331 18:03:04.537"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200331 18:04:21.704" level="INFO">${random} = 89801</msg>
<status status="PASS" endtime="20200331 18:04:21.704" starttime="20200331 18:04:21.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200331 18:04:21.705" level="INFO">${prefix} = 89801</msg>
<status status="PASS" endtime="20200331 18:04:21.705" starttime="20200331 18:04:21.704"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:21.705" starttime="20200331 18:04:21.703"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:21.706" starttime="20200331 18:04:21.705"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:21.708" level="INFO">Running command 'ozone sh volume info o3://om:9862/89801-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:23.545" level="INFO">${rc} = 255</msg>
<msg timestamp="20200331 18:04:23.545" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89801-rpcwoport is not found</msg>
<status status="PASS" endtime="20200331 18:04:23.545" starttime="20200331 18:04:21.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:23.546" level="INFO">VOLUME_NOT_FOUND Volume 89801-rpcwoport is not found</msg>
<status status="PASS" endtime="20200331 18:04:23.547" starttime="20200331 18:04:23.546"></status>
</kw>
<msg timestamp="20200331 18:04:23.547" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89801-rpcwoport is not found</msg>
<status status="PASS" endtime="20200331 18:04:23.547" starttime="20200331 18:04:21.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:23.547" starttime="20200331 18:04:23.547"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:23.549" level="INFO">Running command 'ozone sh volume create o3://om:9862/89801-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:25.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:25.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:25.318" starttime="20200331 18:04:23.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:25.319" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:25.319" starttime="20200331 18:04:25.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:25.319" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:25.320" starttime="20200331 18:04:25.319"></status>
</kw>
<msg timestamp="20200331 18:04:25.320" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200331 18:04:25.320" starttime="20200331 18:04:23.547"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:25.320" starttime="20200331 18:04:25.320"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:25.322" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="89801-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:27.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:27.182" level="INFO">${output} = {
  "metadata": {},
  "name": "89801-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:04:25.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200331 18:04:27.182" starttime="20200331 18:04:25.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:27.183" level="INFO">{
  "metadata": {},
  "name": "89801-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:04:25.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:04:27.183" starttime="20200331 18:04:27.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:27.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:27.184" starttime="20200331 18:04:27.183"></status>
</kw>
<msg timestamp="20200331 18:04:27.184" level="INFO">${result} = {
  "metadata": {},
  "name": "89801-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:04:25.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200331 18:04:27.184" starttime="20200331 18:04:25.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:27.184" starttime="20200331 18:04:27.184"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:27.187" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="89801-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:29.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:29.072" level="INFO">${output} = {
  "metadata": {},
  "name": "89801-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:04:25.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200331 18:04:29.072" starttime="20200331 18:04:27.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:29.073" level="INFO">{
  "metadata": {},
  "name": "89801-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:04:25.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:04:29.073" starttime="20200331 18:04:29.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:29.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:29.074" starttime="20200331 18:04:29.074"></status>
</kw>
<msg timestamp="20200331 18:04:29.074" level="INFO">${result} = {
  "metadata": {},
  "name": "89801-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:04:25.289Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200331 18:04:29.075" starttime="20200331 18:04:27.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:29.075" starttime="20200331 18:04:29.075"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:29.077" level="INFO">Running command 'ozone sh volume update o3://om:9862/89801-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:30.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:30.940" level="INFO">${output} = {
  "metadata" : { },
  "name" : "89801-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-31T18:04:25.289Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" endtime="20200331 18:04:30.940" starttime="20200331 18:04:29.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:30.941" level="INFO">{
  "metadata" : { },
  "name" : "89801-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-31T18:04:25.289Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200331 18:04:30.941" starttime="20200331 18:04:30.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:30.942" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:30.942" starttime="20200331 18:04:30.941"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:30.942" starttime="20200331 18:04:29.075"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:30.944" level="INFO">Running command 'ozone sh volume info o3://om:9862/89801-rpcwoport | jq -r '. | select(.name=="89801-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:32.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:32.797" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:04:32.797" starttime="20200331 18:04:30.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:32.798" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200331 18:04:32.798" starttime="20200331 18:04:32.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:32.798" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:32.798" starttime="20200331 18:04:32.798"></status>
</kw>
<msg timestamp="20200331 18:04:32.799" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:04:32.799" starttime="20200331 18:04:30.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:32.799" starttime="20200331 18:04:32.799"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:32.801" level="INFO">Running command 'ozone sh bucket create o3://om:9862/89801-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:34.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:34.662" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:34.662" starttime="20200331 18:04:32.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:34.663" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:34.663" starttime="20200331 18:04:34.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:34.663" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:34.663" starttime="20200331 18:04:34.663"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:34.663" starttime="20200331 18:04:32.799"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:34.665" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89801-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:36.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:36.507" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200331 18:04:36.507" starttime="20200331 18:04:34.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:36.508" level="INFO">DISK</msg>
<status status="PASS" endtime="20200331 18:04:36.508" starttime="20200331 18:04:36.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:36.509" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:36.509" starttime="20200331 18:04:36.508"></status>
</kw>
<msg timestamp="20200331 18:04:36.509" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200331 18:04:36.509" starttime="20200331 18:04:34.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:36.509" starttime="20200331 18:04:36.509"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:36.511" level="INFO">Running command 'ozone sh bucket list o3://om:9862/89801-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:38.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:38.418" level="INFO">${output} = 89801-rpcwoport</msg>
<status status="PASS" endtime="20200331 18:04:38.419" starttime="20200331 18:04:36.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:38.419" level="INFO">89801-rpcwoport</msg>
<status status="PASS" endtime="20200331 18:04:38.419" starttime="20200331 18:04:38.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:38.420" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:38.420" starttime="20200331 18:04:38.420"></status>
</kw>
<msg timestamp="20200331 18:04:38.421" level="INFO">${result} = 89801-rpcwoport</msg>
<status status="PASS" endtime="20200331 18:04:38.421" starttime="20200331 18:04:36.510"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:38.421" starttime="20200331 18:04:38.421"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:38.423" level="INFO">Running command 'ozone sh key put o3://om:9862/89801-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:42.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:42.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:42.118" starttime="20200331 18:04:38.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:42.119" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:42.119" starttime="20200331 18:04:42.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:42.119" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:42.120" starttime="20200331 18:04:42.119"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:42.120" starttime="20200331 18:04:38.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:42.121" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:42.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:42.124" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:42.124" starttime="20200331 18:04:42.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:42.125" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:42.125" starttime="20200331 18:04:42.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:42.125" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:42.125" starttime="20200331 18:04:42.125"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:42.126" starttime="20200331 18:04:42.120"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:42.127" level="INFO">Running command 'ozone sh key get o3://om:9862/89801-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:45.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:45.463" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:45.463" starttime="20200331 18:04:42.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:45.464" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:45.464" starttime="20200331 18:04:45.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:45.465" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:45.465" starttime="20200331 18:04:45.464"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:45.465" starttime="20200331 18:04:42.126"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:45.467" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:45.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:45.471" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 31 18:04 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:04:45.471" starttime="20200331 18:04:45.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:45.472" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 31 18:04 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:04:45.472" starttime="20200331 18:04:45.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:45.472" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:45.472" starttime="20200331 18:04:45.472"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:45.472" starttime="20200331 18:04:45.465"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:45.474" level="INFO">Running command 'ozone sh key info o3://om:9862/89801-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:47.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:47.321" level="INFO">${output} = {
  "volumeName": "89801-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:04:40.349Z",
  "modificationTime": "2020-03-31T18:04:41.742Z",
  "re...</msg>
<status status="PASS" endtime="20200331 18:04:47.321" starttime="20200331 18:04:45.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:47.321" level="INFO">{
  "volumeName": "89801-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:04:40.349Z",
  "modificationTime": "2020-03-31T18:04:41.742Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103918985566486660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200331 18:04:47.322" starttime="20200331 18:04:47.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:47.322" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:47.322" starttime="20200331 18:04:47.322"></status>
</kw>
<msg timestamp="20200331 18:04:47.322" level="INFO">${result} = {
  "volumeName": "89801-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:04:40.349Z",
  "modificationTime": "2020-03-31T18:04:41.742Z",
  "re...</msg>
<status status="PASS" endtime="20200331 18:04:47.322" starttime="20200331 18:04:45.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:47.323" starttime="20200331 18:04:47.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:47.325" level="INFO">Running command 'ozone sh key list o3://om:9862/89801-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:49.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:49.277" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200331 18:04:49.277" starttime="20200331 18:04:47.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:49.278" level="INFO">key1</msg>
<status status="PASS" endtime="20200331 18:04:49.278" starttime="20200331 18:04:49.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:49.278" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:49.278" starttime="20200331 18:04:49.278"></status>
</kw>
<msg timestamp="20200331 18:04:49.279" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200331 18:04:49.279" starttime="20200331 18:04:47.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:49.279" starttime="20200331 18:04:49.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:49.281" level="INFO">Running command 'ozone sh key rename o3://om:9862/89801-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:51.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:51.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:51.061" starttime="20200331 18:04:49.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:51.062" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:51.062" starttime="20200331 18:04:51.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:51.062" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:51.063" starttime="20200331 18:04:51.062"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:51.063" starttime="20200331 18:04:49.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:51.064" level="INFO">Running command 'ozone sh key list o3://om:9862/89801-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:53.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:53.115" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200331 18:04:53.115" starttime="20200331 18:04:51.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:53.116" level="INFO">key2</msg>
<status status="PASS" endtime="20200331 18:04:53.116" starttime="20200331 18:04:53.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:53.116" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:53.116" starttime="20200331 18:04:53.116"></status>
</kw>
<msg timestamp="20200331 18:04:53.117" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200331 18:04:53.117" starttime="20200331 18:04:51.063"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:53.117" starttime="20200331 18:04:53.117"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:53.119" level="INFO">Running command 'ozone sh key delete o3://om:9862/89801-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:54.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:54.991" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:54.991" starttime="20200331 18:04:53.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:54.992" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:54.992" starttime="20200331 18:04:54.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:54.992" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:54.993" starttime="20200331 18:04:54.992"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:54.993" starttime="20200331 18:04:53.117"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:54.993" starttime="20200331 18:04:38.421"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:54.993" starttime="20200331 18:04:38.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:54.995" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/89801-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:56.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:56.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:04:56.774" starttime="20200331 18:04:54.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:56.775" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:04:56.775" starttime="20200331 18:04:56.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:56.776" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:56.776" starttime="20200331 18:04:56.776"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:56.776" starttime="20200331 18:04:54.993"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:56.778" level="INFO">Running command 'ozone sh volume delete o3://om:9862/89801-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:04:58.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:04:58.754" level="INFO">${output} = Volume 89801-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200331 18:04:58.754" starttime="20200331 18:04:56.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:04:58.755" level="INFO">Volume 89801-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200331 18:04:58.755" starttime="20200331 18:04:58.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:04:58.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:04:58.755" starttime="20200331 18:04:58.755"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:58.756" starttime="20200331 18:04:56.776"></status>
</kw>
<status status="PASS" endtime="20200331 18:04:58.756" starttime="20200331 18:04:21.706"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:04:58.756" critical="yes" starttime="20200331 18:04:21.705"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200331 18:04:58.757" starttime="20200331 18:04:58.757"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:04:58.759" level="INFO">Running command 'ozone sh volume create o3://om:9862/89801-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:00.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:00.828" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:05:00.828" starttime="20200331 18:04:58.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:00.829" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:05:00.829" starttime="20200331 18:05:00.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:00.829" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:00.829" starttime="20200331 18:05:00.829"></status>
</kw>
<status status="PASS" endtime="20200331 18:05:00.830" starttime="20200331 18:04:58.758"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:00.831" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89801-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:02.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:02.834" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:02.834" starttime="20200331 18:05:00.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:02.835" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:02.835" starttime="20200331 18:05:02.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:02.835" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:02.835" starttime="20200331 18:05:02.835"></status>
</kw>
<msg timestamp="20200331 18:05:02.836" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:02.836" starttime="20200331 18:05:00.830"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:02.837" starttime="20200331 18:05:02.836"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:02.838" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/89801-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:04.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:04.896" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:05:04.896" starttime="20200331 18:05:02.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:04.897" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:05:04.897" starttime="20200331 18:05:04.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:04.897" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:04.897" starttime="20200331 18:05:04.897"></status>
</kw>
<msg timestamp="20200331 18:05:04.898" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:05:04.898" starttime="20200331 18:05:02.837"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:04.899" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89801-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:07.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:07.015" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:07.015" starttime="20200331 18:05:04.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:07.016" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:07.016" starttime="20200331 18:05:07.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:07.017" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:07.017" starttime="20200331 18:05:07.016"></status>
</kw>
<msg timestamp="20200331 18:05:07.017" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:07.017" starttime="20200331 18:05:04.898"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:07.018" starttime="20200331 18:05:07.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:07.020" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/89801-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:09.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:09.150" level="INFO">${output} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200331 18:05:09.150" starttime="20200331 18:05:07.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:09.151" level="INFO">ACL doesn't exist.</msg>
<status status="PASS" endtime="20200331 18:05:09.151" starttime="20200331 18:05:09.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:09.152" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:09.152" starttime="20200331 18:05:09.152"></status>
</kw>
<msg timestamp="20200331 18:05:09.152" level="INFO">${result} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200331 18:05:09.152" starttime="20200331 18:05:07.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:09.154" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89801-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:11.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:11.350" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:11.350" starttime="20200331 18:05:09.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:11.351" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:11.351" starttime="20200331 18:05:11.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:11.351" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:11.352" starttime="20200331 18:05:11.351"></status>
</kw>
<msg timestamp="20200331 18:05:11.352" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:11.352" starttime="20200331 18:05:09.153"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:11.353" starttime="20200331 18:05:11.352"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:11.355" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/89801-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:13.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:13.492" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:13.492" starttime="20200331 18:05:11.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:13.493" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:13.493" starttime="20200331 18:05:13.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:13.494" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:13.494" starttime="20200331 18:05:13.493"></status>
</kw>
<msg timestamp="20200331 18:05:13.494" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:13.494" starttime="20200331 18:05:11.353"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:13.496" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89801-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:15.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:15.685" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200331 18:05:15.686" starttime="20200331 18:05:13.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:15.687" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:15.687" starttime="20200331 18:05:15.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:15.687" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:15.687" starttime="20200331 18:05:15.687"></status>
</kw>
<msg timestamp="20200331 18:05:15.688" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200331 18:05:15.688" starttime="20200331 18:05:13.494"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:15.689" starttime="20200331 18:05:15.688"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:15.690" starttime="20200331 18:05:15.689"></status>
</kw>
<status status="PASS" endtime="20200331 18:05:15.690" starttime="20200331 18:04:58.758"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:05:15.690" critical="yes" starttime="20200331 18:04:58.756"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:15.692" starttime="20200331 18:05:15.691"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:15.694" level="INFO">Running command 'ozone sh bucket create o3://om:9862/89801-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:17.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:17.722" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:05:17.722" starttime="20200331 18:05:15.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:17.723" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:05:17.723" starttime="20200331 18:05:17.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:17.724" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:17.724" starttime="20200331 18:05:17.723"></status>
</kw>
<status status="PASS" endtime="20200331 18:05:17.724" starttime="20200331 18:05:15.692"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:17.726" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89801-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:19.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:19.753" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:19.753" starttime="20200331 18:05:17.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:19.754" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:19.754" starttime="20200331 18:05:19.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:19.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:19.755" starttime="20200331 18:05:19.754"></status>
</kw>
<msg timestamp="20200331 18:05:19.755" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:19.755" starttime="20200331 18:05:17.724"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:19.756" starttime="20200331 18:05:19.756"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:19.758" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/89801-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:21.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:21.686" level="INFO">${output} = ACL already exists.</msg>
<status status="PASS" endtime="20200331 18:05:21.686" starttime="20200331 18:05:19.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:21.687" level="INFO">ACL already exists.</msg>
<status status="PASS" endtime="20200331 18:05:21.687" starttime="20200331 18:05:21.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:21.688" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:21.688" starttime="20200331 18:05:21.687"></status>
</kw>
<msg timestamp="20200331 18:05:21.688" level="INFO">${result} = ACL already exists.</msg>
<status status="PASS" endtime="20200331 18:05:21.688" starttime="20200331 18:05:19.756"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:21.690" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89801-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:23.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:23.667" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:23.667" starttime="20200331 18:05:21.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:23.668" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:23.668" starttime="20200331 18:05:23.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:23.669" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:23.669" starttime="20200331 18:05:23.668"></status>
</kw>
<msg timestamp="20200331 18:05:23.669" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:23.669" starttime="20200331 18:05:21.688"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:23.670" starttime="20200331 18:05:23.669"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:23.672" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/89801-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:25.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:25.616" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:05:25.616" starttime="20200331 18:05:23.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:25.617" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:05:25.617" starttime="20200331 18:05:25.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:25.618" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:25.618" starttime="20200331 18:05:25.617"></status>
</kw>
<msg timestamp="20200331 18:05:25.618" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:05:25.618" starttime="20200331 18:05:23.670"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:25.620" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89801-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:27.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:27.543" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:27.543" starttime="20200331 18:05:25.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:27.544" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:27.544" starttime="20200331 18:05:27.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:27.545" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:27.545" starttime="20200331 18:05:27.544"></status>
</kw>
<msg timestamp="20200331 18:05:27.545" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:27.545" starttime="20200331 18:05:25.618"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:27.546" starttime="20200331 18:05:27.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:27.549" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/89801-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:29.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:29.617" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:29.617" starttime="20200331 18:05:27.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:29.618" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:29.618" starttime="20200331 18:05:29.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:29.618" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:29.619" starttime="20200331 18:05:29.618"></status>
</kw>
<msg timestamp="20200331 18:05:29.619" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:29.619" starttime="20200331 18:05:27.546"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:29.621" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89801-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:31.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:31.708" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200331 18:05:31.708" starttime="20200331 18:05:29.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:31.708" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:31.709" starttime="20200331 18:05:31.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:31.709" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:31.709" starttime="20200331 18:05:31.709"></status>
</kw>
<msg timestamp="20200331 18:05:31.709" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200331 18:05:31.709" starttime="20200331 18:05:29.619"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:31.710" starttime="20200331 18:05:31.710"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:31.711" starttime="20200331 18:05:31.710"></status>
</kw>
<status status="PASS" endtime="20200331 18:05:31.711" starttime="20200331 18:05:15.692"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:05:31.711" critical="yes" starttime="20200331 18:05:15.690"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:31.712" starttime="20200331 18:05:31.712"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:31.715" level="INFO">Running command 'ozone sh key put o3://om:9862/89801-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:35.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:35.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:05:35.315" starttime="20200331 18:05:31.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:35.316" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:05:35.316" starttime="20200331 18:05:35.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:35.317" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:35.317" starttime="20200331 18:05:35.316"></status>
</kw>
<status status="PASS" endtime="20200331 18:05:35.317" starttime="20200331 18:05:31.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:35.319" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89801-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:37.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:37.525" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:37.525" starttime="20200331 18:05:35.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:37.526" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:37.526" starttime="20200331 18:05:37.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:37.526" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:37.527" starttime="20200331 18:05:37.526"></status>
</kw>
<msg timestamp="20200331 18:05:37.527" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:37.527" starttime="20200331 18:05:35.317"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:37.528" starttime="20200331 18:05:37.527"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:37.530" level="INFO">Running command 'ozone sh key addacl o3://om:9862/89801-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:39.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:39.489" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:05:39.489" starttime="20200331 18:05:37.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:39.490" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:05:39.490" starttime="20200331 18:05:39.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:39.491" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:39.491" starttime="20200331 18:05:39.490"></status>
</kw>
<msg timestamp="20200331 18:05:39.491" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:05:39.491" starttime="20200331 18:05:37.528"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:39.493" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89801-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:41.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:41.518" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:41.518" starttime="20200331 18:05:39.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:41.520" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:41.520" starttime="20200331 18:05:41.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:41.520" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:41.520" starttime="20200331 18:05:41.520"></status>
</kw>
<msg timestamp="20200331 18:05:41.520" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:41.520" starttime="20200331 18:05:39.491"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:41.522" starttime="20200331 18:05:41.521"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:41.523" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/89801-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:43.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:43.442" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:05:43.442" starttime="20200331 18:05:41.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:43.443" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:05:43.443" starttime="20200331 18:05:43.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:43.443" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:43.443" starttime="20200331 18:05:43.443"></status>
</kw>
<msg timestamp="20200331 18:05:43.444" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:05:43.444" starttime="20200331 18:05:41.522"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:43.446" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89801-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:45.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:45.382" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:45.382" starttime="20200331 18:05:43.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:45.383" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:45.383" starttime="20200331 18:05:45.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:45.384" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:45.384" starttime="20200331 18:05:45.384"></status>
</kw>
<msg timestamp="20200331 18:05:45.384" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200331 18:05:45.385" starttime="20200331 18:05:43.444"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:45.385" starttime="20200331 18:05:45.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:45.387" level="INFO">Running command 'ozone sh key setacl o3://om:9862/89801-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:47.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:47.321" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:47.321" starttime="20200331 18:05:45.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:47.322" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:47.322" starttime="20200331 18:05:47.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:47.322" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:47.322" starttime="20200331 18:05:47.322"></status>
</kw>
<msg timestamp="20200331 18:05:47.323" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:05:47.323" starttime="20200331 18:05:45.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:47.325" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89801-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:49.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:49.351" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200331 18:05:49.351" starttime="20200331 18:05:47.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:49.352" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:05:49.352" starttime="20200331 18:05:49.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:49.352" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:49.352" starttime="20200331 18:05:49.352"></status>
</kw>
<msg timestamp="20200331 18:05:49.352" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200331 18:05:49.352" starttime="20200331 18:05:47.323"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:49.353" starttime="20200331 18:05:49.353"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:49.354" starttime="20200331 18:05:49.353"></status>
</kw>
<status status="PASS" endtime="20200331 18:05:49.354" starttime="20200331 18:05:31.712"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:05:49.354" critical="yes" starttime="20200331 18:05:31.711"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:49.357" starttime="20200331 18:05:49.357"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:49.360" level="INFO">Running command 'ozone sh volume info o3:///89801-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:51.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20200331 18:05:51.238" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89801-rpcwport is not found</msg>
<status status="PASS" endtime="20200331 18:05:51.238" starttime="20200331 18:05:49.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:51.240" level="INFO">VOLUME_NOT_FOUND Volume 89801-rpcwport is not found</msg>
<status status="PASS" endtime="20200331 18:05:51.240" starttime="20200331 18:05:51.238"></status>
</kw>
<msg timestamp="20200331 18:05:51.240" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89801-rpcwport is not found</msg>
<status status="PASS" endtime="20200331 18:05:51.240" starttime="20200331 18:05:49.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:51.241" starttime="20200331 18:05:51.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:51.243" level="INFO">Running command 'ozone sh volume create o3:///89801-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:53.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:53.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:05:53.244" starttime="20200331 18:05:51.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:53.245" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:05:53.245" starttime="20200331 18:05:53.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:53.246" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:53.246" starttime="20200331 18:05:53.245"></status>
</kw>
<msg timestamp="20200331 18:05:53.246" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200331 18:05:53.246" starttime="20200331 18:05:51.241"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:53.247" starttime="20200331 18:05:53.246"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:53.249" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="89801-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:55.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:55.494" level="INFO">${output} = {
  "metadata": {},
  "name": "89801-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:05:53.227Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200331 18:05:55.494" starttime="20200331 18:05:53.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:55.495" level="INFO">{
  "metadata": {},
  "name": "89801-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:05:53.227Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:05:55.495" starttime="20200331 18:05:55.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:55.495" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:55.495" starttime="20200331 18:05:55.495"></status>
</kw>
<msg timestamp="20200331 18:05:55.496" level="INFO">${result} = {
  "metadata": {},
  "name": "89801-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:05:53.227Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200331 18:05:55.496" starttime="20200331 18:05:53.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:55.497" starttime="20200331 18:05:55.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:55.499" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="89801-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:57.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:57.577" level="INFO">${output} = {
  "metadata": {},
  "name": "89801-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:05:53.227Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200331 18:05:57.577" starttime="20200331 18:05:55.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:57.578" level="INFO">{
  "metadata": {},
  "name": "89801-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:05:53.227Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:05:57.578" starttime="20200331 18:05:57.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:57.578" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:57.579" starttime="20200331 18:05:57.578"></status>
</kw>
<msg timestamp="20200331 18:05:57.579" level="INFO">${result} = {
  "metadata": {},
  "name": "89801-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:05:53.227Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200331 18:05:57.579" starttime="20200331 18:05:55.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:05:57.579" starttime="20200331 18:05:57.579"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:57.581" level="INFO">Running command 'ozone sh volume update o3:///89801-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:05:59.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:05:59.636" level="INFO">${output} = {
  "metadata" : { },
  "name" : "89801-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-31T18:05:53.227Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" endtime="20200331 18:05:59.636" starttime="20200331 18:05:57.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:05:59.637" level="INFO">{
  "metadata" : { },
  "name" : "89801-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-31T18:05:53.227Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200331 18:05:59.637" starttime="20200331 18:05:59.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:05:59.638" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:05:59.638" starttime="20200331 18:05:59.637"></status>
</kw>
<status status="PASS" endtime="20200331 18:05:59.638" starttime="20200331 18:05:57.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:05:59.641" level="INFO">Running command 'ozone sh volume info o3:///89801-rpcwport | jq -r '. | select(.name=="89801-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:01.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:01.679" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:06:01.679" starttime="20200331 18:05:59.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:01.680" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200331 18:06:01.680" starttime="20200331 18:06:01.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:01.680" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:01.681" starttime="20200331 18:06:01.680"></status>
</kw>
<msg timestamp="20200331 18:06:01.681" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:06:01.681" starttime="20200331 18:05:59.638"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:01.681" starttime="20200331 18:06:01.681"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:01.684" level="INFO">Running command 'ozone sh bucket create o3:///89801-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:03.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:03.796" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:03.796" starttime="20200331 18:06:01.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:03.797" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:03.797" starttime="20200331 18:06:03.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:03.798" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:03.798" starttime="20200331 18:06:03.797"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:03.798" starttime="20200331 18:06:01.682"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:03.800" level="INFO">Running command 'ozone sh bucket info o3:///89801-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:05.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:05.793" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200331 18:06:05.793" starttime="20200331 18:06:03.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:05.794" level="INFO">DISK</msg>
<status status="PASS" endtime="20200331 18:06:05.794" starttime="20200331 18:06:05.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:05.794" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:05.795" starttime="20200331 18:06:05.794"></status>
</kw>
<msg timestamp="20200331 18:06:05.795" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200331 18:06:05.795" starttime="20200331 18:06:03.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:05.796" starttime="20200331 18:06:05.795"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:05.798" level="INFO">Running command 'ozone sh bucket list o3:///89801-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:07.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:07.778" level="INFO">${output} = 89801-rpcwport</msg>
<status status="PASS" endtime="20200331 18:06:07.778" starttime="20200331 18:06:05.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:07.779" level="INFO">89801-rpcwport</msg>
<status status="PASS" endtime="20200331 18:06:07.779" starttime="20200331 18:06:07.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:07.780" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:07.780" starttime="20200331 18:06:07.779"></status>
</kw>
<msg timestamp="20200331 18:06:07.780" level="INFO">${result} = 89801-rpcwport</msg>
<status status="PASS" endtime="20200331 18:06:07.780" starttime="20200331 18:06:05.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:07.781" starttime="20200331 18:06:07.780"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:07.784" level="INFO">Running command 'ozone sh key put o3:///89801-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:11.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:11.628" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:11.628" starttime="20200331 18:06:07.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:11.629" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:11.629" starttime="20200331 18:06:11.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:11.629" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:11.629" starttime="20200331 18:06:11.629"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:11.630" starttime="20200331 18:06:07.782"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:11.631" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:11.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:11.634" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:11.634" starttime="20200331 18:06:11.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:11.635" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:11.635" starttime="20200331 18:06:11.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:11.635" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:11.635" starttime="20200331 18:06:11.635"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:11.636" starttime="20200331 18:06:11.630"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:11.637" level="INFO">Running command 'ozone sh key get o3:///89801-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:15.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:15.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:15.242" starttime="20200331 18:06:11.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:15.244" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:15.244" starttime="20200331 18:06:15.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:15.244" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:15.244" starttime="20200331 18:06:15.244"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:15.245" starttime="20200331 18:06:11.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:15.246" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:15.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:15.249" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 31 18:06 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:06:15.249" starttime="20200331 18:06:15.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:15.250" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 31 18:06 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:06:15.250" starttime="20200331 18:06:15.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:15.251" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:15.251" starttime="20200331 18:06:15.250"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:15.251" starttime="20200331 18:06:15.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:15.253" level="INFO">Running command 'ozone sh key info o3:///89801-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:17.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:17.351" level="INFO">${output} = {
  "volumeName": "89801-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:06:09.770Z",
  "modificationTime": "2020-03-31T18:06:11.261Z",
  "rep...</msg>
<status status="PASS" endtime="20200331 18:06:17.351" starttime="20200331 18:06:15.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:17.352" level="INFO">{
  "volumeName": "89801-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:06:09.770Z",
  "modificationTime": "2020-03-31T18:06:11.261Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103918991426781310,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200331 18:06:17.352" starttime="20200331 18:06:17.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:17.353" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:17.353" starttime="20200331 18:06:17.352"></status>
</kw>
<msg timestamp="20200331 18:06:17.353" level="INFO">${result} = {
  "volumeName": "89801-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:06:09.770Z",
  "modificationTime": "2020-03-31T18:06:11.261Z",
  "rep...</msg>
<status status="PASS" endtime="20200331 18:06:17.353" starttime="20200331 18:06:15.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:17.353" starttime="20200331 18:06:17.353"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:17.355" level="INFO">Running command 'ozone sh key list o3:///89801-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:19.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:19.358" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200331 18:06:19.358" starttime="20200331 18:06:17.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:19.359" level="INFO">key1</msg>
<status status="PASS" endtime="20200331 18:06:19.359" starttime="20200331 18:06:19.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:19.360" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:19.360" starttime="20200331 18:06:19.359"></status>
</kw>
<msg timestamp="20200331 18:06:19.360" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200331 18:06:19.360" starttime="20200331 18:06:17.354"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:19.361" starttime="20200331 18:06:19.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:19.362" level="INFO">Running command 'ozone sh key rename o3:///89801-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:21.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:21.411" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:21.412" starttime="20200331 18:06:19.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:21.412" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:21.413" starttime="20200331 18:06:21.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:21.413" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:21.413" starttime="20200331 18:06:21.413"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:21.413" starttime="20200331 18:06:19.361"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:21.415" level="INFO">Running command 'ozone sh key list o3:///89801-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:23.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:23.336" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200331 18:06:23.336" starttime="20200331 18:06:21.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:23.337" level="INFO">key2</msg>
<status status="PASS" endtime="20200331 18:06:23.337" starttime="20200331 18:06:23.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:23.338" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:23.338" starttime="20200331 18:06:23.337"></status>
</kw>
<msg timestamp="20200331 18:06:23.338" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200331 18:06:23.338" starttime="20200331 18:06:21.413"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:23.338" starttime="20200331 18:06:23.338"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:23.340" level="INFO">Running command 'ozone sh key delete o3:///89801-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:25.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:25.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:25.274" starttime="20200331 18:06:23.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:25.276" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:25.276" starttime="20200331 18:06:25.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:25.276" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:25.276" starttime="20200331 18:06:25.276"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:25.277" starttime="20200331 18:06:23.339"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:25.277" starttime="20200331 18:06:07.781"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:25.277" starttime="20200331 18:06:07.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:25.279" level="INFO">Running command 'ozone sh bucket delete o3:///89801-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:27.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:27.176" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:27.176" starttime="20200331 18:06:25.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:27.177" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:27.177" starttime="20200331 18:06:27.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:27.177" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:27.177" starttime="20200331 18:06:27.177"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:27.178" starttime="20200331 18:06:25.277"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:27.179" level="INFO">Running command 'ozone sh volume delete o3:///89801-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:28.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:28.987" level="INFO">${output} = Volume 89801-rpcwport is deleted</msg>
<status status="PASS" endtime="20200331 18:06:28.987" starttime="20200331 18:06:27.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:28.988" level="INFO">Volume 89801-rpcwport is deleted</msg>
<status status="PASS" endtime="20200331 18:06:28.988" starttime="20200331 18:06:28.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:28.989" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:28.989" starttime="20200331 18:06:28.988"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:28.989" starttime="20200331 18:06:27.178"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:28.989" starttime="20200331 18:05:49.357"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:06:28.989" critical="yes" starttime="20200331 18:05:49.355"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:28.991" starttime="20200331 18:06:28.990"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:28.993" level="INFO">Running command 'ozone sh volume info /89801-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:30.918" level="INFO">${rc} = 255</msg>
<msg timestamp="20200331 18:06:30.918" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89801-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200331 18:06:30.918" starttime="20200331 18:06:28.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:30.919" level="INFO">VOLUME_NOT_FOUND Volume 89801-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200331 18:06:30.919" starttime="20200331 18:06:30.918"></status>
</kw>
<msg timestamp="20200331 18:06:30.919" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89801-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200331 18:06:30.919" starttime="20200331 18:06:28.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:30.920" starttime="20200331 18:06:30.919"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:30.922" level="INFO">Running command 'ozone sh volume create /89801-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:32.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:32.779" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:32.779" starttime="20200331 18:06:30.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:32.780" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:32.780" starttime="20200331 18:06:32.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:32.780" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:32.781" starttime="20200331 18:06:32.780"></status>
</kw>
<msg timestamp="20200331 18:06:32.781" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200331 18:06:32.781" starttime="20200331 18:06:30.920"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:32.781" starttime="20200331 18:06:32.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:32.783" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="89801-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:34.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:34.753" level="INFO">${output} = {
  "metadata": {},
  "name": "89801-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:06:32.761Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200331 18:06:34.753" starttime="20200331 18:06:32.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:34.754" level="INFO">{
  "metadata": {},
  "name": "89801-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:06:32.761Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:06:34.754" starttime="20200331 18:06:34.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:34.754" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:34.754" starttime="20200331 18:06:34.754"></status>
</kw>
<msg timestamp="20200331 18:06:34.755" level="INFO">${result} = {
  "metadata": {},
  "name": "89801-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:06:32.761Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200331 18:06:34.755" starttime="20200331 18:06:32.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:34.755" starttime="20200331 18:06:34.755"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:34.757" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="89801-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:36.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:36.674" level="INFO">${output} = {
  "metadata": {},
  "name": "89801-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:06:32.761Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200331 18:06:36.674" starttime="20200331 18:06:34.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:36.675" level="INFO">{
  "metadata": {},
  "name": "89801-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:06:32.761Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:06:36.675" starttime="20200331 18:06:36.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:36.675" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:36.676" starttime="20200331 18:06:36.675"></status>
</kw>
<msg timestamp="20200331 18:06:36.676" level="INFO">${result} = {
  "metadata": {},
  "name": "89801-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-31T18:06:32.761Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200331 18:06:36.676" starttime="20200331 18:06:34.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:36.676" starttime="20200331 18:06:36.676"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:36.678" level="INFO">Running command 'ozone sh volume update /89801-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:38.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:38.629" level="INFO">${output} = {
  "metadata" : { },
  "name" : "89801-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-31T18:06:32.761Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" endtime="20200331 18:06:38.629" starttime="20200331 18:06:36.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:38.630" level="INFO">{
  "metadata" : { },
  "name" : "89801-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-31T18:06:32.761Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200331 18:06:38.630" starttime="20200331 18:06:38.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:38.630" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:38.631" starttime="20200331 18:06:38.630"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:38.631" starttime="20200331 18:06:36.676"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:38.633" level="INFO">Running command 'ozone sh volume info /89801-rpcwoscheme | jq -r '. | select(.name=="89801-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:40.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:40.636" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:06:40.636" starttime="20200331 18:06:38.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:40.637" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200331 18:06:40.637" starttime="20200331 18:06:40.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:40.637" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:40.638" starttime="20200331 18:06:40.637"></status>
</kw>
<msg timestamp="20200331 18:06:40.638" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:06:40.638" starttime="20200331 18:06:38.631"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:40.638" starttime="20200331 18:06:40.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:40.640" level="INFO">Running command 'ozone sh bucket create /89801-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:42.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:42.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:42.656" starttime="20200331 18:06:40.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:42.657" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:42.657" starttime="20200331 18:06:42.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:42.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:42.658" starttime="20200331 18:06:42.658"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:42.658" starttime="20200331 18:06:40.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:42.660" level="INFO">Running command 'ozone sh bucket info /89801-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:44.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:44.431" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200331 18:06:44.431" starttime="20200331 18:06:42.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:44.432" level="INFO">DISK</msg>
<status status="PASS" endtime="20200331 18:06:44.432" starttime="20200331 18:06:44.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:44.433" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:44.433" starttime="20200331 18:06:44.432"></status>
</kw>
<msg timestamp="20200331 18:06:44.433" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200331 18:06:44.433" starttime="20200331 18:06:42.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:44.434" starttime="20200331 18:06:44.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:44.436" level="INFO">Running command 'ozone sh bucket list /89801-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:46.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:46.416" level="INFO">${output} = 89801-rpcwoscheme</msg>
<status status="PASS" endtime="20200331 18:06:46.416" starttime="20200331 18:06:44.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:46.417" level="INFO">89801-rpcwoscheme</msg>
<status status="PASS" endtime="20200331 18:06:46.417" starttime="20200331 18:06:46.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:46.418" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:46.418" starttime="20200331 18:06:46.417"></status>
</kw>
<msg timestamp="20200331 18:06:46.418" level="INFO">${result} = 89801-rpcwoscheme</msg>
<status status="PASS" endtime="20200331 18:06:46.418" starttime="20200331 18:06:44.434"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:46.419" starttime="20200331 18:06:46.419"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:46.424" level="INFO">Running command 'ozone sh key put /89801-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:49.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:49.884" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:49.884" starttime="20200331 18:06:46.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:49.885" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:49.885" starttime="20200331 18:06:49.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:49.886" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:49.886" starttime="20200331 18:06:49.885"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:49.886" starttime="20200331 18:06:46.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:49.888" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:49.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:49.891" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:49.891" starttime="20200331 18:06:49.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:49.892" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:49.892" starttime="20200331 18:06:49.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:49.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:49.893" starttime="20200331 18:06:49.892"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:49.893" starttime="20200331 18:06:49.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:49.894" level="INFO">Running command 'ozone sh key get /89801-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:53.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:53.311" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:53.311" starttime="20200331 18:06:49.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:53.312" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:53.312" starttime="20200331 18:06:53.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:53.312" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:53.313" starttime="20200331 18:06:53.312"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:53.313" starttime="20200331 18:06:49.893"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:53.314" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:53.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:53.317" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 31 18:06 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:06:53.317" starttime="20200331 18:06:53.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:53.318" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 31 18:06 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:06:53.318" starttime="20200331 18:06:53.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:53.319" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:53.319" starttime="20200331 18:06:53.318"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:53.319" starttime="20200331 18:06:53.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:53.321" level="INFO">Running command 'ozone sh key info /89801-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:55.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:55.242" level="INFO">${output} = {
  "volumeName": "89801-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:06:48.249Z",
  "modificationTime": "2020-03-31T18:06:49.524Z",
  "...</msg>
<status status="PASS" endtime="20200331 18:06:55.242" starttime="20200331 18:06:53.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:55.243" level="INFO">{
  "volumeName": "89801-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:06:48.249Z",
  "modificationTime": "2020-03-31T18:06:49.524Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103918993948541060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200331 18:06:55.243" starttime="20200331 18:06:55.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:55.244" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:55.244" starttime="20200331 18:06:55.243"></status>
</kw>
<msg timestamp="20200331 18:06:55.244" level="INFO">${result} = {
  "volumeName": "89801-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:06:48.249Z",
  "modificationTime": "2020-03-31T18:06:49.524Z",
  "...</msg>
<status status="PASS" endtime="20200331 18:06:55.244" starttime="20200331 18:06:53.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:55.245" starttime="20200331 18:06:55.244"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:55.247" level="INFO">Running command 'ozone sh key list /89801-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:57.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:57.124" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200331 18:06:57.124" starttime="20200331 18:06:55.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:57.126" level="INFO">key1</msg>
<status status="PASS" endtime="20200331 18:06:57.126" starttime="20200331 18:06:57.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:57.126" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:57.127" starttime="20200331 18:06:57.126"></status>
</kw>
<msg timestamp="20200331 18:06:57.127" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200331 18:06:57.127" starttime="20200331 18:06:55.245"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:06:57.128" starttime="20200331 18:06:57.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:57.131" level="INFO">Running command 'ozone sh key rename /89801-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:06:58.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:06:58.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:06:58.959" starttime="20200331 18:06:57.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:06:58.960" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:06:58.960" starttime="20200331 18:06:58.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:06:58.961" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:06:58.961" starttime="20200331 18:06:58.960"></status>
</kw>
<status status="PASS" endtime="20200331 18:06:58.961" starttime="20200331 18:06:57.129"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:06:58.963" level="INFO">Running command 'ozone sh key list /89801-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:07:00.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:07:00.789" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200331 18:07:00.789" starttime="20200331 18:06:58.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:07:00.790" level="INFO">key2</msg>
<status status="PASS" endtime="20200331 18:07:00.790" starttime="20200331 18:07:00.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:07:00.790" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:07:00.790" starttime="20200331 18:07:00.790"></status>
</kw>
<msg timestamp="20200331 18:07:00.790" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200331 18:07:00.791" starttime="20200331 18:06:58.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200331 18:07:00.791" starttime="20200331 18:07:00.791"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:07:00.793" level="INFO">Running command 'ozone sh key delete /89801-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:07:02.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:07:02.508" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:07:02.508" starttime="20200331 18:07:00.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:07:02.509" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:07:02.509" starttime="20200331 18:07:02.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:07:02.509" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:07:02.510" starttime="20200331 18:07:02.509"></status>
</kw>
<status status="PASS" endtime="20200331 18:07:02.510" starttime="20200331 18:07:00.791"></status>
</kw>
<status status="PASS" endtime="20200331 18:07:02.510" starttime="20200331 18:06:46.421"></status>
</kw>
<status status="PASS" endtime="20200331 18:07:02.510" starttime="20200331 18:06:46.420"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:07:02.512" level="INFO">Running command 'ozone sh bucket delete /89801-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:07:04.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:07:04.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:07:04.258" starttime="20200331 18:07:02.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:07:04.259" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:07:04.259" starttime="20200331 18:07:04.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:07:04.260" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:07:04.260" starttime="20200331 18:07:04.260"></status>
</kw>
<status status="PASS" endtime="20200331 18:07:04.260" starttime="20200331 18:07:02.510"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:07:04.263" level="INFO">Running command 'ozone sh volume delete /89801-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:07:05.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:07:05.895" level="INFO">${output} = Volume 89801-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200331 18:07:05.895" starttime="20200331 18:07:04.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:07:05.896" level="INFO">Volume 89801-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200331 18:07:05.896" starttime="20200331 18:07:05.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:07:05.897" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:07:05.897" starttime="20200331 18:07:05.896"></status>
</kw>
<status status="PASS" endtime="20200331 18:07:05.897" starttime="20200331 18:07:04.261"></status>
</kw>
<status status="PASS" endtime="20200331 18:07:05.897" starttime="20200331 18:06:28.991"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:07:05.897" critical="yes" starttime="20200331 18:06:28.990"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200331 18:07:05.898" starttime="20200331 18:04:21.699"></status>
</suite>
<status status="PASS" endtime="20200331 18:07:05.902" starttime="20200331 18:03:04.518"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-basic" pass="8">ozone-basic</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-basic.Basic</stat>
<stat fail="0" id="s1-s2" name="Ozone-Shell" pass="6">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
