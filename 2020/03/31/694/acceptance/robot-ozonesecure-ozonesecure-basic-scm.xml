<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200331 18:19:22.381" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:19:22.430" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:19:22.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:19:22.433" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:19:22.433" starttime="20200331 18:19:22.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:19:22.433" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:19:22.433" starttime="20200331 18:19:22.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:19:22.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:19:22.434" starttime="20200331 18:19:22.434"></status>
</kw>
<msg timestamp="20200331 18:19:22.434" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:19:22.434" starttime="20200331 18:19:22.428"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:19:22.436" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:19:22.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:19:22.451" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:19:22.451" starttime="20200331 18:19:22.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:19:22.452" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:19:22.452" starttime="20200331 18:19:22.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:19:22.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:19:22.452" starttime="20200331 18:19:22.452"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.453" starttime="20200331 18:19:22.435"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.453" starttime="20200331 18:19:22.434"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.453" starttime="20200331 18:19:22.428"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.453" starttime="20200331 18:19:22.427"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:19:22.454" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:19:22.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:19:22.530" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 31 Mar 2020 18:19:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 31 Mar 2020 17:41:08 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200331 18:19:22.530" starttime="20200331 18:19:22.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:19:22.531" level="INFO">HTTP/1.1 200 OK
Date: Tue, 31 Mar 2020 18:19:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 31 Mar 2020 17:41:08 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200331 18:19:22.532" starttime="20200331 18:19:22.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:19:22.532" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:19:22.532" starttime="20200331 18:19:22.532"></status>
</kw>
<msg timestamp="20200331 18:19:22.533" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 31 Mar 2020 18:19:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 31 Mar 2020 17:41:08 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200331 18:19:22.533" starttime="20200331 18:19:22.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200331 18:19:22.533" starttime="20200331 18:19:22.533"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:19:22.534" critical="yes" starttime="20200331 18:19:22.426"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:19:22.537" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:19:22.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:19:22.540" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:19:22.540" starttime="20200331 18:19:22.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:19:22.541" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:19:22.541" starttime="20200331 18:19:22.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:19:22.541" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:19:22.541" starttime="20200331 18:19:22.541"></status>
</kw>
<msg timestamp="20200331 18:19:22.542" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:19:22.542" starttime="20200331 18:19:22.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200331 18:19:22.543" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200331 18:19:22.543" starttime="20200331 18:19:22.542"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:19:22.545" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:19:22.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:19:22.555" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:19:22.555" starttime="20200331 18:19:22.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:19:22.556" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:19:22.556" starttime="20200331 18:19:22.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:19:22.556" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:19:22.556" starttime="20200331 18:19:22.556"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.557" starttime="20200331 18:19:22.543"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.557" starttime="20200331 18:19:22.543"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.557" starttime="20200331 18:19:22.535"></status>
</kw>
<status status="PASS" endtime="20200331 18:19:22.557" starttime="20200331 18:19:22.535"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:19:22.559" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:31.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:31.451" level="INFO">${output} = 2020-03-31 18:19:23,426 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:19:23,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:20:31.451" starttime="20200331 18:19:22.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:31.452" level="INFO">2020-03-31 18:19:23,426 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:19:23,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-31 18:19:23,598 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-03-31 18:19:25,279 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-31 18:19:25,281 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-03-31 18:19:25,282 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-03-31 18:19:25,282 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-03-31 18:19:25,282 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-31 18:19:25,282 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-31 18:19:25,282 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-03-31 18:19:25,292 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-03-31 18:19:25,295 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-31 18:19:25,312 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-03-31 18:19:25,339 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-32578, with testuser/scm@EXAMPLE.COM as owner.
2020-03-31 18:19:25,463 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-76275, with testuser/scm@EXAMPLE.COM as owner.
2020-03-31 18:19:25,471 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-21717, with testuser/scm@EXAMPLE.COM as owner.
2020-03-31 18:19:25,477 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-01725, with testuser/scm@EXAMPLE.COM as owner.
2020-03-31 18:19:25,483 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-80712, with testuser/scm@EXAMPLE.COM as owner.
2020-03-31 18:19:25,490 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-32578/bucket-0-16209, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,528 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76275/bucket-0-35274, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,534 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21717/bucket-0-20284, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,541 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-01725/bucket-0-37880, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,545 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-80712/bucket-0-63781, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,556 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-32578/bucket-1-42568, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,561 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76275/bucket-1-41263, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,573 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21717/bucket-1-92803, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,582 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-01725/bucket-1-88863, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-80712/bucket-1-78324, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,599 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-32578/bucket-2-60692, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,603 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76275/bucket-2-00436, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21717/bucket-2-48835, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-01725/bucket-2-43245, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,626 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-80712/bucket-2-06788, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,632 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-32578/bucket-3-28858, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,639 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76275/bucket-3-63389, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,642 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21717/bucket-3-76314, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,646 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-01725/bucket-3-42019, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,653 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-80712/bucket-3-43165, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,657 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-32578/bucket-4-75190, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76275/bucket-4-13622, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,668 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21717/bucket-4-16968, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,672 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-01725/bucket-4-38579, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:25,676 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-80712/bucket-4-23767, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:19:26,149 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-31 18:19:26,315 [Thread-9] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-31 18:19:27,325 [Thread-9] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-31 18:19:28,326 [Thread-9] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-31 18:19:29,326 [Thread-9] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-31 18:19:30,327 [Thread-9] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-31 18:19:31,334 [Thread-9] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-03-31 18:19:32,334 [Thread-9] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-03-31 18:19:33,335 [Thread-9] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-03-31 18:19:34,335 [Thread-9] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-03-31 18:19:35,336 [Thread-9] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-03-31 18:19:36,336 [Thread-9] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-03-31 18:19:37,337 [Thread-9] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-03-31 18:19:38,337 [Thread-9] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-03-31 18:19:39,338 [Thread-9] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-03-31 18:19:40,338 [Thread-9] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-03-31 18:19:41,339 [Thread-9] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-03-31 18:19:42,339 [Thread-9] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-03-31 18:19:43,339 [Thread-9] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-03-31 18:19:44,340 [Thread-9] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-03-31 18:19:45,341 [Thread-9] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-03-31 18:19:46,341 [Thread-9] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-03-31 18:19:47,342 [Thread-9] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-03-31 18:19:48,342 [Thread-9] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-03-31 18:19:49,343 [Thread-9] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-03-31 18:19:50,343 [Thread-9] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-03-31 18:19:51,348 [Thread-9] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-03-31 18:19:52,348 [Thread-9] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-03-31 18:19:53,349 [Thread-9] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-03-31 18:19:54,349 [Thread-9] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-03-31 18:19:55,350 [Thread-9] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-03-31 18:19:56,350 [Thread-9] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-03-31 18:19:57,351 [Thread-9] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-03-31 18:19:58,352 [Thread-9] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-03-31 18:19:59,353 [Thread-9] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-03-31 18:20:00,353 [Thread-9] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-03-31 18:20:01,354 [Thread-9] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-03-31 18:20:02,354 [Thread-9] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-03-31 18:20:03,355 [Thread-9] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-03-31 18:20:04,355 [Thread-9] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-03-31 18:20:05,356 [Thread-9] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-03-31 18:20:06,356 [Thread-9] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-03-31 18:20:07,356 [Thread-9] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-03-31 18:20:08,357 [Thread-9] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-03-31 18:20:09,357 [Thread-9] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-03-31 18:20:10,358 [Thread-9] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-03-31 18:20:11,358 [Thread-9] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-03-31 18:20:12,359 [Thread-9] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-03-31 18:20:13,359 [Thread-9] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-03-31 18:20:14,360 [Thread-9] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-03-31 18:20:15,361 [Thread-9] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-03-31 18:20:16,361 [Thread-9] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-03-31 18:20:17,362 [Thread-9] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-03-31 18:20:18,363 [Thread-9] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-03-31 18:20:19,364 [Thread-9] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-03-31 18:20:20,365 [Thread-9] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-03-31 18:20:21,365 [Thread-9] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-03-31 18:20:22,366 [Thread-9] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-03-31 18:20:23,366 [Thread-9] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-03-31 18:20:24,366 [Thread-9] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-03-31 18:20:25,367 [Thread-9] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-03-31 18:20:26,367 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,166
Average Time spent in bucket creation: 00:00:00,098
Average Time spent in key creation: 00:00:02,511
Average Time spent in key write: 00:00:00,569
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,239
***************************************************</msg>
<status status="PASS" endtime="20200331 18:20:31.452" starttime="20200331 18:20:31.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:31.453" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:31.453" starttime="20200331 18:20:31.452"></status>
</kw>
<msg timestamp="20200331 18:20:31.453" level="INFO">${result} = 2020-03-31 18:19:23,426 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:19:23,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:20:31.453" starttime="20200331 18:19:22.557"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:31.454" starttime="20200331 18:20:31.454"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:31.455" starttime="20200331 18:20:31.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:31.455" starttime="20200331 18:20:31.455"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:20:31.455" critical="yes" starttime="20200331 18:19:22.534"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200331 18:20:31.456" starttime="20200331 18:19:22.404"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200331 18:20:31.465" level="INFO">${random} = 66144</msg>
<status status="PASS" endtime="20200331 18:20:31.465" starttime="20200331 18:20:31.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200331 18:20:31.465" level="INFO">${prefix} = 66144</msg>
<status status="PASS" endtime="20200331 18:20:31.466" starttime="20200331 18:20:31.465"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:31.466" starttime="20200331 18:20:31.464"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:31.469" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:31.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:31.472" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:20:31.472" starttime="20200331 18:20:31.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:31.473" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:20:31.473" starttime="20200331 18:20:31.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:31.473" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:31.473" starttime="20200331 18:20:31.473"></status>
</kw>
<msg timestamp="20200331 18:20:31.474" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:20:31.474" starttime="20200331 18:20:31.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200331 18:20:31.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200331 18:20:31.475" starttime="20200331 18:20:31.474"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:31.478" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:31.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:31.549" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:20:31.550" starttime="20200331 18:20:31.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:31.551" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:20:31.551" starttime="20200331 18:20:31.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:31.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:31.551" starttime="20200331 18:20:31.551"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:31.552" starttime="20200331 18:20:31.476"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:31.552" starttime="20200331 18:20:31.475"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:31.552" starttime="20200331 18:20:31.467"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:31.552" starttime="20200331 18:20:31.466"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:31.554" level="INFO">Running command 'ozone sh volume info o3://om:9862/66144-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:33.876" level="INFO">${rc} = 255</msg>
<msg timestamp="20200331 18:20:33.876" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:20:33.876" starttime="20200331 18:20:31.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:33.877" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 66144-rpcwoport is not found</msg>
<status status="PASS" endtime="20200331 18:20:33.877" starttime="20200331 18:20:33.876"></status>
</kw>
<msg timestamp="20200331 18:20:33.877" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:20:33.878" starttime="20200331 18:20:31.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:33.878" starttime="20200331 18:20:33.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:33.880" level="INFO">Running command 'ozone sh volume create o3://om:9862/66144-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:36.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:36.166" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:20:36.166" starttime="20200331 18:20:33.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:36.167" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:20:36.167" starttime="20200331 18:20:36.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:36.167" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:36.167" starttime="20200331 18:20:36.167"></status>
</kw>
<msg timestamp="20200331 18:20:36.168" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:20:36.168" starttime="20200331 18:20:33.878"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:36.168" starttime="20200331 18:20:36.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:36.170" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="66144-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:38.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:38.485" level="INFO">${output} = {
  "metadata": {},
  "name": "66144-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:20:36.137Z",
  "acls": [
    {
      "type": "USER",
      "...</msg>
<status status="PASS" endtime="20200331 18:20:38.485" starttime="20200331 18:20:36.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:38.486" level="INFO">{
  "metadata": {},
  "name": "66144-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:20:36.137Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:20:38.486" starttime="20200331 18:20:38.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:38.486" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:38.487" starttime="20200331 18:20:38.486"></status>
</kw>
<msg timestamp="20200331 18:20:38.487" level="INFO">${result} = {
  "metadata": {},
  "name": "66144-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:20:36.137Z",
  "acls": [
    {
      "type": "USER",
      "...</msg>
<status status="PASS" endtime="20200331 18:20:38.487" starttime="20200331 18:20:36.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:38.487" starttime="20200331 18:20:38.487"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:38.489" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="66144-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:40.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:40.792" level="INFO">${output} = {
  "metadata": {},
  "name": "66144-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:20:36.137Z",
  "acls": [
    {
      "type": "USER",
      "...</msg>
<status status="PASS" endtime="20200331 18:20:40.792" starttime="20200331 18:20:38.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:40.793" level="INFO">{
  "metadata": {},
  "name": "66144-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:20:36.137Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:20:40.793" starttime="20200331 18:20:40.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:40.793" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:40.794" starttime="20200331 18:20:40.793"></status>
</kw>
<msg timestamp="20200331 18:20:40.794" level="INFO">${result} = {
  "metadata": {},
  "name": "66144-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:20:36.137Z",
  "acls": [
    {
      "type": "USER",
      "...</msg>
<status status="PASS" endtime="20200331 18:20:40.794" starttime="20200331 18:20:38.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:40.794" starttime="20200331 18:20:40.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:40.796" level="INFO">Running command 'ozone sh volume update o3://om:9862/66144-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:43.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:43.110" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:20:43.111" starttime="20200331 18:20:40.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:43.111" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "66144-rpcwoport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-03-31T18:20:36.137Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200331 18:20:43.112" starttime="20200331 18:20:43.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:43.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:43.112" starttime="20200331 18:20:43.112"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:43.113" starttime="20200331 18:20:40.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:43.115" level="INFO">Running command 'ozone sh volume info o3://om:9862/66144-rpcwoport | jq -r '. | select(.name=="66144-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:45.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:45.430" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:20:45.430" starttime="20200331 18:20:43.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:45.431" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200331 18:20:45.431" starttime="20200331 18:20:45.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:45.432" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:45.432" starttime="20200331 18:20:45.432"></status>
</kw>
<msg timestamp="20200331 18:20:45.432" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:20:45.432" starttime="20200331 18:20:43.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:45.433" starttime="20200331 18:20:45.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:45.435" level="INFO">Running command 'ozone sh bucket create o3://om:9862/66144-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:47.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:47.782" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:20:47.782" starttime="20200331 18:20:45.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:47.783" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:20:47.783" starttime="20200331 18:20:47.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:47.784" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:47.784" starttime="20200331 18:20:47.783"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:47.784" starttime="20200331 18:20:45.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:47.786" level="INFO">Running command 'ozone sh bucket info o3://om:9862/66144-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:50.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:50.025" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200331 18:20:50.025" starttime="20200331 18:20:47.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:50.026" level="INFO">DISK</msg>
<status status="PASS" endtime="20200331 18:20:50.026" starttime="20200331 18:20:50.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:50.026" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:50.026" starttime="20200331 18:20:50.026"></status>
</kw>
<msg timestamp="20200331 18:20:50.027" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200331 18:20:50.027" starttime="20200331 18:20:47.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:50.027" starttime="20200331 18:20:50.027"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:50.029" level="INFO">Running command 'ozone sh bucket list o3://om:9862/66144-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:52.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:52.397" level="INFO">${output} = 66144-rpcwoport</msg>
<status status="PASS" endtime="20200331 18:20:52.398" starttime="20200331 18:20:50.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:52.398" level="INFO">66144-rpcwoport</msg>
<status status="PASS" endtime="20200331 18:20:52.398" starttime="20200331 18:20:52.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:52.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:52.399" starttime="20200331 18:20:52.399"></status>
</kw>
<msg timestamp="20200331 18:20:52.399" level="INFO">${result} = 66144-rpcwoport</msg>
<status status="PASS" endtime="20200331 18:20:52.399" starttime="20200331 18:20:50.027"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200331 18:20:52.400" starttime="20200331 18:20:52.399"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:52.402" level="INFO">Running command 'ozone sh key put o3://om:9862/66144-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:56.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:56.296" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:20:56.296" starttime="20200331 18:20:52.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:56.297" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:20:56.297" starttime="20200331 18:20:56.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:56.297" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:56.297" starttime="20200331 18:20:56.297"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:56.298" starttime="20200331 18:20:52.401"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:56.299" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:20:56.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:20:56.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:20:56.302" starttime="20200331 18:20:56.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:20:56.303" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:20:56.303" starttime="20200331 18:20:56.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:20:56.303" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:20:56.303" starttime="20200331 18:20:56.303"></status>
</kw>
<status status="PASS" endtime="20200331 18:20:56.303" starttime="20200331 18:20:56.298"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:20:56.305" level="INFO">Running command 'ozone sh key get o3://om:9862/66144-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:00.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:00.178" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:00.178" starttime="20200331 18:20:56.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:00.179" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:21:00.179" starttime="20200331 18:21:00.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:00.179" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:00.179" starttime="20200331 18:21:00.179"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:00.180" starttime="20200331 18:20:56.304"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:00.181" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:00.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:00.185" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 31 18:20 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:21:00.185" starttime="20200331 18:21:00.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:00.185" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 31 18:20 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:21:00.185" starttime="20200331 18:21:00.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:00.186" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:00.186" starttime="20200331 18:21:00.185"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:00.186" starttime="20200331 18:21:00.180"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:00.188" level="INFO">Running command 'ozone sh key info o3://om:9862/66144-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:02.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:02.492" level="INFO">${output} = {
  "volumeName": "66144-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:20:54.655Z",
  "modificationTime": "2020-03-31T18:20:55.930Z",
  "re...</msg>
<status status="PASS" endtime="20200331 18:21:02.492" starttime="20200331 18:21:00.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:02.493" level="INFO">{
  "volumeName": "66144-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:20:54.655Z",
  "modificationTime": "2020-03-31T18:20:55.930Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103919049418539140,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200331 18:21:02.493" starttime="20200331 18:21:02.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:02.494" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:02.494" starttime="20200331 18:21:02.493"></status>
</kw>
<msg timestamp="20200331 18:21:02.494" level="INFO">${result} = {
  "volumeName": "66144-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:20:54.655Z",
  "modificationTime": "2020-03-31T18:20:55.930Z",
  "re...</msg>
<status status="PASS" endtime="20200331 18:21:02.494" starttime="20200331 18:21:00.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:02.495" starttime="20200331 18:21:02.495"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:02.497" level="INFO">Running command 'ozone sh key list o3://om:9862/66144-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:04.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:04.726" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200331 18:21:04.726" starttime="20200331 18:21:02.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:04.727" level="INFO">key1</msg>
<status status="PASS" endtime="20200331 18:21:04.727" starttime="20200331 18:21:04.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:04.727" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:04.727" starttime="20200331 18:21:04.727"></status>
</kw>
<msg timestamp="20200331 18:21:04.728" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200331 18:21:04.728" starttime="20200331 18:21:02.495"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:04.728" starttime="20200331 18:21:04.728"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:04.730" level="INFO">Running command 'ozone sh key rename o3://om:9862/66144-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:07.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:07.088" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:07.088" starttime="20200331 18:21:04.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:07.089" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:21:07.089" starttime="20200331 18:21:07.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:07.090" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:07.090" starttime="20200331 18:21:07.089"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:07.090" starttime="20200331 18:21:04.728"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:07.095" level="INFO">Running command 'ozone sh key list o3://om:9862/66144-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:09.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:09.355" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200331 18:21:09.356" starttime="20200331 18:21:07.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:09.356" level="INFO">key2</msg>
<status status="PASS" endtime="20200331 18:21:09.357" starttime="20200331 18:21:09.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:09.357" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:09.357" starttime="20200331 18:21:09.357"></status>
</kw>
<msg timestamp="20200331 18:21:09.357" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200331 18:21:09.357" starttime="20200331 18:21:07.090"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:09.358" starttime="20200331 18:21:09.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:09.361" level="INFO">Running command 'ozone sh key delete o3://om:9862/66144-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:11.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:11.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:11.675" starttime="20200331 18:21:09.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:11.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:21:11.676" starttime="20200331 18:21:11.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:11.676" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:11.677" starttime="20200331 18:21:11.676"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:11.677" starttime="20200331 18:21:09.358"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:11.677" starttime="20200331 18:20:52.400"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:11.677" starttime="20200331 18:20:52.400"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:11.679" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/66144-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:14.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:14.061" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:14.061" starttime="20200331 18:21:11.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:14.062" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:21:14.062" starttime="20200331 18:21:14.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:14.062" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:14.062" starttime="20200331 18:21:14.062"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:14.063" starttime="20200331 18:21:11.677"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:14.064" level="INFO">Running command 'ozone sh volume delete o3://om:9862/66144-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:16.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:16.319" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:16.319" starttime="20200331 18:21:14.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:16.320" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 66144-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200331 18:21:16.320" starttime="20200331 18:21:16.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:16.321" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:16.321" starttime="20200331 18:21:16.320"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:16.321" starttime="20200331 18:21:14.063"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:16.321" starttime="20200331 18:20:31.552"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:21:16.321" critical="yes" starttime="20200331 18:20:31.466"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:16.325" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:16.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:16.328" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:21:16.328" starttime="20200331 18:21:16.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:16.328" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:21:16.328" starttime="20200331 18:21:16.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:16.329" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:16.329" starttime="20200331 18:21:16.329"></status>
</kw>
<msg timestamp="20200331 18:21:16.330" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:21:16.330" starttime="20200331 18:21:16.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200331 18:21:16.330" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200331 18:21:16.330" starttime="20200331 18:21:16.330"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:16.333" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:16.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:16.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:21:16.345" starttime="20200331 18:21:16.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:16.346" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:21:16.346" starttime="20200331 18:21:16.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:16.346" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:16.347" starttime="20200331 18:21:16.346"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:16.347" starttime="20200331 18:21:16.331"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:16.347" starttime="20200331 18:21:16.330"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:16.347" starttime="20200331 18:21:16.323"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:16.347" starttime="20200331 18:21:16.323"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:16.349" level="INFO">Running command 'ozone sh volume create o3://om:9862/66144-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:18.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:18.851" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:18.851" starttime="20200331 18:21:16.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:18.852" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:21:18.852" starttime="20200331 18:21:18.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:18.853" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:18.853" starttime="20200331 18:21:18.852"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:18.853" starttime="20200331 18:21:16.348"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:18.856" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66144-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:21.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:21.245" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:21.245" starttime="20200331 18:21:18.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:21.245" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:21.246" starttime="20200331 18:21:21.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:21.246" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:21.246" starttime="20200331 18:21:21.246"></status>
</kw>
<msg timestamp="20200331 18:21:21.246" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:21.247" starttime="20200331 18:21:18.853"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:21.248" starttime="20200331 18:21:21.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:21.250" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/66144-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:23.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:23.488" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:23.488" starttime="20200331 18:21:21.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:23.489" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:21:23.489" starttime="20200331 18:21:23.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:23.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:23.489" starttime="20200331 18:21:23.489"></status>
</kw>
<msg timestamp="20200331 18:21:23.490" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:23.490" starttime="20200331 18:21:21.248"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:23.491" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66144-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:25.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:25.815" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:25.815" starttime="20200331 18:21:23.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:25.816" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:25.816" starttime="20200331 18:21:25.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:25.817" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:25.817" starttime="20200331 18:21:25.817"></status>
</kw>
<msg timestamp="20200331 18:21:25.817" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:25.817" starttime="20200331 18:21:23.490"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:25.818" starttime="20200331 18:21:25.817"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:25.820" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/66144-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:28.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:28.313" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:28.313" starttime="20200331 18:21:25.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:28.314" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL doesn't exist.</msg>
<status status="PASS" endtime="20200331 18:21:28.314" starttime="20200331 18:21:28.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:28.314" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:28.315" starttime="20200331 18:21:28.314"></status>
</kw>
<msg timestamp="20200331 18:21:28.315" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:28.315" starttime="20200331 18:21:25.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:28.317" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66144-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:30.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:30.581" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:30.582" starttime="20200331 18:21:28.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:30.582" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:30.582" starttime="20200331 18:21:30.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:30.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:30.583" starttime="20200331 18:21:30.583"></status>
</kw>
<msg timestamp="20200331 18:21:30.583" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:30.583" starttime="20200331 18:21:28.315"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:30.585" starttime="20200331 18:21:30.584"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:30.587" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/66144-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:33.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:33.029" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:33.029" starttime="20200331 18:21:30.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:33.030" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:21:33.030" starttime="20200331 18:21:33.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:33.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:33.031" starttime="20200331 18:21:33.030"></status>
</kw>
<msg timestamp="20200331 18:21:33.031" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:33.031" starttime="20200331 18:21:30.585"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:33.033" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66144-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:35.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:35.353" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:35.353" starttime="20200331 18:21:33.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:35.354" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:35.354" starttime="20200331 18:21:35.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:35.355" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:35.355" starttime="20200331 18:21:35.354"></status>
</kw>
<msg timestamp="20200331 18:21:35.355" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:35.355" starttime="20200331 18:21:33.031"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:35.356" starttime="20200331 18:21:35.355"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:35.357" starttime="20200331 18:21:35.356"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:35.357" starttime="20200331 18:21:16.347"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:21:35.358" critical="yes" starttime="20200331 18:21:16.322"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:35.363" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:35.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:35.366" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:21:35.366" starttime="20200331 18:21:35.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:35.367" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:21:35.368" starttime="20200331 18:21:35.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:35.368" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:35.368" starttime="20200331 18:21:35.368"></status>
</kw>
<msg timestamp="20200331 18:21:35.368" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:21:35.368" starttime="20200331 18:21:35.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200331 18:21:35.369" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200331 18:21:35.369" starttime="20200331 18:21:35.369"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:35.371" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:35.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:35.386" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:21:35.386" starttime="20200331 18:21:35.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:35.387" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:21:35.388" starttime="20200331 18:21:35.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:35.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:35.389" starttime="20200331 18:21:35.388"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:35.389" starttime="20200331 18:21:35.370"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:35.389" starttime="20200331 18:21:35.369"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:35.389" starttime="20200331 18:21:35.360"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:35.389" starttime="20200331 18:21:35.360"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:35.392" level="INFO">Running command 'ozone sh bucket create o3://om:9862/66144-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:37.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:37.778" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:37.778" starttime="20200331 18:21:35.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:37.779" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:21:37.779" starttime="20200331 18:21:37.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:37.779" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:37.779" starttime="20200331 18:21:37.779"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:37.779" starttime="20200331 18:21:35.390"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:37.782" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66144-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:39.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:39.944" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:39.944" starttime="20200331 18:21:37.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:39.945" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:39.945" starttime="20200331 18:21:39.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:39.946" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:39.946" starttime="20200331 18:21:39.945"></status>
</kw>
<msg timestamp="20200331 18:21:39.946" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:39.946" starttime="20200331 18:21:37.780"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:39.947" starttime="20200331 18:21:39.946"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:39.949" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/66144-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:42.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:42.134" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:42.134" starttime="20200331 18:21:39.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:42.135" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL already exists.</msg>
<status status="PASS" endtime="20200331 18:21:42.135" starttime="20200331 18:21:42.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:42.136" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:42.136" starttime="20200331 18:21:42.135"></status>
</kw>
<msg timestamp="20200331 18:21:42.136" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:42.136" starttime="20200331 18:21:39.947"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:42.138" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66144-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:44.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:44.344" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:44.344" starttime="20200331 18:21:42.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:44.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:44.345" starttime="20200331 18:21:44.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:44.346" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:44.346" starttime="20200331 18:21:44.345"></status>
</kw>
<msg timestamp="20200331 18:21:44.346" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:44.346" starttime="20200331 18:21:42.136"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:44.347" starttime="20200331 18:21:44.346"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:44.349" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/66144-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:46.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:46.658" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:46.659" starttime="20200331 18:21:44.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:46.660" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:21:46.660" starttime="20200331 18:21:46.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:46.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:46.660" starttime="20200331 18:21:46.660"></status>
</kw>
<msg timestamp="20200331 18:21:46.660" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:46.661" starttime="20200331 18:21:44.348"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:46.662" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66144-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:48.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:48.925" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:48.925" starttime="20200331 18:21:46.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:48.926" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:48.927" starttime="20200331 18:21:48.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:48.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:48.927" starttime="20200331 18:21:48.927"></status>
</kw>
<msg timestamp="20200331 18:21:48.928" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:48.928" starttime="20200331 18:21:46.661"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:48.929" starttime="20200331 18:21:48.928"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:48.931" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/66144-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:51.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:51.161" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:51.161" starttime="20200331 18:21:48.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:51.162" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:21:51.162" starttime="20200331 18:21:51.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:51.162" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:51.163" starttime="20200331 18:21:51.162"></status>
</kw>
<msg timestamp="20200331 18:21:51.163" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:51.163" starttime="20200331 18:21:48.929"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:51.165" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66144-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:53.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:53.370" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:53.370" starttime="20200331 18:21:51.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:53.371" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:53.371" starttime="20200331 18:21:53.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:53.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:53.372" starttime="20200331 18:21:53.371"></status>
</kw>
<msg timestamp="20200331 18:21:53.372" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:53.372" starttime="20200331 18:21:51.163"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:53.373" starttime="20200331 18:21:53.372"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:53.373" starttime="20200331 18:21:53.373"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:53.373" starttime="20200331 18:21:35.389"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:21:53.373" critical="yes" starttime="20200331 18:21:35.359"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:53.377" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:53.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:53.380" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:21:53.380" starttime="20200331 18:21:53.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:53.380" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:21:53.380" starttime="20200331 18:21:53.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:53.381" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:53.381" starttime="20200331 18:21:53.381"></status>
</kw>
<msg timestamp="20200331 18:21:53.381" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:21:53.381" starttime="20200331 18:21:53.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200331 18:21:53.382" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200331 18:21:53.382" starttime="20200331 18:21:53.381"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:53.383" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:53.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:53.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:21:53.400" starttime="20200331 18:21:53.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:53.401" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:21:53.401" starttime="20200331 18:21:53.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:53.402" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:53.402" starttime="20200331 18:21:53.401"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:53.402" starttime="20200331 18:21:53.382"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:53.402" starttime="20200331 18:21:53.382"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:53.402" starttime="20200331 18:21:53.375"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:53.402" starttime="20200331 18:21:53.375"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:53.404" level="INFO">Running command 'ozone sh key put o3://om:9862/66144-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:57.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:57.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:57.058" starttime="20200331 18:21:53.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:57.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:21:57.059" starttime="20200331 18:21:57.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:57.060" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:57.060" starttime="20200331 18:21:57.059"></status>
</kw>
<status status="PASS" endtime="20200331 18:21:57.060" starttime="20200331 18:21:53.403"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:57.062" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66144-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:21:59.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:21:59.351" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:59.351" starttime="20200331 18:21:57.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:21:59.352" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:21:59.352" starttime="20200331 18:21:59.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:21:59.353" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:21:59.353" starttime="20200331 18:21:59.352"></status>
</kw>
<msg timestamp="20200331 18:21:59.353" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:21:59.353" starttime="20200331 18:21:57.060"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:21:59.354" starttime="20200331 18:21:59.353"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:21:59.356" level="INFO">Running command 'ozone sh key addacl o3://om:9862/66144-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:01.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:01.455" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:01.455" starttime="20200331 18:21:59.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:01.456" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL added successfully.</msg>
<status status="PASS" endtime="20200331 18:22:01.456" starttime="20200331 18:22:01.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:01.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:01.457" starttime="20200331 18:22:01.456"></status>
</kw>
<msg timestamp="20200331 18:22:01.457" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:01.457" starttime="20200331 18:21:59.354"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:01.458" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66144-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:03.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:03.711" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:03.711" starttime="20200331 18:22:01.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:03.712" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:22:03.712" starttime="20200331 18:22:03.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:03.713" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:03.713" starttime="20200331 18:22:03.712"></status>
</kw>
<msg timestamp="20200331 18:22:03.713" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:03.713" starttime="20200331 18:22:01.457"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:03.714" starttime="20200331 18:22:03.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:03.716" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/66144-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:05.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:05.880" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:05.880" starttime="20200331 18:22:03.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:05.881" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL removed successfully.</msg>
<status status="PASS" endtime="20200331 18:22:05.881" starttime="20200331 18:22:05.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:05.882" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:05.882" starttime="20200331 18:22:05.881"></status>
</kw>
<msg timestamp="20200331 18:22:05.882" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:05.882" starttime="20200331 18:22:03.714"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:05.884" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66144-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:08.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:08.047" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:08.047" starttime="20200331 18:22:05.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:08.048" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:22:08.048" starttime="20200331 18:22:08.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:08.049" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:08.049" starttime="20200331 18:22:08.048"></status>
</kw>
<msg timestamp="20200331 18:22:08.049" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:08.049" starttime="20200331 18:22:05.882"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:08.050" starttime="20200331 18:22:08.049"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:08.052" level="INFO">Running command 'ozone sh key setacl o3://om:9862/66144-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:10.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:10.205" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:10.205" starttime="20200331 18:22:08.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:10.206" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200331 18:22:10.206" starttime="20200331 18:22:10.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:10.207" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:10.207" starttime="20200331 18:22:10.207"></status>
</kw>
<msg timestamp="20200331 18:22:10.207" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:10.207" starttime="20200331 18:22:08.050"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:10.209" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66144-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:12.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:12.327" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:12.327" starttime="20200331 18:22:10.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:12.328" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200331 18:22:12.328" starttime="20200331 18:22:12.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:12.328" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:12.328" starttime="20200331 18:22:12.328"></status>
</kw>
<msg timestamp="20200331 18:22:12.329" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:12.329" starttime="20200331 18:22:10.207"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:12.329" starttime="20200331 18:22:12.329"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:12.330" starttime="20200331 18:22:12.329"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:12.330" starttime="20200331 18:21:53.402"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:22:12.330" critical="yes" starttime="20200331 18:21:53.374"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:12.334" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:12.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:12.336" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:22:12.336" starttime="20200331 18:22:12.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:12.337" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:22:12.337" starttime="20200331 18:22:12.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:12.337" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:12.338" starttime="20200331 18:22:12.337"></status>
</kw>
<msg timestamp="20200331 18:22:12.338" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:22:12.338" starttime="20200331 18:22:12.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200331 18:22:12.338" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200331 18:22:12.339" starttime="20200331 18:22:12.338"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:12.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:12.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:12.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:22:12.355" starttime="20200331 18:22:12.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:12.355" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:22:12.355" starttime="20200331 18:22:12.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:12.356" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:12.356" starttime="20200331 18:22:12.355"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:12.356" starttime="20200331 18:22:12.339"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:12.356" starttime="20200331 18:22:12.339"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:12.356" starttime="20200331 18:22:12.332"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:12.356" starttime="20200331 18:22:12.332"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:12.358" level="INFO">Running command 'ozone sh volume info o3:///66144-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:14.596" level="INFO">${rc} = 255</msg>
<msg timestamp="20200331 18:22:14.596" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:14.597" starttime="20200331 18:22:12.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:14.598" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 66144-rpcwport is not found</msg>
<status status="PASS" endtime="20200331 18:22:14.598" starttime="20200331 18:22:14.597"></status>
</kw>
<msg timestamp="20200331 18:22:14.598" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:14.598" starttime="20200331 18:22:12.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:14.599" starttime="20200331 18:22:14.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:14.600" level="INFO">Running command 'ozone sh volume create o3:///66144-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:16.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:16.757" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:16.758" starttime="20200331 18:22:14.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:16.758" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:22:16.758" starttime="20200331 18:22:16.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:16.759" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:16.759" starttime="20200331 18:22:16.759"></status>
</kw>
<msg timestamp="20200331 18:22:16.759" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:16.759" starttime="20200331 18:22:14.599"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:16.760" starttime="20200331 18:22:16.759"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:16.762" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="66144-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:19.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:19.153" level="INFO">${output} = {
  "metadata": {},
  "name": "66144-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:22:16.730Z",
  "acls": [
    {
      "type": "USER",
      "n...</msg>
<status status="PASS" endtime="20200331 18:22:19.153" starttime="20200331 18:22:16.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:19.154" level="INFO">{
  "metadata": {},
  "name": "66144-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:22:16.730Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:22:19.154" starttime="20200331 18:22:19.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:19.155" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:19.155" starttime="20200331 18:22:19.155"></status>
</kw>
<msg timestamp="20200331 18:22:19.155" level="INFO">${result} = {
  "metadata": {},
  "name": "66144-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:22:16.730Z",
  "acls": [
    {
      "type": "USER",
      "n...</msg>
<status status="PASS" endtime="20200331 18:22:19.155" starttime="20200331 18:22:16.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:19.156" starttime="20200331 18:22:19.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:19.158" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="66144-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:21.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:21.282" level="INFO">${output} = {
  "metadata": {},
  "name": "66144-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:22:16.730Z",
  "acls": [
    {
      "type": "USER",
      "n...</msg>
<status status="PASS" endtime="20200331 18:22:21.282" starttime="20200331 18:22:19.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:21.283" level="INFO">{
  "metadata": {},
  "name": "66144-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:22:16.730Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:22:21.283" starttime="20200331 18:22:21.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:21.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:21.284" starttime="20200331 18:22:21.283"></status>
</kw>
<msg timestamp="20200331 18:22:21.284" level="INFO">${result} = {
  "metadata": {},
  "name": "66144-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:22:16.730Z",
  "acls": [
    {
      "type": "USER",
      "n...</msg>
<status status="PASS" endtime="20200331 18:22:21.284" starttime="20200331 18:22:19.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:21.285" starttime="20200331 18:22:21.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:21.286" level="INFO">Running command 'ozone sh volume update o3:///66144-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:23.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:23.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:23.475" starttime="20200331 18:22:21.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:23.476" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "66144-rpcwport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-03-31T18:22:16.730Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200331 18:22:23.476" starttime="20200331 18:22:23.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:23.476" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:23.476" starttime="20200331 18:22:23.476"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:23.477" starttime="20200331 18:22:21.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:23.478" level="INFO">Running command 'ozone sh volume info o3:///66144-rpcwport | jq -r '. | select(.name=="66144-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:25.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:25.705" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:22:25.705" starttime="20200331 18:22:23.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:25.706" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200331 18:22:25.706" starttime="20200331 18:22:25.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:25.706" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:25.707" starttime="20200331 18:22:25.706"></status>
</kw>
<msg timestamp="20200331 18:22:25.707" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:22:25.707" starttime="20200331 18:22:23.477"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:25.708" starttime="20200331 18:22:25.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:25.709" level="INFO">Running command 'ozone sh bucket create o3:///66144-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:28.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:28.066" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:28.066" starttime="20200331 18:22:25.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:28.067" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:22:28.067" starttime="20200331 18:22:28.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:28.067" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:28.067" starttime="20200331 18:22:28.067"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:28.068" starttime="20200331 18:22:25.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:28.070" level="INFO">Running command 'ozone sh bucket info o3:///66144-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:30.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:30.304" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200331 18:22:30.304" starttime="20200331 18:22:28.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:30.305" level="INFO">DISK</msg>
<status status="PASS" endtime="20200331 18:22:30.305" starttime="20200331 18:22:30.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:30.305" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:30.305" starttime="20200331 18:22:30.305"></status>
</kw>
<msg timestamp="20200331 18:22:30.305" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200331 18:22:30.305" starttime="20200331 18:22:28.068"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:30.306" starttime="20200331 18:22:30.306"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:30.308" level="INFO">Running command 'ozone sh bucket list o3:///66144-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:32.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:32.585" level="INFO">${output} = 66144-rpcwport</msg>
<status status="PASS" endtime="20200331 18:22:32.585" starttime="20200331 18:22:30.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:32.586" level="INFO">66144-rpcwport</msg>
<status status="PASS" endtime="20200331 18:22:32.586" starttime="20200331 18:22:32.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:32.586" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:32.586" starttime="20200331 18:22:32.586"></status>
</kw>
<msg timestamp="20200331 18:22:32.587" level="INFO">${result} = 66144-rpcwport</msg>
<status status="PASS" endtime="20200331 18:22:32.587" starttime="20200331 18:22:30.306"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:32.587" starttime="20200331 18:22:32.587"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:32.590" level="INFO">Running command 'ozone sh key put o3:///66144-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:36.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:36.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:36.317" starttime="20200331 18:22:32.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:36.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:22:36.318" starttime="20200331 18:22:36.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:36.319" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:36.319" starttime="20200331 18:22:36.319"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:36.319" starttime="20200331 18:22:32.588"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:36.321" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:36.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:36.324" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:22:36.324" starttime="20200331 18:22:36.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:36.325" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:22:36.325" starttime="20200331 18:22:36.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:36.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:36.326" starttime="20200331 18:22:36.325"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:36.326" starttime="20200331 18:22:36.320"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:36.328" level="INFO">Running command 'ozone sh key get o3:///66144-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:39.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:39.972" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:39.972" starttime="20200331 18:22:36.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:39.973" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:22:39.973" starttime="20200331 18:22:39.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:39.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:39.974" starttime="20200331 18:22:39.973"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:39.974" starttime="20200331 18:22:36.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:39.975" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:39.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:39.978" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 31 18:22 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:22:39.978" starttime="20200331 18:22:39.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:39.979" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 31 18:22 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:22:39.979" starttime="20200331 18:22:39.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:39.979" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:39.980" starttime="20200331 18:22:39.979"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:39.980" starttime="20200331 18:22:39.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:39.981" level="INFO">Running command 'ozone sh key info o3:///66144-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:42.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:42.164" level="INFO">${output} = {
  "volumeName": "66144-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:22:34.736Z",
  "modificationTime": "2020-03-31T18:22:35.952Z",
  "rep...</msg>
<status status="PASS" endtime="20200331 18:22:42.164" starttime="20200331 18:22:39.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:42.165" level="INFO">{
  "volumeName": "66144-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:22:34.736Z",
  "modificationTime": "2020-03-31T18:22:35.952Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103919055977382020,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200331 18:22:42.165" starttime="20200331 18:22:42.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:42.166" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:42.166" starttime="20200331 18:22:42.165"></status>
</kw>
<msg timestamp="20200331 18:22:42.166" level="INFO">${result} = {
  "volumeName": "66144-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:22:34.736Z",
  "modificationTime": "2020-03-31T18:22:35.952Z",
  "rep...</msg>
<status status="PASS" endtime="20200331 18:22:42.166" starttime="20200331 18:22:39.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:42.167" starttime="20200331 18:22:42.166"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:42.169" level="INFO">Running command 'ozone sh key list o3:///66144-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:44.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:44.384" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200331 18:22:44.384" starttime="20200331 18:22:42.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:44.385" level="INFO">key1</msg>
<status status="PASS" endtime="20200331 18:22:44.385" starttime="20200331 18:22:44.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:44.385" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:44.386" starttime="20200331 18:22:44.385"></status>
</kw>
<msg timestamp="20200331 18:22:44.386" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200331 18:22:44.386" starttime="20200331 18:22:42.167"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:44.386" starttime="20200331 18:22:44.386"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:44.388" level="INFO">Running command 'ozone sh key rename o3:///66144-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:46.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:46.563" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:46.563" starttime="20200331 18:22:44.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:46.564" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:22:46.564" starttime="20200331 18:22:46.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:46.565" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:46.565" starttime="20200331 18:22:46.565"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:46.565" starttime="20200331 18:22:44.386"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:46.568" level="INFO">Running command 'ozone sh key list o3:///66144-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:48.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:48.928" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200331 18:22:48.928" starttime="20200331 18:22:46.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:48.929" level="INFO">key2</msg>
<status status="PASS" endtime="20200331 18:22:48.929" starttime="20200331 18:22:48.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:48.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:48.930" starttime="20200331 18:22:48.930"></status>
</kw>
<msg timestamp="20200331 18:22:48.930" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200331 18:22:48.930" starttime="20200331 18:22:46.565"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:48.931" starttime="20200331 18:22:48.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:48.933" level="INFO">Running command 'ozone sh key delete o3:///66144-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:51.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:51.217" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:51.217" starttime="20200331 18:22:48.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:51.218" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:22:51.218" starttime="20200331 18:22:51.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:51.218" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:51.218" starttime="20200331 18:22:51.218"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:51.219" starttime="20200331 18:22:48.931"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:51.219" starttime="20200331 18:22:32.588"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:51.219" starttime="20200331 18:22:32.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:51.221" level="INFO">Running command 'ozone sh bucket delete o3:///66144-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:53.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:53.311" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:53.311" starttime="20200331 18:22:51.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:53.312" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:22:53.313" starttime="20200331 18:22:53.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:53.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:53.313" starttime="20200331 18:22:53.313"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:53.314" starttime="20200331 18:22:51.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:53.315" level="INFO">Running command 'ozone sh volume delete o3:///66144-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:55.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:55.531" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:55.531" starttime="20200331 18:22:53.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:55.532" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 66144-rpcwport is deleted</msg>
<status status="PASS" endtime="20200331 18:22:55.532" starttime="20200331 18:22:55.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:55.533" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:55.533" starttime="20200331 18:22:55.533"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:55.533" starttime="20200331 18:22:53.314"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:55.533" starttime="20200331 18:22:12.356"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:22:55.534" critical="yes" starttime="20200331 18:22:12.331"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:55.537" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:55.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:55.540" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200331 18:22:55.540" starttime="20200331 18:22:55.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:55.541" level="INFO">scm</msg>
<status status="PASS" endtime="20200331 18:22:55.541" starttime="20200331 18:22:55.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:55.541" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:55.541" starttime="20200331 18:22:55.541"></status>
</kw>
<msg timestamp="20200331 18:22:55.541" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200331 18:22:55.542" starttime="20200331 18:22:55.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200331 18:22:55.542" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200331 18:22:55.542" starttime="20200331 18:22:55.542"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:55.544" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:55.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:22:55.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:22:55.556" starttime="20200331 18:22:55.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:55.557" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:22:55.557" starttime="20200331 18:22:55.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:22:55.558" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:22:55.558" starttime="20200331 18:22:55.557"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:55.558" starttime="20200331 18:22:55.543"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:55.558" starttime="20200331 18:22:55.542"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:55.558" starttime="20200331 18:22:55.535"></status>
</kw>
<status status="PASS" endtime="20200331 18:22:55.558" starttime="20200331 18:22:55.535"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:55.560" level="INFO">Running command 'ozone sh volume info /66144-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:22:57.791" level="INFO">${rc} = 255</msg>
<msg timestamp="20200331 18:22:57.791" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:57.791" starttime="20200331 18:22:55.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:22:57.792" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 66144-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200331 18:22:57.792" starttime="20200331 18:22:57.791"></status>
</kw>
<msg timestamp="20200331 18:22:57.792" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:22:57.792" starttime="20200331 18:22:55.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200331 18:22:57.793" starttime="20200331 18:22:57.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:22:57.795" level="INFO">Running command 'ozone sh volume create /66144-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:00.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:00.236" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:00.236" starttime="20200331 18:22:57.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:00.237" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:23:00.237" starttime="20200331 18:23:00.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:00.237" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:00.238" starttime="20200331 18:23:00.237"></status>
</kw>
<msg timestamp="20200331 18:23:00.238" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:00.238" starttime="20200331 18:22:57.793"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:00.238" starttime="20200331 18:23:00.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:00.241" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="66144-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:02.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:02.536" level="INFO">${output} = {
  "metadata": {},
  "name": "66144-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:23:00.207Z",
  "acls": [
    {
      "type": "USER",
     ...</msg>
<status status="PASS" endtime="20200331 18:23:02.536" starttime="20200331 18:23:00.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:02.537" level="INFO">{
  "metadata": {},
  "name": "66144-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:23:00.207Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:23:02.537" starttime="20200331 18:23:02.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:02.538" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:02.538" starttime="20200331 18:23:02.538"></status>
</kw>
<msg timestamp="20200331 18:23:02.538" level="INFO">${result} = {
  "metadata": {},
  "name": "66144-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:23:00.207Z",
  "acls": [
    {
      "type": "USER",
     ...</msg>
<status status="PASS" endtime="20200331 18:23:02.538" starttime="20200331 18:23:00.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:02.539" starttime="20200331 18:23:02.538"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:02.540" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="66144-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:04.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:04.957" level="INFO">${output} = {
  "metadata": {},
  "name": "66144-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:23:00.207Z",
  "acls": [
    {
      "type": "USER",
     ...</msg>
<status status="PASS" endtime="20200331 18:23:04.957" starttime="20200331 18:23:02.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:04.958" level="INFO">{
  "metadata": {},
  "name": "66144-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:23:00.207Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200331 18:23:04.958" starttime="20200331 18:23:04.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:04.959" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:04.959" starttime="20200331 18:23:04.958"></status>
</kw>
<msg timestamp="20200331 18:23:04.959" level="INFO">${result} = {
  "metadata": {},
  "name": "66144-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-03-31T18:23:00.207Z",
  "acls": [
    {
      "type": "USER",
     ...</msg>
<status status="PASS" endtime="20200331 18:23:04.959" starttime="20200331 18:23:02.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:04.960" starttime="20200331 18:23:04.960"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:04.963" level="INFO">Running command 'ozone sh volume update /66144-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:07.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:07.410" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:07.410" starttime="20200331 18:23:04.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:07.411" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "66144-rpcwoscheme",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-03-31T18:23:00.207Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200331 18:23:07.411" starttime="20200331 18:23:07.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:07.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:07.412" starttime="20200331 18:23:07.411"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:07.412" starttime="20200331 18:23:04.960"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:07.414" level="INFO">Running command 'ozone sh volume info /66144-rpcwoscheme | jq -r '. | select(.name=="66144-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:09.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:09.814" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:23:09.814" starttime="20200331 18:23:07.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:09.814" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200331 18:23:09.815" starttime="20200331 18:23:09.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:09.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:09.815" starttime="20200331 18:23:09.815"></status>
</kw>
<msg timestamp="20200331 18:23:09.816" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200331 18:23:09.816" starttime="20200331 18:23:07.412"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:09.816" starttime="20200331 18:23:09.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:09.818" level="INFO">Running command 'ozone sh bucket create /66144-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:12.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:12.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:12.092" starttime="20200331 18:23:09.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:12.093" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:23:12.093" starttime="20200331 18:23:12.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:12.093" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:12.093" starttime="20200331 18:23:12.093"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:12.094" starttime="20200331 18:23:09.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:12.096" level="INFO">Running command 'ozone sh bucket info /66144-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:14.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:14.420" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200331 18:23:14.420" starttime="20200331 18:23:12.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:14.421" level="INFO">DISK</msg>
<status status="PASS" endtime="20200331 18:23:14.421" starttime="20200331 18:23:14.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:14.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:14.422" starttime="20200331 18:23:14.422"></status>
</kw>
<msg timestamp="20200331 18:23:14.422" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200331 18:23:14.423" starttime="20200331 18:23:12.094"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:14.423" starttime="20200331 18:23:14.423"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:14.425" level="INFO">Running command 'ozone sh bucket list /66144-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:16.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:16.875" level="INFO">${output} = 66144-rpcwoscheme</msg>
<status status="PASS" endtime="20200331 18:23:16.875" starttime="20200331 18:23:14.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:16.876" level="INFO">66144-rpcwoscheme</msg>
<status status="PASS" endtime="20200331 18:23:16.876" starttime="20200331 18:23:16.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:16.877" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:16.877" starttime="20200331 18:23:16.876"></status>
</kw>
<msg timestamp="20200331 18:23:16.877" level="INFO">${result} = 66144-rpcwoscheme</msg>
<status status="PASS" endtime="20200331 18:23:16.877" starttime="20200331 18:23:14.423"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:16.878" starttime="20200331 18:23:16.877"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:16.881" level="INFO">Running command 'ozone sh key put /66144-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:21.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:21.033" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:21.033" starttime="20200331 18:23:16.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:21.034" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:23:21.034" starttime="20200331 18:23:21.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:21.035" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:21.035" starttime="20200331 18:23:21.035"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:21.035" starttime="20200331 18:23:16.879"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:21.037" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:21.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:21.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200331 18:23:21.040" starttime="20200331 18:23:21.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:21.040" level="INFO"></msg>
<status status="PASS" endtime="20200331 18:23:21.041" starttime="20200331 18:23:21.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:21.041" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:21.041" starttime="20200331 18:23:21.041"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:21.041" starttime="20200331 18:23:21.036"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:21.043" level="INFO">Running command 'ozone sh key get /66144-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:24.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:24.826" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:24.826" starttime="20200331 18:23:21.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:24.827" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:23:24.827" starttime="20200331 18:23:24.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:24.828" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:24.828" starttime="20200331 18:23:24.827"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:24.828" starttime="20200331 18:23:21.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:24.830" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:24.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:24.833" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 31 18:23 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:23:24.833" starttime="20200331 18:23:24.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:24.834" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 31 18:23 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200331 18:23:24.834" starttime="20200331 18:23:24.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:24.835" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:24.835" starttime="20200331 18:23:24.834"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:24.835" starttime="20200331 18:23:24.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:24.837" level="INFO">Running command 'ozone sh key info /66144-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:27.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:27.354" level="INFO">${output} = {
  "volumeName": "66144-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:23:19.257Z",
  "modificationTime": "2020-03-31T18:23:20.657Z",
  "...</msg>
<status status="PASS" endtime="20200331 18:23:27.354" starttime="20200331 18:23:24.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:27.355" level="INFO">{
  "volumeName": "66144-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:23:19.257Z",
  "modificationTime": "2020-03-31T18:23:20.657Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103919058895175800,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200331 18:23:27.355" starttime="20200331 18:23:27.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:27.356" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:27.356" starttime="20200331 18:23:27.355"></status>
</kw>
<msg timestamp="20200331 18:23:27.356" level="INFO">${result} = {
  "volumeName": "66144-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-31T18:23:19.257Z",
  "modificationTime": "2020-03-31T18:23:20.657Z",
  "...</msg>
<status status="PASS" endtime="20200331 18:23:27.356" starttime="20200331 18:23:24.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:27.356" starttime="20200331 18:23:27.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:27.358" level="INFO">Running command 'ozone sh key list /66144-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:29.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:29.983" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200331 18:23:29.984" starttime="20200331 18:23:27.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:29.985" level="INFO">key1</msg>
<status status="PASS" endtime="20200331 18:23:29.985" starttime="20200331 18:23:29.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:29.985" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:29.985" starttime="20200331 18:23:29.985"></status>
</kw>
<msg timestamp="20200331 18:23:29.986" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200331 18:23:29.986" starttime="20200331 18:23:27.357"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:29.986" starttime="20200331 18:23:29.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:29.988" level="INFO">Running command 'ozone sh key rename /66144-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:32.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:32.377" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:32.377" starttime="20200331 18:23:29.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:32.378" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:23:32.378" starttime="20200331 18:23:32.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:32.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:32.379" starttime="20200331 18:23:32.378"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:32.379" starttime="20200331 18:23:29.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:32.381" level="INFO">Running command 'ozone sh key list /66144-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:34.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:34.817" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200331 18:23:34.817" starttime="20200331 18:23:32.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:34.818" level="INFO">key2</msg>
<status status="PASS" endtime="20200331 18:23:34.818" starttime="20200331 18:23:34.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:34.819" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:34.819" starttime="20200331 18:23:34.818"></status>
</kw>
<msg timestamp="20200331 18:23:34.819" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200331 18:23:34.819" starttime="20200331 18:23:32.379"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200331 18:23:34.820" starttime="20200331 18:23:34.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:34.822" level="INFO">Running command 'ozone sh key delete /66144-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:37.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:37.229" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:37.229" starttime="20200331 18:23:34.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:37.230" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:23:37.230" starttime="20200331 18:23:37.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:37.230" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:37.230" starttime="20200331 18:23:37.230"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:37.230" starttime="20200331 18:23:34.820"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:37.231" starttime="20200331 18:23:16.878"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:37.231" starttime="20200331 18:23:16.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:37.232" level="INFO">Running command 'ozone sh bucket delete /66144-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:39.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:39.624" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:39.625" starttime="20200331 18:23:37.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:39.626" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200331 18:23:39.626" starttime="20200331 18:23:39.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:39.626" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:39.626" starttime="20200331 18:23:39.626"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:39.627" starttime="20200331 18:23:37.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:23:39.629" level="INFO">Running command 'ozone sh volume delete /66144-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:23:42.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:23:42.010" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200331 18:23:42.011" starttime="20200331 18:23:39.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:23:42.011" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 66144-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200331 18:23:42.012" starttime="20200331 18:23:42.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:23:42.012" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:23:42.012" starttime="20200331 18:23:42.012"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:42.013" starttime="20200331 18:23:39.627"></status>
</kw>
<status status="PASS" endtime="20200331 18:23:42.013" starttime="20200331 18:22:55.558"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200331 18:23:42.013" critical="yes" starttime="20200331 18:22:55.534"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200331 18:23:42.014" starttime="20200331 18:20:31.458"></status>
</suite>
<status status="PASS" endtime="20200331 18:23:42.018" starttime="20200331 18:19:22.382"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-basic" pass="8">ozonesecure-basic</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozonesecure-basic.Basic</stat>
<stat fail="0" id="s1-s2" name="Ozone-Shell" pass="6">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
