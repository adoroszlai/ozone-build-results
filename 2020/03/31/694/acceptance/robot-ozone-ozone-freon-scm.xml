<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200331 18:12:05.410" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:12:05.456" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:12:12.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:12:12.842" level="INFO">${output} = 2020-03-31 18:12:06,302 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:06,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:12.842" starttime="20200331 18:12:05.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:12:12.843" level="INFO">2020-03-31 18:12:06,302 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:06,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-31 18:12:06,445 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-31 18:12:07,474 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-31 18:12:07,475 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-31 18:12:07,475 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-31 18:12:07,475 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-31 18:12:07,475 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-31 18:12:07,475 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-31 18:12:07,475 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-31 18:12:07,488 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-31 18:12:07,495 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-31 18:12:07,512 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-34428, with hadoop as owner.
2020-03-31 18:12:07,537 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-34428/bucket-0-38338, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:12:07,997 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-31 18:12:08,497 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,040
Average Time spent in bucket creation: 00:00:00,009
Average Time spent in key creation: 00:00:00,032
Average Time spent in key write: 00:00:00,589
Total bytes written: 10240
Total Execution time: 00:00:05,809
***************************************************</msg>
<status status="PASS" endtime="20200331 18:12:12.843" starttime="20200331 18:12:12.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:12:12.844" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:12:12.844" starttime="20200331 18:12:12.843"></status>
</kw>
<msg timestamp="20200331 18:12:12.844" level="INFO">${result} = 2020-03-31 18:12:06,302 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:06,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:12.844" starttime="20200331 18:12:05.454"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:12:12.845" starttime="20200331 18:12:12.845"></status>
</kw>
<status status="PASS" endtime="20200331 18:12:12.845" starttime="20200331 18:12:12.844"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:12:12.845" critical="yes" starttime="20200331 18:12:05.453"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:12:12.848" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:12:17.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:12:17.437" level="INFO">${output} = 2020-03-31 18:12:13,827 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:13,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:17.437" starttime="20200331 18:12:12.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:12:17.438" level="INFO">2020-03-31 18:12:13,827 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:13,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-31 18:12:13,967 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-31 18:12:14,256 [main] INFO freon.BaseFreonGenerator: Executing test with prefix RnnwTtY7yX
2020-03-31 18:12:14,270 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-31 18:12:15,037 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-31 18:12:15,054 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-31 18:12:15,278 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-31 18:12:15,444 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-31 18:12:16,279 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-31 18:12:17,098 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1187.832624, max=1187.832624, mean=1187.832624, stddev=0.0, median=1187.832624, p75=1187.832624, p95=1187.832624, p98=1187.832624, p99=1187.832624, p999=1187.832624, mean_rate=0.49266419709672854, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-31 18:12:17,100 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-31 18:12:17,108 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-31 18:12:17,108 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200331 18:12:17.438" starttime="20200331 18:12:17.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:12:17.439" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:12:17.439" starttime="20200331 18:12:17.439"></status>
</kw>
<msg timestamp="20200331 18:12:17.439" level="INFO">${result} = 2020-03-31 18:12:13,827 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:13,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:17.439" starttime="20200331 18:12:12.846"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:12:17.440" starttime="20200331 18:12:17.440"></status>
</kw>
<status status="PASS" endtime="20200331 18:12:17.440" starttime="20200331 18:12:17.440"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:12:17.441" critical="yes" starttime="20200331 18:12:12.846"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:12:17.444" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:12:20.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:12:20.436" level="INFO">${output} = 2020-03-31 18:12:18,293 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:18,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:20.436" starttime="20200331 18:12:17.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:12:20.437" level="INFO">2020-03-31 18:12:18,293 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:18,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-31 18:12:18,447 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-31 18:12:18,658 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6j9ZmxWoGB
2020-03-31 18:12:18,675 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-31 18:12:19,677 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-31 18:12:20,422 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=24.024174, max=24.024174, mean=24.024174, stddev=0.0, median=24.024174, p75=24.024174, p95=24.024174, p98=24.024174, p99=24.024174, p999=24.024174, mean_rate=0.9890234899418502, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-31 18:12:20,424 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-31 18:12:20,424 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-31 18:12:20,424 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200331 18:12:20.437" starttime="20200331 18:12:20.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:12:20.437" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:12:20.437" starttime="20200331 18:12:20.437"></status>
</kw>
<msg timestamp="20200331 18:12:20.438" level="INFO">${result} = 2020-03-31 18:12:18,293 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:18,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:20.438" starttime="20200331 18:12:17.442"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:12:20.439" starttime="20200331 18:12:20.438"></status>
</kw>
<status status="PASS" endtime="20200331 18:12:20.439" starttime="20200331 18:12:20.438"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:12:20.439" critical="yes" starttime="20200331 18:12:17.441"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200331 18:12:20.442" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200331 18:12:23.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200331 18:12:23.412" level="INFO">${output} = 2020-03-31 18:12:21,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:21,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:23.412" starttime="20200331 18:12:20.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200331 18:12:23.413" level="INFO">2020-03-31 18:12:21,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:21,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-31 18:12:21,424 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-31 18:12:21,656 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3O8URFZ0dF
2020-03-31 18:12:21,666 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-31 18:12:22,670 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-31 18:12:23,399 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=6.049343, max=6.049343, mean=6.049343, stddev=0.0, median=6.049343, p75=6.049343, p95=6.049343, p98=6.049343, p99=6.049343, p999=6.049343, mean_rate=0.9848539750363449, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-31 18:12:23,400 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-31 18:12:23,400 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-31 18:12:23,400 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200331 18:12:23.413" starttime="20200331 18:12:23.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200331 18:12:23.413" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200331 18:12:23.413" starttime="20200331 18:12:23.413"></status>
</kw>
<msg timestamp="20200331 18:12:23.414" level="INFO">${result} = 2020-03-31 18:12:21,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-31 18:12:21,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200331 18:12:23.414" starttime="20200331 18:12:20.440"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200331 18:12:23.415" starttime="20200331 18:12:23.414"></status>
</kw>
<status status="PASS" endtime="20200331 18:12:23.415" starttime="20200331 18:12:23.414"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200331 18:12:23.415" critical="yes" starttime="20200331 18:12:20.439"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200331 18:12:23.416" starttime="20200331 18:12:05.431"></status>
</suite>
<status status="PASS" endtime="20200331 18:12:23.418" starttime="20200331 18:12:05.410"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
