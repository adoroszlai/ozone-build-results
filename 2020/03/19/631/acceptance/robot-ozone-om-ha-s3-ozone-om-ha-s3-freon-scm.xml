<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200319 16:56:44.697" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-om-ha-s3-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 16:56:44.746" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 16:56:52.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 16:56:52.229" level="INFO">${output} = 2020-03-19 16:56:45,686 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:45,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:56:52.229" starttime="20200319 16:56:44.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 16:56:52.230" level="INFO">2020-03-19 16:56:45,686 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:45,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 16:56:45,876 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 16:56:46,867 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-19 16:56:46,868 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-19 16:56:46,868 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-19 16:56:46,868 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-19 16:56:46,868 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-19 16:56:46,868 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-19 16:56:46,869 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-19 16:56:46,870 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-19 16:56:46,882 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 16:56:46,901 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-72699, with hadoop as owner.
2020-03-19 16:56:46,946 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72699/bucket-0-89438, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 16:56:47,583 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-19 16:56:47,884 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,058
Average Time spent in bucket creation: 00:00:00,036
Average Time spent in key creation: 00:00:00,066
Average Time spent in key write: 00:00:00,694
Total bytes written: 10240
Total Execution time: 00:00:05,737
***************************************************</msg>
<status status="PASS" endtime="20200319 16:56:52.230" starttime="20200319 16:56:52.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 16:56:52.231" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 16:56:52.231" starttime="20200319 16:56:52.231"></status>
</kw>
<msg timestamp="20200319 16:56:52.231" level="INFO">${result} = 2020-03-19 16:56:45,686 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:45,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:56:52.231" starttime="20200319 16:56:44.744"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 16:56:52.232" starttime="20200319 16:56:52.232"></status>
</kw>
<status status="PASS" endtime="20200319 16:56:52.232" starttime="20200319 16:56:52.231"></status>
</kw>
<status status="PASS" endtime="20200319 16:56:52.232" critical="yes" starttime="20200319 16:56:44.743"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 16:56:52.235" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 16:56:56.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 16:56:56.889" level="INFO">${output} = 2020-03-19 16:56:53,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:53,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:56:56.889" starttime="20200319 16:56:52.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 16:56:56.891" level="INFO">2020-03-19 16:56:53,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:53,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 16:56:53,219 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 16:56:53,492 [main] INFO freon.BaseFreonGenerator: Executing test with prefix vmpNjpI2H5
2020-03-19 16:56:53,514 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 16:56:54,275 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-19 16:56:54,310 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 16:56:54,519 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 16:56:54,733 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-19 16:56:55,521 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 16:56:56,522 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-19 16:56:56,551 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1312.403475, max=1312.403475, mean=1312.403475, stddev=0.0, median=1312.403475, p75=1312.403475, p95=1312.403475, p98=1312.403475, p99=1312.403475, p999=1312.403475, mean_rate=0.4522892771243254, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-19 16:56:56,552 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-19 16:56:56,558 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-19 16:56:56,558 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200319 16:56:56.891" starttime="20200319 16:56:56.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 16:56:56.891" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 16:56:56.892" starttime="20200319 16:56:56.891"></status>
</kw>
<msg timestamp="20200319 16:56:56.892" level="INFO">${result} = 2020-03-19 16:56:53,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:53,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:56:56.892" starttime="20200319 16:56:52.234"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 16:56:56.893" starttime="20200319 16:56:56.892"></status>
</kw>
<status status="PASS" endtime="20200319 16:56:56.893" starttime="20200319 16:56:56.892"></status>
</kw>
<status status="PASS" endtime="20200319 16:56:56.893" critical="yes" starttime="20200319 16:56:52.233"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 16:56:56.896" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 16:56:59.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 16:56:59.896" level="INFO">${output} = 2020-03-19 16:56:57,730 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:57,882 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:56:59.896" starttime="20200319 16:56:56.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 16:56:59.897" level="INFO">2020-03-19 16:56:57,730 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:57,882 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 16:56:57,882 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 16:56:58,135 [main] INFO freon.BaseFreonGenerator: Executing test with prefix EqtLFA1taI
2020-03-19 16:56:58,153 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 16:56:59,163 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-19 16:56:59,883 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=50.281754, max=50.281754, mean=50.281754, stddev=0.0, median=50.281754, p75=50.281754, p95=50.281754, p98=50.281754, p99=50.281754, p999=50.281754, mean_rate=0.9882068139972677, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-19 16:56:59,884 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-19 16:56:59,884 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-19 16:56:59,884 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200319 16:56:59.897" starttime="20200319 16:56:59.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 16:56:59.897" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 16:56:59.897" starttime="20200319 16:56:59.897"></status>
</kw>
<msg timestamp="20200319 16:56:59.898" level="INFO">${result} = 2020-03-19 16:56:57,730 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:56:57,882 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:56:59.898" starttime="20200319 16:56:56.894"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 16:56:59.899" starttime="20200319 16:56:59.898"></status>
</kw>
<status status="PASS" endtime="20200319 16:56:59.899" starttime="20200319 16:56:59.898"></status>
</kw>
<status status="PASS" endtime="20200319 16:56:59.899" critical="yes" starttime="20200319 16:56:56.893"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 16:56:59.903" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 16:57:03.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 16:57:03.257" level="INFO">${output} = 2020-03-19 16:57:00,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:57:01,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:57:03.257" starttime="20200319 16:56:59.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 16:57:03.258" level="INFO">2020-03-19 16:57:00,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:57:01,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 16:57:01,074 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 16:57:01,430 [main] INFO freon.BaseFreonGenerator: Executing test with prefix q6JMniBMiX
2020-03-19 16:57:01,457 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 16:57:02,485 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-19 16:57:03,244 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=19.224858, max=19.224858, mean=19.224858, stddev=0.0, median=19.224858, p75=19.224858, p95=19.224858, p98=19.224858, p99=19.224858, p999=19.224858, mean_rate=0.9924474156202847, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-19 16:57:03,246 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-19 16:57:03,246 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-19 16:57:03,246 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200319 16:57:03.258" starttime="20200319 16:57:03.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 16:57:03.258" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 16:57:03.259" starttime="20200319 16:57:03.258"></status>
</kw>
<msg timestamp="20200319 16:57:03.259" level="INFO">${result} = 2020-03-19 16:57:00,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 16:57:01,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 16:57:03.259" starttime="20200319 16:56:59.901"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 16:57:03.260" starttime="20200319 16:57:03.260"></status>
</kw>
<status status="PASS" endtime="20200319 16:57:03.260" starttime="20200319 16:57:03.259"></status>
</kw>
<status status="PASS" endtime="20200319 16:57:03.260" critical="yes" starttime="20200319 16:56:59.900"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200319 16:57:03.262" starttime="20200319 16:56:44.721"></status>
</suite>
<status status="PASS" endtime="20200319 16:57:03.264" starttime="20200319 16:56:44.698"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-om-ha-s3-freon" pass="4">ozone-om-ha-s3-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
