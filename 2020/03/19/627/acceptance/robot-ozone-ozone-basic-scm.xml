<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200319 08:12:32.237" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozone-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200319 08:12:32.280" starttime="20200319 08:12:32.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:12:32.282" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:12:32.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:12:32.373" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 19 Mar 2020 08:12:32 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 19 Mar 2020 07:32:28 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200319 08:12:32.373" starttime="20200319 08:12:32.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:12:32.374" level="INFO">HTTP/1.1 200 OK
Date: Thu, 19 Mar 2020 08:12:32 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 19 Mar 2020 07:32:28 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200319 08:12:32.374" starttime="20200319 08:12:32.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:12:32.375" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:12:32.375" starttime="20200319 08:12:32.374"></status>
</kw>
<msg timestamp="20200319 08:12:32.375" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 19 Mar 2020 08:12:32 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 19 Mar 2020 07:32:28 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200319 08:12:32.375" starttime="20200319 08:12:32.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200319 08:12:32.376" starttime="20200319 08:12:32.375"></status>
</kw>
<status status="PASS" endtime="20200319 08:12:32.376" critical="yes" starttime="20200319 08:12:32.279"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200319 08:12:32.377" starttime="20200319 08:12:32.377"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:12:32.379" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:39.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:39.392" level="INFO">${output} = 2020-03-19 08:12:33,235 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:12:33,399 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:13:39.392" starttime="20200319 08:12:32.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:39.392" level="INFO">2020-03-19 08:12:33,235 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:12:33,399 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 08:12:33,399 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 08:12:34,739 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-19 08:12:34,740 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-03-19 08:12:34,740 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-03-19 08:12:34,741 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-03-19 08:12:34,741 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-19 08:12:34,741 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-19 08:12:34,742 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-03-19 08:12:34,744 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-03-19 08:12:34,746 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-19 08:12:34,757 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-03-19 08:12:34,775 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-90695, with hadoop as owner.
2020-03-19 08:12:34,863 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-61580, with hadoop as owner.
2020-03-19 08:12:34,872 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-85456, with hadoop as owner.
2020-03-19 08:12:34,879 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-95086, with hadoop as owner.
2020-03-19 08:12:34,887 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-39726, with hadoop as owner.
2020-03-19 08:12:34,898 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-90695/bucket-0-87635, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,919 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61580/bucket-0-65254, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,925 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85456/bucket-0-45456, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,930 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95086/bucket-0-31122, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,935 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39726/bucket-0-39490, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,940 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-90695/bucket-1-64508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,944 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61580/bucket-1-02327, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,948 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85456/bucket-1-83920, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,954 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95086/bucket-1-43109, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,959 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39726/bucket-1-23089, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,964 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-90695/bucket-2-40172, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,971 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61580/bucket-2-81979, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,977 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85456/bucket-2-36496, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,986 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95086/bucket-2-21824, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,991 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39726/bucket-2-30995, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:34,996 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-90695/bucket-3-54840, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,001 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61580/bucket-3-54935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,005 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85456/bucket-3-91579, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,010 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95086/bucket-3-79038, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,018 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39726/bucket-3-62059, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,022 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-90695/bucket-4-92621, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,029 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61580/bucket-4-13728, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,033 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85456/bucket-4-82320, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,038 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95086/bucket-4-21782, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,043 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39726/bucket-4-88859, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:12:35,540 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-19 08:12:35,758 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-19 08:12:36,759 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-03-19 08:12:37,764 [Thread-8] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-03-19 08:12:38,765 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-03-19 08:12:39,765 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-03-19 08:12:40,766 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-03-19 08:12:41,766 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-03-19 08:12:42,767 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-03-19 08:12:43,767 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-03-19 08:12:44,768 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-03-19 08:12:45,768 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-03-19 08:12:46,769 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-03-19 08:12:47,769 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-03-19 08:12:48,770 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-03-19 08:12:49,770 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-03-19 08:12:50,771 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-03-19 08:12:51,771 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-03-19 08:12:52,773 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-03-19 08:12:53,773 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-03-19 08:12:54,774 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-03-19 08:12:55,774 [Thread-8] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-03-19 08:12:56,775 [Thread-8] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-03-19 08:12:57,775 [Thread-8] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-03-19 08:12:58,775 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-03-19 08:12:59,776 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-03-19 08:13:00,776 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-03-19 08:13:01,777 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-03-19 08:13:02,777 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-03-19 08:13:03,778 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-03-19 08:13:04,778 [Thread-8] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-03-19 08:13:05,778 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-03-19 08:13:06,779 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-03-19 08:13:07,779 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-03-19 08:13:08,780 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-03-19 08:13:09,781 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-03-19 08:13:10,781 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-03-19 08:13:11,781 [Thread-8] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-03-19 08:13:12,782 [Thread-8] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-03-19 08:13:13,785 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-03-19 08:13:14,785 [Thread-8] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-03-19 08:13:15,786 [Thread-8] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-03-19 08:13:16,789 [Thread-8] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-03-19 08:13:17,790 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-03-19 08:13:18,790 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-03-19 08:13:19,791 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-03-19 08:13:20,791 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-03-19 08:13:21,792 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-03-19 08:13:22,792 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-03-19 08:13:23,792 [Thread-8] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-03-19 08:13:24,793 [Thread-8] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-03-19 08:13:25,793 [Thread-8] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-03-19 08:13:26,794 [Thread-8] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-03-19 08:13:27,794 [Thread-8] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-03-19 08:13:28,795 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-03-19 08:13:29,795 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-03-19 08:13:30,796 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-03-19 08:13:31,796 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-03-19 08:13:32,797 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-03-19 08:13:33,797 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-03-19 08:13:34,798 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,107
Average Time spent in bucket creation: 00:00:00,102
Average Time spent in key creation: 00:00:01,603
Average Time spent in key write: 00:00:00,624
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:05,391
***************************************************</msg>
<status status="PASS" endtime="20200319 08:13:39.393" starttime="20200319 08:13:39.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:39.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:39.393" starttime="20200319 08:13:39.393"></status>
</kw>
<msg timestamp="20200319 08:13:39.394" level="INFO">${result} = 2020-03-19 08:12:33,235 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:12:33,399 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:13:39.394" starttime="20200319 08:12:32.377"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:39.394" starttime="20200319 08:13:39.394"></status>
</kw>
<status status="PASS" endtime="20200319 08:13:39.395" starttime="20200319 08:13:39.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:39.395" starttime="20200319 08:13:39.395"></status>
</kw>
<status status="PASS" endtime="20200319 08:13:39.395" critical="yes" starttime="20200319 08:12:32.376"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200319 08:13:39.396" starttime="20200319 08:12:32.259"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200319 08:13:39.403" level="INFO">${random} = 82778</msg>
<status status="PASS" endtime="20200319 08:13:39.403" starttime="20200319 08:13:39.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200319 08:13:39.404" level="INFO">${prefix} = 82778</msg>
<status status="PASS" endtime="20200319 08:13:39.404" starttime="20200319 08:13:39.403"></status>
</kw>
<status status="PASS" endtime="20200319 08:13:39.404" starttime="20200319 08:13:39.402"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:39.405" starttime="20200319 08:13:39.405"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:39.408" level="INFO">Running command 'ozone sh volume info o3://om:9862/82778-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:41.167" level="INFO">${rc} = 255</msg>
<msg timestamp="20200319 08:13:41.167" level="INFO">${output} = VOLUME_NOT_FOUND Volume 82778-rpcwoport is not found</msg>
<status status="PASS" endtime="20200319 08:13:41.167" starttime="20200319 08:13:39.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:41.168" level="INFO">VOLUME_NOT_FOUND Volume 82778-rpcwoport is not found</msg>
<status status="PASS" endtime="20200319 08:13:41.168" starttime="20200319 08:13:41.168"></status>
</kw>
<msg timestamp="20200319 08:13:41.169" level="INFO">${result} = VOLUME_NOT_FOUND Volume 82778-rpcwoport is not found</msg>
<status status="PASS" endtime="20200319 08:13:41.169" starttime="20200319 08:13:39.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:41.169" starttime="20200319 08:13:41.169"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:41.171" level="INFO">Running command 'ozone sh volume create o3://om:9862/82778-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:42.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:42.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:13:42.968" starttime="20200319 08:13:41.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:42.970" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:13:42.970" starttime="20200319 08:13:42.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:42.970" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:42.970" starttime="20200319 08:13:42.970"></status>
</kw>
<msg timestamp="20200319 08:13:42.971" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200319 08:13:42.971" starttime="20200319 08:13:41.169"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:42.971" starttime="20200319 08:13:42.971"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:42.973" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="82778-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:44.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:44.861" level="INFO">${output} = {
  "metadata": {},
  "name": "82778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:13:42.940Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200319 08:13:44.861" starttime="20200319 08:13:42.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:44.862" level="INFO">{
  "metadata": {},
  "name": "82778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:13:42.940Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200319 08:13:44.862" starttime="20200319 08:13:44.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:44.862" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:44.863" starttime="20200319 08:13:44.862"></status>
</kw>
<msg timestamp="20200319 08:13:44.863" level="INFO">${result} = {
  "metadata": {},
  "name": "82778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:13:42.940Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200319 08:13:44.863" starttime="20200319 08:13:42.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:44.863" starttime="20200319 08:13:44.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:44.865" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="82778-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:46.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:46.758" level="INFO">${output} = {
  "metadata": {},
  "name": "82778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:13:42.940Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200319 08:13:46.758" starttime="20200319 08:13:44.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:46.759" level="INFO">{
  "metadata": {},
  "name": "82778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:13:42.940Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200319 08:13:46.759" starttime="20200319 08:13:46.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:46.760" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:46.760" starttime="20200319 08:13:46.759"></status>
</kw>
<msg timestamp="20200319 08:13:46.760" level="INFO">${result} = {
  "metadata": {},
  "name": "82778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:13:42.940Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200319 08:13:46.760" starttime="20200319 08:13:44.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:46.761" starttime="20200319 08:13:46.760"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:46.763" level="INFO">Running command 'ozone sh volume update o3://om:9862/82778-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:48.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:48.604" level="INFO">${output} = {
  "metadata" : { },
  "name" : "82778-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-19T08:13:42.940Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" endtime="20200319 08:13:48.604" starttime="20200319 08:13:46.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:48.605" level="INFO">{
  "metadata" : { },
  "name" : "82778-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-19T08:13:42.940Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200319 08:13:48.605" starttime="20200319 08:13:48.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:48.606" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:48.606" starttime="20200319 08:13:48.605"></status>
</kw>
<status status="PASS" endtime="20200319 08:13:48.606" starttime="20200319 08:13:46.761"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:48.608" level="INFO">Running command 'ozone sh volume info o3://om:9862/82778-rpcwoport | jq -r '. | select(.name=="82778-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:50.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:50.417" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200319 08:13:50.417" starttime="20200319 08:13:48.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:50.418" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200319 08:13:50.418" starttime="20200319 08:13:50.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:50.419" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:50.419" starttime="20200319 08:13:50.419"></status>
</kw>
<msg timestamp="20200319 08:13:50.420" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200319 08:13:50.420" starttime="20200319 08:13:48.606"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:50.420" starttime="20200319 08:13:50.420"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:50.422" level="INFO">Running command 'ozone sh bucket create o3://om:9862/82778-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:52.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:52.263" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:13:52.263" starttime="20200319 08:13:50.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:52.264" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:13:52.264" starttime="20200319 08:13:52.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:52.265" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:52.265" starttime="20200319 08:13:52.265"></status>
</kw>
<status status="PASS" endtime="20200319 08:13:52.266" starttime="20200319 08:13:50.420"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:52.268" level="INFO">Running command 'ozone sh bucket info o3://om:9862/82778-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:54.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:54.178" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200319 08:13:54.178" starttime="20200319 08:13:52.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:54.179" level="INFO">DISK</msg>
<status status="PASS" endtime="20200319 08:13:54.179" starttime="20200319 08:13:54.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:54.179" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:54.179" starttime="20200319 08:13:54.179"></status>
</kw>
<msg timestamp="20200319 08:13:54.180" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200319 08:13:54.180" starttime="20200319 08:13:52.266"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:54.180" starttime="20200319 08:13:54.180"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:54.182" level="INFO">Running command 'ozone sh bucket list o3://om:9862/82778-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:56.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:56.010" level="INFO">${output} = 82778-rpcwoport</msg>
<status status="PASS" endtime="20200319 08:13:56.010" starttime="20200319 08:13:54.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:56.011" level="INFO">82778-rpcwoport</msg>
<status status="PASS" endtime="20200319 08:13:56.011" starttime="20200319 08:13:56.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:56.011" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:56.011" starttime="20200319 08:13:56.011"></status>
</kw>
<msg timestamp="20200319 08:13:56.012" level="INFO">${result} = 82778-rpcwoport</msg>
<status status="PASS" endtime="20200319 08:13:56.012" starttime="20200319 08:13:54.180"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200319 08:13:56.012" starttime="20200319 08:13:56.012"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:56.015" level="INFO">Running command 'ozone sh key put o3://om:9862/82778-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:59.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:59.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:13:59.699" starttime="20200319 08:13:56.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:59.700" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:13:59.700" starttime="20200319 08:13:59.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:59.701" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:59.701" starttime="20200319 08:13:59.701"></status>
</kw>
<status status="PASS" endtime="20200319 08:13:59.701" starttime="20200319 08:13:56.013"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:59.703" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:13:59.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:13:59.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:13:59.706" starttime="20200319 08:13:59.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:13:59.707" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:13:59.707" starttime="20200319 08:13:59.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:13:59.708" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:13:59.708" starttime="20200319 08:13:59.708"></status>
</kw>
<status status="PASS" endtime="20200319 08:13:59.708" starttime="20200319 08:13:59.702"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:13:59.710" level="INFO">Running command 'ozone sh key get o3://om:9862/82778-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:03.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:03.009" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:14:03.009" starttime="20200319 08:13:59.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:03.010" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:14:03.010" starttime="20200319 08:14:03.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:03.011" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:03.011" starttime="20200319 08:14:03.010"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:03.011" starttime="20200319 08:13:59.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:03.013" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:03.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:03.018" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 19 08:14 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200319 08:14:03.018" starttime="20200319 08:14:03.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:03.019" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 19 08:14 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200319 08:14:03.019" starttime="20200319 08:14:03.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:03.019" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:03.019" starttime="20200319 08:14:03.019"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:03.020" starttime="20200319 08:14:03.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:03.021" level="INFO">Running command 'ozone sh key info o3://om:9862/82778-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:04.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:04.894" level="INFO">${output} = {
  "volumeName": "82778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:13:57.924Z",
  "modificationTime": "2020-03-19T08:13:59.325Z",
  "re...</msg>
<status status="PASS" endtime="20200319 08:14:04.894" starttime="20200319 08:14:03.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:04.895" level="INFO">{
  "volumeName": "82778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:13:57.924Z",
  "modificationTime": "2020-03-19T08:13:59.325Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103848715086921860,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200319 08:14:04.895" starttime="20200319 08:14:04.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:04.895" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:04.895" starttime="20200319 08:14:04.895"></status>
</kw>
<msg timestamp="20200319 08:14:04.896" level="INFO">${result} = {
  "volumeName": "82778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:13:57.924Z",
  "modificationTime": "2020-03-19T08:13:59.325Z",
  "re...</msg>
<status status="PASS" endtime="20200319 08:14:04.896" starttime="20200319 08:14:03.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:04.896" starttime="20200319 08:14:04.896"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:04.898" level="INFO">Running command 'ozone sh key list o3://om:9862/82778-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:06.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:06.749" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200319 08:14:06.749" starttime="20200319 08:14:04.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:06.750" level="INFO">key1</msg>
<status status="PASS" endtime="20200319 08:14:06.750" starttime="20200319 08:14:06.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:06.751" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:06.751" starttime="20200319 08:14:06.750"></status>
</kw>
<msg timestamp="20200319 08:14:06.751" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200319 08:14:06.751" starttime="20200319 08:14:04.896"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:06.751" starttime="20200319 08:14:06.751"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:06.753" level="INFO">Running command 'ozone sh key rename o3://om:9862/82778-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:08.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:08.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:14:08.648" starttime="20200319 08:14:06.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:08.649" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:14:08.649" starttime="20200319 08:14:08.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:08.649" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:08.649" starttime="20200319 08:14:08.649"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:08.650" starttime="20200319 08:14:06.752"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:08.652" level="INFO">Running command 'ozone sh key list o3://om:9862/82778-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:10.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:10.543" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200319 08:14:10.543" starttime="20200319 08:14:08.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:10.545" level="INFO">key2</msg>
<status status="PASS" endtime="20200319 08:14:10.545" starttime="20200319 08:14:10.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:10.546" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:10.546" starttime="20200319 08:14:10.545"></status>
</kw>
<msg timestamp="20200319 08:14:10.546" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200319 08:14:10.546" starttime="20200319 08:14:08.650"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:10.547" starttime="20200319 08:14:10.546"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:10.548" level="INFO">Running command 'ozone sh key delete o3://om:9862/82778-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:12.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:12.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:14:12.390" starttime="20200319 08:14:10.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:12.392" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:14:12.392" starttime="20200319 08:14:12.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:12.392" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:12.392" starttime="20200319 08:14:12.392"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:12.393" starttime="20200319 08:14:10.547"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:12.393" starttime="20200319 08:13:56.013"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:12.393" starttime="20200319 08:13:56.012"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:12.395" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/82778-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:14.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:14.151" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:14:14.151" starttime="20200319 08:14:12.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:14.152" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:14:14.152" starttime="20200319 08:14:14.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:14.152" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:14.152" starttime="20200319 08:14:14.152"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:14.153" starttime="20200319 08:14:12.393"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:14.155" level="INFO">Running command 'ozone sh volume delete o3://om:9862/82778-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:15.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:15.910" level="INFO">${output} = Volume 82778-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200319 08:14:15.910" starttime="20200319 08:14:14.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:15.911" level="INFO">Volume 82778-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200319 08:14:15.911" starttime="20200319 08:14:15.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:15.911" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:15.911" starttime="20200319 08:14:15.911"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:15.912" starttime="20200319 08:14:14.153"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:15.912" starttime="20200319 08:13:39.405"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200319 08:14:15.912" critical="yes" starttime="20200319 08:13:39.404"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:15.914" starttime="20200319 08:14:15.913"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:15.916" level="INFO">Running command 'ozone sh volume create o3://om:9862/82778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:17.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:17.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:14:17.695" starttime="20200319 08:14:15.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:17.696" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:14:17.696" starttime="20200319 08:14:17.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:17.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:17.696" starttime="20200319 08:14:17.696"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:17.697" starttime="20200319 08:14:15.914"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:17.699" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/82778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:19.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:19.789" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:19.789" starttime="20200319 08:14:17.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:19.790" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:19.790" starttime="20200319 08:14:19.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:19.790" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:19.790" starttime="20200319 08:14:19.790"></status>
</kw>
<msg timestamp="20200319 08:14:19.791" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:19.791" starttime="20200319 08:14:17.697"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:19.792" starttime="20200319 08:14:19.791"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:19.794" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/82778-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:21.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:21.498" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200319 08:14:21.498" starttime="20200319 08:14:19.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:21.499" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200319 08:14:21.499" starttime="20200319 08:14:21.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:21.500" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:21.500" starttime="20200319 08:14:21.499"></status>
</kw>
<msg timestamp="20200319 08:14:21.500" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200319 08:14:21.500" starttime="20200319 08:14:19.792"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:21.502" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/82778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:23.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:23.385" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:23.385" starttime="20200319 08:14:21.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:23.386" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:23.386" starttime="20200319 08:14:23.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:23.387" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:23.387" starttime="20200319 08:14:23.386"></status>
</kw>
<msg timestamp="20200319 08:14:23.387" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:23.387" starttime="20200319 08:14:21.500"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:23.388" starttime="20200319 08:14:23.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:23.390" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/82778-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:25.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:25.254" level="INFO">${output} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200319 08:14:25.254" starttime="20200319 08:14:23.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:25.255" level="INFO">ACL doesn't exist.</msg>
<status status="PASS" endtime="20200319 08:14:25.255" starttime="20200319 08:14:25.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:25.256" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:25.256" starttime="20200319 08:14:25.256"></status>
</kw>
<msg timestamp="20200319 08:14:25.256" level="INFO">${result} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200319 08:14:25.256" starttime="20200319 08:14:23.389"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:25.258" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/82778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:27.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:27.106" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:27.106" starttime="20200319 08:14:25.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:27.107" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:27.107" starttime="20200319 08:14:27.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:27.108" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:27.108" starttime="20200319 08:14:27.107"></status>
</kw>
<msg timestamp="20200319 08:14:27.108" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:27.108" starttime="20200319 08:14:25.257"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:27.110" starttime="20200319 08:14:27.108"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:27.111" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/82778-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:28.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:28.943" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:14:28.943" starttime="20200319 08:14:27.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:28.944" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:14:28.944" starttime="20200319 08:14:28.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:28.944" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:28.944" starttime="20200319 08:14:28.944"></status>
</kw>
<msg timestamp="20200319 08:14:28.945" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:14:28.945" starttime="20200319 08:14:27.110"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:28.947" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/82778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:30.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:30.894" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200319 08:14:30.894" starttime="20200319 08:14:28.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:30.895" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:30.895" starttime="20200319 08:14:30.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:30.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:30.896" starttime="20200319 08:14:30.896"></status>
</kw>
<msg timestamp="20200319 08:14:30.896" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200319 08:14:30.896" starttime="20200319 08:14:28.945"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:30.897" starttime="20200319 08:14:30.897"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:30.898" starttime="20200319 08:14:30.897"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:30.898" starttime="20200319 08:14:15.914"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200319 08:14:30.899" critical="yes" starttime="20200319 08:14:15.912"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:30.901" starttime="20200319 08:14:30.900"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:30.903" level="INFO">Running command 'ozone sh bucket create o3://om:9862/82778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:32.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:32.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:14:32.785" starttime="20200319 08:14:30.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:32.785" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:14:32.786" starttime="20200319 08:14:32.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:32.786" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:32.787" starttime="20200319 08:14:32.786"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:32.787" starttime="20200319 08:14:30.901"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:32.789" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/82778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:34.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:34.691" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:34.691" starttime="20200319 08:14:32.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:34.692" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:34.692" starttime="20200319 08:14:34.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:34.692" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:34.692" starttime="20200319 08:14:34.692"></status>
</kw>
<msg timestamp="20200319 08:14:34.692" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:34.692" starttime="20200319 08:14:32.787"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:34.693" starttime="20200319 08:14:34.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:34.695" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/82778-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:36.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:36.455" level="INFO">${output} = ACL already exists.</msg>
<status status="PASS" endtime="20200319 08:14:36.455" starttime="20200319 08:14:34.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:36.455" level="INFO">ACL already exists.</msg>
<status status="PASS" endtime="20200319 08:14:36.456" starttime="20200319 08:14:36.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:36.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:36.456" starttime="20200319 08:14:36.456"></status>
</kw>
<msg timestamp="20200319 08:14:36.456" level="INFO">${result} = ACL already exists.</msg>
<status status="PASS" endtime="20200319 08:14:36.456" starttime="20200319 08:14:34.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:36.458" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/82778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:38.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:38.419" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:38.419" starttime="20200319 08:14:36.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:38.420" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:38.420" starttime="20200319 08:14:38.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:38.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:38.421" starttime="20200319 08:14:38.421"></status>
</kw>
<msg timestamp="20200319 08:14:38.421" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:38.421" starttime="20200319 08:14:36.457"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:38.423" starttime="20200319 08:14:38.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:38.425" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/82778-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:40.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:40.226" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200319 08:14:40.226" starttime="20200319 08:14:38.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:40.227" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200319 08:14:40.227" starttime="20200319 08:14:40.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:40.228" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:40.228" starttime="20200319 08:14:40.228"></status>
</kw>
<msg timestamp="20200319 08:14:40.228" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200319 08:14:40.228" starttime="20200319 08:14:38.423"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:40.230" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/82778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:42.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:42.034" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:42.035" starttime="20200319 08:14:40.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:42.036" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:42.036" starttime="20200319 08:14:42.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:42.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:42.037" starttime="20200319 08:14:42.036"></status>
</kw>
<msg timestamp="20200319 08:14:42.037" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:42.037" starttime="20200319 08:14:40.228"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:42.038" starttime="20200319 08:14:42.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:42.040" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/82778-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:43.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:43.902" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:14:43.902" starttime="20200319 08:14:42.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:43.903" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:14:43.903" starttime="20200319 08:14:43.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:43.904" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:43.904" starttime="20200319 08:14:43.904"></status>
</kw>
<msg timestamp="20200319 08:14:43.904" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:14:43.904" starttime="20200319 08:14:42.038"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:43.906" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/82778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:45.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:45.887" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200319 08:14:45.887" starttime="20200319 08:14:43.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:45.888" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:45.888" starttime="20200319 08:14:45.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:45.888" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:45.888" starttime="20200319 08:14:45.888"></status>
</kw>
<msg timestamp="20200319 08:14:45.889" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200319 08:14:45.889" starttime="20200319 08:14:43.905"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:45.890" starttime="20200319 08:14:45.889"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:45.890" starttime="20200319 08:14:45.890"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:45.890" starttime="20200319 08:14:30.901"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200319 08:14:45.890" critical="yes" starttime="20200319 08:14:30.899"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:45.892" starttime="20200319 08:14:45.891"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:45.894" level="INFO">Running command 'ozone sh key put o3://om:9862/82778-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:49.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:49.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:14:49.458" starttime="20200319 08:14:45.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:49.459" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:14:49.459" starttime="20200319 08:14:49.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:49.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:49.459" starttime="20200319 08:14:49.459"></status>
</kw>
<status status="PASS" endtime="20200319 08:14:49.460" starttime="20200319 08:14:45.892"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:49.461" level="INFO">Running command 'ozone sh key getacl o3://om:9862/82778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:51.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:51.307" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:51.307" starttime="20200319 08:14:49.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:51.308" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:51.308" starttime="20200319 08:14:51.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:51.308" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:51.308" starttime="20200319 08:14:51.308"></status>
</kw>
<msg timestamp="20200319 08:14:51.309" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:51.309" starttime="20200319 08:14:49.460"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:51.309" starttime="20200319 08:14:51.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:51.311" level="INFO">Running command 'ozone sh key addacl o3://om:9862/82778-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:53.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:53.192" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200319 08:14:53.192" starttime="20200319 08:14:51.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:53.193" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200319 08:14:53.194" starttime="20200319 08:14:53.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:53.194" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:53.194" starttime="20200319 08:14:53.194"></status>
</kw>
<msg timestamp="20200319 08:14:53.195" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200319 08:14:53.195" starttime="20200319 08:14:51.310"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:53.197" level="INFO">Running command 'ozone sh key getacl o3://om:9862/82778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:55.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:55.085" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:55.085" starttime="20200319 08:14:53.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:55.086" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:55.086" starttime="20200319 08:14:55.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:55.087" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:55.087" starttime="20200319 08:14:55.086"></status>
</kw>
<msg timestamp="20200319 08:14:55.087" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:55.087" starttime="20200319 08:14:53.195"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:55.088" starttime="20200319 08:14:55.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:55.090" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/82778-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:57.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:57.031" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200319 08:14:57.031" starttime="20200319 08:14:55.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:57.032" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200319 08:14:57.032" starttime="20200319 08:14:57.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:57.033" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:57.033" starttime="20200319 08:14:57.033"></status>
</kw>
<msg timestamp="20200319 08:14:57.033" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200319 08:14:57.033" starttime="20200319 08:14:55.088"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:57.036" level="INFO">Running command 'ozone sh key getacl o3://om:9862/82778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:14:59.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:14:59.064" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:59.064" starttime="20200319 08:14:57.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:14:59.065" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:14:59.065" starttime="20200319 08:14:59.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:14:59.066" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:14:59.066" starttime="20200319 08:14:59.065"></status>
</kw>
<msg timestamp="20200319 08:14:59.066" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200319 08:14:59.066" starttime="20200319 08:14:57.034"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200319 08:14:59.067" starttime="20200319 08:14:59.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:14:59.069" level="INFO">Running command 'ozone sh key setacl o3://om:9862/82778-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:00.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:00.852" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:15:00.852" starttime="20200319 08:14:59.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:00.853" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:15:00.853" starttime="20200319 08:15:00.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:00.854" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:00.854" starttime="20200319 08:15:00.854"></status>
</kw>
<msg timestamp="20200319 08:15:00.854" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200319 08:15:00.854" starttime="20200319 08:14:59.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:00.856" level="INFO">Running command 'ozone sh key getacl o3://om:9862/82778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:02.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:02.954" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200319 08:15:02.954" starttime="20200319 08:15:00.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:02.955" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200319 08:15:02.955" starttime="20200319 08:15:02.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:02.956" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:02.956" starttime="20200319 08:15:02.955"></status>
</kw>
<msg timestamp="20200319 08:15:02.956" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200319 08:15:02.956" starttime="20200319 08:15:00.854"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:02.957" starttime="20200319 08:15:02.956"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:02.958" starttime="20200319 08:15:02.957"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:02.958" starttime="20200319 08:14:45.892"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200319 08:15:02.958" critical="yes" starttime="20200319 08:14:45.891"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:02.960" starttime="20200319 08:15:02.960"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:02.964" level="INFO">Running command 'ozone sh volume info o3:///82778-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:04.776" level="INFO">${rc} = 255</msg>
<msg timestamp="20200319 08:15:04.776" level="INFO">${output} = VOLUME_NOT_FOUND Volume 82778-rpcwport is not found</msg>
<status status="PASS" endtime="20200319 08:15:04.776" starttime="20200319 08:15:02.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:04.777" level="INFO">VOLUME_NOT_FOUND Volume 82778-rpcwport is not found</msg>
<status status="PASS" endtime="20200319 08:15:04.777" starttime="20200319 08:15:04.776"></status>
</kw>
<msg timestamp="20200319 08:15:04.777" level="INFO">${result} = VOLUME_NOT_FOUND Volume 82778-rpcwport is not found</msg>
<status status="PASS" endtime="20200319 08:15:04.777" starttime="20200319 08:15:02.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:04.778" starttime="20200319 08:15:04.777"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:04.780" level="INFO">Running command 'ozone sh volume create o3:///82778-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:06.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:06.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:06.589" starttime="20200319 08:15:04.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:06.590" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:06.590" starttime="20200319 08:15:06.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:06.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:06.591" starttime="20200319 08:15:06.590"></status>
</kw>
<msg timestamp="20200319 08:15:06.591" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200319 08:15:06.591" starttime="20200319 08:15:04.778"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:06.592" starttime="20200319 08:15:06.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:06.594" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="82778-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:08.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:08.495" level="INFO">${output} = {
  "metadata": {},
  "name": "82778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:06.557Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200319 08:15:08.495" starttime="20200319 08:15:06.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:08.496" level="INFO">{
  "metadata": {},
  "name": "82778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:06.557Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200319 08:15:08.496" starttime="20200319 08:15:08.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:08.496" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:08.497" starttime="20200319 08:15:08.496"></status>
</kw>
<msg timestamp="20200319 08:15:08.497" level="INFO">${result} = {
  "metadata": {},
  "name": "82778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:06.557Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200319 08:15:08.497" starttime="20200319 08:15:06.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:08.497" starttime="20200319 08:15:08.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:08.499" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="82778-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:10.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:10.406" level="INFO">${output} = {
  "metadata": {},
  "name": "82778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:06.557Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200319 08:15:10.406" starttime="20200319 08:15:08.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:10.407" level="INFO">{
  "metadata": {},
  "name": "82778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:06.557Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200319 08:15:10.407" starttime="20200319 08:15:10.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:10.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:10.408" starttime="20200319 08:15:10.407"></status>
</kw>
<msg timestamp="20200319 08:15:10.408" level="INFO">${result} = {
  "metadata": {},
  "name": "82778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:06.557Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200319 08:15:10.408" starttime="20200319 08:15:08.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:10.408" starttime="20200319 08:15:10.408"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:10.410" level="INFO">Running command 'ozone sh volume update o3:///82778-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:12.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:12.334" level="INFO">${output} = {
  "metadata" : { },
  "name" : "82778-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-19T08:15:06.557Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" endtime="20200319 08:15:12.334" starttime="20200319 08:15:10.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:12.335" level="INFO">{
  "metadata" : { },
  "name" : "82778-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-19T08:15:06.557Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200319 08:15:12.335" starttime="20200319 08:15:12.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:12.335" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:12.335" starttime="20200319 08:15:12.335"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:12.336" starttime="20200319 08:15:10.408"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:12.338" level="INFO">Running command 'ozone sh volume info o3:///82778-rpcwport | jq -r '. | select(.name=="82778-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:14.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:14.231" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200319 08:15:14.231" starttime="20200319 08:15:12.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:14.232" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200319 08:15:14.232" starttime="20200319 08:15:14.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:14.233" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:14.233" starttime="20200319 08:15:14.232"></status>
</kw>
<msg timestamp="20200319 08:15:14.233" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200319 08:15:14.233" starttime="20200319 08:15:12.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:14.234" starttime="20200319 08:15:14.233"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:14.236" level="INFO">Running command 'ozone sh bucket create o3:///82778-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:16.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:16.104" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:16.104" starttime="20200319 08:15:14.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:16.105" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:16.106" starttime="20200319 08:15:16.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:16.106" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:16.106" starttime="20200319 08:15:16.106"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:16.106" starttime="20200319 08:15:14.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:16.108" level="INFO">Running command 'ozone sh bucket info o3:///82778-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:18.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:18.003" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200319 08:15:18.003" starttime="20200319 08:15:16.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:18.004" level="INFO">DISK</msg>
<status status="PASS" endtime="20200319 08:15:18.004" starttime="20200319 08:15:18.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:18.004" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:18.004" starttime="20200319 08:15:18.004"></status>
</kw>
<msg timestamp="20200319 08:15:18.005" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200319 08:15:18.005" starttime="20200319 08:15:16.107"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:18.005" starttime="20200319 08:15:18.005"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:18.007" level="INFO">Running command 'ozone sh bucket list o3:///82778-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:19.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:19.964" level="INFO">${output} = 82778-rpcwport</msg>
<status status="PASS" endtime="20200319 08:15:19.964" starttime="20200319 08:15:18.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:19.965" level="INFO">82778-rpcwport</msg>
<status status="PASS" endtime="20200319 08:15:19.965" starttime="20200319 08:15:19.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:19.965" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:19.965" starttime="20200319 08:15:19.965"></status>
</kw>
<msg timestamp="20200319 08:15:19.966" level="INFO">${result} = 82778-rpcwport</msg>
<status status="PASS" endtime="20200319 08:15:19.966" starttime="20200319 08:15:18.005"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:19.966" starttime="20200319 08:15:19.966"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:19.969" level="INFO">Running command 'ozone sh key put o3:///82778-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:23.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:23.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:23.723" starttime="20200319 08:15:19.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:23.724" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:23.724" starttime="20200319 08:15:23.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:23.725" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:23.725" starttime="20200319 08:15:23.724"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:23.725" starttime="20200319 08:15:19.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:23.727" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:23.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:23.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:23.730" starttime="20200319 08:15:23.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:23.731" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:23.731" starttime="20200319 08:15:23.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:23.732" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:23.732" starttime="20200319 08:15:23.731"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:23.732" starttime="20200319 08:15:23.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:23.734" level="INFO">Running command 'ozone sh key get o3:///82778-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:27.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:27.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:27.171" starttime="20200319 08:15:23.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:27.172" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:27.172" starttime="20200319 08:15:27.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:27.173" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:27.173" starttime="20200319 08:15:27.172"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:27.173" starttime="20200319 08:15:23.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:27.175" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:27.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:27.178" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 19 08:15 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200319 08:15:27.179" starttime="20200319 08:15:27.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:27.179" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 19 08:15 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200319 08:15:27.179" starttime="20200319 08:15:27.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:27.180" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:27.180" starttime="20200319 08:15:27.180"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:27.180" starttime="20200319 08:15:27.173"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:27.182" level="INFO">Running command 'ozone sh key info o3:///82778-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:29.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:29.139" level="INFO">${output} = {
  "volumeName": "82778-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:15:21.810Z",
  "modificationTime": "2020-03-19T08:15:23.357Z",
  "rep...</msg>
<status status="PASS" endtime="20200319 08:15:29.139" starttime="20200319 08:15:27.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:29.140" level="INFO">{
  "volumeName": "82778-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:15:21.810Z",
  "modificationTime": "2020-03-19T08:15:23.357Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103848720584474750,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200319 08:15:29.140" starttime="20200319 08:15:29.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:29.141" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:29.141" starttime="20200319 08:15:29.140"></status>
</kw>
<msg timestamp="20200319 08:15:29.141" level="INFO">${result} = {
  "volumeName": "82778-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:15:21.810Z",
  "modificationTime": "2020-03-19T08:15:23.357Z",
  "rep...</msg>
<status status="PASS" endtime="20200319 08:15:29.141" starttime="20200319 08:15:27.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:29.142" starttime="20200319 08:15:29.141"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:29.144" level="INFO">Running command 'ozone sh key list o3:///82778-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:31.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:31.076" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200319 08:15:31.076" starttime="20200319 08:15:29.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:31.077" level="INFO">key1</msg>
<status status="PASS" endtime="20200319 08:15:31.077" starttime="20200319 08:15:31.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:31.077" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:31.078" starttime="20200319 08:15:31.077"></status>
</kw>
<msg timestamp="20200319 08:15:31.078" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200319 08:15:31.078" starttime="20200319 08:15:29.142"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:31.078" starttime="20200319 08:15:31.078"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:31.080" level="INFO">Running command 'ozone sh key rename o3:///82778-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:32.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:32.955" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:32.955" starttime="20200319 08:15:31.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:32.956" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:32.956" starttime="20200319 08:15:32.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:32.957" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:32.957" starttime="20200319 08:15:32.957"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:32.957" starttime="20200319 08:15:31.079"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:32.959" level="INFO">Running command 'ozone sh key list o3:///82778-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:34.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:34.853" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200319 08:15:34.853" starttime="20200319 08:15:32.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:34.854" level="INFO">key2</msg>
<status status="PASS" endtime="20200319 08:15:34.854" starttime="20200319 08:15:34.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:34.855" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:34.855" starttime="20200319 08:15:34.854"></status>
</kw>
<msg timestamp="20200319 08:15:34.855" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200319 08:15:34.855" starttime="20200319 08:15:32.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:34.856" starttime="20200319 08:15:34.855"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:34.858" level="INFO">Running command 'ozone sh key delete o3:///82778-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:36.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:36.714" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:36.714" starttime="20200319 08:15:34.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:36.715" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:36.715" starttime="20200319 08:15:36.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:36.716" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:36.716" starttime="20200319 08:15:36.715"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:36.716" starttime="20200319 08:15:34.856"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:36.716" starttime="20200319 08:15:19.967"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:36.716" starttime="20200319 08:15:19.966"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:36.718" level="INFO">Running command 'ozone sh bucket delete o3:///82778-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:38.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:38.509" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:38.509" starttime="20200319 08:15:36.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:38.510" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:38.510" starttime="20200319 08:15:38.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:38.511" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:38.511" starttime="20200319 08:15:38.510"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:38.511" starttime="20200319 08:15:36.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:38.513" level="INFO">Running command 'ozone sh volume delete o3:///82778-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:40.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:40.344" level="INFO">${output} = Volume 82778-rpcwport is deleted</msg>
<status status="PASS" endtime="20200319 08:15:40.344" starttime="20200319 08:15:38.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:40.346" level="INFO">Volume 82778-rpcwport is deleted</msg>
<status status="PASS" endtime="20200319 08:15:40.346" starttime="20200319 08:15:40.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:40.346" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:40.346" starttime="20200319 08:15:40.346"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:40.347" starttime="20200319 08:15:38.511"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:40.347" starttime="20200319 08:15:02.960"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200319 08:15:40.347" critical="yes" starttime="20200319 08:15:02.959"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:40.348" starttime="20200319 08:15:40.348"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:40.351" level="INFO">Running command 'ozone sh volume info /82778-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:42.083" level="INFO">${rc} = 255</msg>
<msg timestamp="20200319 08:15:42.083" level="INFO">${output} = VOLUME_NOT_FOUND Volume 82778-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200319 08:15:42.083" starttime="20200319 08:15:40.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:42.084" level="INFO">VOLUME_NOT_FOUND Volume 82778-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200319 08:15:42.084" starttime="20200319 08:15:42.084"></status>
</kw>
<msg timestamp="20200319 08:15:42.085" level="INFO">${result} = VOLUME_NOT_FOUND Volume 82778-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200319 08:15:42.085" starttime="20200319 08:15:40.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:42.085" starttime="20200319 08:15:42.085"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:42.087" level="INFO">Running command 'ozone sh volume create /82778-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:43.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:43.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:43.879" starttime="20200319 08:15:42.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:43.880" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:43.880" starttime="20200319 08:15:43.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:43.880" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:43.881" starttime="20200319 08:15:43.880"></status>
</kw>
<msg timestamp="20200319 08:15:43.881" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200319 08:15:43.881" starttime="20200319 08:15:42.085"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:43.881" starttime="20200319 08:15:43.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:43.884" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="82778-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:45.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:45.692" level="INFO">${output} = {
  "metadata": {},
  "name": "82778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:43.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200319 08:15:45.692" starttime="20200319 08:15:43.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:45.693" level="INFO">{
  "metadata": {},
  "name": "82778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:43.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200319 08:15:45.693" starttime="20200319 08:15:45.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:45.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:45.694" starttime="20200319 08:15:45.694"></status>
</kw>
<msg timestamp="20200319 08:15:45.694" level="INFO">${result} = {
  "metadata": {},
  "name": "82778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:43.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200319 08:15:45.694" starttime="20200319 08:15:43.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:45.695" starttime="20200319 08:15:45.694"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:45.697" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="82778-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:47.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:47.502" level="INFO">${output} = {
  "metadata": {},
  "name": "82778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:43.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200319 08:15:47.503" starttime="20200319 08:15:45.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:47.504" level="INFO">{
  "metadata": {},
  "name": "82778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:43.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200319 08:15:47.504" starttime="20200319 08:15:47.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:47.504" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:47.504" starttime="20200319 08:15:47.504"></status>
</kw>
<msg timestamp="20200319 08:15:47.504" level="INFO">${result} = {
  "metadata": {},
  "name": "82778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-03-19T08:15:43.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200319 08:15:47.505" starttime="20200319 08:15:45.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:47.505" starttime="20200319 08:15:47.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:47.507" level="INFO">Running command 'ozone sh volume update /82778-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:49.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:49.367" level="INFO">${output} = {
  "metadata" : { },
  "name" : "82778-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-19T08:15:43.853Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" endtime="20200319 08:15:49.368" starttime="20200319 08:15:47.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:49.368" level="INFO">{
  "metadata" : { },
  "name" : "82778-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-03-19T08:15:43.853Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200319 08:15:49.369" starttime="20200319 08:15:49.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:49.369" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:49.369" starttime="20200319 08:15:49.369"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:49.370" starttime="20200319 08:15:47.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:49.372" level="INFO">Running command 'ozone sh volume info /82778-rpcwoscheme | jq -r '. | select(.name=="82778-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:51.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:51.192" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200319 08:15:51.192" starttime="20200319 08:15:49.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:51.193" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200319 08:15:51.193" starttime="20200319 08:15:51.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:51.194" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:51.194" starttime="20200319 08:15:51.193"></status>
</kw>
<msg timestamp="20200319 08:15:51.194" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200319 08:15:51.194" starttime="20200319 08:15:49.370"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:51.195" starttime="20200319 08:15:51.194"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:51.197" level="INFO">Running command 'ozone sh bucket create /82778-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:52.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:52.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:15:52.970" starttime="20200319 08:15:51.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:52.971" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:15:52.971" starttime="20200319 08:15:52.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:52.972" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:52.972" starttime="20200319 08:15:52.972"></status>
</kw>
<status status="PASS" endtime="20200319 08:15:52.972" starttime="20200319 08:15:51.195"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:52.974" level="INFO">Running command 'ozone sh bucket info /82778-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:54.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:54.888" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200319 08:15:54.888" starttime="20200319 08:15:52.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:54.889" level="INFO">DISK</msg>
<status status="PASS" endtime="20200319 08:15:54.889" starttime="20200319 08:15:54.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:54.889" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:54.889" starttime="20200319 08:15:54.889"></status>
</kw>
<msg timestamp="20200319 08:15:54.890" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200319 08:15:54.890" starttime="20200319 08:15:52.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:54.890" starttime="20200319 08:15:54.890"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:54.893" level="INFO">Running command 'ozone sh bucket list /82778-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:15:56.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:15:56.769" level="INFO">${output} = 82778-rpcwoscheme</msg>
<status status="PASS" endtime="20200319 08:15:56.769" starttime="20200319 08:15:54.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:15:56.770" level="INFO">82778-rpcwoscheme</msg>
<status status="PASS" endtime="20200319 08:15:56.770" starttime="20200319 08:15:56.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:15:56.770" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:15:56.771" starttime="20200319 08:15:56.770"></status>
</kw>
<msg timestamp="20200319 08:15:56.771" level="INFO">${result} = 82778-rpcwoscheme</msg>
<status status="PASS" endtime="20200319 08:15:56.771" starttime="20200319 08:15:54.890"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200319 08:15:56.771" starttime="20200319 08:15:56.771"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:15:56.774" level="INFO">Running command 'ozone sh key put /82778-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:00.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:00.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:16:00.379" starttime="20200319 08:15:56.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:00.379" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:16:00.380" starttime="20200319 08:16:00.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:00.380" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:00.380" starttime="20200319 08:16:00.380"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:00.380" starttime="20200319 08:15:56.772"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:00.382" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:00.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:00.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:16:00.385" starttime="20200319 08:16:00.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:00.386" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:16:00.386" starttime="20200319 08:16:00.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:00.386" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:00.386" starttime="20200319 08:16:00.386"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:00.386" starttime="20200319 08:16:00.380"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:00.388" level="INFO">Running command 'ozone sh key get /82778-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:03.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:03.825" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:16:03.826" starttime="20200319 08:16:00.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:03.827" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:16:03.827" starttime="20200319 08:16:03.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:03.827" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:03.827" starttime="20200319 08:16:03.827"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:03.828" starttime="20200319 08:16:00.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:03.830" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:03.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:03.833" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Mar 19 08:16 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200319 08:16:03.833" starttime="20200319 08:16:03.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:03.834" level="INFO">-rw-r--r-- 1 hadoop users 17540 Mar 19 08:16 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200319 08:16:03.834" starttime="20200319 08:16:03.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:03.835" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:03.835" starttime="20200319 08:16:03.834"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:03.835" starttime="20200319 08:16:03.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:03.837" level="INFO">Running command 'ozone sh key info /82778-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:05.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:05.679" level="INFO">${output} = {
  "volumeName": "82778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:15:58.516Z",
  "modificationTime": "2020-03-19T08:16:00.023Z",
  "...</msg>
<status status="PASS" endtime="20200319 08:16:05.679" starttime="20200319 08:16:03.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:05.680" level="INFO">{
  "volumeName": "82778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:15:58.516Z",
  "modificationTime": "2020-03-19T08:16:00.023Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103848722990039170,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200319 08:16:05.681" starttime="20200319 08:16:05.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:05.682" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:05.682" starttime="20200319 08:16:05.681"></status>
</kw>
<msg timestamp="20200319 08:16:05.682" level="INFO">${result} = {
  "volumeName": "82778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-03-19T08:15:58.516Z",
  "modificationTime": "2020-03-19T08:16:00.023Z",
  "...</msg>
<status status="PASS" endtime="20200319 08:16:05.682" starttime="20200319 08:16:03.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200319 08:16:05.682" starttime="20200319 08:16:05.682"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:05.684" level="INFO">Running command 'ozone sh key list /82778-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:07.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:07.612" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200319 08:16:07.612" starttime="20200319 08:16:05.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:07.613" level="INFO">key1</msg>
<status status="PASS" endtime="20200319 08:16:07.614" starttime="20200319 08:16:07.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:07.614" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:07.614" starttime="20200319 08:16:07.614"></status>
</kw>
<msg timestamp="20200319 08:16:07.615" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200319 08:16:07.615" starttime="20200319 08:16:05.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200319 08:16:07.615" starttime="20200319 08:16:07.615"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:07.617" level="INFO">Running command 'ozone sh key rename /82778-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:09.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:09.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:16:09.559" starttime="20200319 08:16:07.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:09.560" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:16:09.561" starttime="20200319 08:16:09.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:09.561" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:09.561" starttime="20200319 08:16:09.561"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:09.561" starttime="20200319 08:16:07.615"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:09.563" level="INFO">Running command 'ozone sh key list /82778-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:11.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:11.425" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200319 08:16:11.425" starttime="20200319 08:16:09.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:11.426" level="INFO">key2</msg>
<status status="PASS" endtime="20200319 08:16:11.426" starttime="20200319 08:16:11.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:11.426" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:11.426" starttime="20200319 08:16:11.426"></status>
</kw>
<msg timestamp="20200319 08:16:11.427" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200319 08:16:11.427" starttime="20200319 08:16:09.562"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200319 08:16:11.427" starttime="20200319 08:16:11.427"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:11.429" level="INFO">Running command 'ozone sh key delete /82778-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:13.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:13.167" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:16:13.167" starttime="20200319 08:16:11.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:13.168" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:16:13.169" starttime="20200319 08:16:13.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:13.169" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:13.169" starttime="20200319 08:16:13.169"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:13.170" starttime="20200319 08:16:11.427"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:13.170" starttime="20200319 08:15:56.772"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:13.170" starttime="20200319 08:15:56.772"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:13.172" level="INFO">Running command 'ozone sh bucket delete /82778-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:14.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:14.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200319 08:16:14.995" starttime="20200319 08:16:13.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:14.996" level="INFO"></msg>
<status status="PASS" endtime="20200319 08:16:14.996" starttime="20200319 08:16:14.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:14.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:14.996" starttime="20200319 08:16:14.996"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:14.997" starttime="20200319 08:16:13.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:16:14.999" level="INFO">Running command 'ozone sh volume delete /82778-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:16:16.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:16:16.755" level="INFO">${output} = Volume 82778-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200319 08:16:16.755" starttime="20200319 08:16:14.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:16:16.756" level="INFO">Volume 82778-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200319 08:16:16.756" starttime="20200319 08:16:16.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:16:16.757" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:16:16.757" starttime="20200319 08:16:16.756"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:16.757" starttime="20200319 08:16:14.997"></status>
</kw>
<status status="PASS" endtime="20200319 08:16:16.757" starttime="20200319 08:15:40.349"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200319 08:16:16.757" critical="yes" starttime="20200319 08:15:40.347"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200319 08:16:16.758" starttime="20200319 08:13:39.397"></status>
</suite>
<status status="PASS" endtime="20200319 08:16:16.762" starttime="20200319 08:12:32.238"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-basic" pass="8">ozone-basic</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-basic.Basic</stat>
<stat fail="0" id="s1-s2" name="Ozone-Shell" pass="6">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
