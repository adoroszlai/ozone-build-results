<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200319 08:21:27.689" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:21:27.732" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:21:35.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:21:35.203" level="INFO">${output} = 2020-03-19 08:21:28,601 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:28,770 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:35.203" starttime="20200319 08:21:27.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:21:35.205" level="INFO">2020-03-19 08:21:28,601 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:28,770 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 08:21:28,770 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 08:21:29,843 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-03-19 08:21:29,844 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-03-19 08:21:29,844 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-03-19 08:21:29,844 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-03-19 08:21:29,845 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-03-19 08:21:29,845 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-03-19 08:21:29,845 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-03-19 08:21:29,849 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-03-19 08:21:29,857 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 08:21:29,881 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-79390, with hadoop as owner.
2020-03-19 08:21:29,899 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79390/bucket-0-67821, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:21:30,329 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-19 08:21:30,863 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,039
Average Time spent in bucket creation: 00:00:00,009
Average Time spent in key creation: 00:00:00,030
Average Time spent in key write: 00:00:00,537
Total bytes written: 10240
Total Execution time: 00:00:05,808
***************************************************</msg>
<status status="PASS" endtime="20200319 08:21:35.205" starttime="20200319 08:21:35.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:21:35.205" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:21:35.205" starttime="20200319 08:21:35.205"></status>
</kw>
<msg timestamp="20200319 08:21:35.206" level="INFO">${result} = 2020-03-19 08:21:28,601 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:28,770 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:35.206" starttime="20200319 08:21:27.730"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 08:21:35.207" starttime="20200319 08:21:35.206"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:35.207" starttime="20200319 08:21:35.206"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:35.207" critical="yes" starttime="20200319 08:21:27.730"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:21:35.209" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:21:39.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:21:39.931" level="INFO">${output} = 2020-03-19 08:21:36,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:36,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:39.931" starttime="20200319 08:21:35.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:21:39.932" level="INFO">2020-03-19 08:21:36,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:36,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 08:21:36,305 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 08:21:36,542 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2Paf3bTESn
2020-03-19 08:21:36,560 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 08:21:37,318 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-03-19 08:21:37,334 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-03-19 08:21:37,562 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 08:21:37,802 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-03-19 08:21:38,563 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 08:21:39,563 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-19 08:21:39,600 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1251.699259, max=1251.699259, mean=1251.699259, stddev=0.0, median=1251.699259, p75=1251.699259, p95=1251.699259, p98=1251.699259, p99=1251.699259, p999=1251.699259, mean_rate=0.44436132458499467, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-19 08:21:39,601 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-03-19 08:21:39,601 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-19 08:21:39,601 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200319 08:21:39.932" starttime="20200319 08:21:39.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:21:39.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:21:39.933" starttime="20200319 08:21:39.933"></status>
</kw>
<msg timestamp="20200319 08:21:39.933" level="INFO">${result} = 2020-03-19 08:21:36,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:36,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:39.933" starttime="20200319 08:21:35.208"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 08:21:39.934" starttime="20200319 08:21:39.934"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:39.934" starttime="20200319 08:21:39.934"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:39.935" critical="yes" starttime="20200319 08:21:35.207"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:21:39.937" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:21:43.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:21:43.022" level="INFO">${output} = 2020-03-19 08:21:40,814 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:40,992 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:43.022" starttime="20200319 08:21:39.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:21:43.023" level="INFO">2020-03-19 08:21:40,814 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:40,992 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 08:21:40,993 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 08:21:41,267 [main] INFO freon.BaseFreonGenerator: Executing test with prefix VlUaooEBYf
2020-03-19 08:21:41,283 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 08:21:42,287 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-19 08:21:43,007 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=25.898599, max=25.898599, mean=25.898599, stddev=0.0, median=25.898599, p75=25.898599, p95=25.898599, p98=25.898599, p99=25.898599, p999=25.898599, mean_rate=0.9879897212987601, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-19 08:21:43,010 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-19 08:21:43,010 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-19 08:21:43,010 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200319 08:21:43.023" starttime="20200319 08:21:43.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:21:43.024" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:21:43.025" starttime="20200319 08:21:43.023"></status>
</kw>
<msg timestamp="20200319 08:21:43.025" level="INFO">${result} = 2020-03-19 08:21:40,814 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:40,992 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:43.025" starttime="20200319 08:21:39.936"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 08:21:43.026" starttime="20200319 08:21:43.026"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:43.026" starttime="20200319 08:21:43.025"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:43.026" critical="yes" starttime="20200319 08:21:39.935"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200319 08:21:43.030" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200319 08:21:46.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200319 08:21:46.164" level="INFO">${output} = 2020-03-19 08:21:43,917 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:44,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:46.164" starttime="20200319 08:21:43.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200319 08:21:46.165" level="INFO">2020-03-19 08:21:43,917 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:44,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-03-19 08:21:44,101 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-03-19 08:21:44,392 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Ybvw2ImODn
2020-03-19 08:21:44,403 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-03-19 08:21:45,406 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-03-19 08:21:46,151 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=6.493576, max=6.493576, mean=6.493576, stddev=0.0, median=6.493576, p75=6.493576, p95=6.493576, p98=6.493576, p99=6.493576, p999=6.493576, mean_rate=0.9917077247879206, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-03-19 08:21:46,153 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-03-19 08:21:46,153 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-03-19 08:21:46,153 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200319 08:21:46.165" starttime="20200319 08:21:46.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200319 08:21:46.166" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200319 08:21:46.166" starttime="20200319 08:21:46.166"></status>
</kw>
<msg timestamp="20200319 08:21:46.167" level="INFO">${result} = 2020-03-19 08:21:43,917 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-03-19 08:21:44,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200319 08:21:46.167" starttime="20200319 08:21:43.028"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200319 08:21:46.167" starttime="20200319 08:21:46.167"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:46.167" starttime="20200319 08:21:46.167"></status>
</kw>
<status status="PASS" endtime="20200319 08:21:46.167" critical="yes" starttime="20200319 08:21:43.028"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200319 08:21:46.168" starttime="20200319 08:21:27.710"></status>
</suite>
<status status="PASS" endtime="20200319 08:21:46.171" starttime="20200319 08:21:27.690"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
