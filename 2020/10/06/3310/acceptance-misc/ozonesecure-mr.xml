<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201006 02:11:27.496" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:39.777" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:07:44.005" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 02:07:44.005" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:44.005" starttime="20201006 02:07:39.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:07:44.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 02:07:44.006" starttime="20201006 02:07:44.006"></status>
</kw>
<msg timestamp="20201006 02:07:44.007" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:44.007" starttime="20201006 02:07:39.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:44.013" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:07:47.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:07:47.620" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:47.621" starttime="20201006 02:07:44.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:07:47.622" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:07:47.622" starttime="20201006 02:07:47.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:07:47.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:07:47.623" starttime="20201006 02:07:47.622"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:47.623" starttime="20201006 02:07:44.009"></status>
</kw>
<msg timestamp="20201006 02:07:47.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:07:47.623" starttime="20201006 02:07:44.009"></status>
</kw>
<msg timestamp="20201006 02:07:47.623" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:47.624" starttime="20201006 02:07:44.008"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201006 02:07:47.624" starttime="20201006 02:07:47.624"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:47.624" starttime="20201006 02:07:44.008"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:47.624" starttime="20201006 02:07:44.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:47.630" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:07:51.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:07:51.254" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:51.255" starttime="20201006 02:07:47.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:07:51.256" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:07:51.256" starttime="20201006 02:07:51.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:07:51.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:07:51.257" starttime="20201006 02:07:51.256"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:51.257" starttime="20201006 02:07:47.626"></status>
</kw>
<msg timestamp="20201006 02:07:51.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:07:51.258" starttime="20201006 02:07:47.626"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:51.258" starttime="20201006 02:07:47.625"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:51.258" starttime="20201006 02:07:47.625"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:51.258" starttime="20201006 02:07:47.625"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201006 02:07:51.259" starttime="20201006 02:07:51.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:51.264" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:07:55.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:07:55.185" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:55.185" starttime="20201006 02:07:51.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:07:55.186" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:07:50.926Z",
  "modificationTime" : "2020-10-06T02:07:50.926Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201006 02:07:55.186" starttime="20201006 02:07:55.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:07:55.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:07:55.187" starttime="20201006 02:07:55.186"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:55.187" starttime="20201006 02:07:51.261"></status>
</kw>
<msg timestamp="20201006 02:07:55.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:07:55.187" starttime="20201006 02:07:51.260"></status>
</kw>
<msg timestamp="20201006 02:07:55.187" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:55.187" starttime="20201006 02:07:51.259"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201006 02:07:55.188" starttime="20201006 02:07:55.188"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:07:55.192" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 02:07:55.192" starttime="20201006 02:07:55.192"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:07:55.193" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 02:07:55.193" starttime="20201006 02:07:55.193"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:55.193" starttime="20201006 02:07:55.191"></status>
</kw>
<msg timestamp="20201006 02:07:55.194" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 02:07:55.194" starttime="20201006 02:07:55.191"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:55.194" starttime="20201006 02:07:55.190"></status>
</kw>
<msg timestamp="20201006 02:07:55.194" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 02:07:55.194" starttime="20201006 02:07:55.189"></status>
</kw>
<msg timestamp="20201006 02:07:55.194" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 02:07:55.195" starttime="20201006 02:07:55.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:55.199" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:07:59.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:07:59.109" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:07:59.109" starttime="20201006 02:07:55.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:07:59.111" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:07:59.111" starttime="20201006 02:07:59.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:07:59.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:07:59.111" starttime="20201006 02:07:59.111"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:59.112" starttime="20201006 02:07:55.195"></status>
</kw>
<msg timestamp="20201006 02:07:59.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:07:59.112" starttime="20201006 02:07:55.195"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:59.112" starttime="20201006 02:07:55.195"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:59.117" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:07.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:07.312" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:08:07.312" starttime="20201006 02:07:59.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:07.313" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:08:07.313" starttime="20201006 02:08:07.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:07.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:07.314" starttime="20201006 02:08:07.313"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:07.314" starttime="20201006 02:07:59.113"></status>
</kw>
<msg timestamp="20201006 02:08:07.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:07.314" starttime="20201006 02:07:59.113"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:07.315" starttime="20201006 02:07:59.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:07.318" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:12.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:12.817" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:08:12.817" starttime="20201006 02:08:07.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:12.818" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:08:12.818" starttime="20201006 02:08:12.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:12.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:12.819" starttime="20201006 02:08:12.818"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:12.819" starttime="20201006 02:08:07.316"></status>
</kw>
<msg timestamp="20201006 02:08:12.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:12.820" starttime="20201006 02:08:07.315"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:12.820" starttime="20201006 02:08:07.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:12.825" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:18.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:18.309" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:08:18.309" starttime="20201006 02:08:12.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:18.310" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:08:18.311" starttime="20201006 02:08:18.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:18.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:18.311" starttime="20201006 02:08:18.311"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:18.312" starttime="20201006 02:08:12.821"></status>
</kw>
<msg timestamp="20201006 02:08:18.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:18.312" starttime="20201006 02:08:12.821"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:18.312" starttime="20201006 02:08:12.820"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:08:18.312" critical="yes" starttime="20201006 02:07:39.770"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:08:18.318" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 02:08:18.318" starttime="20201006 02:08:18.317"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:08:18.318" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 02:08:18.318" starttime="20201006 02:08:18.318"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:18.319" starttime="20201006 02:08:18.317"></status>
</kw>
<msg timestamp="20201006 02:08:18.319" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 02:08:18.319" starttime="20201006 02:08:18.316"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:18.319" starttime="20201006 02:08:18.315"></status>
</kw>
<msg timestamp="20201006 02:08:18.319" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 02:08:18.319" starttime="20201006 02:08:18.315"></status>
</kw>
<msg timestamp="20201006 02:08:18.319" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 02:08:18.320" starttime="20201006 02:08:18.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:18.325" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:21.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:21.869" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:08:21.869" starttime="20201006 02:08:18.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:21.870" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:08:21.871" starttime="20201006 02:08:21.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:21.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:21.871" starttime="20201006 02:08:21.871"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:21.872" starttime="20201006 02:08:18.321"></status>
</kw>
<msg timestamp="20201006 02:08:21.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:21.872" starttime="20201006 02:08:18.320"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:21.872" starttime="20201006 02:08:18.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:21.876" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:25.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:25.426" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:08:25.426" starttime="20201006 02:08:21.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:25.427" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:08:25.428" starttime="20201006 02:08:25.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:25.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:25.428" starttime="20201006 02:08:25.428"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:25.429" starttime="20201006 02:08:21.873"></status>
</kw>
<msg timestamp="20201006 02:08:25.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:25.429" starttime="20201006 02:08:21.873"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:25.429" starttime="20201006 02:08:21.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:08:25.429" critical="yes" starttime="20201006 02:08:18.313"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201006 02:08:25.431" starttime="20201006 02:07:39.709"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 02:10:03.579" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 02:10:03.579" starttime="20201006 02:10:03.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:10:03.582" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 02:10:03.582" starttime="20201006 02:10:03.579"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:03.582" starttime="20201006 02:10:03.573"></status>
</kw>
<msg timestamp="20201006 02:10:03.582" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 02:10:03.582" starttime="20201006 02:10:03.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:10:03.596" starttime="20201006 02:10:03.595"></status>
</kw>
<msg timestamp="20201006 02:10:03.596" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 02:10:03.597" starttime="20201006 02:10:03.582"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:03.597" starttime="20201006 02:10:03.572"></status>
</kw>
<msg timestamp="20201006 02:10:03.599" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 02:10:03.599" starttime="20201006 02:10:03.571"></status>
</kw>
<msg timestamp="20201006 02:10:03.600" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 02:10:03.600" starttime="20201006 02:10:03.570"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 02:10:03.601" level="INFO">${random} = 60738</msg>
<status status="PASS" endtime="20201006 02:10:03.601" starttime="20201006 02:10:03.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:10:03.611" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-60738 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:10:07.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:10:07.506" level="INFO">${output} = 2020-10-06 02:10:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:10:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 02:10:07.507" starttime="20201006 02:10:03.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:10:07.508" level="INFO">2020-10-06 02:10:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:10:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:10:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 02:10:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 02:10:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DF331A0DB484-&gt;5d78ae04-519d-4910-96f8-2c170c53d634
2020-10-06 02:10:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201006 02:10:07.508" starttime="20201006 02:10:07.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:10:07.508" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:10:07.508" starttime="20201006 02:10:07.508"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:07.509" starttime="20201006 02:10:03.602"></status>
</kw>
<msg timestamp="20201006 02:10:07.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:10:07.509" starttime="20201006 02:10:03.601"></status>
</kw>
<msg timestamp="20201006 02:10:07.509" level="INFO">${result} = 2020-10-06 02:10:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:10:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 02:10:07.509" starttime="20201006 02:10:03.601"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:10:07.512" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:10:09.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:10:09.554" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 02:08 ofs://om/volume1/bucket1/ozone-58261
-rw-...</msg>
<status status="PASS" endtime="20201006 02:10:09.554" starttime="20201006 02:10:07.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:10:09.555" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 02:08 ofs://om/volume1/bucket1/ozone-58261
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 02:10 ofs://om/volume1/bucket1/ozone-60738
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:08 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:09 ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20201006 02:10:09.555" starttime="20201006 02:10:09.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:10:09.556" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:10:09.556" starttime="20201006 02:10:09.555"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:09.556" starttime="20201006 02:10:07.510"></status>
</kw>
<msg timestamp="20201006 02:10:09.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:10:09.556" starttime="20201006 02:10:07.510"></status>
</kw>
<msg timestamp="20201006 02:10:09.557" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 02:08 ofs://om/volume1/bucket1/ozone-58261
-rw-...</msg>
<status status="PASS" endtime="20201006 02:10:09.557" starttime="20201006 02:10:07.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:10:09.557" starttime="20201006 02:10:09.557"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 02:10:09.558" critical="yes" starttime="20201006 02:10:03.568"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 02:10:09.558" starttime="20201006 02:10:03.475"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:08:35.353" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 02:08:35.353" starttime="20201006 02:08:35.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:08:35.353" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 02:08:35.353" starttime="20201006 02:08:35.353"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:35.354" starttime="20201006 02:08:35.351"></status>
</kw>
<msg timestamp="20201006 02:08:35.354" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 02:08:35.354" starttime="20201006 02:08:35.350"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:35.354" starttime="20201006 02:08:35.350"></status>
</kw>
<msg timestamp="20201006 02:08:35.354" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 02:08:35.354" starttime="20201006 02:08:35.349"></status>
</kw>
<msg timestamp="20201006 02:08:35.354" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 02:08:35.354" starttime="20201006 02:08:35.348"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 02:08:35.355" level="INFO">${random} = 58261</msg>
<status status="PASS" endtime="20201006 02:08:35.355" starttime="20201006 02:08:35.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:35.358" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-58261 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:39.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:39.613" level="INFO">${output} = 2020-10-06 02:08:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:08:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 02:08:39.613" starttime="20201006 02:08:35.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:39.616" level="INFO">2020-10-06 02:08:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:08:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:08:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 02:08:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 02:08:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB9561DFDD10-&gt;5d78ae04-519d-4910-96f8-2c170c53d634
2020-10-06 02:08:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201006 02:08:39.616" starttime="20201006 02:08:39.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:39.616" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:39.617" starttime="20201006 02:08:39.616"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:39.617" starttime="20201006 02:08:35.356"></status>
</kw>
<msg timestamp="20201006 02:08:39.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:39.617" starttime="20201006 02:08:35.356"></status>
</kw>
<msg timestamp="20201006 02:08:39.617" level="INFO">${result} = 2020-10-06 02:08:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:08:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 02:08:39.617" starttime="20201006 02:08:35.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:39.620" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:41.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:41.575" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 02:08 o3fs://bucket1.volume1.om/ozone-58261
dr...</msg>
<status status="PASS" endtime="20201006 02:08:41.575" starttime="20201006 02:08:39.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:41.576" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 02:08 o3fs://bucket1.volume1.om/ozone-58261
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:08 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 02:08:41.576" starttime="20201006 02:08:41.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:41.577" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:41.577" starttime="20201006 02:08:41.576"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:41.577" starttime="20201006 02:08:39.619"></status>
</kw>
<msg timestamp="20201006 02:08:41.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:41.578" starttime="20201006 02:08:39.618"></status>
</kw>
<msg timestamp="20201006 02:08:41.578" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 02:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 02:08 o3fs://bucket1.volume1.om/ozone-58261
dr...</msg>
<status status="PASS" endtime="20201006 02:08:41.578" starttime="20201006 02:08:39.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:08:41.578" starttime="20201006 02:08:41.578"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 02:08:41.579" critical="yes" starttime="20201006 02:08:35.347"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 02:08:41.581" starttime="20201006 02:08:35.299"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:30.379" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:30.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:30.382" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201006 02:08:30.382" starttime="20201006 02:08:30.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:30.384" level="INFO">rm</msg>
<status status="PASS" endtime="20201006 02:08:30.384" starttime="20201006 02:08:30.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:30.384" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:30.385" starttime="20201006 02:08:30.384"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:30.385" starttime="20201006 02:08:30.377"></status>
</kw>
<msg timestamp="20201006 02:08:30.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:30.385" starttime="20201006 02:08:30.377"></status>
</kw>
<msg timestamp="20201006 02:08:30.385" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201006 02:08:30.385" starttime="20201006 02:08:30.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:08:30.387" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:08:30.387" starttime="20201006 02:08:30.385"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:30.390" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:30.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:30.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:08:30.403" starttime="20201006 02:08:30.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:30.404" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:08:30.404" starttime="20201006 02:08:30.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:30.405" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:30.405" starttime="20201006 02:08:30.404"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:30.405" starttime="20201006 02:08:30.388"></status>
</kw>
<msg timestamp="20201006 02:08:30.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:30.405" starttime="20201006 02:08:30.388"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:30.406" starttime="20201006 02:08:30.388"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:30.406" starttime="20201006 02:08:30.387"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:30.406" starttime="20201006 02:08:30.376"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:08:30.406" critical="yes" starttime="20201006 02:08:30.376"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201006 02:08:30.407" starttime="20201006 02:08:30.328"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:34.669" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:07:34.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:07:34.673" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201006 02:07:34.674" starttime="20201006 02:07:34.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:07:34.674" level="INFO">om</msg>
<status status="PASS" endtime="20201006 02:07:34.675" starttime="20201006 02:07:34.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:07:34.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:07:34.675" starttime="20201006 02:07:34.675"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:34.676" starttime="20201006 02:07:34.660"></status>
</kw>
<msg timestamp="20201006 02:07:34.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:07:34.676" starttime="20201006 02:07:34.660"></status>
</kw>
<msg timestamp="20201006 02:07:34.676" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201006 02:07:34.676" starttime="20201006 02:07:34.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:07:34.677" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:07:34.677" starttime="20201006 02:07:34.676"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:07:34.681" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:07:34.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:07:34.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:07:34.691" starttime="20201006 02:07:34.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:07:34.692" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:07:34.692" starttime="20201006 02:07:34.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:07:34.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:07:34.693" starttime="20201006 02:07:34.693"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:34.693" starttime="20201006 02:07:34.679"></status>
</kw>
<msg timestamp="20201006 02:07:34.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:07:34.694" starttime="20201006 02:07:34.678"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:34.694" starttime="20201006 02:07:34.678"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:34.694" starttime="20201006 02:07:34.677"></status>
</kw>
<status status="PASS" endtime="20201006 02:07:34.694" starttime="20201006 02:07:34.652"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:07:34.694" critical="yes" starttime="20201006 02:07:34.651"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201006 02:07:34.698" starttime="20201006 02:07:34.591"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:10:14.524" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:10:14.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:10:14.532" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:14.532" starttime="20201006 02:10:14.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:10:14.533" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:14.533" starttime="20201006 02:10:14.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:10:14.533" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:10:14.533" starttime="20201006 02:10:14.533"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:14.534" starttime="20201006 02:10:14.523"></status>
</kw>
<msg timestamp="20201006 02:10:14.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:10:14.534" starttime="20201006 02:10:14.522"></status>
</kw>
<msg timestamp="20201006 02:10:14.534" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:14.534" starttime="20201006 02:10:14.522"></status>
</kw>
<msg timestamp="20201006 02:10:14.534" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:14.534" starttime="20201006 02:10:14.521"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 02:10:14.538" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 02:10:14.538" starttime="20201006 02:10:14.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:10:14.539" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 02:10:14.540" starttime="20201006 02:10:14.539"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:14.540" starttime="20201006 02:10:14.538"></status>
</kw>
<msg timestamp="20201006 02:10:14.540" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 02:10:14.540" starttime="20201006 02:10:14.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:10:14.541" starttime="20201006 02:10:14.541"></status>
</kw>
<msg timestamp="20201006 02:10:14.541" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 02:10:14.541" starttime="20201006 02:10:14.540"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:14.542" starttime="20201006 02:10:14.536"></status>
</kw>
<msg timestamp="20201006 02:10:14.542" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 02:10:14.542" starttime="20201006 02:10:14.535"></status>
</kw>
<msg timestamp="20201006 02:10:14.542" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 02:10:14.542" starttime="20201006 02:10:14.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:10:14.545" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:10:46.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:10:46.564" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 02:10:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:10:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 02:10:46.564" starttime="20201006 02:10:14.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:10:46.565" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 02:10:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:10:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:10:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 02:10:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 02:10:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9809D7E45272-&gt;5d78ae04-519d-4910-96f8-2c170c53d634
2020-10-06 02:10:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 02:10:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:10:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-10-06 02:10:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950218591, maxDate=1602555018591, sequenceNumber=3, masterKeyId=2))
2020-10-06 02:10:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 93 f2 b1 dd cf 2e 38 93 fa e3 fd d1 2e 40 03 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-06 02:10:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950218591, maxDate=1602555018591, sequenceNumber=3, masterKeyId=2)
2020-10-06 02:10:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 02:10:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 02:10:19 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 02:10:19 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 02:10:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601950017474_0003
2020-10-06 02:10:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 93 f2 b1 dd cf 2e 38 93 fa e3 fd d1 2e 40 03 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950218591, maxDate=1602555018591, sequenceNumber=3, masterKeyId=2)]
2020-10-06 02:10:19 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 02:10:19 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 02:10:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-06 02:10:20 INFO  YarnClientImpl:311 - Submitted application application_1601950017474_0003
2020-10-06 02:10:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601950017474_0003/
2020-10-06 02:10:20 INFO  Job:1619 - Running job: job_1601950017474_0003
2020-10-06 02:10:27 INFO  Job:1640 - Job job_1601950017474_0003 running in uber mode : false
2020-10-06 02:10:27 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 02:10:38 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 02:10:39 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 02:10:40 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 02:10:44 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 02:10:45 INFO  Job:1658 - Job job_1601950017474_0003 completed successfully
2020-10-06 02:10:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052637
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45258
		Total time spent by all reduces in occupied slots (ms)=8334
		Total time spent by all map tasks (ms)=22629
		Total time spent by all reduce tasks (ms)=4167
		Total vcore-milliseconds taken by all map tasks=22629
		Total vcore-milliseconds taken by all reduce tasks=4167
		Total megabyte-milliseconds taken by all map tasks=46344192
		Total megabyte-milliseconds taken by all reduce tasks=8534016
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1111
		CPU time spent (ms)=6940
		Physical memory (bytes) snapshot=1331904512
		Virtual memory (bytes) snapshot=14281908224
		Total committed heap usage (bytes)=1385168896
		Peak Map Physical memory (bytes)=340013056
		Peak Map Virtual memory (bytes)=3574018048
		Peak Reduce Physical memory (bytes)=368451584
		Peak Reduce Virtual memory (bytes)=3583664128
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.865 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201006 02:10:46.565" starttime="20201006 02:10:46.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:10:46.566" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:10:46.566" starttime="20201006 02:10:46.566"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.566" starttime="20201006 02:10:14.543"></status>
</kw>
<msg timestamp="20201006 02:10:46.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:10:46.567" starttime="20201006 02:10:14.543"></status>
</kw>
<msg timestamp="20201006 02:10:46.567" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 02:10:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:10:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 02:10:46.568" starttime="20201006 02:10:14.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 02:10:46.568" starttime="20201006 02:10:46.568"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 02:10:46.568" critical="yes" starttime="20201006 02:10:14.520"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:10:46.573" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:10:46.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:10:46.578" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:46.578" starttime="20201006 02:10:46.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:10:46.579" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:46.580" starttime="20201006 02:10:46.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:10:46.580" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:10:46.580" starttime="20201006 02:10:46.580"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.581" starttime="20201006 02:10:46.571"></status>
</kw>
<msg timestamp="20201006 02:10:46.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:10:46.581" starttime="20201006 02:10:46.570"></status>
</kw>
<msg timestamp="20201006 02:10:46.581" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:46.581" starttime="20201006 02:10:46.570"></status>
</kw>
<msg timestamp="20201006 02:10:46.581" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:10:46.581" starttime="20201006 02:10:46.570"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 02:10:46.582" level="INFO">${random} = 89</msg>
<status status="PASS" endtime="20201006 02:10:46.582" starttime="20201006 02:10:46.581"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 02:10:46.586" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 02:10:46.586" starttime="20201006 02:10:46.585"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:10:46.586" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 02:10:46.586" starttime="20201006 02:10:46.586"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.587" starttime="20201006 02:10:46.585"></status>
</kw>
<msg timestamp="20201006 02:10:46.587" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 02:10:46.587" starttime="20201006 02:10:46.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:10:46.588" starttime="20201006 02:10:46.588"></status>
</kw>
<msg timestamp="20201006 02:10:46.588" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 02:10:46.588" starttime="20201006 02:10:46.587"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.588" starttime="20201006 02:10:46.584"></status>
</kw>
<msg timestamp="20201006 02:10:46.589" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 02:10:46.589" starttime="20201006 02:10:46.583"></status>
</kw>
<msg timestamp="20201006 02:10:46.589" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 02:10:46.589" starttime="20201006 02:10:46.582"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 02:10:46.592" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 02:10:46.592" starttime="20201006 02:10:46.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:10:46.593" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 02:10:46.593" starttime="20201006 02:10:46.593"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.593" starttime="20201006 02:10:46.591"></status>
</kw>
<msg timestamp="20201006 02:10:46.593" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 02:10:46.593" starttime="20201006 02:10:46.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:10:46.595" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201006 02:10:46.595" starttime="20201006 02:10:46.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:10:46.596" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201006 02:10:46.596" starttime="20201006 02:10:46.595"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.596" starttime="20201006 02:10:46.594"></status>
</kw>
<msg timestamp="20201006 02:10:46.596" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201006 02:10:46.596" starttime="20201006 02:10:46.594"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.597" starttime="20201006 02:10:46.590"></status>
</kw>
<msg timestamp="20201006 02:10:46.597" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 02:10:46.597" starttime="20201006 02:10:46.590"></status>
</kw>
<msg timestamp="20201006 02:10:46.597" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 02:10:46.597" starttime="20201006 02:10:46.589"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 02:10:46.600" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 02:10:46.601" starttime="20201006 02:10:46.600"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:10:46.601" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 02:10:46.601" starttime="20201006 02:10:46.601"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.601" starttime="20201006 02:10:46.600"></status>
</kw>
<msg timestamp="20201006 02:10:46.601" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 02:10:46.602" starttime="20201006 02:10:46.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:10:46.603" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201006 02:10:46.603" starttime="20201006 02:10:46.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:10:46.604" level="INFO">${result} = /wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 02:10:46.604" starttime="20201006 02:10:46.603"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.604" starttime="20201006 02:10:46.602"></status>
</kw>
<msg timestamp="20201006 02:10:46.604" level="INFO">${path_with_leading} = /wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 02:10:46.604" starttime="20201006 02:10:46.602"></status>
</kw>
<status status="PASS" endtime="20201006 02:10:46.605" starttime="20201006 02:10:46.598"></status>
</kw>
<msg timestamp="20201006 02:10:46.605" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 02:10:46.605" starttime="20201006 02:10:46.598"></status>
</kw>
<msg timestamp="20201006 02:10:46.605" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 02:10:46.605" starttime="20201006 02:10:46.597"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:10:46.608" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-89.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:11:19.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:11:19.681" level="INFO">${output} = 2020-10-06 02:10:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:10:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201006 02:11:19.681" starttime="20201006 02:10:46.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:11:19.682" level="INFO">2020-10-06 02:10:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:10:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-10-06 02:10:49 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950249037, maxDate=1602555049037, sequenceNumber=4, masterKeyId=2))
2020-10-06 02:10:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 df b3 dd cf 2e 38 f0 e7 e5 fd d1 2e 40 04 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-06 02:10:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950249037, maxDate=1602555049037, sequenceNumber=4, masterKeyId=2)
2020-10-06 02:10:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 02:10:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:10:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:10:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 02:10:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 02:10:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5195BD5FF833-&gt;5d78ae04-519d-4910-96f8-2c170c53d634
2020-10-06 02:10:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 02:10:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 02:10:52 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 02:10:52 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 02:10:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601950017474_0004
2020-10-06 02:10:52 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 df b3 dd cf 2e 38 f0 e7 e5 fd d1 2e 40 04 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950249037, maxDate=1602555049037, sequenceNumber=4, masterKeyId=2)]
2020-10-06 02:10:52 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 02:10:52 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 02:10:52 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-06 02:10:53 INFO  YarnClientImpl:311 - Submitted application application_1601950017474_0004
2020-10-06 02:10:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601950017474_0004/
2020-10-06 02:10:53 INFO  Job:1619 - Running job: job_1601950017474_0004
2020-10-06 02:11:01 INFO  Job:1640 - Job job_1601950017474_0004 running in uber mode : false
2020-10-06 02:11:01 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 02:11:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 02:11:13 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 02:11:14 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 02:11:18 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 02:11:19 INFO  Job:1658 - Job job_1601950017474_0004 completed successfully
2020-10-06 02:11:19 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115309
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44732
		Total time spent by all reduces in occupied slots (ms)=7718
		Total time spent by all map tasks (ms)=22366
		Total time spent by all reduce tasks (ms)=3859
		Total vcore-milliseconds taken by all map tasks=22366
		Total vcore-milliseconds taken by all reduce tasks=3859
		Total megabyte-milliseconds taken by all map tasks=45805568
		Total megabyte-milliseconds taken by all reduce tasks=7903232
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=968
		CPU time spent (ms)=8070
		Physical memory (bytes) snapshot=1294856192
		Virtual memory (bytes) snapshot=14291677184
		Total committed heap usage (bytes)=1256718336
		Peak Map Physical memory (bytes)=339935232
		Peak Map Virtual memory (bytes)=3576061952
		Peak Reduce Physical memory (bytes)=366419968
		Peak Reduce Virtual memory (bytes)=3572822016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201006 02:11:19.682" starttime="20201006 02:11:19.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:11:19.683" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:11:19.683" starttime="20201006 02:11:19.682"></status>
</kw>
<status status="PASS" endtime="20201006 02:11:19.683" starttime="20201006 02:10:46.606"></status>
</kw>
<msg timestamp="20201006 02:11:19.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:11:19.683" starttime="20201006 02:10:46.606"></status>
</kw>
<msg timestamp="20201006 02:11:19.684" level="INFO">${output} = 2020-10-06 02:10:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:10:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201006 02:11:19.684" starttime="20201006 02:10:46.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 02:11:19.685" starttime="20201006 02:11:19.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 02:11:19.685" starttime="20201006 02:11:19.685"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 02:11:19.686" critical="yes" starttime="20201006 02:10:46.569"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 02:11:19.687" starttime="20201006 02:10:14.467"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:46.509" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:08:46.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:08:46.517" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:08:46.517" starttime="20201006 02:08:46.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:08:46.517" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:08:46.517" starttime="20201006 02:08:46.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:08:46.518" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:08:46.518" starttime="20201006 02:08:46.518"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:46.518" starttime="20201006 02:08:46.507"></status>
</kw>
<msg timestamp="20201006 02:08:46.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:08:46.519" starttime="20201006 02:08:46.507"></status>
</kw>
<msg timestamp="20201006 02:08:46.519" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:08:46.519" starttime="20201006 02:08:46.507"></status>
</kw>
<msg timestamp="20201006 02:08:46.519" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:08:46.519" starttime="20201006 02:08:46.506"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:08:46.523" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 02:08:46.523" starttime="20201006 02:08:46.522"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:08:46.524" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 02:08:46.524" starttime="20201006 02:08:46.523"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:46.524" starttime="20201006 02:08:46.522"></status>
</kw>
<msg timestamp="20201006 02:08:46.524" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 02:08:46.524" starttime="20201006 02:08:46.521"></status>
</kw>
<status status="PASS" endtime="20201006 02:08:46.524" starttime="20201006 02:08:46.521"></status>
</kw>
<msg timestamp="20201006 02:08:46.524" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 02:08:46.525" starttime="20201006 02:08:46.520"></status>
</kw>
<msg timestamp="20201006 02:08:46.525" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 02:08:46.525" starttime="20201006 02:08:46.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:08:46.527" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:09:23.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:09:23.775" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 02:08:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:08:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 02:09:23.775" starttime="20201006 02:08:46.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:09:23.776" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 02:08:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:08:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:08:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 02:08:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 02:08:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2D123483E0D5-&gt;5d78ae04-519d-4910-96f8-2c170c53d634
2020-10-06 02:08:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 02:08:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:08:50 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-10-06 02:08:50 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950130784, maxDate=1602554930784, sequenceNumber=1, masterKeyId=2))
2020-10-06 02:08:50 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da c2 ac dd cf 2e 38 da ca de fd d1 2e 40 01 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-06 02:08:50 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950130784, maxDate=1602554930784, sequenceNumber=1, masterKeyId=2)
2020-10-06 02:08:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 02:08:51 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 02:08:51 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 02:08:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601950017474_0001
2020-10-06 02:08:51 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da c2 ac dd cf 2e 38 da ca de fd d1 2e 40 01 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950130784, maxDate=1602554930784, sequenceNumber=1, masterKeyId=2)]
2020-10-06 02:08:51 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 02:08:51 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 02:08:52 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-06 02:08:53 INFO  YarnClientImpl:311 - Submitted application application_1601950017474_0001
2020-10-06 02:08:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601950017474_0001/
2020-10-06 02:08:53 INFO  Job:1619 - Running job: job_1601950017474_0001
2020-10-06 02:09:03 INFO  Job:1640 - Job job_1601950017474_0001 running in uber mode : false
2020-10-06 02:09:03 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 02:09:16 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 02:09:17 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 02:09:22 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 02:09:23 INFO  Job:1658 - Job job_1601950017474_0001 completed successfully
2020-10-06 02:09:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052849
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49058
		Total time spent by all reduces in occupied slots (ms)=8064
		Total time spent by all map tasks (ms)=24529
		Total time spent by all reduce tasks (ms)=4032
		Total vcore-milliseconds taken by all map tasks=24529
		Total vcore-milliseconds taken by all reduce tasks=4032
		Total megabyte-milliseconds taken by all map tasks=50235392
		Total megabyte-milliseconds taken by all reduce tasks=8257536
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1106
		CPU time spent (ms)=7580
		Physical memory (bytes) snapshot=1247842304
		Virtual memory (bytes) snapshot=14298030080
		Total committed heap usage (bytes)=1084751872
		Peak Map Physical memory (bytes)=294207488
		Peak Map Virtual memory (bytes)=3574599680
		Peak Reduce Physical memory (bytes)=370757632
		Peak Reduce Virtual memory (bytes)=3576176640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.108 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201006 02:09:23.776" starttime="20201006 02:09:23.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:09:23.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:09:23.777" starttime="20201006 02:09:23.776"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.777" starttime="20201006 02:08:46.526"></status>
</kw>
<msg timestamp="20201006 02:09:23.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:09:23.777" starttime="20201006 02:08:46.526"></status>
</kw>
<msg timestamp="20201006 02:09:23.778" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 02:08:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:08:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 02:09:23.778" starttime="20201006 02:08:46.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 02:09:23.779" starttime="20201006 02:09:23.778"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 02:09:23.779" critical="yes" starttime="20201006 02:08:46.506"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:09:23.783" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:09:23.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:09:23.790" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:09:23.790" starttime="20201006 02:09:23.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:09:23.791" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:09:23.791" starttime="20201006 02:09:23.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:09:23.792" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:09:23.792" starttime="20201006 02:09:23.791"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.792" starttime="20201006 02:09:23.781"></status>
</kw>
<msg timestamp="20201006 02:09:23.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:09:23.792" starttime="20201006 02:09:23.781"></status>
</kw>
<msg timestamp="20201006 02:09:23.793" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:09:23.793" starttime="20201006 02:09:23.781"></status>
</kw>
<msg timestamp="20201006 02:09:23.793" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 02:09:23.793" starttime="20201006 02:09:23.780"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 02:09:23.794" level="INFO">${random} = 43</msg>
<status status="PASS" endtime="20201006 02:09:23.794" starttime="20201006 02:09:23.793"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:09:23.798" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 02:09:23.798" starttime="20201006 02:09:23.797"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:09:23.799" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 02:09:23.799" starttime="20201006 02:09:23.798"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.799" starttime="20201006 02:09:23.797"></status>
</kw>
<msg timestamp="20201006 02:09:23.799" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 02:09:23.799" starttime="20201006 02:09:23.796"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.799" starttime="20201006 02:09:23.796"></status>
</kw>
<msg timestamp="20201006 02:09:23.800" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 02:09:23.800" starttime="20201006 02:09:23.795"></status>
</kw>
<msg timestamp="20201006 02:09:23.800" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 02:09:23.800" starttime="20201006 02:09:23.794"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:09:23.803" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 02:09:23.803" starttime="20201006 02:09:23.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:09:23.804" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 02:09:23.804" starttime="20201006 02:09:23.804"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.804" starttime="20201006 02:09:23.802"></status>
</kw>
<msg timestamp="20201006 02:09:23.804" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 02:09:23.804" starttime="20201006 02:09:23.802"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.805" starttime="20201006 02:09:23.801"></status>
</kw>
<msg timestamp="20201006 02:09:23.805" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 02:09:23.805" starttime="20201006 02:09:23.801"></status>
</kw>
<msg timestamp="20201006 02:09:23.805" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 02:09:23.805" starttime="20201006 02:09:23.800"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 02:09:23.809" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 02:09:23.809" starttime="20201006 02:09:23.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:09:23.810" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 02:09:23.810" starttime="20201006 02:09:23.809"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.810" starttime="20201006 02:09:23.808"></status>
</kw>
<msg timestamp="20201006 02:09:23.810" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 02:09:23.810" starttime="20201006 02:09:23.807"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:23.810" starttime="20201006 02:09:23.807"></status>
</kw>
<msg timestamp="20201006 02:09:23.810" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-43.txt</msg>
<status status="PASS" endtime="20201006 02:09:23.810" starttime="20201006 02:09:23.806"></status>
</kw>
<msg timestamp="20201006 02:09:23.811" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-43.txt</msg>
<status status="PASS" endtime="20201006 02:09:23.811" starttime="20201006 02:09:23.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:09:23.813" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-43.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:09:57.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:09:57.761" level="INFO">${output} = 2020-10-06 02:09:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:09:26 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201006 02:09:57.761" starttime="20201006 02:09:23.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:09:57.762" level="INFO">2020-10-06 02:09:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:09:26 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-10-06 02:09:26 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950166501, maxDate=1602554966501, sequenceNumber=2, masterKeyId=2))
2020-10-06 02:09:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d6 da ae dd cf 2e 38 d6 e2 e0 fd d1 2e 40 02 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-06 02:09:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950166501, maxDate=1602554966501, sequenceNumber=2, masterKeyId=2)
2020-10-06 02:09:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 02:09:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 02:09:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:09:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 02:09:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 02:09:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E48601819DB4-&gt;5d78ae04-519d-4910-96f8-2c170c53d634
2020-10-06 02:09:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 02:09:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 02:09:28 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 02:09:28 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 02:09:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601950017474_0002
2020-10-06 02:09:29 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d6 da ae dd cf 2e 38 d6 e2 e0 fd d1 2e 40 02 48 01 5a 0d 33 34 36 34 39 36 32 30 33 32 30 31 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601950166501, maxDate=1602554966501, sequenceNumber=2, masterKeyId=2)]
2020-10-06 02:09:29 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 02:09:29 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 02:09:29 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-06 02:09:30 INFO  YarnClientImpl:311 - Submitted application application_1601950017474_0002
2020-10-06 02:09:30 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601950017474_0002/
2020-10-06 02:09:30 INFO  Job:1619 - Running job: job_1601950017474_0002
2020-10-06 02:09:39 INFO  Job:1640 - Job job_1601950017474_0002 running in uber mode : false
2020-10-06 02:09:39 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 02:09:49 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 02:09:51 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 02:09:56 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 02:09:57 INFO  Job:1658 - Job job_1601950017474_0002 completed successfully
2020-10-06 02:09:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115393
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45280
		Total time spent by all reduces in occupied slots (ms)=10740
		Total time spent by all map tasks (ms)=22640
		Total time spent by all reduce tasks (ms)=5370
		Total vcore-milliseconds taken by all map tasks=22640
		Total vcore-milliseconds taken by all reduce tasks=5370
		Total megabyte-milliseconds taken by all map tasks=46366720
		Total megabyte-milliseconds taken by all reduce tasks=10997760
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1017
		CPU time spent (ms)=7350
		Physical memory (bytes) snapshot=1296859136
		Virtual memory (bytes) snapshot=14276796416
		Total committed heap usage (bytes)=1300234240
		Peak Map Physical memory (bytes)=353411072
		Peak Map Virtual memory (bytes)=3574132736
		Peak Reduce Physical memory (bytes)=372047872
		Peak Reduce Virtual memory (bytes)=3574177792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201006 02:09:57.763" starttime="20201006 02:09:57.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:09:57.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:09:57.763" starttime="20201006 02:09:57.763"></status>
</kw>
<status status="PASS" endtime="20201006 02:09:57.764" starttime="20201006 02:09:23.812"></status>
</kw>
<msg timestamp="20201006 02:09:57.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:09:57.764" starttime="20201006 02:09:23.812"></status>
</kw>
<msg timestamp="20201006 02:09:57.765" level="INFO">${output} = 2020-10-06 02:09:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-10-06 02:09:26 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201006 02:09:57.765" starttime="20201006 02:09:23.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 02:09:57.765" starttime="20201006 02:09:57.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 02:09:57.766" starttime="20201006 02:09:57.766"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 02:09:57.766" critical="yes" starttime="20201006 02:09:23.780"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 02:09:57.768" starttime="20201006 02:08:46.459"></status>
</suite>
<status status="PASS" elapsedtime="194802" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
