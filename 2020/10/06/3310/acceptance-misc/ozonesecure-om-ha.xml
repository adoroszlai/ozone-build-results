<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201006 02:17:28.877" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:08.802" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:19.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:19.901" level="INFO">${output} = 2020-10-06 02:13:10,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:10,722 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:19.901" starttime="20201006 02:13:08.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:19.903" level="INFO">2020-10-06 02:13:10,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:10,722 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:13:10,722 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-06 02:13:13,510 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-06 02:13:13,511 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-06 02:13:13,511 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-06 02:13:13,511 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-06 02:13:13,511 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-06 02:13:13,511 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-06 02:13:13,511 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-06 02:13:13,522 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-06 02:13:13,538 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:13,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-52286, with testuser/scm@EXAMPLE.COM as owner.
2020-10-06 02:13:14,124 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-52286/bucket-0-64986, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-06 02:13:14,562 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:15,563 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:16,563 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:17,053 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-06 02:13:17,564 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:18,564 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,503
Average Time spent in bucket creation: 00:00:00,221
Average Time spent in key creation: 00:00:01,599
Average Time spent in key write: 00:00:01,874
Total bytes written: 10240
Total Execution time: 00:00:08,604
***************************************************</msg>
<status status="PASS" endtime="20201006 02:13:19.903" starttime="20201006 02:13:19.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:19.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:19.904" starttime="20201006 02:13:19.903"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:19.904" starttime="20201006 02:13:08.797"></status>
</kw>
<msg timestamp="20201006 02:13:19.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:19.904" starttime="20201006 02:13:08.796"></status>
</kw>
<msg timestamp="20201006 02:13:19.905" level="INFO">${result} = 2020-10-06 02:13:10,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:10,722 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:19.905" starttime="20201006 02:13:08.795"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:13:19.906" starttime="20201006 02:13:19.905"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:19.906" starttime="20201006 02:13:19.905"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 02:13:19.906" critical="yes" starttime="20201006 02:13:08.794"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:19.913" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:30.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:30.741" level="INFO">${output} = 2020-10-06 02:13:21,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:22,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:30.741" starttime="20201006 02:13:19.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:30.743" level="INFO">2020-10-06 02:13:21,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:22,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:13:22,046 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-06 02:13:22,216 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lltbn4qttr
2020-10-06 02:13:22,235 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-06 02:13:23,238 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:23,879 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-06 02:13:23,963 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-06 02:13:24,239 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:24,848 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-06 02:13:25,159 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 02:13:25,159 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-37AFF7EFB72A-&gt;7891ab04-4080-475e-a088-1b3e7fb48e56
2020-10-06 02:13:25,160 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 02:13:25,239 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:26,240 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:27,240 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:28,241 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:29,241 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:30,241 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-06 02:13:30,409 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5609.262912, max=5609.262912, mean=5609.262912, stddev=0.0, median=5609.262912, p75=5609.262912, p95=5609.262912, p98=5609.262912, p99=5609.262912, p999=5609.262912, mean_rate=0.15649168436357705, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-06 02:13:30,410 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2020-10-06 02:13:30,411 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-06 02:13:30,411 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201006 02:13:30.743" starttime="20201006 02:13:30.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:30.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:30.744" starttime="20201006 02:13:30.743"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:30.744" starttime="20201006 02:13:19.910"></status>
</kw>
<msg timestamp="20201006 02:13:30.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:30.745" starttime="20201006 02:13:19.910"></status>
</kw>
<msg timestamp="20201006 02:13:30.745" level="INFO">${result} = 2020-10-06 02:13:21,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:22,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:30.745" starttime="20201006 02:13:19.909"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:13:30.746" starttime="20201006 02:13:30.746"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:30.746" starttime="20201006 02:13:30.745"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 02:13:30.746" critical="yes" starttime="20201006 02:13:19.908"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:30.752" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:35.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:35.562" level="INFO">${output} = 2020-10-06 02:13:32,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:32,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:35.562" starttime="20201006 02:13:30.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:35.564" level="INFO">2020-10-06 02:13:32,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:32,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:13:32,635 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-06 02:13:32,828 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 0z4mbotjvu
2020-10-06 02:13:32,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-06 02:13:33,849 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:34,850 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-06 02:13:35,515 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=273.885873, max=273.885873, mean=273.885873, stddev=0.0, median=273.885873, p75=273.885873, p95=273.885873, p98=273.885873, p99=273.885873, p999=273.885873, mean_rate=0.8965894686995506, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-06 02:13:35,516 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-06 02:13:35,516 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-06 02:13:35,516 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201006 02:13:35.564" starttime="20201006 02:13:35.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:35.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:35.565" starttime="20201006 02:13:35.564"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:35.565" starttime="20201006 02:13:30.749"></status>
</kw>
<msg timestamp="20201006 02:13:35.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:35.565" starttime="20201006 02:13:30.748"></status>
</kw>
<msg timestamp="20201006 02:13:35.565" level="INFO">${result} = 2020-10-06 02:13:32,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:32,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:35.565" starttime="20201006 02:13:30.748"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:13:35.567" starttime="20201006 02:13:35.566"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:35.567" starttime="20201006 02:13:35.566"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 02:13:35.567" critical="yes" starttime="20201006 02:13:30.747"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:35.573" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:40.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:40.247" level="INFO">${output} = 2020-10-06 02:13:37,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:37,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:40.248" starttime="20201006 02:13:35.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:40.249" level="INFO">2020-10-06 02:13:37,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:37,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-06 02:13:37,428 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-06 02:13:37,614 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zlfaipzjqg
2020-10-06 02:13:37,659 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-06 02:13:38,661 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-06 02:13:39,661 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-06 02:13:40,194 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=79.444092, max=79.444092, mean=79.444092, stddev=0.0, median=79.444092, p75=79.444092, p95=79.444092, p98=79.444092, p99=79.444092, p999=79.444092, mean_rate=0.8928406540034933, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-06 02:13:40,195 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-06 02:13:40,196 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-06 02:13:40,197 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201006 02:13:40.249" starttime="20201006 02:13:40.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:40.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:40.250" starttime="20201006 02:13:40.249"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:40.250" starttime="20201006 02:13:35.569"></status>
</kw>
<msg timestamp="20201006 02:13:40.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:40.250" starttime="20201006 02:13:35.569"></status>
</kw>
<msg timestamp="20201006 02:13:40.250" level="INFO">${result} = 2020-10-06 02:13:37,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-06 02:13:37,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201006 02:13:40.250" starttime="20201006 02:13:35.568"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:13:40.252" starttime="20201006 02:13:40.251"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:40.252" starttime="20201006 02:13:40.251"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 02:13:40.252" critical="yes" starttime="20201006 02:13:35.568"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201006 02:13:40.254" starttime="20201006 02:13:08.765"></status>
</suite>
<status status="PASS" endtime="20201006 02:13:40.257" starttime="20201006 02:13:08.734"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:01.380" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:01.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:01.388" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:13:01.388" starttime="20201006 02:13:01.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:01.389" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:13:01.389" starttime="20201006 02:13:01.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:01.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:01.389" starttime="20201006 02:13:01.389"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:01.390" starttime="20201006 02:13:01.370"></status>
</kw>
<msg timestamp="20201006 02:13:01.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:01.390" starttime="20201006 02:13:01.370"></status>
</kw>
<msg timestamp="20201006 02:13:01.390" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:13:01.390" starttime="20201006 02:13:01.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:13:01.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:13:01.398" starttime="20201006 02:13:01.390"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:01.407" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:01.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:01.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:13:01.423" starttime="20201006 02:13:01.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:01.424" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:13:01.424" starttime="20201006 02:13:01.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:01.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:01.425" starttime="20201006 02:13:01.425"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:01.425" starttime="20201006 02:13:01.400"></status>
</kw>
<msg timestamp="20201006 02:13:01.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:01.426" starttime="20201006 02:13:01.399"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:01.426" starttime="20201006 02:13:01.399"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:01.426" starttime="20201006 02:13:01.398"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:01.426" starttime="20201006 02:13:01.368"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:13:01.426" critical="yes" starttime="20201006 02:13:01.367"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201006 02:13:01.428" starttime="20201006 02:13:01.227"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 02:13:45.600" level="INFO">${random} = 88825</msg>
<status status="PASS" endtime="20201006 02:13:45.600" starttime="20201006 02:13:45.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201006 02:13:45.601" level="INFO">${source} = 88825-source</msg>
<status status="PASS" endtime="20201006 02:13:45.601" starttime="20201006 02:13:45.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201006 02:13:45.602" level="INFO">${target} = 88825-target</msg>
<status status="PASS" endtime="20201006 02:13:45.602" starttime="20201006 02:13:45.601"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:45.607" level="INFO">Running command 'ozone sh volume create 88825-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:49.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:49.117" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:13:49.117" starttime="20201006 02:13:45.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:49.118" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:13:49.118" starttime="20201006 02:13:49.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:49.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:49.118" starttime="20201006 02:13:49.118"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:49.119" starttime="20201006 02:13:45.603"></status>
</kw>
<msg timestamp="20201006 02:13:49.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:49.119" starttime="20201006 02:13:45.603"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:49.119" starttime="20201006 02:13:45.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:49.123" level="INFO">Running command 'ozone sh volume create 88825-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:52.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:52.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:13:52.675" starttime="20201006 02:13:49.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:52.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:13:52.676" starttime="20201006 02:13:52.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:52.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:52.677" starttime="20201006 02:13:52.676"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:52.677" starttime="20201006 02:13:49.120"></status>
</kw>
<msg timestamp="20201006 02:13:52.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:52.677" starttime="20201006 02:13:49.120"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:52.678" starttime="20201006 02:13:49.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:52.682" level="INFO">Running command 'ozone sh bucket create 88825-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:13:57.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:13:57.046" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:13:57.046" starttime="20201006 02:13:52.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:13:57.047" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:13:57.047" starttime="20201006 02:13:57.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:13:57.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:13:57.048" starttime="20201006 02:13:57.047"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:57.048" starttime="20201006 02:13:52.680"></status>
</kw>
<msg timestamp="20201006 02:13:57.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:13:57.048" starttime="20201006 02:13:52.679"></status>
</kw>
<status status="PASS" endtime="20201006 02:13:57.048" starttime="20201006 02:13:52.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:13:57.053" level="INFO">Running command 'ozone sh key put 88825-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:05.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:05.236" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:05.236" starttime="20201006 02:13:57.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:05.237" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:05.238" starttime="20201006 02:14:05.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:05.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:05.238" starttime="20201006 02:14:05.238"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:05.239" starttime="20201006 02:13:57.049"></status>
</kw>
<msg timestamp="20201006 02:14:05.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:05.239" starttime="20201006 02:13:57.049"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:05.239" starttime="20201006 02:13:57.049"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:05.243" level="INFO">Running command 'ozone sh bucket create 88825-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:08.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:08.636" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:08.636" starttime="20201006 02:14:05.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:08.637" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:08.637" starttime="20201006 02:14:08.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:08.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:08.638" starttime="20201006 02:14:08.637"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:08.638" starttime="20201006 02:14:05.240"></status>
</kw>
<msg timestamp="20201006 02:14:08.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:08.639" starttime="20201006 02:14:05.240"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:08.639" starttime="20201006 02:14:05.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:08.643" level="INFO">Running command 'ozone sh bucket link 88825-source/readable-bucket 88825-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:12.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:12.338" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:12.338" starttime="20201006 02:14:08.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:12.339" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:12.339" starttime="20201006 02:14:12.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:12.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:12.340" starttime="20201006 02:14:12.339"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:12.340" starttime="20201006 02:14:08.640"></status>
</kw>
<msg timestamp="20201006 02:14:12.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:12.340" starttime="20201006 02:14:08.640"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:12.341" starttime="20201006 02:14:08.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:12.345" level="INFO">Running command 'ozone sh bucket link 88825-source/readable-bucket 88825-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:15.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:15.731" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:15.731" starttime="20201006 02:14:12.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:15.732" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:15.732" starttime="20201006 02:14:15.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:15.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:15.733" starttime="20201006 02:14:15.732"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:15.733" starttime="20201006 02:14:12.342"></status>
</kw>
<msg timestamp="20201006 02:14:15.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:15.733" starttime="20201006 02:14:12.341"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:15.734" starttime="20201006 02:14:12.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:15.739" level="INFO">Running command 'ozone sh bucket link 88825-source/unreadable-bucket 88825-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:19.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:19.061" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:19.061" starttime="20201006 02:14:15.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:19.062" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:19.062" starttime="20201006 02:14:19.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:19.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:19.063" starttime="20201006 02:14:19.062"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:19.063" starttime="20201006 02:14:15.735"></status>
</kw>
<msg timestamp="20201006 02:14:19.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:19.063" starttime="20201006 02:14:15.734"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:19.064" starttime="20201006 02:14:15.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:19.068" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 88825-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:22.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:22.807" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:22.807" starttime="20201006 02:14:19.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:22.808" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201006 02:14:22.808" starttime="20201006 02:14:22.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:22.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:22.809" starttime="20201006 02:14:22.809"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:22.809" starttime="20201006 02:14:19.065"></status>
</kw>
<msg timestamp="20201006 02:14:22.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:22.810" starttime="20201006 02:14:19.064"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:22.810" starttime="20201006 02:14:19.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:22.814" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 88825-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:26.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:26.127" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:26.127" starttime="20201006 02:14:22.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:26.128" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201006 02:14:26.128" starttime="20201006 02:14:26.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:26.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:26.129" starttime="20201006 02:14:26.128"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:26.129" starttime="20201006 02:14:22.811"></status>
</kw>
<msg timestamp="20201006 02:14:26.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:26.129" starttime="20201006 02:14:22.811"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:26.129" starttime="20201006 02:14:22.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:26.134" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 88825-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:29.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:29.635" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:29.635" starttime="20201006 02:14:26.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:29.636" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201006 02:14:29.636" starttime="20201006 02:14:29.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:29.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:29.637" starttime="20201006 02:14:29.636"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:29.637" starttime="20201006 02:14:26.130"></status>
</kw>
<msg timestamp="20201006 02:14:29.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:29.637" starttime="20201006 02:14:26.130"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:29.638" starttime="20201006 02:14:26.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:29.641" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 88825-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:33.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:33.167" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:33.167" starttime="20201006 02:14:29.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:33.168" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201006 02:14:33.169" starttime="20201006 02:14:33.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:33.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:33.169" starttime="20201006 02:14:33.169"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:33.170" starttime="20201006 02:14:29.639"></status>
</kw>
<msg timestamp="20201006 02:14:33.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:33.170" starttime="20201006 02:14:29.638"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:33.170" starttime="20201006 02:14:29.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:33.174" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 88825-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:36.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:36.553" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:36.553" starttime="20201006 02:14:33.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:36.554" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201006 02:14:36.554" starttime="20201006 02:14:36.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:36.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:36.555" starttime="20201006 02:14:36.554"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.555" starttime="20201006 02:14:33.171"></status>
</kw>
<msg timestamp="20201006 02:14:36.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:36.555" starttime="20201006 02:14:33.171"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.556" starttime="20201006 02:14:33.170"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.556" starttime="20201006 02:13:52.678"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.556" starttime="20201006 02:13:52.678"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.556" starttime="20201006 02:13:45.599"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:36.562" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:36.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:36.564" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:14:36.565" starttime="20201006 02:14:36.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:36.565" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:14:36.566" starttime="20201006 02:14:36.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:36.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:36.566" starttime="20201006 02:14:36.566"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.567" starttime="20201006 02:14:36.560"></status>
</kw>
<msg timestamp="20201006 02:14:36.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:36.567" starttime="20201006 02:14:36.559"></status>
</kw>
<msg timestamp="20201006 02:14:36.567" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:14:36.567" starttime="20201006 02:14:36.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:14:36.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:14:36.569" starttime="20201006 02:14:36.568"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:36.574" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:36.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:36.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:14:36.590" starttime="20201006 02:14:36.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:36.591" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:14:36.591" starttime="20201006 02:14:36.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:36.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:36.592" starttime="20201006 02:14:36.591"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.592" starttime="20201006 02:14:36.571"></status>
</kw>
<msg timestamp="20201006 02:14:36.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:36.592" starttime="20201006 02:14:36.571"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.593" starttime="20201006 02:14:36.570"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.593" starttime="20201006 02:14:36.569"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.593" starttime="20201006 02:14:36.558"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:36.593" starttime="20201006 02:14:36.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:36.598" level="INFO">Running command 'ozone sh bucket link 88825-source/no-such-bucket 88825-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:40.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:40.098" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:40.099" starttime="20201006 02:14:36.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:40.100" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:40.100" starttime="20201006 02:14:40.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:40.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:40.101" starttime="20201006 02:14:40.100"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:40.101" starttime="20201006 02:14:36.594"></status>
</kw>
<msg timestamp="20201006 02:14:40.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:40.101" starttime="20201006 02:14:36.594"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:40.102" starttime="20201006 02:14:36.593"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:40.105" level="INFO">Running command 'ozone sh key list 88825-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:43.584" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 02:14:43.584" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:43.584" starttime="20201006 02:14:40.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:43.585" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201006 02:14:43.586" starttime="20201006 02:14:43.585"></status>
</kw>
<msg timestamp="20201006 02:14:43.586" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:43.586" starttime="20201006 02:14:40.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201006 02:14:43.587" starttime="20201006 02:14:43.586"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:14:43.587" critical="yes" starttime="20201006 02:14:36.556"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:43.597" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:43.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:43.601" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:14:43.601" starttime="20201006 02:14:43.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:43.602" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:14:43.602" starttime="20201006 02:14:43.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:43.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:43.603" starttime="20201006 02:14:43.602"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:43.603" starttime="20201006 02:14:43.592"></status>
</kw>
<msg timestamp="20201006 02:14:43.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:43.603" starttime="20201006 02:14:43.592"></status>
</kw>
<msg timestamp="20201006 02:14:43.604" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:14:43.604" starttime="20201006 02:14:43.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:14:43.605" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:14:43.605" starttime="20201006 02:14:43.604"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:43.609" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:43.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:43.626" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:14:43.626" starttime="20201006 02:14:43.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:43.627" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:14:43.627" starttime="20201006 02:14:43.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:43.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:43.628" starttime="20201006 02:14:43.627"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:43.628" starttime="20201006 02:14:43.606"></status>
</kw>
<msg timestamp="20201006 02:14:43.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:43.629" starttime="20201006 02:14:43.606"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:43.629" starttime="20201006 02:14:43.605"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:43.629" starttime="20201006 02:14:43.605"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:43.629" starttime="20201006 02:14:43.590"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:43.629" starttime="20201006 02:14:43.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:43.633" level="INFO">Running command 'ozone sh bucket link 88825-source/bucket1 88825-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:47.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:47.310" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:47.310" starttime="20201006 02:14:43.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:47.311" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:47.311" starttime="20201006 02:14:47.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:47.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:47.312" starttime="20201006 02:14:47.311"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:47.312" starttime="20201006 02:14:43.630"></status>
</kw>
<msg timestamp="20201006 02:14:47.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:47.312" starttime="20201006 02:14:43.630"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:47.313" starttime="20201006 02:14:43.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:47.318" level="INFO">Running command 'ozone sh bucket create 88825-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:51.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:51.170" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:51.170" starttime="20201006 02:14:47.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:51.171" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:51.172" starttime="20201006 02:14:51.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:51.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:51.172" starttime="20201006 02:14:51.172"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:51.173" starttime="20201006 02:14:47.314"></status>
</kw>
<msg timestamp="20201006 02:14:51.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:51.173" starttime="20201006 02:14:47.313"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:51.173" starttime="20201006 02:14:47.313"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:51.177" level="INFO">Running command 'ozone sh key put 88825-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:14:59.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:14:59.969" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:14:59.969" starttime="20201006 02:14:51.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:14:59.970" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:14:59.970" starttime="20201006 02:14:59.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:14:59.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:14:59.971" starttime="20201006 02:14:59.970"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:59.971" starttime="20201006 02:14:51.174"></status>
</kw>
<msg timestamp="20201006 02:14:59.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:14:59.971" starttime="20201006 02:14:51.174"></status>
</kw>
<status status="PASS" endtime="20201006 02:14:59.972" starttime="20201006 02:14:51.173"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201006 02:14:59.974" level="INFO">${postfix} = 00688</msg>
<status status="PASS" endtime="20201006 02:14:59.974" starttime="20201006 02:14:59.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201006 02:14:59.975" level="INFO">${tmpfile} = /tmp/tempkey-00688</msg>
<status status="PASS" endtime="20201006 02:14:59.975" starttime="20201006 02:14:59.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:14:59.978" level="INFO">Running command 'ozone sh key get -f 88825-target/link1/key1 /tmp/tempkey-00688 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:06.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:06.163" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:06.163" starttime="20201006 02:14:59.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.164" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:15:06.164" starttime="20201006 02:15:06.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:06.165" starttime="20201006 02:15:06.164"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.165" starttime="20201006 02:14:59.976"></status>
</kw>
<msg timestamp="20201006 02:15:06.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:06.165" starttime="20201006 02:14:59.975"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.166" starttime="20201006 02:14:59.975"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201006 02:15:06.169" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-00688 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:06.172" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201006 02:15:06.172" starttime="20201006 02:15:06.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:06.178" level="INFO">Running command 'rm -f /tmp/tempkey-00688 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:06.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:06.179" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:06.179" starttime="20201006 02:15:06.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.180" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:06.180" starttime="20201006 02:15:06.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:06.181" starttime="20201006 02:15:06.180"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.181" starttime="20201006 02:15:06.174"></status>
</kw>
<msg timestamp="20201006 02:15:06.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:06.181" starttime="20201006 02:15:06.173"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.182" starttime="20201006 02:15:06.172"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:15:06.182" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201006 02:15:06.182" starttime="20201006 02:15:06.182"></status>
</kw>
<msg timestamp="20201006 02:15:06.183" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201006 02:15:06.183" starttime="20201006 02:14:59.973"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:06.183" starttime="20201006 02:15:06.183"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.184" starttime="20201006 02:14:59.972"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:15:06.184" critical="yes" starttime="20201006 02:14:43.588"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:06.192" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:06.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:06.193" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:15:06.194" starttime="20201006 02:15:06.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.194" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:15:06.195" starttime="20201006 02:15:06.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:06.195" starttime="20201006 02:15:06.195"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.196" starttime="20201006 02:15:06.188"></status>
</kw>
<msg timestamp="20201006 02:15:06.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:06.196" starttime="20201006 02:15:06.188"></status>
</kw>
<msg timestamp="20201006 02:15:06.196" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:15:06.196" starttime="20201006 02:15:06.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:15:06.197" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:15:06.197" starttime="20201006 02:15:06.196"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:06.202" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:06.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:06.217" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:06.217" starttime="20201006 02:15:06.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.218" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:06.218" starttime="20201006 02:15:06.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:06.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:06.219" starttime="20201006 02:15:06.219"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.220" starttime="20201006 02:15:06.199"></status>
</kw>
<msg timestamp="20201006 02:15:06.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:06.220" starttime="20201006 02:15:06.198"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.220" starttime="20201006 02:15:06.198"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.220" starttime="20201006 02:15:06.197"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.220" starttime="20201006 02:15:06.187"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:06.220" starttime="20201006 02:15:06.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:06.226" level="INFO">Running command 'ozone sh key put 88825-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:14.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:14.924" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:14.924" starttime="20201006 02:15:06.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:14.925" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:15:14.926" starttime="20201006 02:15:14.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:14.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:14.926" starttime="20201006 02:15:14.926"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:14.927" starttime="20201006 02:15:06.222"></status>
</kw>
<msg timestamp="20201006 02:15:14.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:14.927" starttime="20201006 02:15:06.221"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:14.927" starttime="20201006 02:15:06.221"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201006 02:15:14.929" level="INFO">${postfix} = 67352</msg>
<status status="PASS" endtime="20201006 02:15:14.929" starttime="20201006 02:15:14.929"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201006 02:15:14.930" level="INFO">${tmpfile} = /tmp/tempkey-67352</msg>
<status status="PASS" endtime="20201006 02:15:14.930" starttime="20201006 02:15:14.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:14.934" level="INFO">Running command 'ozone sh key get -f 88825-source/bucket1/key2 /tmp/tempkey-67352 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:20.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:20.636" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:20.636" starttime="20201006 02:15:14.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.637" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:15:20.638" starttime="20201006 02:15:20.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:20.638" starttime="20201006 02:15:20.638"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.639" starttime="20201006 02:15:14.931"></status>
</kw>
<msg timestamp="20201006 02:15:20.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:20.639" starttime="20201006 02:15:14.931"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.639" starttime="20201006 02:15:14.930"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201006 02:15:20.641" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-67352 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:20.644" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201006 02:15:20.644" starttime="20201006 02:15:20.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:20.648" level="INFO">Running command 'rm -f /tmp/tempkey-67352 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:20.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:20.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:20.650" starttime="20201006 02:15:20.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.651" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:20.651" starttime="20201006 02:15:20.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:20.652" starttime="20201006 02:15:20.652"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.652" starttime="20201006 02:15:20.645"></status>
</kw>
<msg timestamp="20201006 02:15:20.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:20.653" starttime="20201006 02:15:20.645"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.653" starttime="20201006 02:15:20.644"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:15:20.654" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201006 02:15:20.654" starttime="20201006 02:15:20.653"></status>
</kw>
<msg timestamp="20201006 02:15:20.654" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201006 02:15:20.654" starttime="20201006 02:15:14.928"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:20.654" starttime="20201006 02:15:20.654"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.655" starttime="20201006 02:15:14.928"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:15:20.655" critical="yes" starttime="20201006 02:15:06.186"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:20.661" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:20.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:20.664" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:15:20.664" starttime="20201006 02:15:20.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.665" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:15:20.665" starttime="20201006 02:15:20.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:20.665" starttime="20201006 02:15:20.665"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.666" starttime="20201006 02:15:20.659"></status>
</kw>
<msg timestamp="20201006 02:15:20.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:20.666" starttime="20201006 02:15:20.658"></status>
</kw>
<msg timestamp="20201006 02:15:20.666" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:15:20.666" starttime="20201006 02:15:20.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:15:20.667" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:15:20.667" starttime="20201006 02:15:20.666"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:20.672" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:20.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:20.687" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:20.688" starttime="20201006 02:15:20.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.688" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:20.689" starttime="20201006 02:15:20.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:20.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:20.689" starttime="20201006 02:15:20.689"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.690" starttime="20201006 02:15:20.669"></status>
</kw>
<msg timestamp="20201006 02:15:20.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:20.690" starttime="20201006 02:15:20.668"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.690" starttime="20201006 02:15:20.668"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.690" starttime="20201006 02:15:20.667"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.690" starttime="20201006 02:15:20.657"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:20.690" starttime="20201006 02:15:20.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:20.694" level="INFO">Running command 'ozone sh key list 88825-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:24.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:24.753" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201006 02:15:24.753" starttime="20201006 02:15:20.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:24.754" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201006 02:15:24.754" starttime="20201006 02:15:24.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:24.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:24.755" starttime="20201006 02:15:24.754"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:24.755" starttime="20201006 02:15:20.692"></status>
</kw>
<msg timestamp="20201006 02:15:24.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:24.755" starttime="20201006 02:15:20.691"></status>
</kw>
<msg timestamp="20201006 02:15:24.756" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201006 02:15:24.756" starttime="20201006 02:15:20.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:24.760" level="INFO">Running command 'ozone sh key list 88825-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:28.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:28.839" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201006 02:15:28.839" starttime="20201006 02:15:24.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:28.840" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201006 02:15:28.841" starttime="20201006 02:15:28.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:28.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:28.841" starttime="20201006 02:15:28.841"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:28.842" starttime="20201006 02:15:24.757"></status>
</kw>
<msg timestamp="20201006 02:15:28.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:28.842" starttime="20201006 02:15:24.757"></status>
</kw>
<msg timestamp="20201006 02:15:28.842" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201006 02:15:28.842" starttime="20201006 02:15:24.756"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:28.843" starttime="20201006 02:15:28.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:28.844" starttime="20201006 02:15:28.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:28.844" starttime="20201006 02:15:28.844"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:15:28.845" critical="yes" starttime="20201006 02:15:20.656"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:28.853" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:28.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:28.854" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:15:28.854" starttime="20201006 02:15:28.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:28.856" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:15:28.856" starttime="20201006 02:15:28.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:28.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:28.857" starttime="20201006 02:15:28.856"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:28.857" starttime="20201006 02:15:28.849"></status>
</kw>
<msg timestamp="20201006 02:15:28.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:28.857" starttime="20201006 02:15:28.848"></status>
</kw>
<msg timestamp="20201006 02:15:28.857" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:15:28.858" starttime="20201006 02:15:28.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:15:28.858" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:15:28.859" starttime="20201006 02:15:28.858"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:28.863" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:28.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:28.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:28.875" starttime="20201006 02:15:28.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:28.876" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:28.876" starttime="20201006 02:15:28.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:28.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:28.877" starttime="20201006 02:15:28.877"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:28.878" starttime="20201006 02:15:28.860"></status>
</kw>
<msg timestamp="20201006 02:15:28.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:28.878" starttime="20201006 02:15:28.860"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:28.878" starttime="20201006 02:15:28.859"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:28.878" starttime="20201006 02:15:28.859"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:28.878" starttime="20201006 02:15:28.847"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:28.878" starttime="20201006 02:15:28.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:28.884" level="INFO">Running command 'ozone sh key delete 88825-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:32.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:32.939" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:32.940" starttime="20201006 02:15:28.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:32.943" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:15:32.944" starttime="20201006 02:15:32.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:32.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:32.944" starttime="20201006 02:15:32.944"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:32.945" starttime="20201006 02:15:28.880"></status>
</kw>
<msg timestamp="20201006 02:15:32.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:32.945" starttime="20201006 02:15:28.879"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:32.945" starttime="20201006 02:15:28.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:32.954" level="INFO">Running command 'ozone sh key list 88825-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:36.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:36.815" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201006 02:15:36.815" starttime="20201006 02:15:32.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:36.816" level="INFO">key1</msg>
<status status="PASS" endtime="20201006 02:15:36.816" starttime="20201006 02:15:36.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:36.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:36.817" starttime="20201006 02:15:36.816"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:36.817" starttime="20201006 02:15:32.946"></status>
</kw>
<msg timestamp="20201006 02:15:36.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:36.818" starttime="20201006 02:15:32.946"></status>
</kw>
<msg timestamp="20201006 02:15:36.818" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201006 02:15:36.818" starttime="20201006 02:15:32.945"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:36.818" starttime="20201006 02:15:36.818"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:15:36.819" critical="yes" starttime="20201006 02:15:28.846"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:36.826" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:36.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:36.827" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:15:36.827" starttime="20201006 02:15:36.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:36.828" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:15:36.828" starttime="20201006 02:15:36.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:36.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:36.829" starttime="20201006 02:15:36.828"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:36.829" starttime="20201006 02:15:36.822"></status>
</kw>
<msg timestamp="20201006 02:15:36.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:36.829" starttime="20201006 02:15:36.822"></status>
</kw>
<msg timestamp="20201006 02:15:36.830" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:15:36.830" starttime="20201006 02:15:36.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:15:36.830" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:15:36.831" starttime="20201006 02:15:36.830"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:36.835" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:36.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:36.850" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:36.850" starttime="20201006 02:15:36.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:36.851" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:36.851" starttime="20201006 02:15:36.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:36.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:36.852" starttime="20201006 02:15:36.851"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:36.852" starttime="20201006 02:15:36.832"></status>
</kw>
<msg timestamp="20201006 02:15:36.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:36.852" starttime="20201006 02:15:36.832"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:36.853" starttime="20201006 02:15:36.831"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:36.853" starttime="20201006 02:15:36.831"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:36.853" starttime="20201006 02:15:36.821"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:36.853" starttime="20201006 02:15:36.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:36.857" level="INFO">Running command 'ozone sh bucket list 88825-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:40.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:40.701" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:40.701" starttime="20201006 02:15:36.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:40.702" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:39.939Z",
  "modificationTime" : "2020-10-06T02:14:39.939Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:18.905Z",
  "modificationTime" : "2020-10-06T02:14:18.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:47.156Z",
  "modificationTime" : "2020-10-06T02:14:47.156Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:12.225Z",
  "modificationTime" : "2020-10-06T02:14:12.225Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:15.528Z",
  "modificationTime" : "2020-10-06T02:14:15.528Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201006 02:15:40.702" starttime="20201006 02:15:40.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:40.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:40.703" starttime="20201006 02:15:40.703"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:40.703" starttime="20201006 02:15:36.854"></status>
</kw>
<msg timestamp="20201006 02:15:40.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:40.704" starttime="20201006 02:15:36.854"></status>
</kw>
<msg timestamp="20201006 02:15:40.704" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:40.704" starttime="20201006 02:15:36.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:40.705" starttime="20201006 02:15:40.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:40.705" starttime="20201006 02:15:40.705"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:15:40.706" critical="yes" starttime="20201006 02:15:36.819"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:40.712" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:40.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:40.714" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:15:40.714" starttime="20201006 02:15:40.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:40.715" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:15:40.715" starttime="20201006 02:15:40.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:40.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:40.716" starttime="20201006 02:15:40.715"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:40.716" starttime="20201006 02:15:40.709"></status>
</kw>
<msg timestamp="20201006 02:15:40.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:40.716" starttime="20201006 02:15:40.708"></status>
</kw>
<msg timestamp="20201006 02:15:40.716" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:15:40.716" starttime="20201006 02:15:40.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:15:40.717" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:15:40.717" starttime="20201006 02:15:40.717"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:40.723" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:40.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:40.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:40.744" starttime="20201006 02:15:40.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:40.745" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:40.745" starttime="20201006 02:15:40.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:40.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:40.746" starttime="20201006 02:15:40.745"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:40.746" starttime="20201006 02:15:40.719"></status>
</kw>
<msg timestamp="20201006 02:15:40.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:40.746" starttime="20201006 02:15:40.719"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:40.746" starttime="20201006 02:15:40.718"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:40.746" starttime="20201006 02:15:40.718"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:40.747" starttime="20201006 02:15:40.708"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:40.747" starttime="20201006 02:15:40.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:40.750" level="INFO">Running command 'ozone sh bucket info 88825-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:44.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:44.502" level="INFO">${output} = 88825-source bucket1</msg>
<status status="PASS" endtime="20201006 02:15:44.502" starttime="20201006 02:15:40.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:44.503" level="INFO">88825-source bucket1</msg>
<status status="PASS" endtime="20201006 02:15:44.504" starttime="20201006 02:15:44.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:44.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:44.504" starttime="20201006 02:15:44.504"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:44.505" starttime="20201006 02:15:40.748"></status>
</kw>
<msg timestamp="20201006 02:15:44.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:44.505" starttime="20201006 02:15:40.747"></status>
</kw>
<msg timestamp="20201006 02:15:44.505" level="INFO">${result} = 88825-source bucket1</msg>
<status status="PASS" endtime="20201006 02:15:44.505" starttime="20201006 02:15:40.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:44.506" starttime="20201006 02:15:44.505"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:15:44.506" critical="yes" starttime="20201006 02:15:40.706"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:44.513" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:44.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:44.518" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:15:44.518" starttime="20201006 02:15:44.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:44.519" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:15:44.519" starttime="20201006 02:15:44.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:44.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:44.520" starttime="20201006 02:15:44.519"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:44.520" starttime="20201006 02:15:44.510"></status>
</kw>
<msg timestamp="20201006 02:15:44.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:44.520" starttime="20201006 02:15:44.509"></status>
</kw>
<msg timestamp="20201006 02:15:44.521" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:15:44.521" starttime="20201006 02:15:44.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:15:44.521" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:15:44.522" starttime="20201006 02:15:44.521"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:44.525" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:44.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:44.535" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:44.535" starttime="20201006 02:15:44.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:44.536" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:44.537" starttime="20201006 02:15:44.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:44.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:44.537" starttime="20201006 02:15:44.537"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:44.537" starttime="20201006 02:15:44.523"></status>
</kw>
<msg timestamp="20201006 02:15:44.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:44.538" starttime="20201006 02:15:44.523"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:44.538" starttime="20201006 02:15:44.522"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:44.538" starttime="20201006 02:15:44.522"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:44.538" starttime="20201006 02:15:44.508"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:44.538" starttime="20201006 02:15:44.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:44.543" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 88825-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:48.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:48.001" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:48.001" starttime="20201006 02:15:44.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:48.002" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201006 02:15:48.002" starttime="20201006 02:15:48.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:48.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:48.003" starttime="20201006 02:15:48.003"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:48.003" starttime="20201006 02:15:44.539"></status>
</kw>
<msg timestamp="20201006 02:15:48.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:48.004" starttime="20201006 02:15:44.539"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:48.004" starttime="20201006 02:15:44.538"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:48.010" level="INFO">Running command 'ozone sh bucket getacl 88825-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:51.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:51.784" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201006 02:15:51.784" starttime="20201006 02:15:48.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:51.786" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201006 02:15:51.786" starttime="20201006 02:15:51.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:51.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:51.787" starttime="20201006 02:15:51.786"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:51.787" starttime="20201006 02:15:48.006"></status>
</kw>
<msg timestamp="20201006 02:15:51.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:51.787" starttime="20201006 02:15:48.006"></status>
</kw>
<msg timestamp="20201006 02:15:51.787" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201006 02:15:51.787" starttime="20201006 02:15:48.005"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:51.788" starttime="20201006 02:15:51.788"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:51.788" starttime="20201006 02:15:48.004"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:51.794" level="INFO">Running command 'ozone sh bucket getacl 88825-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:55.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:55.579" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:15:55.579" starttime="20201006 02:15:51.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:55.581" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:15:55.581" starttime="20201006 02:15:55.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:55.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:55.581" starttime="20201006 02:15:55.581"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:55.582" starttime="20201006 02:15:51.790"></status>
</kw>
<msg timestamp="20201006 02:15:55.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:55.582" starttime="20201006 02:15:51.790"></status>
</kw>
<msg timestamp="20201006 02:15:55.582" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201006 02:15:55.582" starttime="20201006 02:15:51.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:15:55.583" starttime="20201006 02:15:55.582"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:55.583" starttime="20201006 02:15:51.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:55.588" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 88825-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:15:59.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:15:59.144" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:15:59.144" starttime="20201006 02:15:55.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:15:59.146" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201006 02:15:59.146" starttime="20201006 02:15:59.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:15:59.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:15:59.146" starttime="20201006 02:15:59.146"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:59.147" starttime="20201006 02:15:55.585"></status>
</kw>
<msg timestamp="20201006 02:15:59.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:15:59.147" starttime="20201006 02:15:55.584"></status>
</kw>
<status status="PASS" endtime="20201006 02:15:59.147" starttime="20201006 02:15:55.583"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:15:59.154" level="INFO">Running command 'ozone sh bucket getacl 88825-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:03.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:03.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:03.119" starttime="20201006 02:15:59.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:03.120" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:03.121" starttime="20201006 02:16:03.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:03.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:03.121" starttime="20201006 02:16:03.121"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:03.122" starttime="20201006 02:15:59.150"></status>
</kw>
<msg timestamp="20201006 02:16:03.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:03.122" starttime="20201006 02:15:59.149"></status>
</kw>
<msg timestamp="20201006 02:16:03.122" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201006 02:16:03.122" starttime="20201006 02:15:59.149"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:03.123" starttime="20201006 02:16:03.122"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:03.123" starttime="20201006 02:15:59.148"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:03.128" level="INFO">Running command 'ozone sh bucket getacl 88825-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:06.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:06.764" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201006 02:16:06.764" starttime="20201006 02:16:03.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:06.765" level="INFO">READ</msg>
<status status="PASS" endtime="20201006 02:16:06.765" starttime="20201006 02:16:06.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:06.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:06.766" starttime="20201006 02:16:06.765"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.766" starttime="20201006 02:16:03.126"></status>
</kw>
<msg timestamp="20201006 02:16:06.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:06.767" starttime="20201006 02:16:03.125"></status>
</kw>
<msg timestamp="20201006 02:16:06.767" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201006 02:16:06.767" starttime="20201006 02:16:03.124"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:06.768" starttime="20201006 02:16:06.767"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.768" starttime="20201006 02:16:03.123"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:16:06.768" critical="yes" starttime="20201006 02:15:44.507"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:06.774" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:06.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:06.777" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:06.777" starttime="20201006 02:16:06.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:06.778" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:06.778" starttime="20201006 02:16:06.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:06.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:06.779" starttime="20201006 02:16:06.778"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.779" starttime="20201006 02:16:06.772"></status>
</kw>
<msg timestamp="20201006 02:16:06.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:06.780" starttime="20201006 02:16:06.771"></status>
</kw>
<msg timestamp="20201006 02:16:06.780" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:06.780" starttime="20201006 02:16:06.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:06.781" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:06.781" starttime="20201006 02:16:06.780"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:06.784" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:06.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:06.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:06.795" starttime="20201006 02:16:06.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:06.796" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:06.796" starttime="20201006 02:16:06.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:06.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:06.797" starttime="20201006 02:16:06.797"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.797" starttime="20201006 02:16:06.782"></status>
</kw>
<msg timestamp="20201006 02:16:06.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:06.798" starttime="20201006 02:16:06.782"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.798" starttime="20201006 02:16:06.781"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.798" starttime="20201006 02:16:06.781"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.798" starttime="20201006 02:16:06.770"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:06.798" starttime="20201006 02:16:06.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:06.802" level="INFO">Running command 'ozone sh bucket link 88825-source/bucket2 88825-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:10.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:10.239" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:10.239" starttime="20201006 02:16:06.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:10.240" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:16:10.240" starttime="20201006 02:16:10.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:10.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:10.241" starttime="20201006 02:16:10.240"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:10.241" starttime="20201006 02:16:06.799"></status>
</kw>
<msg timestamp="20201006 02:16:10.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:10.241" starttime="20201006 02:16:06.799"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:10.241" starttime="20201006 02:16:06.798"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:10.245" level="INFO">Running command 'ozone sh bucket create 88825-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:14.930" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 02:16:14.930" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:14.930" starttime="20201006 02:16:10.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:14.931" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201006 02:16:14.931" starttime="20201006 02:16:14.930"></status>
</kw>
<msg timestamp="20201006 02:16:14.932" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:14.932" starttime="20201006 02:16:10.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:14.932" starttime="20201006 02:16:14.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:14.944" level="INFO">Running command 'ozone sh bucket create 88825-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:18.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:18.641" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:18.641" starttime="20201006 02:16:14.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:18.642" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:16:18.642" starttime="20201006 02:16:18.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:18.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:18.643" starttime="20201006 02:16:18.642"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:18.643" starttime="20201006 02:16:14.934"></status>
</kw>
<msg timestamp="20201006 02:16:18.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:18.643" starttime="20201006 02:16:14.933"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:18.644" starttime="20201006 02:16:14.933"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:18.647" level="INFO">Running command 'ozone sh bucket link 88825-source/bucket1 88825-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:22.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 02:16:22.301" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:22.301" starttime="20201006 02:16:18.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.303" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201006 02:16:22.303" starttime="20201006 02:16:22.302"></status>
</kw>
<msg timestamp="20201006 02:16:22.303" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:22.303" starttime="20201006 02:16:18.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:22.304" starttime="20201006 02:16:22.303"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:16:22.304" critical="yes" starttime="20201006 02:16:06.769"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:22.311" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:22.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:22.313" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:22.313" starttime="20201006 02:16:22.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.314" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:22.314" starttime="20201006 02:16:22.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:22.314" starttime="20201006 02:16:22.314"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.315" starttime="20201006 02:16:22.307"></status>
</kw>
<msg timestamp="20201006 02:16:22.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:22.315" starttime="20201006 02:16:22.307"></status>
</kw>
<msg timestamp="20201006 02:16:22.315" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:22.315" starttime="20201006 02:16:22.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:22.316" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:22.316" starttime="20201006 02:16:22.316"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:22.321" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:22.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:22.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:22.331" starttime="20201006 02:16:22.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.331" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:22.332" starttime="20201006 02:16:22.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:22.332" starttime="20201006 02:16:22.332"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.333" starttime="20201006 02:16:22.318"></status>
</kw>
<msg timestamp="20201006 02:16:22.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:22.333" starttime="20201006 02:16:22.317"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.333" starttime="20201006 02:16:22.317"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.333" starttime="20201006 02:16:22.316"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.333" starttime="20201006 02:16:22.306"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.333" starttime="20201006 02:16:22.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:22.339" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:22.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:22.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:22.342" starttime="20201006 02:16:22.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.343" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:22.343" starttime="20201006 02:16:22.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:22.343" starttime="20201006 02:16:22.343"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.344" starttime="20201006 02:16:22.336"></status>
</kw>
<msg timestamp="20201006 02:16:22.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:22.344" starttime="20201006 02:16:22.335"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.344" starttime="20201006 02:16:22.335"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:22.349" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:22.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:22.351" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:22.351" starttime="20201006 02:16:22.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.352" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:22.352" starttime="20201006 02:16:22.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:22.352" starttime="20201006 02:16:22.352"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.353" starttime="20201006 02:16:22.346"></status>
</kw>
<msg timestamp="20201006 02:16:22.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:22.353" starttime="20201006 02:16:22.346"></status>
</kw>
<msg timestamp="20201006 02:16:22.353" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:22.353" starttime="20201006 02:16:22.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:22.354" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:22.354" starttime="20201006 02:16:22.353"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:22.359" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:22.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:22.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:22.379" starttime="20201006 02:16:22.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.380" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:22.380" starttime="20201006 02:16:22.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:22.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:22.381" starttime="20201006 02:16:22.380"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.381" starttime="20201006 02:16:22.356"></status>
</kw>
<msg timestamp="20201006 02:16:22.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:22.381" starttime="20201006 02:16:22.355"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.382" starttime="20201006 02:16:22.355"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.382" starttime="20201006 02:16:22.354"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.382" starttime="20201006 02:16:22.345"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:22.382" starttime="20201006 02:16:22.344"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:22.384" level="INFO">Running command 'ozone sh key list 88825-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:26.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:26.482" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:26.482" starttime="20201006 02:16:22.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.483" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "88825-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-06T02:14:00.636Z",
  "modificationTime" : "2020-10-06T02:14:04.813Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201006 02:16:26.483" starttime="20201006 02:16:26.482"></status>
</kw>
<msg timestamp="20201006 02:16:26.484" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:26.484" starttime="20201006 02:16:22.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:26.484" starttime="20201006 02:16:26.484"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.485" starttime="20201006 02:16:22.334"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.485" starttime="20201006 02:16:22.334"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:16:26.485" critical="yes" starttime="20201006 02:16:22.305"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:26.494" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:26.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:26.495" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:26.495" starttime="20201006 02:16:26.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.496" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:26.496" starttime="20201006 02:16:26.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:26.498" starttime="20201006 02:16:26.497"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.498" starttime="20201006 02:16:26.489"></status>
</kw>
<msg timestamp="20201006 02:16:26.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:26.498" starttime="20201006 02:16:26.489"></status>
</kw>
<msg timestamp="20201006 02:16:26.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:26.499" starttime="20201006 02:16:26.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:26.500" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:26.500" starttime="20201006 02:16:26.499"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:26.505" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:26.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:26.514" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:26.514" starttime="20201006 02:16:26.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.515" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:26.515" starttime="20201006 02:16:26.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:26.516" starttime="20201006 02:16:26.515"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.516" starttime="20201006 02:16:26.501"></status>
</kw>
<msg timestamp="20201006 02:16:26.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:26.516" starttime="20201006 02:16:26.501"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.517" starttime="20201006 02:16:26.500"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.517" starttime="20201006 02:16:26.500"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.517" starttime="20201006 02:16:26.488"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.517" starttime="20201006 02:16:26.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:26.522" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:26.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:26.525" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:26.525" starttime="20201006 02:16:26.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.526" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:26.526" starttime="20201006 02:16:26.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:26.526" starttime="20201006 02:16:26.526"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.527" starttime="20201006 02:16:26.519"></status>
</kw>
<msg timestamp="20201006 02:16:26.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:26.527" starttime="20201006 02:16:26.519"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.527" starttime="20201006 02:16:26.518"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:26.532" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:26.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:26.534" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:26.534" starttime="20201006 02:16:26.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.535" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:26.535" starttime="20201006 02:16:26.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:26.536" starttime="20201006 02:16:26.535"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.536" starttime="20201006 02:16:26.529"></status>
</kw>
<msg timestamp="20201006 02:16:26.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:26.536" starttime="20201006 02:16:26.529"></status>
</kw>
<msg timestamp="20201006 02:16:26.536" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:26.536" starttime="20201006 02:16:26.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:26.537" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:26.537" starttime="20201006 02:16:26.537"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:26.542" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:26.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:26.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:26.552" starttime="20201006 02:16:26.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.553" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:26.553" starttime="20201006 02:16:26.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:26.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:26.553" starttime="20201006 02:16:26.553"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.554" starttime="20201006 02:16:26.539"></status>
</kw>
<msg timestamp="20201006 02:16:26.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:26.554" starttime="20201006 02:16:26.538"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.554" starttime="20201006 02:16:26.538"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.554" starttime="20201006 02:16:26.537"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.554" starttime="20201006 02:16:26.528"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:26.554" starttime="20201006 02:16:26.527"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:26.558" level="INFO">Running command 'ozone sh key list 88825-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:30.165" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 02:16:30.165" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:30.165" starttime="20201006 02:16:26.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.166" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201006 02:16:30.166" starttime="20201006 02:16:30.165"></status>
</kw>
<msg timestamp="20201006 02:16:30.167" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:30.167" starttime="20201006 02:16:26.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:30.167" starttime="20201006 02:16:30.167"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.167" starttime="20201006 02:16:26.518"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.167" starttime="20201006 02:16:26.517"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:16:30.168" critical="yes" starttime="20201006 02:16:26.486"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:30.175" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:30.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:30.176" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:30.176" starttime="20201006 02:16:30.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.177" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:30.177" starttime="20201006 02:16:30.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:30.178" starttime="20201006 02:16:30.177"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.178" starttime="20201006 02:16:30.171"></status>
</kw>
<msg timestamp="20201006 02:16:30.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:30.178" starttime="20201006 02:16:30.171"></status>
</kw>
<msg timestamp="20201006 02:16:30.179" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:30.179" starttime="20201006 02:16:30.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:30.180" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:30.180" starttime="20201006 02:16:30.179"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:30.185" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:30.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:30.194" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:30.195" starttime="20201006 02:16:30.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.196" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:30.196" starttime="20201006 02:16:30.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:30.196" starttime="20201006 02:16:30.196"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.197" starttime="20201006 02:16:30.181"></status>
</kw>
<msg timestamp="20201006 02:16:30.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:30.197" starttime="20201006 02:16:30.181"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.197" starttime="20201006 02:16:30.180"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.197" starttime="20201006 02:16:30.180"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.197" starttime="20201006 02:16:30.170"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.197" starttime="20201006 02:16:30.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:30.203" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:30.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:30.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:30.206" starttime="20201006 02:16:30.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.206" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:30.207" starttime="20201006 02:16:30.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:30.207" starttime="20201006 02:16:30.207"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.208" starttime="20201006 02:16:30.199"></status>
</kw>
<msg timestamp="20201006 02:16:30.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:30.208" starttime="20201006 02:16:30.199"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.208" starttime="20201006 02:16:30.199"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:30.213" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:30.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:30.214" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:30.214" starttime="20201006 02:16:30.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.215" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:30.215" starttime="20201006 02:16:30.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:30.216" starttime="20201006 02:16:30.215"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.216" starttime="20201006 02:16:30.210"></status>
</kw>
<msg timestamp="20201006 02:16:30.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:30.217" starttime="20201006 02:16:30.209"></status>
</kw>
<msg timestamp="20201006 02:16:30.217" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:30.217" starttime="20201006 02:16:30.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:30.218" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:30.218" starttime="20201006 02:16:30.217"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:30.221" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:30.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:30.233" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:30.233" starttime="20201006 02:16:30.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.235" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:30.235" starttime="20201006 02:16:30.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:30.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:30.236" starttime="20201006 02:16:30.235"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.236" starttime="20201006 02:16:30.219"></status>
</kw>
<msg timestamp="20201006 02:16:30.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:30.236" starttime="20201006 02:16:30.219"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.236" starttime="20201006 02:16:30.218"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.236" starttime="20201006 02:16:30.218"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.237" starttime="20201006 02:16:30.208"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:30.237" starttime="20201006 02:16:30.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:30.242" level="INFO">Running command 'ozone sh bucket info 88825-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:34.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:34.197" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:34.197" starttime="20201006 02:16:30.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:34.198" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:18.905Z",
  "modificationTime" : "2020-10-06T02:14:18.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201006 02:16:34.198" starttime="20201006 02:16:34.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:34.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:34.199" starttime="20201006 02:16:34.198"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:34.199" starttime="20201006 02:16:30.238"></status>
</kw>
<msg timestamp="20201006 02:16:34.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:34.199" starttime="20201006 02:16:30.237"></status>
</kw>
<msg timestamp="20201006 02:16:34.200" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:34.200" starttime="20201006 02:16:30.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:34.200" starttime="20201006 02:16:34.200"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:34.201" starttime="20201006 02:16:34.200"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:34.204" level="INFO">Running command 'ozone sh key list 88825-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:37.616" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 02:16:37.616" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:37.616" starttime="20201006 02:16:34.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:37.617" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201006 02:16:37.617" starttime="20201006 02:16:37.616"></status>
</kw>
<msg timestamp="20201006 02:16:37.617" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:37.617" starttime="20201006 02:16:34.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:37.618" starttime="20201006 02:16:37.618"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.618" starttime="20201006 02:16:30.198"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.618" starttime="20201006 02:16:30.198"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:16:37.618" critical="yes" starttime="20201006 02:16:30.169"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:37.625" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:37.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:37.628" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:37.628" starttime="20201006 02:16:37.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:37.629" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:37.629" starttime="20201006 02:16:37.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:37.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:37.630" starttime="20201006 02:16:37.629"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.630" starttime="20201006 02:16:37.622"></status>
</kw>
<msg timestamp="20201006 02:16:37.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:37.630" starttime="20201006 02:16:37.622"></status>
</kw>
<msg timestamp="20201006 02:16:37.631" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:37.631" starttime="20201006 02:16:37.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:37.631" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:37.632" starttime="20201006 02:16:37.631"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:37.635" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:37.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:37.646" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:37.646" starttime="20201006 02:16:37.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:37.647" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:37.647" starttime="20201006 02:16:37.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:37.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:37.648" starttime="20201006 02:16:37.647"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.648" starttime="20201006 02:16:37.633"></status>
</kw>
<msg timestamp="20201006 02:16:37.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:37.648" starttime="20201006 02:16:37.633"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.648" starttime="20201006 02:16:37.632"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.648" starttime="20201006 02:16:37.632"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.649" starttime="20201006 02:16:37.621"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:37.649" starttime="20201006 02:16:37.620"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:37.654" level="INFO">Running command 'ozone sh bucket link 88825-target/loop1 88825-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:40.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:40.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:40.854" starttime="20201006 02:16:37.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:40.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:16:40.856" starttime="20201006 02:16:40.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:40.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:40.856" starttime="20201006 02:16:40.856"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:40.857" starttime="20201006 02:16:37.650"></status>
</kw>
<msg timestamp="20201006 02:16:40.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:40.857" starttime="20201006 02:16:37.650"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:40.857" starttime="20201006 02:16:37.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:40.862" level="INFO">Running command 'ozone sh bucket link 88825-target/loop2 88825-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:44.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:44.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:44.529" starttime="20201006 02:16:40.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:44.530" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:16:44.530" starttime="20201006 02:16:44.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:44.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:44.531" starttime="20201006 02:16:44.530"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:44.531" starttime="20201006 02:16:40.858"></status>
</kw>
<msg timestamp="20201006 02:16:44.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:44.531" starttime="20201006 02:16:40.858"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:44.532" starttime="20201006 02:16:40.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:44.536" level="INFO">Running command 'ozone sh bucket link 88825-target/loop3 88825-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:48.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:48.104" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:48.105" starttime="20201006 02:16:44.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:48.106" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:16:48.106" starttime="20201006 02:16:48.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:48.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:48.107" starttime="20201006 02:16:48.106"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:48.107" starttime="20201006 02:16:44.533"></status>
</kw>
<msg timestamp="20201006 02:16:48.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:48.107" starttime="20201006 02:16:44.532"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:48.108" starttime="20201006 02:16:44.532"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:48.113" level="INFO">Running command 'ozone sh key list 88825-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:51.756" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 02:16:51.756" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:51.756" starttime="20201006 02:16:48.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:51.757" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201006 02:16:51.757" starttime="20201006 02:16:51.757"></status>
</kw>
<msg timestamp="20201006 02:16:51.758" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:51.758" starttime="20201006 02:16:48.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201006 02:16:51.758" starttime="20201006 02:16:51.758"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:16:51.759" critical="yes" starttime="20201006 02:16:37.619"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:51.766" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:51.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:51.768" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:16:51.768" starttime="20201006 02:16:51.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:51.769" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:16:51.769" starttime="20201006 02:16:51.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:51.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:51.770" starttime="20201006 02:16:51.769"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:51.770" starttime="20201006 02:16:51.762"></status>
</kw>
<msg timestamp="20201006 02:16:51.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:51.770" starttime="20201006 02:16:51.762"></status>
</kw>
<msg timestamp="20201006 02:16:51.770" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:16:51.770" starttime="20201006 02:16:51.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:16:51.771" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:16:51.771" starttime="20201006 02:16:51.771"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:51.776" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:51.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:51.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:16:51.868" starttime="20201006 02:16:51.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:51.869" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:16:51.869" starttime="20201006 02:16:51.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:51.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:51.870" starttime="20201006 02:16:51.869"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:51.870" starttime="20201006 02:16:51.773"></status>
</kw>
<msg timestamp="20201006 02:16:51.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:51.871" starttime="20201006 02:16:51.773"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:51.871" starttime="20201006 02:16:51.772"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:51.871" starttime="20201006 02:16:51.771"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:51.871" starttime="20201006 02:16:51.761"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:51.871" starttime="20201006 02:16:51.760"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:51.875" level="INFO">Running command 'ozone sh bucket link 88825-source/bucket1 88825-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:16:55.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:16:55.419" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:16:55.419" starttime="20201006 02:16:51.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:16:55.420" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:16:55.420" starttime="20201006 02:16:55.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:16:55.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:16:55.422" starttime="20201006 02:16:55.421"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:55.422" starttime="20201006 02:16:51.872"></status>
</kw>
<msg timestamp="20201006 02:16:55.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:16:55.422" starttime="20201006 02:16:51.872"></status>
</kw>
<status status="PASS" endtime="20201006 02:16:55.423" starttime="20201006 02:16:51.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:16:55.427" level="INFO">Running command 'ozone sh key put 88825-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:03.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:03.374" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:17:03.374" starttime="20201006 02:16:55.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:03.376" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:17:03.376" starttime="20201006 02:17:03.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:03.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:03.376" starttime="20201006 02:17:03.376"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:03.377" starttime="20201006 02:16:55.424"></status>
</kw>
<msg timestamp="20201006 02:17:03.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:03.377" starttime="20201006 02:16:55.424"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:03.377" starttime="20201006 02:16:55.423"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201006 02:17:03.379" level="INFO">${postfix} = 35052</msg>
<status status="PASS" endtime="20201006 02:17:03.379" starttime="20201006 02:17:03.379"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201006 02:17:03.380" level="INFO">${tmpfile} = /tmp/tempkey-35052</msg>
<status status="PASS" endtime="20201006 02:17:03.380" starttime="20201006 02:17:03.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:17:03.384" level="INFO">Running command 'ozone sh key get -f 88825-target/link1/key3 /tmp/tempkey-35052 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:09.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:09.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:17:09.139" starttime="20201006 02:17:03.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.140" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:17:09.140" starttime="20201006 02:17:09.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:09.141" starttime="20201006 02:17:09.140"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.141" starttime="20201006 02:17:03.381"></status>
</kw>
<msg timestamp="20201006 02:17:09.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:09.142" starttime="20201006 02:17:03.381"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.142" starttime="20201006 02:17:03.380"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201006 02:17:09.144" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-35052 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:09.147" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201006 02:17:09.147" starttime="20201006 02:17:09.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:17:09.151" level="INFO">Running command 'rm -f /tmp/tempkey-35052 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:09.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:09.154" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:17:09.154" starttime="20201006 02:17:09.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.155" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:17:09.155" starttime="20201006 02:17:09.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:09.156" starttime="20201006 02:17:09.155"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.156" starttime="20201006 02:17:09.148"></status>
</kw>
<msg timestamp="20201006 02:17:09.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:09.156" starttime="20201006 02:17:09.148"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.156" starttime="20201006 02:17:09.147"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 02:17:09.157" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201006 02:17:09.157" starttime="20201006 02:17:09.157"></status>
</kw>
<msg timestamp="20201006 02:17:09.157" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201006 02:17:09.158" starttime="20201006 02:17:03.378"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201006 02:17:09.158" starttime="20201006 02:17:09.158"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.158" starttime="20201006 02:17:03.377"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:17:09.159" critical="yes" starttime="20201006 02:16:51.760"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:17:09.165" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:09.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:09.167" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201006 02:17:09.167" starttime="20201006 02:17:09.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.168" level="INFO">scm</msg>
<status status="PASS" endtime="20201006 02:17:09.168" starttime="20201006 02:17:09.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:09.169" starttime="20201006 02:17:09.168"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.169" starttime="20201006 02:17:09.162"></status>
</kw>
<msg timestamp="20201006 02:17:09.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:09.169" starttime="20201006 02:17:09.162"></status>
</kw>
<msg timestamp="20201006 02:17:09.170" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201006 02:17:09.170" starttime="20201006 02:17:09.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201006 02:17:09.170" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201006 02:17:09.170" starttime="20201006 02:17:09.170"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:17:09.175" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:09.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:09.196" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 02:17:09.196" starttime="20201006 02:17:09.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.197" level="INFO"></msg>
<status status="PASS" endtime="20201006 02:17:09.197" starttime="20201006 02:17:09.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:09.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:09.198" starttime="20201006 02:17:09.197"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.198" starttime="20201006 02:17:09.172"></status>
</kw>
<msg timestamp="20201006 02:17:09.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:09.198" starttime="20201006 02:17:09.172"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.198" starttime="20201006 02:17:09.171"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.199" starttime="20201006 02:17:09.171"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.199" starttime="20201006 02:17:09.161"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:09.199" starttime="20201006 02:17:09.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:17:09.202" level="INFO">Running command 'ozone sh bucket delete 88825-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:12.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:12.452" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:17:12.452" starttime="20201006 02:17:09.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:12.453" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201006 02:17:12.453" starttime="20201006 02:17:12.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:12.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:12.454" starttime="20201006 02:17:12.453"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:12.454" starttime="20201006 02:17:09.200"></status>
</kw>
<msg timestamp="20201006 02:17:12.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:12.455" starttime="20201006 02:17:09.200"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:12.455" starttime="20201006 02:17:09.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:17:12.458" level="INFO">Running command 'ozone sh bucket list 88825-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:16.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:16.009" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:17:16.009" starttime="20201006 02:17:12.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:16.010" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:16:18.516Z",
  "modificationTime" : "2020-10-06T02:16:18.516Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:39.939Z",
  "modificationTime" : "2020-10-06T02:14:39.939Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:18.905Z",
  "modificationTime" : "2020-10-06T02:14:18.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:16:10.055Z",
  "modificationTime" : "2020-10-06T02:16:10.055Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:16:55.343Z",
  "modificationTime" : "2020-10-06T02:16:55.343Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:16:48.007Z",
  "modificationTime" : "2020-10-06T02:16:48.007Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:16:40.734Z",
  "modificationTime" : "2020-10-06T02:16:40.734Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:16:44.453Z",
  "modificationTime" : "2020-10-06T02:16:44.453Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:12.225Z",
  "modificationTime" : "2020-10-06T02:14:12.225Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88825-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T02:14:15.528Z",
  "modificationTime" : "2020-10-06T02:14:15.528Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88825-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201006 02:17:16.010" starttime="20201006 02:17:16.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:16.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:16.011" starttime="20201006 02:17:16.010"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:16.011" starttime="20201006 02:17:12.456"></status>
</kw>
<msg timestamp="20201006 02:17:16.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:16.011" starttime="20201006 02:17:12.456"></status>
</kw>
<msg timestamp="20201006 02:17:16.012" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201006 02:17:16.012" starttime="20201006 02:17:12.455"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:17:16.012" starttime="20201006 02:17:16.012"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 02:17:16.016" level="INFO">Running command 'ozone sh key list 88825-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 02:17:19.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 02:17:19.589" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201006 02:17:19.589" starttime="20201006 02:17:16.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 02:17:19.590" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201006 02:17:19.591" starttime="20201006 02:17:19.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 02:17:19.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 02:17:19.591" starttime="20201006 02:17:19.591"></status>
</kw>
<status status="PASS" endtime="20201006 02:17:19.592" starttime="20201006 02:17:16.013"></status>
</kw>
<msg timestamp="20201006 02:17:19.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 02:17:19.592" starttime="20201006 02:17:16.013"></status>
</kw>
<msg timestamp="20201006 02:17:19.592" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201006 02:17:19.592" starttime="20201006 02:17:16.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201006 02:17:19.593" starttime="20201006 02:17:19.592"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 02:17:19.593" critical="yes" starttime="20201006 02:17:09.159"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201006 02:17:19.596" starttime="20201006 02:13:45.538"></status>
</suite>
<status status="PASS" elapsedtime="245782" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
