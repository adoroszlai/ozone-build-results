<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201006 01:40:34.051" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:14.051" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:16.190" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 01:27:16.190" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:27:16.190" starttime="20201006 01:27:14.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:16.191" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:27:16.191" starttime="20201006 01:27:16.190"></status>
</kw>
<msg timestamp="20201006 01:27:16.192" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:27:16.192" starttime="20201006 01:27:14.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:16.197" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:18.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:18.490" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:18.490" starttime="20201006 01:27:16.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:18.491" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:18.491" starttime="20201006 01:27:18.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:18.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:18.492" starttime="20201006 01:27:18.491"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:18.492" starttime="20201006 01:27:16.194"></status>
</kw>
<msg timestamp="20201006 01:27:18.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:18.492" starttime="20201006 01:27:16.193"></status>
</kw>
<msg timestamp="20201006 01:27:18.492" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201006 01:27:18.492" starttime="20201006 01:27:16.193"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201006 01:27:18.493" starttime="20201006 01:27:18.493"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:18.493" starttime="20201006 01:27:16.192"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:18.493" starttime="20201006 01:27:16.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:18.499" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:20.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:20.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:20.877" starttime="20201006 01:27:18.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:20.878" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:20.878" starttime="20201006 01:27:20.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:20.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:20.879" starttime="20201006 01:27:20.878"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:20.879" starttime="20201006 01:27:18.495"></status>
</kw>
<msg timestamp="20201006 01:27:20.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:20.879" starttime="20201006 01:27:18.495"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:20.880" starttime="20201006 01:27:18.494"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:20.880" starttime="20201006 01:27:18.494"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:20.880" starttime="20201006 01:27:18.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201006 01:27:20.880" starttime="20201006 01:27:20.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:20.885" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:23.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:23.176" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:27:20.748Z",
  "modificat...</msg>
<status status="PASS" endtime="20201006 01:27:23.176" starttime="20201006 01:27:20.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:23.177" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:27:20.748Z",
  "modificationTime" : "2020-10-06T01:27:20.748Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201006 01:27:23.177" starttime="20201006 01:27:23.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:23.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:23.178" starttime="20201006 01:27:23.177"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:23.178" starttime="20201006 01:27:20.882"></status>
</kw>
<msg timestamp="20201006 01:27:23.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:23.178" starttime="20201006 01:27:20.881"></status>
</kw>
<msg timestamp="20201006 01:27:23.179" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:27:20.748Z",
  "modificat...</msg>
<status status="PASS" endtime="20201006 01:27:23.179" starttime="20201006 01:27:20.881"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201006 01:27:23.179" starttime="20201006 01:27:23.179"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:27:23.183" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:27:23.183" starttime="20201006 01:27:23.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:27:23.184" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:27:23.184" starttime="20201006 01:27:23.183"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:23.184" starttime="20201006 01:27:23.182"></status>
</kw>
<msg timestamp="20201006 01:27:23.184" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:27:23.184" starttime="20201006 01:27:23.182"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:23.185" starttime="20201006 01:27:23.181"></status>
</kw>
<msg timestamp="20201006 01:27:23.185" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 01:27:23.185" starttime="20201006 01:27:23.180"></status>
</kw>
<msg timestamp="20201006 01:27:23.185" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 01:27:23.185" starttime="20201006 01:27:23.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:23.189" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:25.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:25.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:25.242" starttime="20201006 01:27:23.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:25.244" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:25.244" starttime="20201006 01:27:25.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:25.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:25.244" starttime="20201006 01:27:25.244"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:25.245" starttime="20201006 01:27:23.186"></status>
</kw>
<msg timestamp="20201006 01:27:25.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:25.245" starttime="20201006 01:27:23.186"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:25.245" starttime="20201006 01:27:23.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:25.249" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:31.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:31.135" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:31.135" starttime="20201006 01:27:25.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:31.136" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:31.136" starttime="20201006 01:27:31.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:31.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:31.137" starttime="20201006 01:27:31.136"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:31.137" starttime="20201006 01:27:25.246"></status>
</kw>
<msg timestamp="20201006 01:27:31.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:31.137" starttime="20201006 01:27:25.246"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:31.138" starttime="20201006 01:27:25.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:31.145" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:35.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:35.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:35.682" starttime="20201006 01:27:31.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:35.683" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:35.683" starttime="20201006 01:27:35.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:35.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:35.684" starttime="20201006 01:27:35.683"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:35.684" starttime="20201006 01:27:31.139"></status>
</kw>
<msg timestamp="20201006 01:27:35.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:35.684" starttime="20201006 01:27:31.138"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:35.685" starttime="20201006 01:27:31.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:35.688" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:39.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:39.824" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:39.824" starttime="20201006 01:27:35.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:39.825" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:39.826" starttime="20201006 01:27:39.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:39.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:39.826" starttime="20201006 01:27:39.826"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:39.827" starttime="20201006 01:27:35.686"></status>
</kw>
<msg timestamp="20201006 01:27:39.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:39.827" starttime="20201006 01:27:35.685"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:39.827" starttime="20201006 01:27:35.685"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 01:27:39.827" critical="yes" starttime="20201006 01:27:14.045"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:27:39.833" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:27:39.833" starttime="20201006 01:27:39.832"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:27:39.834" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:27:39.834" starttime="20201006 01:27:39.833"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:39.834" starttime="20201006 01:27:39.832"></status>
</kw>
<msg timestamp="20201006 01:27:39.834" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:27:39.834" starttime="20201006 01:27:39.831"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:39.834" starttime="20201006 01:27:39.830"></status>
</kw>
<msg timestamp="20201006 01:27:39.835" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:27:39.835" starttime="20201006 01:27:39.830"></status>
</kw>
<msg timestamp="20201006 01:27:39.835" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:27:39.835" starttime="20201006 01:27:39.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:39.838" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:41.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:41.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:41.886" starttime="20201006 01:27:39.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:41.887" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:41.887" starttime="20201006 01:27:41.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:41.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:41.888" starttime="20201006 01:27:41.887"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:41.888" starttime="20201006 01:27:39.836"></status>
</kw>
<msg timestamp="20201006 01:27:41.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:41.888" starttime="20201006 01:27:39.836"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:41.888" starttime="20201006 01:27:39.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:41.893" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:43.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:43.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:27:43.986" starttime="20201006 01:27:41.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:43.987" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:27:43.987" starttime="20201006 01:27:43.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:43.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:43.988" starttime="20201006 01:27:43.987"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:43.988" starttime="20201006 01:27:41.889"></status>
</kw>
<msg timestamp="20201006 01:27:43.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:43.988" starttime="20201006 01:27:41.889"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:43.989" starttime="20201006 01:27:41.888"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 01:27:43.989" critical="yes" starttime="20201006 01:27:39.828"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201006 01:27:43.990" starttime="20201006 01:27:13.983"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:29:25.342" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:29:25.343" starttime="20201006 01:29:25.342"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:29:25.343" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:29:25.343" starttime="20201006 01:29:25.343"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:25.343" starttime="20201006 01:29:25.342"></status>
</kw>
<msg timestamp="20201006 01:29:25.343" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:29:25.343" starttime="20201006 01:29:25.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:29:25.345" starttime="20201006 01:29:25.344"></status>
</kw>
<msg timestamp="20201006 01:29:25.345" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:29:25.345" starttime="20201006 01:29:25.344"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:25.345" starttime="20201006 01:29:25.341"></status>
</kw>
<msg timestamp="20201006 01:29:25.345" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:29:25.345" starttime="20201006 01:29:25.340"></status>
</kw>
<msg timestamp="20201006 01:29:25.345" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:29:25.345" starttime="20201006 01:29:25.339"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:29:25.346" level="INFO">${random} = 42087</msg>
<status status="PASS" endtime="20201006 01:29:25.346" starttime="20201006 01:29:25.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:29:25.352" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-42087 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:29:28.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:29:28.600" level="INFO">${output} = 2020-10-06 01:29:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:29:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 ...</msg>
<status status="PASS" endtime="20201006 01:29:28.600" starttime="20201006 01:29:25.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:29:28.601" level="INFO">2020-10-06 01:29:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:29:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 01:29:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-06 01:29:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:29:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9245F64C40B4-&gt;cff300ae-941b-4a66-864a-442a725d7e6d
2020-10-06 01:29:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201006 01:29:28.601" starttime="20201006 01:29:28.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:29:28.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:29:28.602" starttime="20201006 01:29:28.601"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:28.602" starttime="20201006 01:29:25.347"></status>
</kw>
<msg timestamp="20201006 01:29:28.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:29:28.602" starttime="20201006 01:29:25.347"></status>
</kw>
<msg timestamp="20201006 01:29:28.603" level="INFO">${result} = 2020-10-06 01:29:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:29:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 ...</msg>
<status status="PASS" endtime="20201006 01:29:28.603" starttime="20201006 01:29:25.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:29:28.606" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:29:30.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:29:30.378" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-06 01:27 ofs://om/volume1/bucket1/ozone-01391
-rw-...</msg>
<status status="PASS" endtime="20201006 01:29:30.378" starttime="20201006 01:29:28.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:29:30.379" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-06 01:27 ofs://om/volume1/bucket1/ozone-01391
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-06 01:29 ofs://om/volume1/bucket1/ozone-42087
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:28 ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20201006 01:29:30.379" starttime="20201006 01:29:30.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:29:30.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:29:30.380" starttime="20201006 01:29:30.379"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:30.380" starttime="20201006 01:29:28.604"></status>
</kw>
<msg timestamp="20201006 01:29:30.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:29:30.381" starttime="20201006 01:29:28.603"></status>
</kw>
<msg timestamp="20201006 01:29:30.381" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-06 01:27 ofs://om/volume1/bucket1/ozone-01391
-rw-...</msg>
<status status="PASS" endtime="20201006 01:29:30.381" starttime="20201006 01:29:28.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:29:30.382" starttime="20201006 01:29:30.381"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 01:29:30.382" critical="yes" starttime="20201006 01:29:25.338"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 01:29:30.383" starttime="20201006 01:29:25.253"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:27:48.918" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:27:48.918" starttime="20201006 01:27:48.918"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:27:48.919" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:27:48.919" starttime="20201006 01:27:48.919"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:48.919" starttime="20201006 01:27:48.918"></status>
</kw>
<msg timestamp="20201006 01:27:48.919" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:27:48.919" starttime="20201006 01:27:48.917"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:48.920" starttime="20201006 01:27:48.917"></status>
</kw>
<msg timestamp="20201006 01:27:48.920" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:27:48.920" starttime="20201006 01:27:48.916"></status>
</kw>
<msg timestamp="20201006 01:27:48.920" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:27:48.920" starttime="20201006 01:27:48.915"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:27:48.921" level="INFO">${random} = 01391</msg>
<status status="PASS" endtime="20201006 01:27:48.921" starttime="20201006 01:27:48.920"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:48.926" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-01391 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:52.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:52.359" level="INFO">${output} = 2020-10-06 01:27:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:27:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 ...</msg>
<status status="PASS" endtime="20201006 01:27:52.359" starttime="20201006 01:27:48.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:52.360" level="INFO">2020-10-06 01:27:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:27:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 01:27:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-06 01:27:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:27:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0F0F1460F917-&gt;cff300ae-941b-4a66-864a-442a725d7e6d
2020-10-06 01:27:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201006 01:27:52.360" starttime="20201006 01:27:52.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:52.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:52.361" starttime="20201006 01:27:52.360"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:52.361" starttime="20201006 01:27:48.922"></status>
</kw>
<msg timestamp="20201006 01:27:52.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:52.361" starttime="20201006 01:27:48.921"></status>
</kw>
<msg timestamp="20201006 01:27:52.361" level="INFO">${result} = 2020-10-06 01:27:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:27:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 ...</msg>
<status status="PASS" endtime="20201006 01:27:52.361" starttime="20201006 01:27:48.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:52.364" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:54.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:54.183" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-06 01:27 o3fs://bucket1.volume1.om/ozone-01391
dr...</msg>
<status status="PASS" endtime="20201006 01:27:54.184" starttime="20201006 01:27:52.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:54.185" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-06 01:27 o3fs://bucket1.volume1.om/ozone-01391
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:27:54.185" starttime="20201006 01:27:54.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:54.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:54.185" starttime="20201006 01:27:54.185"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:54.186" starttime="20201006 01:27:52.362"></status>
</kw>
<msg timestamp="20201006 01:27:54.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:54.186" starttime="20201006 01:27:52.362"></status>
</kw>
<msg timestamp="20201006 01:27:54.186" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-06 01:27 o3fs://bucket1.volume1.om/ozone-01391
dr...</msg>
<status status="PASS" endtime="20201006 01:27:54.186" starttime="20201006 01:27:52.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:27:54.187" starttime="20201006 01:27:54.186"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 01:27:54.187" critical="yes" starttime="20201006 01:27:48.914"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 01:27:54.188" starttime="20201006 01:27:48.859"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:29:35.029" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:29:35.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:29:35.033" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:29:35.033" starttime="20201006 01:29:35.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:29:35.034" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:29:35.034" starttime="20201006 01:29:35.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:29:35.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:29:35.035" starttime="20201006 01:29:35.034"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:35.035" starttime="20201006 01:29:35.023"></status>
</kw>
<msg timestamp="20201006 01:29:35.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:29:35.035" starttime="20201006 01:29:35.023"></status>
</kw>
<msg timestamp="20201006 01:29:35.035" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:29:35.035" starttime="20201006 01:29:35.023"></status>
</kw>
<msg timestamp="20201006 01:29:35.035" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:29:35.035" starttime="20201006 01:29:35.022"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:29:35.039" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:29:35.039" starttime="20201006 01:29:35.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:29:35.040" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:29:35.040" starttime="20201006 01:29:35.039"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:35.040" starttime="20201006 01:29:35.038"></status>
</kw>
<msg timestamp="20201006 01:29:35.040" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:29:35.040" starttime="20201006 01:29:35.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:29:35.041" starttime="20201006 01:29:35.040"></status>
</kw>
<msg timestamp="20201006 01:29:35.041" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:29:35.041" starttime="20201006 01:29:35.040"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:35.041" starttime="20201006 01:29:35.037"></status>
</kw>
<msg timestamp="20201006 01:29:35.041" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:29:35.041" starttime="20201006 01:29:35.036"></status>
</kw>
<msg timestamp="20201006 01:29:35.042" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:29:35.042" starttime="20201006 01:29:35.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:29:35.046" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:30:11.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:30:11.470" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:29:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:29:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201006 01:30:11.471" starttime="20201006 01:29:35.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:30:11.472" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:29:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:29:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 01:29:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-06 01:29:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:29:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4EC5860C6EED-&gt;cff300ae-941b-4a66-864a-442a725d7e6d
2020-10-06 01:29:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 01:29:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:29:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:29:40 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-06 01:29:41 INFO  JobSubmitter:198 - number of splits:3
2020-10-06 01:29:41 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601947601195_0003
2020-10-06 01:29:41 INFO  YarnClientImpl:273 - Submitted application application_1601947601195_0003
2020-10-06 01:29:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601947601195_0003/
2020-10-06 01:29:41 INFO  Job:1339 - Running job: job_1601947601195_0003
2020-10-06 01:29:49 INFO  Job:1360 - Job job_1601947601195_0003 running in uber mode : false
2020-10-06 01:29:49 INFO  Job:1367 -  map 0% reduce 0%
2020-10-06 01:29:55 INFO  Job:1367 -  map 33% reduce 0%
2020-10-06 01:30:00 INFO  Job:1367 -  map 67% reduce 0%
2020-10-06 01:30:05 INFO  Job:1367 -  map 100% reduce 0%
2020-10-06 01:30:10 INFO  Job:1367 -  map 100% reduce 100%
2020-10-06 01:30:10 INFO  Job:1378 - Job job_1601947601195_0003 completed successfully
2020-10-06 01:30:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614105
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39588
		Total time spent by all reduces in occupied slots (ms)=15472
		Total time spent by all map tasks (ms)=9897
		Total time spent by all reduce tasks (ms)=3868
		Total vcore-milliseconds taken by all map tasks=9897
		Total vcore-milliseconds taken by all reduce tasks=3868
		Total megabyte-milliseconds taken by all map tasks=40538112
		Total megabyte-milliseconds taken by all reduce tasks=15843328
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=574
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1132879872
		Virtual memory (bytes) snapshot=16053784576
		Total committed heap usage (bytes)=1011875840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.882 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201006 01:30:11.472" starttime="20201006 01:30:11.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:30:11.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:30:11.473" starttime="20201006 01:30:11.473"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.473" starttime="20201006 01:29:35.042"></status>
</kw>
<msg timestamp="20201006 01:30:11.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:30:11.474" starttime="20201006 01:29:35.042"></status>
</kw>
<msg timestamp="20201006 01:30:11.475" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:29:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:29:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201006 01:30:11.475" starttime="20201006 01:29:35.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:30:11.475" starttime="20201006 01:30:11.475"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:30:11.476" critical="yes" starttime="20201006 01:29:35.022"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:30:11.480" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:30:11.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:30:11.485" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:30:11.485" starttime="20201006 01:30:11.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:30:11.486" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:30:11.487" starttime="20201006 01:30:11.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:30:11.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:30:11.487" starttime="20201006 01:30:11.487"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.488" starttime="20201006 01:30:11.478"></status>
</kw>
<msg timestamp="20201006 01:30:11.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:30:11.488" starttime="20201006 01:30:11.478"></status>
</kw>
<msg timestamp="20201006 01:30:11.488" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:30:11.488" starttime="20201006 01:30:11.477"></status>
</kw>
<msg timestamp="20201006 01:30:11.488" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:30:11.488" starttime="20201006 01:30:11.477"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:30:11.489" level="INFO">${random} = 89</msg>
<status status="PASS" endtime="20201006 01:30:11.489" starttime="20201006 01:30:11.488"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:30:11.493" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:30:11.493" starttime="20201006 01:30:11.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:30:11.493" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:30:11.493" starttime="20201006 01:30:11.493"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.493" starttime="20201006 01:30:11.492"></status>
</kw>
<msg timestamp="20201006 01:30:11.493" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:30:11.494" starttime="20201006 01:30:11.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:30:11.495" starttime="20201006 01:30:11.494"></status>
</kw>
<msg timestamp="20201006 01:30:11.495" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:30:11.495" starttime="20201006 01:30:11.494"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.495" starttime="20201006 01:30:11.490"></status>
</kw>
<msg timestamp="20201006 01:30:11.495" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:30:11.495" starttime="20201006 01:30:11.490"></status>
</kw>
<msg timestamp="20201006 01:30:11.495" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:30:11.495" starttime="20201006 01:30:11.489"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:30:11.498" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:30:11.498" starttime="20201006 01:30:11.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:30:11.499" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:30:11.499" starttime="20201006 01:30:11.499"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.499" starttime="20201006 01:30:11.498"></status>
</kw>
<msg timestamp="20201006 01:30:11.499" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:30:11.499" starttime="20201006 01:30:11.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:30:11.501" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201006 01:30:11.501" starttime="20201006 01:30:11.501"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:30:11.502" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201006 01:30:11.502" starttime="20201006 01:30:11.501"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.502" starttime="20201006 01:30:11.500"></status>
</kw>
<msg timestamp="20201006 01:30:11.502" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201006 01:30:11.502" starttime="20201006 01:30:11.500"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.502" starttime="20201006 01:30:11.497"></status>
</kw>
<msg timestamp="20201006 01:30:11.503" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 01:30:11.503" starttime="20201006 01:30:11.496"></status>
</kw>
<msg timestamp="20201006 01:30:11.503" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 01:30:11.503" starttime="20201006 01:30:11.495"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:30:11.506" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:30:11.506" starttime="20201006 01:30:11.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:30:11.507" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:30:11.507" starttime="20201006 01:30:11.506"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.507" starttime="20201006 01:30:11.505"></status>
</kw>
<msg timestamp="20201006 01:30:11.507" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:30:11.507" starttime="20201006 01:30:11.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:30:11.509" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201006 01:30:11.509" starttime="20201006 01:30:11.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:30:11.509" level="INFO">${result} = /wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 01:30:11.509" starttime="20201006 01:30:11.509"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.509" starttime="20201006 01:30:11.508"></status>
</kw>
<msg timestamp="20201006 01:30:11.509" level="INFO">${path_with_leading} = /wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 01:30:11.510" starttime="20201006 01:30:11.507"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:11.510" starttime="20201006 01:30:11.504"></status>
</kw>
<msg timestamp="20201006 01:30:11.510" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 01:30:11.510" starttime="20201006 01:30:11.504"></status>
</kw>
<msg timestamp="20201006 01:30:11.510" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-89.txt</msg>
<status status="PASS" endtime="20201006 01:30:11.510" starttime="20201006 01:30:11.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:30:11.515" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-89.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:30:49.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:30:49.518" level="INFO">${output} = 2020-10-06 01:30:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:30:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201006 01:30:49.518" starttime="20201006 01:30:11.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:30:49.519" level="INFO">2020-10-06 01:30:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:30:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:30:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:30:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 01:30:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-06 01:30:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:30:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D2C4018B9355-&gt;cff300ae-941b-4a66-864a-442a725d7e6d
2020-10-06 01:30:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:30:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-06 01:30:14 INFO  JobSubmitter:198 - number of splits:3
2020-10-06 01:30:17 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601947601195_0004
2020-10-06 01:30:17 INFO  YarnClientImpl:273 - Submitted application application_1601947601195_0004
2020-10-06 01:30:17 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601947601195_0004/
2020-10-06 01:30:17 INFO  Job:1339 - Running job: job_1601947601195_0004
2020-10-06 01:30:24 INFO  Job:1360 - Job job_1601947601195_0004 running in uber mode : false
2020-10-06 01:30:24 INFO  Job:1367 -  map 0% reduce 0%
2020-10-06 01:30:31 INFO  Job:1367 -  map 33% reduce 0%
2020-10-06 01:30:35 INFO  Job:1367 -  map 67% reduce 0%
2020-10-06 01:30:40 INFO  Job:1367 -  map 100% reduce 0%
2020-10-06 01:30:46 INFO  Job:1367 -  map 100% reduce 100%
2020-10-06 01:30:49 INFO  Job:1378 - Job job_1601947601195_0004 completed successfully
2020-10-06 01:30:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39956
		Total time spent by all reduces in occupied slots (ms)=14660
		Total time spent by all map tasks (ms)=9989
		Total time spent by all reduce tasks (ms)=3665
		Total vcore-milliseconds taken by all map tasks=9989
		Total vcore-milliseconds taken by all reduce tasks=3665
		Total megabyte-milliseconds taken by all map tasks=40914944
		Total megabyte-milliseconds taken by all reduce tasks=15011840
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=569
		CPU time spent (ms)=7280
		Physical memory (bytes) snapshot=1124216832
		Virtual memory (bytes) snapshot=16053719040
		Total committed heap usage (bytes)=1102577664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201006 01:30:49.519" starttime="20201006 01:30:49.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:30:49.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:30:49.520" starttime="20201006 01:30:49.519"></status>
</kw>
<status status="PASS" endtime="20201006 01:30:49.520" starttime="20201006 01:30:11.511"></status>
</kw>
<msg timestamp="20201006 01:30:49.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:30:49.520" starttime="20201006 01:30:11.511"></status>
</kw>
<msg timestamp="20201006 01:30:49.521" level="INFO">${output} = 2020-10-06 01:30:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:30:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201006 01:30:49.521" starttime="20201006 01:30:11.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 01:30:49.521" starttime="20201006 01:30:49.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:30:49.522" starttime="20201006 01:30:49.522"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:30:49.522" critical="yes" starttime="20201006 01:30:11.476"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 01:30:49.523" starttime="20201006 01:29:34.967"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:58.935" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:27:58.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:27:58.940" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:27:58.940" starttime="20201006 01:27:58.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:27:58.941" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:27:58.941" starttime="20201006 01:27:58.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:27:58.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:27:58.942" starttime="20201006 01:27:58.941"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:58.942" starttime="20201006 01:27:58.929"></status>
</kw>
<msg timestamp="20201006 01:27:58.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:27:58.942" starttime="20201006 01:27:58.929"></status>
</kw>
<msg timestamp="20201006 01:27:58.942" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:27:58.942" starttime="20201006 01:27:58.928"></status>
</kw>
<msg timestamp="20201006 01:27:58.942" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:27:58.942" starttime="20201006 01:27:58.928"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:27:58.946" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:27:58.946" starttime="20201006 01:27:58.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:27:58.947" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:27:58.947" starttime="20201006 01:27:58.946"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:58.947" starttime="20201006 01:27:58.945"></status>
</kw>
<msg timestamp="20201006 01:27:58.947" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:27:58.947" starttime="20201006 01:27:58.944"></status>
</kw>
<status status="PASS" endtime="20201006 01:27:58.947" starttime="20201006 01:27:58.944"></status>
</kw>
<msg timestamp="20201006 01:27:58.947" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:27:58.947" starttime="20201006 01:27:58.943"></status>
</kw>
<msg timestamp="20201006 01:27:58.948" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:27:58.948" starttime="20201006 01:27:58.943"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:27:58.951" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:28:41.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:28:41.352" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:28:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:28:01 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201006 01:28:41.352" starttime="20201006 01:27:58.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:28:41.353" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:28:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:28:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 01:28:01 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-06 01:28:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:28:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D017587F9B9B-&gt;cff300ae-941b-4a66-864a-442a725d7e6d
2020-10-06 01:28:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 01:28:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:28:07 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-06 01:28:07 INFO  JobSubmitter:198 - number of splits:3
2020-10-06 01:28:07 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601947601195_0001
2020-10-06 01:28:08 INFO  YarnClientImpl:273 - Submitted application application_1601947601195_0001
2020-10-06 01:28:08 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601947601195_0001/
2020-10-06 01:28:08 INFO  Job:1339 - Running job: job_1601947601195_0001
2020-10-06 01:28:18 INFO  Job:1360 - Job job_1601947601195_0001 running in uber mode : false
2020-10-06 01:28:18 INFO  Job:1367 -  map 0% reduce 0%
2020-10-06 01:28:25 INFO  Job:1367 -  map 33% reduce 0%
2020-10-06 01:28:29 INFO  Job:1367 -  map 67% reduce 0%
2020-10-06 01:28:34 INFO  Job:1367 -  map 100% reduce 0%
2020-10-06 01:28:39 INFO  Job:1367 -  map 100% reduce 100%
2020-10-06 01:28:40 INFO  Job:1378 - Job job_1601947601195_0001 completed successfully
2020-10-06 01:28:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38772
		Total time spent by all reduces in occupied slots (ms)=15456
		Total time spent by all map tasks (ms)=9693
		Total time spent by all reduce tasks (ms)=3864
		Total vcore-milliseconds taken by all map tasks=9693
		Total vcore-milliseconds taken by all reduce tasks=3864
		Total megabyte-milliseconds taken by all map tasks=39702528
		Total megabyte-milliseconds taken by all reduce tasks=15826944
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=546
		CPU time spent (ms)=5930
		Physical memory (bytes) snapshot=1084522496
		Virtual memory (bytes) snapshot=16031797248
		Total committed heap usage (bytes)=961019904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.178 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201006 01:28:41.353" starttime="20201006 01:28:41.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:28:41.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:28:41.354" starttime="20201006 01:28:41.353"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.354" starttime="20201006 01:27:58.949"></status>
</kw>
<msg timestamp="20201006 01:28:41.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:28:41.354" starttime="20201006 01:27:58.948"></status>
</kw>
<msg timestamp="20201006 01:28:41.355" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:28:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:28:01 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201006 01:28:41.355" starttime="20201006 01:27:58.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:28:41.356" starttime="20201006 01:28:41.355"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:28:41.356" critical="yes" starttime="20201006 01:27:58.927"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:28:41.361" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:28:41.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:28:41.366" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:28:41.366" starttime="20201006 01:28:41.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:28:41.367" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:28:41.367" starttime="20201006 01:28:41.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:28:41.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:28:41.368" starttime="20201006 01:28:41.367"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.368" starttime="20201006 01:28:41.358"></status>
</kw>
<msg timestamp="20201006 01:28:41.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:28:41.368" starttime="20201006 01:28:41.358"></status>
</kw>
<msg timestamp="20201006 01:28:41.368" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:28:41.368" starttime="20201006 01:28:41.358"></status>
</kw>
<msg timestamp="20201006 01:28:41.369" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201006 01:28:41.369" starttime="20201006 01:28:41.357"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:28:41.369" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201006 01:28:41.369" starttime="20201006 01:28:41.369"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:28:41.373" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:28:41.373" starttime="20201006 01:28:41.372"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:28:41.373" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:28:41.373" starttime="20201006 01:28:41.373"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.374" starttime="20201006 01:28:41.372"></status>
</kw>
<msg timestamp="20201006 01:28:41.374" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:28:41.374" starttime="20201006 01:28:41.371"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.374" starttime="20201006 01:28:41.371"></status>
</kw>
<msg timestamp="20201006 01:28:41.374" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:28:41.374" starttime="20201006 01:28:41.370"></status>
</kw>
<msg timestamp="20201006 01:28:41.374" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:28:41.374" starttime="20201006 01:28:41.369"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:28:41.377" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:28:41.377" starttime="20201006 01:28:41.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:28:41.378" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:28:41.378" starttime="20201006 01:28:41.378"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.378" starttime="20201006 01:28:41.377"></status>
</kw>
<msg timestamp="20201006 01:28:41.378" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:28:41.378" starttime="20201006 01:28:41.376"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.379" starttime="20201006 01:28:41.376"></status>
</kw>
<msg timestamp="20201006 01:28:41.379" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 01:28:41.379" starttime="20201006 01:28:41.375"></status>
</kw>
<msg timestamp="20201006 01:28:41.379" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 01:28:41.379" starttime="20201006 01:28:41.374"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:28:41.382" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:28:41.382" starttime="20201006 01:28:41.382"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:28:41.383" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:28:41.383" starttime="20201006 01:28:41.382"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.383" starttime="20201006 01:28:41.381"></status>
</kw>
<msg timestamp="20201006 01:28:41.383" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:28:41.383" starttime="20201006 01:28:41.381"></status>
</kw>
<status status="PASS" endtime="20201006 01:28:41.383" starttime="20201006 01:28:41.380"></status>
</kw>
<msg timestamp="20201006 01:28:41.383" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201006 01:28:41.384" starttime="20201006 01:28:41.380"></status>
</kw>
<msg timestamp="20201006 01:28:41.384" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201006 01:28:41.384" starttime="20201006 01:28:41.379"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:28:41.387" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:29:20.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:29:20.613" level="INFO">${output} = 2020-10-06 01:28:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:28:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201006 01:29:20.614" starttime="20201006 01:28:41.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:29:20.615" level="INFO">2020-10-06 01:28:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:28:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:28:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:28:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-06 01:28:43 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-06 01:28:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:28:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B69BFEED4A54-&gt;cff300ae-941b-4a66-864a-442a725d7e6d
2020-10-06 01:28:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:28:44 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-06 01:28:47 INFO  JobSubmitter:198 - number of splits:3
2020-10-06 01:28:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601947601195_0002
2020-10-06 01:28:47 INFO  YarnClientImpl:273 - Submitted application application_1601947601195_0002
2020-10-06 01:28:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601947601195_0002/
2020-10-06 01:28:47 INFO  Job:1339 - Running job: job_1601947601195_0002
2020-10-06 01:28:54 INFO  Job:1360 - Job job_1601947601195_0002 running in uber mode : false
2020-10-06 01:28:54 INFO  Job:1367 -  map 0% reduce 0%
2020-10-06 01:29:02 INFO  Job:1367 -  map 33% reduce 0%
2020-10-06 01:29:07 INFO  Job:1367 -  map 67% reduce 0%
2020-10-06 01:29:13 INFO  Job:1367 -  map 100% reduce 0%
2020-10-06 01:29:19 INFO  Job:1367 -  map 100% reduce 100%
2020-10-06 01:29:20 INFO  Job:1378 - Job job_1601947601195_0002 completed successfully
2020-10-06 01:29:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676949
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41052
		Total time spent by all reduces in occupied slots (ms)=24976
		Total time spent by all map tasks (ms)=10263
		Total time spent by all reduce tasks (ms)=6244
		Total vcore-milliseconds taken by all map tasks=10263
		Total vcore-milliseconds taken by all reduce tasks=6244
		Total megabyte-milliseconds taken by all map tasks=42037248
		Total megabyte-milliseconds taken by all reduce tasks=25575424
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=7150
		Physical memory (bytes) snapshot=1113636864
		Virtual memory (bytes) snapshot=16046563328
		Total committed heap usage (bytes)=1008730112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201006 01:29:20.615" starttime="20201006 01:29:20.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:29:20.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:29:20.616" starttime="20201006 01:29:20.615"></status>
</kw>
<status status="PASS" endtime="20201006 01:29:20.616" starttime="20201006 01:28:41.385"></status>
</kw>
<msg timestamp="20201006 01:29:20.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:29:20.616" starttime="20201006 01:28:41.384"></status>
</kw>
<msg timestamp="20201006 01:29:20.617" level="INFO">${output} = 2020-10-06 01:28:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-06 01:28:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201006 01:29:20.617" starttime="20201006 01:28:41.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 01:29:20.617" starttime="20201006 01:29:20.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:29:20.618" starttime="20201006 01:29:20.617"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:29:20.618" critical="yes" starttime="20201006 01:28:41.356"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 01:29:20.619" starttime="20201006 01:27:58.869"></status>
</suite>
<status status="PASS" elapsedtime="196772" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:31:55.584" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:31:57.750" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 01:31:57.750" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:31:57.751" starttime="20201006 01:31:55.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:31:57.752" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:31:57.752" starttime="20201006 01:31:57.751"></status>
</kw>
<msg timestamp="20201006 01:31:57.752" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:31:57.752" starttime="20201006 01:31:55.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:31:57.758" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:31:59.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:31:59.761" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:31:59.761" starttime="20201006 01:31:57.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:31:59.762" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:31:59.762" starttime="20201006 01:31:59.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:31:59.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:31:59.763" starttime="20201006 01:31:59.762"></status>
</kw>
<status status="PASS" endtime="20201006 01:31:59.763" starttime="20201006 01:31:57.754"></status>
</kw>
<msg timestamp="20201006 01:31:59.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:31:59.763" starttime="20201006 01:31:57.754"></status>
</kw>
<msg timestamp="20201006 01:31:59.763" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201006 01:31:59.763" starttime="20201006 01:31:57.753"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201006 01:31:59.764" starttime="20201006 01:31:59.764"></status>
</kw>
<status status="PASS" endtime="20201006 01:31:59.764" starttime="20201006 01:31:57.753"></status>
</kw>
<status status="PASS" endtime="20201006 01:31:59.764" starttime="20201006 01:31:57.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:31:59.769" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:01.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:01.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:32:01.849" starttime="20201006 01:31:59.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:01.850" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:32:01.850" starttime="20201006 01:32:01.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:01.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:01.851" starttime="20201006 01:32:01.850"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:01.851" starttime="20201006 01:31:59.766"></status>
</kw>
<msg timestamp="20201006 01:32:01.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:01.852" starttime="20201006 01:31:59.766"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:01.852" starttime="20201006 01:31:59.765"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:01.852" starttime="20201006 01:31:59.765"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:01.852" starttime="20201006 01:31:59.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201006 01:32:01.853" starttime="20201006 01:32:01.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:01.858" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:04.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:04.042" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:32:01.814Z",
  "modificat...</msg>
<status status="PASS" endtime="20201006 01:32:04.042" starttime="20201006 01:32:01.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:04.043" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:32:01.814Z",
  "modificationTime" : "2020-10-06T01:32:01.814Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201006 01:32:04.043" starttime="20201006 01:32:04.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:04.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:04.044" starttime="20201006 01:32:04.043"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:04.044" starttime="20201006 01:32:01.854"></status>
</kw>
<msg timestamp="20201006 01:32:04.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:04.044" starttime="20201006 01:32:01.854"></status>
</kw>
<msg timestamp="20201006 01:32:04.045" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:32:01.814Z",
  "modificat...</msg>
<status status="PASS" endtime="20201006 01:32:04.045" starttime="20201006 01:32:01.853"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201006 01:32:04.045" starttime="20201006 01:32:04.045"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:32:04.057" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:32:04.057" starttime="20201006 01:32:04.049"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:32:04.058" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:32:04.058" starttime="20201006 01:32:04.057"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:04.058" starttime="20201006 01:32:04.049"></status>
</kw>
<msg timestamp="20201006 01:32:04.058" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:32:04.058" starttime="20201006 01:32:04.048"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:04.058" starttime="20201006 01:32:04.047"></status>
</kw>
<msg timestamp="20201006 01:32:04.058" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 01:32:04.059" starttime="20201006 01:32:04.046"></status>
</kw>
<msg timestamp="20201006 01:32:04.059" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 01:32:04.059" starttime="20201006 01:32:04.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:04.062" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:06.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:06.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:32:06.319" starttime="20201006 01:32:04.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:06.320" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:32:06.321" starttime="20201006 01:32:06.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:06.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:06.321" starttime="20201006 01:32:06.321"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:06.322" starttime="20201006 01:32:04.060"></status>
</kw>
<msg timestamp="20201006 01:32:06.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:06.322" starttime="20201006 01:32:04.060"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:06.322" starttime="20201006 01:32:04.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:06.326" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:11.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:11.783" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:32:11.783" starttime="20201006 01:32:06.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:11.784" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:32:11.785" starttime="20201006 01:32:11.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:11.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:11.785" starttime="20201006 01:32:11.785"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:11.786" starttime="20201006 01:32:06.324"></status>
</kw>
<msg timestamp="20201006 01:32:11.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:11.786" starttime="20201006 01:32:06.323"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:11.786" starttime="20201006 01:32:06.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:11.790" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:15.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:15.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:32:15.907" starttime="20201006 01:32:11.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:15.908" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:32:15.908" starttime="20201006 01:32:15.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:15.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:15.909" starttime="20201006 01:32:15.908"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:15.909" starttime="20201006 01:32:11.787"></status>
</kw>
<msg timestamp="20201006 01:32:15.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:15.910" starttime="20201006 01:32:11.787"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:15.910" starttime="20201006 01:32:11.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:15.915" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:20.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:20.083" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:32:20.084" starttime="20201006 01:32:15.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:20.085" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:32:20.085" starttime="20201006 01:32:20.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:20.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:20.085" starttime="20201006 01:32:20.085"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:20.086" starttime="20201006 01:32:15.911"></status>
</kw>
<msg timestamp="20201006 01:32:20.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:20.086" starttime="20201006 01:32:15.911"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:20.086" starttime="20201006 01:32:15.910"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 01:32:20.086" critical="yes" starttime="20201006 01:31:55.578"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:32:20.093" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:32:20.093" starttime="20201006 01:32:20.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:32:20.094" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:32:20.094" starttime="20201006 01:32:20.093"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:20.094" starttime="20201006 01:32:20.092"></status>
</kw>
<msg timestamp="20201006 01:32:20.094" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:32:20.094" starttime="20201006 01:32:20.091"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:20.094" starttime="20201006 01:32:20.090"></status>
</kw>
<msg timestamp="20201006 01:32:20.095" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:32:20.095" starttime="20201006 01:32:20.089"></status>
</kw>
<msg timestamp="20201006 01:32:20.095" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:32:20.095" starttime="20201006 01:32:20.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:20.098" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:22.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:22.206" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:32:22.206" starttime="20201006 01:32:20.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:22.208" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:32:22.208" starttime="20201006 01:32:22.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:22.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:22.208" starttime="20201006 01:32:22.208"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:22.209" starttime="20201006 01:32:20.096"></status>
</kw>
<msg timestamp="20201006 01:32:22.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:22.209" starttime="20201006 01:32:20.096"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:22.209" starttime="20201006 01:32:20.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:22.214" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:24.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:24.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:32:24.243" starttime="20201006 01:32:22.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:24.244" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:32:24.244" starttime="20201006 01:32:24.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:24.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:24.245" starttime="20201006 01:32:24.245"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:24.246" starttime="20201006 01:32:22.210"></status>
</kw>
<msg timestamp="20201006 01:32:24.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:24.246" starttime="20201006 01:32:22.210"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:24.246" starttime="20201006 01:32:22.209"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 01:32:24.246" critical="yes" starttime="20201006 01:32:20.087"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201006 01:32:24.249" starttime="20201006 01:31:55.510"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:34:01.690" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:34:01.690" starttime="20201006 01:34:01.690"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:34:01.691" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:34:01.691" starttime="20201006 01:34:01.691"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:01.692" starttime="20201006 01:34:01.690"></status>
</kw>
<msg timestamp="20201006 01:34:01.692" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:34:01.692" starttime="20201006 01:34:01.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:34:01.693" starttime="20201006 01:34:01.692"></status>
</kw>
<msg timestamp="20201006 01:34:01.693" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:34:01.693" starttime="20201006 01:34:01.692"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:01.693" starttime="20201006 01:34:01.689"></status>
</kw>
<msg timestamp="20201006 01:34:01.693" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:34:01.693" starttime="20201006 01:34:01.688"></status>
</kw>
<msg timestamp="20201006 01:34:01.693" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:34:01.694" starttime="20201006 01:34:01.686"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:34:01.694" level="INFO">${random} = 60298</msg>
<status status="PASS" endtime="20201006 01:34:01.694" starttime="20201006 01:34:01.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:34:01.701" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-60298 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:34:05.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:34:05.307" level="INFO">${output} = 2020-10-06 01:34:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:34:05.307" starttime="20201006 01:34:01.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:34:05.308" level="INFO">2020-10-06 01:34:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-06 01:34:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:34:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:34:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:34:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:34:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E5C3992B83E0-&gt;8ebb8c1a-8d76-42ca-9d4f-a1b6c2f5ac24
2020-10-06 01:34:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:34:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:34:05.308" starttime="20201006 01:34:05.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:34:05.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:34:05.309" starttime="20201006 01:34:05.308"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:05.309" starttime="20201006 01:34:01.695"></status>
</kw>
<msg timestamp="20201006 01:34:05.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:34:05.309" starttime="20201006 01:34:01.695"></status>
</kw>
<msg timestamp="20201006 01:34:05.309" level="INFO">${result} = 2020-10-06 01:34:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:34:05.310" starttime="20201006 01:34:01.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:34:05.314" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:34:06.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:34:06.980" level="INFO">${output} = 2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:34:06.980" starttime="20201006 01:34:05.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:34:06.981" level="INFO">2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-06 01:32 ofs://om/volume1/bucket1/ozone-43510
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-06 01:34 ofs://om/volume1/bucket1/ozone-60298
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:32 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:33 ofs://om/volume1/bucket1/wordcount-55.txt
2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:34:06.981" starttime="20201006 01:34:06.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:34:06.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:34:06.981" starttime="20201006 01:34:06.981"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:06.982" starttime="20201006 01:34:05.310"></status>
</kw>
<msg timestamp="20201006 01:34:06.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:34:06.982" starttime="20201006 01:34:05.310"></status>
</kw>
<msg timestamp="20201006 01:34:06.982" level="INFO">${result} = 2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:34:06.982" starttime="20201006 01:34:05.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:34:06.983" starttime="20201006 01:34:06.982"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 01:34:06.983" critical="yes" starttime="20201006 01:34:01.686"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 01:34:06.984" starttime="20201006 01:34:01.628"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:32:28.905" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:32:28.906" starttime="20201006 01:32:28.905"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:32:28.906" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:32:28.906" starttime="20201006 01:32:28.906"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:28.906" starttime="20201006 01:32:28.905"></status>
</kw>
<msg timestamp="20201006 01:32:28.906" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:32:28.906" starttime="20201006 01:32:28.904"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:28.907" starttime="20201006 01:32:28.904"></status>
</kw>
<msg timestamp="20201006 01:32:28.907" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:32:28.907" starttime="20201006 01:32:28.903"></status>
</kw>
<msg timestamp="20201006 01:32:28.907" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:32:28.907" starttime="20201006 01:32:28.902"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:32:28.908" level="INFO">${random} = 43510</msg>
<status status="PASS" endtime="20201006 01:32:28.908" starttime="20201006 01:32:28.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:28.914" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-43510 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:32.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:32.557" level="INFO">${output} = 2020-10-06 01:32:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:32:32.558" starttime="20201006 01:32:28.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:32.559" level="INFO">2020-10-06 01:32:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:30 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-06 01:32:30 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:32:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:32:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:32:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:32:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1EAE49170012-&gt;8ebb8c1a-8d76-42ca-9d4f-a1b6c2f5ac24
2020-10-06 01:32:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:32:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:32:32.559" starttime="20201006 01:32:32.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:32.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:32.559" starttime="20201006 01:32:32.559"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:32.560" starttime="20201006 01:32:28.908"></status>
</kw>
<msg timestamp="20201006 01:32:32.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:32.560" starttime="20201006 01:32:28.908"></status>
</kw>
<msg timestamp="20201006 01:32:32.560" level="INFO">${result} = 2020-10-06 01:32:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:32:32.560" starttime="20201006 01:32:28.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:32.563" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:34.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:34.438" level="INFO">${output} = 2020-10-06 01:32:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:32:34.438" starttime="20201006 01:32:32.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:34.439" level="INFO">2020-10-06 01:32:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:34 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-06 01:32 o3fs://bucket1.volume1.om/ozone-43510
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:32 o3fs://bucket1.volume1.om/user
2020-10-06 01:32:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:32:34.439" starttime="20201006 01:32:34.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:34.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:34.440" starttime="20201006 01:32:34.440"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:34.440" starttime="20201006 01:32:32.561"></status>
</kw>
<msg timestamp="20201006 01:32:34.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:34.441" starttime="20201006 01:32:32.561"></status>
</kw>
<msg timestamp="20201006 01:32:34.441" level="INFO">${result} = 2020-10-06 01:32:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:32:34.441" starttime="20201006 01:32:32.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:32:34.442" starttime="20201006 01:32:34.441"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 01:32:34.442" critical="yes" starttime="20201006 01:32:28.901"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 01:32:34.443" starttime="20201006 01:32:28.844"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:34:11.600" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:34:11.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:34:11.606" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:11.606" starttime="20201006 01:34:11.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:34:11.607" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:11.607" starttime="20201006 01:34:11.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:34:11.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:34:11.608" starttime="20201006 01:34:11.607"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:11.608" starttime="20201006 01:34:11.594"></status>
</kw>
<msg timestamp="20201006 01:34:11.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:34:11.608" starttime="20201006 01:34:11.594"></status>
</kw>
<msg timestamp="20201006 01:34:11.608" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:11.608" starttime="20201006 01:34:11.594"></status>
</kw>
<msg timestamp="20201006 01:34:11.609" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:11.609" starttime="20201006 01:34:11.593"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:34:11.612" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:34:11.612" starttime="20201006 01:34:11.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:34:11.613" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:34:11.613" starttime="20201006 01:34:11.612"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:11.613" starttime="20201006 01:34:11.611"></status>
</kw>
<msg timestamp="20201006 01:34:11.613" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:34:11.613" starttime="20201006 01:34:11.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:34:11.614" starttime="20201006 01:34:11.614"></status>
</kw>
<msg timestamp="20201006 01:34:11.614" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:34:11.614" starttime="20201006 01:34:11.613"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:11.615" starttime="20201006 01:34:11.610"></status>
</kw>
<msg timestamp="20201006 01:34:11.615" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:34:11.615" starttime="20201006 01:34:11.609"></status>
</kw>
<msg timestamp="20201006 01:34:11.615" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:34:11.615" starttime="20201006 01:34:11.609"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:34:11.619" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:34:51.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:34:51.688" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:34:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34...</msg>
<status status="PASS" endtime="20201006 01:34:51.688" starttime="20201006 01:34:11.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:34:51.689" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:34:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-06 01:34:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:34:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:34:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:34:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:34:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-66DB609767F2-&gt;8ebb8c1a-8d76-42ca-9d4f-a1b6c2f5ac24
2020-10-06 01:34:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 01:34:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-06 01:34:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:34:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:34:17 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:34:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601947891909_0003
2020-10-06 01:34:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:34:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:18 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:34:18 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-06 01:34:18 INFO  YarnClientImpl:324 - Submitted application application_1601947891909_0003
2020-10-06 01:34:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601947891909_0003/
2020-10-06 01:34:18 INFO  Job:1619 - Running job: job_1601947891909_0003
2020-10-06 01:34:25 INFO  Job:1640 - Job job_1601947891909_0003 running in uber mode : false
2020-10-06 01:34:25 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:34:32 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:34:37 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:34:44 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:34:48 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:34:51 INFO  Job:1658 - Job job_1601947891909_0003 completed successfully
2020-10-06 01:34:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020113
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40992
		Total time spent by all reduces in occupied slots (ms)=14444
		Total time spent by all map tasks (ms)=10248
		Total time spent by all reduce tasks (ms)=3611
		Total vcore-milliseconds taken by all map tasks=10248
		Total vcore-milliseconds taken by all reduce tasks=3611
		Total megabyte-milliseconds taken by all map tasks=41975808
		Total megabyte-milliseconds taken by all reduce tasks=14790656
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=661
		CPU time spent (ms)=6860
		Physical memory (bytes) snapshot=1243394048
		Virtual memory (bytes) snapshot=16074186752
		Total committed heap usage (bytes)=1348993024
		Peak Map Physical memory (bytes)=384700416
		Peak Map Virtual memory (bytes)=4023435264
		Peak Reduce Physical memory (bytes)=279511040
		Peak Reduce Virtual memory (bytes)=4023459840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.365 seconds
2020-10-06 01:34:51 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-06 01:34:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:34:51.689" starttime="20201006 01:34:51.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:34:51.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:34:51.690" starttime="20201006 01:34:51.689"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.690" starttime="20201006 01:34:11.616"></status>
</kw>
<msg timestamp="20201006 01:34:51.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:34:51.690" starttime="20201006 01:34:11.616"></status>
</kw>
<msg timestamp="20201006 01:34:51.691" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:34:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34...</msg>
<status status="PASS" endtime="20201006 01:34:51.691" starttime="20201006 01:34:11.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:34:51.692" starttime="20201006 01:34:51.691"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:34:51.692" critical="yes" starttime="20201006 01:34:11.593"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:34:51.696" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:34:51.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:34:51.702" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:51.702" starttime="20201006 01:34:51.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:34:51.703" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:51.703" starttime="20201006 01:34:51.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:34:51.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:34:51.704" starttime="20201006 01:34:51.703"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.704" starttime="20201006 01:34:51.694"></status>
</kw>
<msg timestamp="20201006 01:34:51.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:34:51.704" starttime="20201006 01:34:51.694"></status>
</kw>
<msg timestamp="20201006 01:34:51.704" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:51.704" starttime="20201006 01:34:51.693"></status>
</kw>
<msg timestamp="20201006 01:34:51.705" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:34:51.705" starttime="20201006 01:34:51.693"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:34:51.705" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20201006 01:34:51.705" starttime="20201006 01:34:51.705"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:34:51.709" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:34:51.709" starttime="20201006 01:34:51.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:34:51.710" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:34:51.710" starttime="20201006 01:34:51.709"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.710" starttime="20201006 01:34:51.708"></status>
</kw>
<msg timestamp="20201006 01:34:51.710" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:34:51.710" starttime="20201006 01:34:51.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:34:51.711" starttime="20201006 01:34:51.711"></status>
</kw>
<msg timestamp="20201006 01:34:51.711" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:34:51.711" starttime="20201006 01:34:51.710"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.711" starttime="20201006 01:34:51.707"></status>
</kw>
<msg timestamp="20201006 01:34:51.711" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:34:51.711" starttime="20201006 01:34:51.706"></status>
</kw>
<msg timestamp="20201006 01:34:51.712" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:34:51.712" starttime="20201006 01:34:51.705"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:34:51.715" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:34:51.715" starttime="20201006 01:34:51.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:34:51.716" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:34:51.716" starttime="20201006 01:34:51.715"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.716" starttime="20201006 01:34:51.714"></status>
</kw>
<msg timestamp="20201006 01:34:51.716" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:34:51.716" starttime="20201006 01:34:51.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:34:51.717" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201006 01:34:51.717" starttime="20201006 01:34:51.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:34:51.718" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201006 01:34:51.718" starttime="20201006 01:34:51.717"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.718" starttime="20201006 01:34:51.716"></status>
</kw>
<msg timestamp="20201006 01:34:51.718" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201006 01:34:51.718" starttime="20201006 01:34:51.716"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.718" starttime="20201006 01:34:51.713"></status>
</kw>
<msg timestamp="20201006 01:34:51.719" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 01:34:51.719" starttime="20201006 01:34:51.712"></status>
</kw>
<msg timestamp="20201006 01:34:51.719" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 01:34:51.719" starttime="20201006 01:34:51.712"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:34:51.722" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:34:51.722" starttime="20201006 01:34:51.721"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:34:51.723" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:34:51.723" starttime="20201006 01:34:51.722"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.723" starttime="20201006 01:34:51.721"></status>
</kw>
<msg timestamp="20201006 01:34:51.724" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:34:51.724" starttime="20201006 01:34:51.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:34:51.725" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201006 01:34:51.725" starttime="20201006 01:34:51.725"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:34:51.726" level="INFO">${result} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201006 01:34:51.726" starttime="20201006 01:34:51.725"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.726" starttime="20201006 01:34:51.724"></status>
</kw>
<msg timestamp="20201006 01:34:51.726" level="INFO">${path_with_leading} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201006 01:34:51.726" starttime="20201006 01:34:51.724"></status>
</kw>
<status status="PASS" endtime="20201006 01:34:51.726" starttime="20201006 01:34:51.720"></status>
</kw>
<msg timestamp="20201006 01:34:51.726" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201006 01:34:51.726" starttime="20201006 01:34:51.720"></status>
</kw>
<msg timestamp="20201006 01:34:51.726" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201006 01:34:51.727" starttime="20201006 01:34:51.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:34:51.731" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:35:29.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:35:29.679" level="INFO">${output} = 2020-10-06 01:34:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:35:29.679" starttime="20201006 01:34:51.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:35:29.680" level="INFO">2020-10-06 01:34:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-06 01:34:54 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:34:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:34:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:34:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:34:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2A07E9CA3018-&gt;8ebb8c1a-8d76-42ca-9d4f-a1b6c2f5ac24
2020-10-06 01:34:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:34:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:34:55 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:34:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601947891909_0004
2020-10-06 01:34:55 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:34:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:55 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:34:55 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-06 01:34:55 INFO  YarnClientImpl:324 - Submitted application application_1601947891909_0004
2020-10-06 01:34:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601947891909_0004/
2020-10-06 01:34:55 INFO  Job:1619 - Running job: job_1601947891909_0004
2020-10-06 01:35:04 INFO  Job:1640 - Job job_1601947891909_0004 running in uber mode : false
2020-10-06 01:35:04 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:35:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:35:17 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:35:21 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:35:26 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:35:29 INFO  Job:1658 - Job job_1601947891909_0004 completed successfully
2020-10-06 01:35:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:35:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082777
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40004
		Total time spent by all reduces in occupied slots (ms)=15004
		Total time spent by all map tasks (ms)=10001
		Total time spent by all reduce tasks (ms)=3751
		Total vcore-milliseconds taken by all map tasks=10001
		Total vcore-milliseconds taken by all reduce tasks=3751
		Total megabyte-milliseconds taken by all map tasks=40964096
		Total megabyte-milliseconds taken by all reduce tasks=15364096
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=7230
		Physical memory (bytes) snapshot=1323225088
		Virtual memory (bytes) snapshot=16058449920
		Total committed heap usage (bytes)=1297612800
		Peak Map Physical memory (bytes)=377401344
		Peak Map Virtual memory (bytes)=4018184192
		Peak Reduce Physical memory (bytes)=381640704
		Peak Reduce Virtual memory (bytes)=4034842624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-06 01:35:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:35:29.680" starttime="20201006 01:35:29.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:35:29.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:35:29.681" starttime="20201006 01:35:29.681"></status>
</kw>
<status status="PASS" endtime="20201006 01:35:29.681" starttime="20201006 01:34:51.727"></status>
</kw>
<msg timestamp="20201006 01:35:29.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:35:29.682" starttime="20201006 01:34:51.727"></status>
</kw>
<msg timestamp="20201006 01:35:29.682" level="INFO">${output} = 2020-10-06 01:34:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:34:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:35:29.682" starttime="20201006 01:34:51.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 01:35:29.683" starttime="20201006 01:35:29.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:35:29.683" starttime="20201006 01:35:29.683"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:35:29.684" critical="yes" starttime="20201006 01:34:51.692"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 01:35:29.685" starttime="20201006 01:34:11.532"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:39.084" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:32:39.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:32:39.089" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:32:39.089" starttime="20201006 01:32:39.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:32:39.089" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:32:39.090" starttime="20201006 01:32:39.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:32:39.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:32:39.090" starttime="20201006 01:32:39.090"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:39.090" starttime="20201006 01:32:39.079"></status>
</kw>
<msg timestamp="20201006 01:32:39.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:32:39.091" starttime="20201006 01:32:39.078"></status>
</kw>
<msg timestamp="20201006 01:32:39.091" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:32:39.091" starttime="20201006 01:32:39.078"></status>
</kw>
<msg timestamp="20201006 01:32:39.091" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:32:39.091" starttime="20201006 01:32:39.078"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:32:39.094" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:32:39.095" starttime="20201006 01:32:39.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:32:39.095" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:32:39.095" starttime="20201006 01:32:39.095"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:39.096" starttime="20201006 01:32:39.094"></status>
</kw>
<msg timestamp="20201006 01:32:39.096" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:32:39.096" starttime="20201006 01:32:39.093"></status>
</kw>
<status status="PASS" endtime="20201006 01:32:39.096" starttime="20201006 01:32:39.093"></status>
</kw>
<msg timestamp="20201006 01:32:39.096" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:32:39.096" starttime="20201006 01:32:39.092"></status>
</kw>
<msg timestamp="20201006 01:32:39.096" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:32:39.096" starttime="20201006 01:32:39.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:32:39.101" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:33:19.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:33:19.053" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32...</msg>
<status status="PASS" endtime="20201006 01:33:19.053" starttime="20201006 01:32:39.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:33:19.054" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:41 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-06 01:32:41 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:32:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:32:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:32:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:32:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-18CB9CEDD452-&gt;8ebb8c1a-8d76-42ca-9d4f-a1b6c2f5ac24
2020-10-06 01:32:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 01:32:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-06 01:32:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:32:43 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:32:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601947891909_0001
2020-10-06 01:32:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:32:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:43 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:32:43 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-06 01:32:44 INFO  YarnClientImpl:324 - Submitted application application_1601947891909_0001
2020-10-06 01:32:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601947891909_0001/
2020-10-06 01:32:44 INFO  Job:1619 - Running job: job_1601947891909_0001
2020-10-06 01:32:55 INFO  Job:1640 - Job job_1601947891909_0001 running in uber mode : false
2020-10-06 01:32:55 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:33:01 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:33:07 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:33:12 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:33:17 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:33:18 INFO  Job:1658 - Job job_1601947891909_0001 completed successfully
2020-10-06 01:33:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020333
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40728
		Total time spent by all reduces in occupied slots (ms)=15888
		Total time spent by all map tasks (ms)=10182
		Total time spent by all reduce tasks (ms)=3972
		Total vcore-milliseconds taken by all map tasks=10182
		Total vcore-milliseconds taken by all reduce tasks=3972
		Total megabyte-milliseconds taken by all map tasks=41705472
		Total megabyte-milliseconds taken by all reduce tasks=16269312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1207734272
		Virtual memory (bytes) snapshot=16043618304
		Total committed heap usage (bytes)=1092091904
		Peak Map Physical memory (bytes)=291188736
		Peak Map Virtual memory (bytes)=4014407680
		Peak Reduce Physical memory (bytes)=370311168
		Peak Reduce Virtual memory (bytes)=4029911040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.105 seconds
2020-10-06 01:33:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:18 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-06 01:33:18 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:33:19.054" starttime="20201006 01:33:19.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:33:19.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:33:19.055" starttime="20201006 01:33:19.054"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.055" starttime="20201006 01:32:39.097"></status>
</kw>
<msg timestamp="20201006 01:33:19.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:33:19.055" starttime="20201006 01:32:39.097"></status>
</kw>
<msg timestamp="20201006 01:33:19.056" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:32...</msg>
<status status="PASS" endtime="20201006 01:33:19.056" starttime="20201006 01:32:39.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:33:19.056" starttime="20201006 01:33:19.056"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:33:19.056" critical="yes" starttime="20201006 01:32:39.077"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:33:19.061" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:33:19.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:33:19.067" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:33:19.067" starttime="20201006 01:33:19.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:33:19.068" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:33:19.068" starttime="20201006 01:33:19.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:33:19.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:33:19.068" starttime="20201006 01:33:19.068"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.069" starttime="20201006 01:33:19.059"></status>
</kw>
<msg timestamp="20201006 01:33:19.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:33:19.069" starttime="20201006 01:33:19.058"></status>
</kw>
<msg timestamp="20201006 01:33:19.069" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:33:19.069" starttime="20201006 01:33:19.058"></status>
</kw>
<msg timestamp="20201006 01:33:19.069" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201006 01:33:19.069" starttime="20201006 01:33:19.058"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:33:19.070" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201006 01:33:19.070" starttime="20201006 01:33:19.069"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:33:19.073" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:33:19.073" starttime="20201006 01:33:19.073"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:33:19.074" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:33:19.074" starttime="20201006 01:33:19.074"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.074" starttime="20201006 01:33:19.073"></status>
</kw>
<msg timestamp="20201006 01:33:19.074" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:33:19.074" starttime="20201006 01:33:19.072"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.075" starttime="20201006 01:33:19.071"></status>
</kw>
<msg timestamp="20201006 01:33:19.075" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:33:19.075" starttime="20201006 01:33:19.071"></status>
</kw>
<msg timestamp="20201006 01:33:19.075" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:33:19.075" starttime="20201006 01:33:19.070"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:33:19.078" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:33:19.078" starttime="20201006 01:33:19.078"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:33:19.079" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:33:19.079" starttime="20201006 01:33:19.078"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.079" starttime="20201006 01:33:19.077"></status>
</kw>
<msg timestamp="20201006 01:33:19.079" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:33:19.079" starttime="20201006 01:33:19.077"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.079" starttime="20201006 01:33:19.076"></status>
</kw>
<msg timestamp="20201006 01:33:19.079" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 01:33:19.079" starttime="20201006 01:33:19.076"></status>
</kw>
<msg timestamp="20201006 01:33:19.080" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 01:33:19.080" starttime="20201006 01:33:19.075"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:33:19.083" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:33:19.083" starttime="20201006 01:33:19.082"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:33:19.083" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:33:19.083" starttime="20201006 01:33:19.083"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.083" starttime="20201006 01:33:19.082"></status>
</kw>
<msg timestamp="20201006 01:33:19.084" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:33:19.084" starttime="20201006 01:33:19.081"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:19.084" starttime="20201006 01:33:19.081"></status>
</kw>
<msg timestamp="20201006 01:33:19.084" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20201006 01:33:19.084" starttime="20201006 01:33:19.080"></status>
</kw>
<msg timestamp="20201006 01:33:19.084" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20201006 01:33:19.084" starttime="20201006 01:33:19.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:33:19.089" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:33:57.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:33:57.006" level="INFO">${output} = 2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:33:57.007" starttime="20201006 01:33:19.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:33:57.008" level="INFO">2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-06 01:33:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:33:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-06 01:33:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-06 01:33:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:33:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:33:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:33:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BCC8B0BCBBA3-&gt;8ebb8c1a-8d76-42ca-9d4f-a1b6c2f5ac24
2020-10-06 01:33:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:33:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:33:25 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:33:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601947891909_0002
2020-10-06 01:33:25 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:33:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:26 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:33:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-06 01:33:26 INFO  YarnClientImpl:324 - Submitted application application_1601947891909_0002
2020-10-06 01:33:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601947891909_0002/
2020-10-06 01:33:26 INFO  Job:1619 - Running job: job_1601947891909_0002
2020-10-06 01:33:34 INFO  Job:1640 - Job job_1601947891909_0002 running in uber mode : false
2020-10-06 01:33:34 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:33:40 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:33:46 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:33:51 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:33:56 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:33:56 INFO  Job:1658 - Job job_1601947891909_0002 completed successfully
2020-10-06 01:33:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082861
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40140
		Total time spent by all reduces in occupied slots (ms)=14792
		Total time spent by all map tasks (ms)=10035
		Total time spent by all reduce tasks (ms)=3698
		Total vcore-milliseconds taken by all map tasks=10035
		Total vcore-milliseconds taken by all reduce tasks=3698
		Total megabyte-milliseconds taken by all map tasks=41103360
		Total megabyte-milliseconds taken by all reduce tasks=15147008
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1235701760
		Virtual memory (bytes) snapshot=16055656448
		Total committed heap usage (bytes)=1255145472
		Peak Map Physical memory (bytes)=296878080
		Peak Map Virtual memory (bytes)=4014813184
		Peak Reduce Physical memory (bytes)=375263232
		Peak Reduce Virtual memory (bytes)=4032692224
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-06 01:33:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201006 01:33:57.008" starttime="20201006 01:33:57.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:33:57.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:33:57.009" starttime="20201006 01:33:57.008"></status>
</kw>
<status status="PASS" endtime="20201006 01:33:57.009" starttime="20201006 01:33:19.085"></status>
</kw>
<msg timestamp="20201006 01:33:57.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:33:57.009" starttime="20201006 01:33:19.085"></status>
</kw>
<msg timestamp="20201006 01:33:57.010" level="INFO">${output} = 2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-06 01:33:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201006 01:33:57.010" starttime="20201006 01:33:19.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 01:33:57.010" starttime="20201006 01:33:57.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:33:57.011" starttime="20201006 01:33:57.011"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:33:57.011" critical="yes" starttime="20201006 01:33:19.057"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 01:33:57.012" starttime="20201006 01:32:39.019"></status>
</suite>
<status status="PASS" elapsedtime="195840" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:36:43.274" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:36:47.326" level="INFO">${rc} = 255</msg>
<msg timestamp="20201006 01:36:47.326" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:36:47.326" starttime="20201006 01:36:43.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:36:47.327" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:36:47.327" starttime="20201006 01:36:47.326"></status>
</kw>
<msg timestamp="20201006 01:36:47.327" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201006 01:36:47.327" starttime="20201006 01:36:43.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:36:47.334" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:36:50.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:36:50.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:36:50.568" starttime="20201006 01:36:47.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:36:50.570" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:36:50.570" starttime="20201006 01:36:50.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:36:50.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:36:50.570" starttime="20201006 01:36:50.570"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:50.571" starttime="20201006 01:36:47.330"></status>
</kw>
<msg timestamp="20201006 01:36:50.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:36:50.571" starttime="20201006 01:36:47.329"></status>
</kw>
<msg timestamp="20201006 01:36:50.571" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201006 01:36:50.571" starttime="20201006 01:36:47.329"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201006 01:36:50.572" starttime="20201006 01:36:50.571"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:50.572" starttime="20201006 01:36:47.328"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:50.572" starttime="20201006 01:36:47.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:36:50.577" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:36:53.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:36:53.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:36:53.691" starttime="20201006 01:36:50.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:36:53.692" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:36:53.692" starttime="20201006 01:36:53.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:36:53.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:36:53.693" starttime="20201006 01:36:53.693"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:53.693" starttime="20201006 01:36:50.574"></status>
</kw>
<msg timestamp="20201006 01:36:53.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:36:53.694" starttime="20201006 01:36:50.574"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:53.694" starttime="20201006 01:36:50.573"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:53.694" starttime="20201006 01:36:50.573"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:53.694" starttime="20201006 01:36:50.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201006 01:36:53.695" starttime="20201006 01:36:53.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:36:53.698" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:36:56.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:36:56.900" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:36:53.453Z",
  "modificat...</msg>
<status status="PASS" endtime="20201006 01:36:56.900" starttime="20201006 01:36:53.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:36:56.902" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:36:53.453Z",
  "modificationTime" : "2020-10-06T01:36:53.453Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201006 01:36:56.902" starttime="20201006 01:36:56.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:36:56.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:36:56.903" starttime="20201006 01:36:56.902"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:56.903" starttime="20201006 01:36:53.696"></status>
</kw>
<msg timestamp="20201006 01:36:56.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:36:56.903" starttime="20201006 01:36:53.696"></status>
</kw>
<msg timestamp="20201006 01:36:56.904" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-06T01:36:53.453Z",
  "modificat...</msg>
<status status="PASS" endtime="20201006 01:36:56.904" starttime="20201006 01:36:53.695"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201006 01:36:56.904" starttime="20201006 01:36:56.904"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:36:56.913" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:36:56.913" starttime="20201006 01:36:56.912"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:36:56.914" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:36:56.914" starttime="20201006 01:36:56.913"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:56.914" starttime="20201006 01:36:56.912"></status>
</kw>
<msg timestamp="20201006 01:36:56.914" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:36:56.914" starttime="20201006 01:36:56.911"></status>
</kw>
<status status="PASS" endtime="20201006 01:36:56.914" starttime="20201006 01:36:56.906"></status>
</kw>
<msg timestamp="20201006 01:36:56.914" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 01:36:56.915" starttime="20201006 01:36:56.905"></status>
</kw>
<msg timestamp="20201006 01:36:56.915" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201006 01:36:56.915" starttime="20201006 01:36:56.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:36:56.918" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:00.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:00.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:37:00.345" starttime="20201006 01:36:56.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:00.346" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:37:00.346" starttime="20201006 01:37:00.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:00.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:00.347" starttime="20201006 01:37:00.346"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:00.347" starttime="20201006 01:36:56.916"></status>
</kw>
<msg timestamp="20201006 01:37:00.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:00.347" starttime="20201006 01:36:56.916"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:00.348" starttime="20201006 01:36:56.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:00.352" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:07.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:07.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:37:07.482" starttime="20201006 01:37:00.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:07.484" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:37:07.484" starttime="20201006 01:37:07.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:07.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:07.484" starttime="20201006 01:37:07.484"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:07.485" starttime="20201006 01:37:00.350"></status>
</kw>
<msg timestamp="20201006 01:37:07.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:07.485" starttime="20201006 01:37:00.349"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:07.485" starttime="20201006 01:37:00.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:07.489" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:13.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:13.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:37:13.259" starttime="20201006 01:37:07.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:13.261" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:37:13.261" starttime="20201006 01:37:13.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:13.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:13.261" starttime="20201006 01:37:13.261"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:13.262" starttime="20201006 01:37:07.486"></status>
</kw>
<msg timestamp="20201006 01:37:13.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:13.262" starttime="20201006 01:37:07.486"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:13.262" starttime="20201006 01:37:07.485"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:13.266" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:18.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:18.455" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:37:18.455" starttime="20201006 01:37:13.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:18.456" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:37:18.456" starttime="20201006 01:37:18.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:18.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:18.457" starttime="20201006 01:37:18.457"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:18.457" starttime="20201006 01:37:13.263"></status>
</kw>
<msg timestamp="20201006 01:37:18.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:18.458" starttime="20201006 01:37:13.263"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:18.458" starttime="20201006 01:37:13.262"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 01:37:18.458" critical="yes" starttime="20201006 01:36:43.267"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:37:18.464" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:37:18.464" starttime="20201006 01:37:18.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:37:18.465" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:37:18.465" starttime="20201006 01:37:18.464"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:18.465" starttime="20201006 01:37:18.463"></status>
</kw>
<msg timestamp="20201006 01:37:18.465" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:37:18.465" starttime="20201006 01:37:18.462"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:18.465" starttime="20201006 01:37:18.461"></status>
</kw>
<msg timestamp="20201006 01:37:18.466" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:37:18.466" starttime="20201006 01:37:18.461"></status>
</kw>
<msg timestamp="20201006 01:37:18.466" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:37:18.466" starttime="20201006 01:37:18.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:18.470" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:21.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:21.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:37:21.559" starttime="20201006 01:37:18.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:21.560" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:37:21.560" starttime="20201006 01:37:21.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:21.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:21.560" starttime="20201006 01:37:21.560"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:21.561" starttime="20201006 01:37:18.467"></status>
</kw>
<msg timestamp="20201006 01:37:21.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:21.561" starttime="20201006 01:37:18.466"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:21.561" starttime="20201006 01:37:18.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:21.565" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:25.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:25.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:37:25.061" starttime="20201006 01:37:21.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:25.062" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:37:25.062" starttime="20201006 01:37:25.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:25.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:25.065" starttime="20201006 01:37:25.063"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:25.066" starttime="20201006 01:37:21.562"></status>
</kw>
<msg timestamp="20201006 01:37:25.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:25.066" starttime="20201006 01:37:21.562"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:25.066" starttime="20201006 01:37:21.561"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201006 01:37:25.067" critical="yes" starttime="20201006 01:37:18.459"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201006 01:37:25.068" starttime="20201006 01:36:43.191"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:39:02.743" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:39:02.743" starttime="20201006 01:39:02.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:39:02.743" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:39:02.743" starttime="20201006 01:39:02.743"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:02.743" starttime="20201006 01:39:02.741"></status>
</kw>
<msg timestamp="20201006 01:39:02.744" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:39:02.744" starttime="20201006 01:39:02.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:39:02.745" starttime="20201006 01:39:02.744"></status>
</kw>
<msg timestamp="20201006 01:39:02.745" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:39:02.745" starttime="20201006 01:39:02.744"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:02.745" starttime="20201006 01:39:02.739"></status>
</kw>
<msg timestamp="20201006 01:39:02.745" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:39:02.745" starttime="20201006 01:39:02.739"></status>
</kw>
<msg timestamp="20201006 01:39:02.746" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:39:02.746" starttime="20201006 01:39:02.738"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:39:02.746" level="INFO">${random} = 47533</msg>
<status status="PASS" endtime="20201006 01:39:02.746" starttime="20201006 01:39:02.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:39:02.749" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-47533 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:39:06.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:39:06.310" level="INFO">${output} = 2020-10-06 01:39:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:39:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 01:39:06.310" starttime="20201006 01:39:02.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:39:06.311" level="INFO">2020-10-06 01:39:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:39:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:39:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:39:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:39:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C82E3FF1B6E3-&gt;20f81e1b-478e-4c3e-a766-b500cb496bf5
2020-10-06 01:39:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201006 01:39:06.311" starttime="20201006 01:39:06.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:39:06.312" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:39:06.312" starttime="20201006 01:39:06.311"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:06.312" starttime="20201006 01:39:02.747"></status>
</kw>
<msg timestamp="20201006 01:39:06.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:39:06.312" starttime="20201006 01:39:02.747"></status>
</kw>
<msg timestamp="20201006 01:39:06.313" level="INFO">${result} = 2020-10-06 01:39:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:39:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 01:39:06.313" starttime="20201006 01:39:02.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:39:06.315" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:39:08.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:39:08.177" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 01:39 ofs://om/volume1/bucket1/ozone-47533
-rw-...</msg>
<status status="PASS" endtime="20201006 01:39:08.177" starttime="20201006 01:39:06.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:39:08.179" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 01:39 ofs://om/volume1/bucket1/ozone-47533
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 01:37 ofs://om/volume1/bucket1/ozone-97677
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:38 ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20201006 01:39:08.179" starttime="20201006 01:39:08.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:39:08.179" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:39:08.180" starttime="20201006 01:39:08.179"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:08.180" starttime="20201006 01:39:06.314"></status>
</kw>
<msg timestamp="20201006 01:39:08.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:39:08.180" starttime="20201006 01:39:06.313"></status>
</kw>
<msg timestamp="20201006 01:39:08.180" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 01:39 ofs://om/volume1/bucket1/ozone-47533
-rw-...</msg>
<status status="PASS" endtime="20201006 01:39:08.180" starttime="20201006 01:39:06.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:39:08.181" starttime="20201006 01:39:08.180"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 01:39:08.181" critical="yes" starttime="20201006 01:39:02.737"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 01:39:08.182" starttime="20201006 01:39:02.687"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:37:29.786" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:37:29.786" starttime="20201006 01:37:29.785"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:37:29.787" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:37:29.787" starttime="20201006 01:37:29.787"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:29.787" starttime="20201006 01:37:29.784"></status>
</kw>
<msg timestamp="20201006 01:37:29.787" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:37:29.787" starttime="20201006 01:37:29.784"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:29.788" starttime="20201006 01:37:29.783"></status>
</kw>
<msg timestamp="20201006 01:37:29.788" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:37:29.788" starttime="20201006 01:37:29.783"></status>
</kw>
<msg timestamp="20201006 01:37:29.788" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:37:29.788" starttime="20201006 01:37:29.782"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:37:29.789" level="INFO">${random} = 97677</msg>
<status status="PASS" endtime="20201006 01:37:29.789" starttime="20201006 01:37:29.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:29.791" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-97677 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:33.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:33.566" level="INFO">${output} = 2020-10-06 01:37:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:37:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 01:37:33.567" starttime="20201006 01:37:29.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:33.568" level="INFO">2020-10-06 01:37:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:37:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:37:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:37:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:37:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EAEDE55BFD19-&gt;20f81e1b-478e-4c3e-a766-b500cb496bf5
2020-10-06 01:37:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201006 01:37:33.568" starttime="20201006 01:37:33.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:33.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:33.569" starttime="20201006 01:37:33.568"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:33.569" starttime="20201006 01:37:29.790"></status>
</kw>
<msg timestamp="20201006 01:37:33.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:33.569" starttime="20201006 01:37:29.789"></status>
</kw>
<msg timestamp="20201006 01:37:33.570" level="INFO">${result} = 2020-10-06 01:37:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:37:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201006 01:37:33.570" starttime="20201006 01:37:29.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:33.573" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:35.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:35.415" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 01:37 o3fs://bucket1.volume1.om/ozone-97677
dr...</msg>
<status status="PASS" endtime="20201006 01:37:35.415" starttime="20201006 01:37:33.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:35.416" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 01:37 o3fs://bucket1.volume1.om/ozone-97677
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201006 01:37:35.416" starttime="20201006 01:37:35.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:35.417" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:35.417" starttime="20201006 01:37:35.416"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:35.417" starttime="20201006 01:37:33.571"></status>
</kw>
<msg timestamp="20201006 01:37:35.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:35.418" starttime="20201006 01:37:33.571"></status>
</kw>
<msg timestamp="20201006 01:37:35.418" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-06 01:37 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-06 01:37 o3fs://bucket1.volume1.om/ozone-97677
dr...</msg>
<status status="PASS" endtime="20201006 01:37:35.418" starttime="20201006 01:37:33.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:37:35.418" starttime="20201006 01:37:35.418"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201006 01:37:35.419" critical="yes" starttime="20201006 01:37:29.781"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201006 01:37:35.419" starttime="20201006 01:37:29.729"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:39:12.851" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:39:12.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:39:12.859" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:12.859" starttime="20201006 01:39:12.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:39:12.860" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:12.860" starttime="20201006 01:39:12.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:39:12.861" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:39:12.861" starttime="20201006 01:39:12.860"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:12.861" starttime="20201006 01:39:12.849"></status>
</kw>
<msg timestamp="20201006 01:39:12.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:39:12.861" starttime="20201006 01:39:12.849"></status>
</kw>
<msg timestamp="20201006 01:39:12.862" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:12.862" starttime="20201006 01:39:12.849"></status>
</kw>
<msg timestamp="20201006 01:39:12.862" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:12.862" starttime="20201006 01:39:12.848"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:39:12.866" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:39:12.866" starttime="20201006 01:39:12.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:39:12.867" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:39:12.867" starttime="20201006 01:39:12.866"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:12.867" starttime="20201006 01:39:12.865"></status>
</kw>
<msg timestamp="20201006 01:39:12.867" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:39:12.867" starttime="20201006 01:39:12.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:39:12.868" starttime="20201006 01:39:12.868"></status>
</kw>
<msg timestamp="20201006 01:39:12.868" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:39:12.868" starttime="20201006 01:39:12.867"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:12.869" starttime="20201006 01:39:12.864"></status>
</kw>
<msg timestamp="20201006 01:39:12.869" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:39:12.869" starttime="20201006 01:39:12.863"></status>
</kw>
<msg timestamp="20201006 01:39:12.869" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:39:12.869" starttime="20201006 01:39:12.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:39:12.872" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:39:50.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:39:50.816" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:39:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:39:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 01:39:50.816" starttime="20201006 01:39:12.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:39:50.817" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:39:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:39:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:39:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:39:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:39:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79FEEE884BA6-&gt;20f81e1b-478e-4c3e-a766-b500cb496bf5
2020-10-06 01:39:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 01:39:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:39:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:39:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:39:19 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:39:19 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 01:39:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601948180738_0003
2020-10-06 01:39:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:39:19 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:39:19 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 01:39:19 INFO  YarnClientImpl:311 - Submitted application application_1601948180738_0003
2020-10-06 01:39:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601948180738_0003/
2020-10-06 01:39:19 INFO  Job:1619 - Running job: job_1601948180738_0003
2020-10-06 01:39:28 INFO  Job:1640 - Job job_1601948180738_0003 running in uber mode : false
2020-10-06 01:39:28 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:39:34 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:39:40 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:39:45 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:39:49 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:39:50 INFO  Job:1658 - Job job_1601948180738_0003 completed successfully
2020-10-06 01:39:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043129
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40280
		Total time spent by all reduces in occupied slots (ms)=14612
		Total time spent by all map tasks (ms)=10070
		Total time spent by all reduce tasks (ms)=3653
		Total vcore-milliseconds taken by all map tasks=10070
		Total vcore-milliseconds taken by all reduce tasks=3653
		Total megabyte-milliseconds taken by all map tasks=41246720
		Total megabyte-milliseconds taken by all reduce tasks=14962688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=6940
		Physical memory (bytes) snapshot=1410605056
		Virtual memory (bytes) snapshot=16039034880
		Total committed heap usage (bytes)=1706033152
		Peak Map Physical memory (bytes)=353071104
		Peak Map Virtual memory (bytes)=4011134976
		Peak Reduce Physical memory (bytes)=363700224
		Peak Reduce Virtual memory (bytes)=4014280704
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.762 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201006 01:39:50.817" starttime="20201006 01:39:50.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:39:50.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:39:50.818" starttime="20201006 01:39:50.817"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.818" starttime="20201006 01:39:12.870"></status>
</kw>
<msg timestamp="20201006 01:39:50.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:39:50.818" starttime="20201006 01:39:12.870"></status>
</kw>
<msg timestamp="20201006 01:39:50.819" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:39:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:39:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 01:39:50.819" starttime="20201006 01:39:12.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:39:50.820" starttime="20201006 01:39:50.819"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:39:50.820" critical="yes" starttime="20201006 01:39:12.847"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:39:50.824" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:39:50.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:39:50.830" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:50.830" starttime="20201006 01:39:50.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:39:50.831" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:50.831" starttime="20201006 01:39:50.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:39:50.832" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:39:50.832" starttime="20201006 01:39:50.831"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.832" starttime="20201006 01:39:50.823"></status>
</kw>
<msg timestamp="20201006 01:39:50.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:39:50.832" starttime="20201006 01:39:50.822"></status>
</kw>
<msg timestamp="20201006 01:39:50.832" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:50.832" starttime="20201006 01:39:50.822"></status>
</kw>
<msg timestamp="20201006 01:39:50.833" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:39:50.833" starttime="20201006 01:39:50.821"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:39:50.834" level="INFO">${random} = 07</msg>
<status status="PASS" endtime="20201006 01:39:50.834" starttime="20201006 01:39:50.833"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:39:50.837" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:39:50.837" starttime="20201006 01:39:50.837"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:39:50.838" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:39:50.838" starttime="20201006 01:39:50.838"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.838" starttime="20201006 01:39:50.837"></status>
</kw>
<msg timestamp="20201006 01:39:50.838" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:39:50.838" starttime="20201006 01:39:50.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201006 01:39:50.840" starttime="20201006 01:39:50.839"></status>
</kw>
<msg timestamp="20201006 01:39:50.840" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201006 01:39:50.840" starttime="20201006 01:39:50.839"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.840" starttime="20201006 01:39:50.835"></status>
</kw>
<msg timestamp="20201006 01:39:50.840" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:39:50.840" starttime="20201006 01:39:50.835"></status>
</kw>
<msg timestamp="20201006 01:39:50.841" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201006 01:39:50.841" starttime="20201006 01:39:50.834"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:39:50.844" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:39:50.844" starttime="20201006 01:39:50.844"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:39:50.845" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:39:50.845" starttime="20201006 01:39:50.844"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.845" starttime="20201006 01:39:50.843"></status>
</kw>
<msg timestamp="20201006 01:39:50.845" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:39:50.845" starttime="20201006 01:39:50.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:39:50.847" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201006 01:39:50.847" starttime="20201006 01:39:50.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:39:50.848" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201006 01:39:50.848" starttime="20201006 01:39:50.847"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.848" starttime="20201006 01:39:50.846"></status>
</kw>
<msg timestamp="20201006 01:39:50.848" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201006 01:39:50.848" starttime="20201006 01:39:50.845"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.849" starttime="20201006 01:39:50.842"></status>
</kw>
<msg timestamp="20201006 01:39:50.849" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 01:39:50.849" starttime="20201006 01:39:50.841"></status>
</kw>
<msg timestamp="20201006 01:39:50.849" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201006 01:39:50.849" starttime="20201006 01:39:50.841"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201006 01:39:50.852" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201006 01:39:50.852" starttime="20201006 01:39:50.852"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:39:50.853" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201006 01:39:50.853" starttime="20201006 01:39:50.853"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.853" starttime="20201006 01:39:50.852"></status>
</kw>
<msg timestamp="20201006 01:39:50.853" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201006 01:39:50.854" starttime="20201006 01:39:50.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:39:50.855" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201006 01:39:50.855" starttime="20201006 01:39:50.855"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:39:50.856" level="INFO">${result} = /wordcount-07.txt</msg>
<status status="PASS" endtime="20201006 01:39:50.856" starttime="20201006 01:39:50.855"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.856" starttime="20201006 01:39:50.854"></status>
</kw>
<msg timestamp="20201006 01:39:50.856" level="INFO">${path_with_leading} = /wordcount-07.txt</msg>
<status status="PASS" endtime="20201006 01:39:50.856" starttime="20201006 01:39:50.854"></status>
</kw>
<status status="PASS" endtime="20201006 01:39:50.856" starttime="20201006 01:39:50.850"></status>
</kw>
<msg timestamp="20201006 01:39:50.857" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-07.txt</msg>
<status status="PASS" endtime="20201006 01:39:50.857" starttime="20201006 01:39:50.850"></status>
</kw>
<msg timestamp="20201006 01:39:50.857" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-07.txt</msg>
<status status="PASS" endtime="20201006 01:39:50.857" starttime="20201006 01:39:50.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:39:50.859" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-07.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:40:27.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:40:27.099" level="INFO">${output} = 2020-10-06 01:39:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:39:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201006 01:40:27.099" starttime="20201006 01:39:50.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:40:27.100" level="INFO">2020-10-06 01:39:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:39:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:39:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:39:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:39:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:39:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:39:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C4DC56404093-&gt;20f81e1b-478e-4c3e-a766-b500cb496bf5
2020-10-06 01:39:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:39:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:39:54 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:39:54 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 01:39:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601948180738_0004
2020-10-06 01:39:54 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:39:55 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:39:55 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 01:39:55 INFO  YarnClientImpl:311 - Submitted application application_1601948180738_0004
2020-10-06 01:39:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601948180738_0004/
2020-10-06 01:39:55 INFO  Job:1619 - Running job: job_1601948180738_0004
2020-10-06 01:40:03 INFO  Job:1640 - Job job_1601948180738_0004 running in uber mode : false
2020-10-06 01:40:03 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:40:10 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:40:15 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:40:20 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:40:26 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:40:26 INFO  Job:1658 - Job job_1601948180738_0004 completed successfully
2020-10-06 01:40:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105793
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41068
		Total time spent by all reduces in occupied slots (ms)=14440
		Total time spent by all map tasks (ms)=10267
		Total time spent by all reduce tasks (ms)=3610
		Total vcore-milliseconds taken by all map tasks=10267
		Total vcore-milliseconds taken by all reduce tasks=3610
		Total megabyte-milliseconds taken by all map tasks=42053632
		Total megabyte-milliseconds taken by all reduce tasks=14786560
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1432002560
		Virtual memory (bytes) snapshot=16048156672
		Total committed heap usage (bytes)=1601699840
		Peak Map Physical memory (bytes)=369995776
		Peak Map Virtual memory (bytes)=4020797440
		Peak Reduce Physical memory (bytes)=341372928
		Peak Reduce Virtual memory (bytes)=4007280640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201006 01:40:27.101" starttime="20201006 01:40:27.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:40:27.101" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:40:27.101" starttime="20201006 01:40:27.101"></status>
</kw>
<status status="PASS" endtime="20201006 01:40:27.102" starttime="20201006 01:39:50.858"></status>
</kw>
<msg timestamp="20201006 01:40:27.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:40:27.102" starttime="20201006 01:39:50.858"></status>
</kw>
<msg timestamp="20201006 01:40:27.103" level="INFO">${output} = 2020-10-06 01:39:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:39:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201006 01:40:27.103" starttime="20201006 01:39:50.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 01:40:27.103" starttime="20201006 01:40:27.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:40:27.104" starttime="20201006 01:40:27.103"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:40:27.104" critical="yes" starttime="20201006 01:39:50.821"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 01:40:27.105" starttime="20201006 01:39:12.796"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:40.075" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:37:40.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:37:40.082" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:37:40.082" starttime="20201006 01:37:40.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:37:40.083" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:37:40.083" starttime="20201006 01:37:40.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:37:40.083" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:37:40.084" starttime="20201006 01:37:40.083"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:40.084" starttime="20201006 01:37:40.073"></status>
</kw>
<msg timestamp="20201006 01:37:40.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:37:40.084" starttime="20201006 01:37:40.073"></status>
</kw>
<msg timestamp="20201006 01:37:40.084" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:37:40.085" starttime="20201006 01:37:40.072"></status>
</kw>
<msg timestamp="20201006 01:37:40.085" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:37:40.085" starttime="20201006 01:37:40.072"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:37:40.089" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:37:40.089" starttime="20201006 01:37:40.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:37:40.089" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:37:40.089" starttime="20201006 01:37:40.089"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:40.090" starttime="20201006 01:37:40.088"></status>
</kw>
<msg timestamp="20201006 01:37:40.090" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:37:40.090" starttime="20201006 01:37:40.087"></status>
</kw>
<status status="PASS" endtime="20201006 01:37:40.090" starttime="20201006 01:37:40.086"></status>
</kw>
<msg timestamp="20201006 01:37:40.090" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:37:40.090" starttime="20201006 01:37:40.086"></status>
</kw>
<msg timestamp="20201006 01:37:40.091" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:37:40.091" starttime="20201006 01:37:40.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:37:40.093" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:38:18.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:38:18.202" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:37:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:37:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 01:38:18.202" starttime="20201006 01:37:40.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:38:18.203" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:37:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:37:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:37:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:37:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:37:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F5AE36C17287-&gt;20f81e1b-478e-4c3e-a766-b500cb496bf5
2020-10-06 01:37:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-06 01:37:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:37:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:37:44 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:37:44 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 01:37:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601948180738_0001
2020-10-06 01:37:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:37:44 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:37:44 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 01:37:45 INFO  YarnClientImpl:311 - Submitted application application_1601948180738_0001
2020-10-06 01:37:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601948180738_0001/
2020-10-06 01:37:45 INFO  Job:1619 - Running job: job_1601948180738_0001
2020-10-06 01:37:55 INFO  Job:1640 - Job job_1601948180738_0001 running in uber mode : false
2020-10-06 01:37:55 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:38:02 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:38:07 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:38:12 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:38:16 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:38:17 INFO  Job:1658 - Job job_1601948180738_0001 completed successfully
2020-10-06 01:38:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043349
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40976
		Total time spent by all reduces in occupied slots (ms)=15276
		Total time spent by all map tasks (ms)=10244
		Total time spent by all reduce tasks (ms)=3819
		Total vcore-milliseconds taken by all map tasks=10244
		Total vcore-milliseconds taken by all reduce tasks=3819
		Total megabyte-milliseconds taken by all map tasks=41959424
		Total megabyte-milliseconds taken by all reduce tasks=15642624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=592
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1409138688
		Virtual memory (bytes) snapshot=16039571456
		Total committed heap usage (bytes)=1681391616
		Peak Map Physical memory (bytes)=363651072
		Peak Map Virtual memory (bytes)=4011483136
		Peak Reduce Physical memory (bytes)=353415168
		Peak Reduce Virtual memory (bytes)=4012855296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.19 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201006 01:38:18.203" starttime="20201006 01:38:18.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:38:18.204" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:38:18.204" starttime="20201006 01:38:18.204"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.204" starttime="20201006 01:37:40.092"></status>
</kw>
<msg timestamp="20201006 01:38:18.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:38:18.205" starttime="20201006 01:37:40.091"></status>
</kw>
<msg timestamp="20201006 01:38:18.205" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-06 01:37:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:37:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201006 01:38:18.205" starttime="20201006 01:37:40.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:38:18.206" starttime="20201006 01:38:18.205"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:38:18.206" critical="yes" starttime="20201006 01:37:40.071"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:38:18.211" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:38:18.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:38:18.217" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:38:18.217" starttime="20201006 01:38:18.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:38:18.218" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:38:18.218" starttime="20201006 01:38:18.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:38:18.219" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:38:18.219" starttime="20201006 01:38:18.218"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.219" starttime="20201006 01:38:18.209"></status>
</kw>
<msg timestamp="20201006 01:38:18.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:38:18.219" starttime="20201006 01:38:18.208"></status>
</kw>
<msg timestamp="20201006 01:38:18.219" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:38:18.219" starttime="20201006 01:38:18.208"></status>
</kw>
<msg timestamp="20201006 01:38:18.220" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201006 01:38:18.220" starttime="20201006 01:38:18.208"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201006 01:38:18.220" level="INFO">${random} = 83</msg>
<status status="PASS" endtime="20201006 01:38:18.220" starttime="20201006 01:38:18.220"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:38:18.224" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:38:18.224" starttime="20201006 01:38:18.224"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:38:18.225" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:38:18.225" starttime="20201006 01:38:18.225"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.225" starttime="20201006 01:38:18.223"></status>
</kw>
<msg timestamp="20201006 01:38:18.225" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:38:18.225" starttime="20201006 01:38:18.223"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.226" starttime="20201006 01:38:18.222"></status>
</kw>
<msg timestamp="20201006 01:38:18.226" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:38:18.226" starttime="20201006 01:38:18.221"></status>
</kw>
<msg timestamp="20201006 01:38:18.226" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201006 01:38:18.226" starttime="20201006 01:38:18.221"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:38:18.230" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:38:18.230" starttime="20201006 01:38:18.229"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:38:18.230" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:38:18.230" starttime="20201006 01:38:18.230"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.231" starttime="20201006 01:38:18.229"></status>
</kw>
<msg timestamp="20201006 01:38:18.231" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:38:18.231" starttime="20201006 01:38:18.228"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.231" starttime="20201006 01:38:18.228"></status>
</kw>
<msg timestamp="20201006 01:38:18.231" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 01:38:18.231" starttime="20201006 01:38:18.227"></status>
</kw>
<msg timestamp="20201006 01:38:18.231" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201006 01:38:18.231" starttime="20201006 01:38:18.226"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201006 01:38:18.235" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201006 01:38:18.235" starttime="20201006 01:38:18.235"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201006 01:38:18.236" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201006 01:38:18.236" starttime="20201006 01:38:18.235"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.236" starttime="20201006 01:38:18.234"></status>
</kw>
<msg timestamp="20201006 01:38:18.236" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201006 01:38:18.236" starttime="20201006 01:38:18.233"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:18.236" starttime="20201006 01:38:18.233"></status>
</kw>
<msg timestamp="20201006 01:38:18.237" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20201006 01:38:18.237" starttime="20201006 01:38:18.232"></status>
</kw>
<msg timestamp="20201006 01:38:18.237" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20201006 01:38:18.237" starttime="20201006 01:38:18.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:38:18.239" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-83.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:38:57.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:38:57.980" level="INFO">${output} = 2020-10-06 01:38:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:38:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201006 01:38:57.980" starttime="20201006 01:38:18.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:38:57.981" level="INFO">2020-10-06 01:38:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:38:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-06 01:38:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-06 01:38:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-06 01:38:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-06 01:38:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-06 01:38:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D5582990F0C5-&gt;20f81e1b-478e-4c3e-a766-b500cb496bf5
2020-10-06 01:38:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-06 01:38:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-06 01:38:24 INFO  JobSubmitter:202 - number of splits:3
2020-10-06 01:38:24 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-06 01:38:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601948180738_0002
2020-10-06 01:38:24 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-06 01:38:25 INFO  Configuration:2752 - resource-types.xml not found
2020-10-06 01:38:25 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-06 01:38:25 INFO  YarnClientImpl:311 - Submitted application application_1601948180738_0002
2020-10-06 01:38:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601948180738_0002/
2020-10-06 01:38:25 INFO  Job:1619 - Running job: job_1601948180738_0002
2020-10-06 01:38:33 INFO  Job:1640 - Job job_1601948180738_0002 running in uber mode : false
2020-10-06 01:38:33 INFO  Job:1647 -  map 0% reduce 0%
2020-10-06 01:38:40 INFO  Job:1647 -  map 33% reduce 0%
2020-10-06 01:38:46 INFO  Job:1647 -  map 67% reduce 0%
2020-10-06 01:38:52 INFO  Job:1647 -  map 100% reduce 0%
2020-10-06 01:38:56 INFO  Job:1647 -  map 100% reduce 100%
2020-10-06 01:38:57 INFO  Job:1658 - Job job_1601948180738_0002 completed successfully
2020-10-06 01:38:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105877
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43532
		Total time spent by all reduces in occupied slots (ms)=14984
		Total time spent by all map tasks (ms)=10883
		Total time spent by all reduce tasks (ms)=3746
		Total vcore-milliseconds taken by all map tasks=10883
		Total vcore-milliseconds taken by all reduce tasks=3746
		Total megabyte-milliseconds taken by all map tasks=44576768
		Total megabyte-milliseconds taken by all reduce tasks=15343616
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=617
		CPU time spent (ms)=7800
		Physical memory (bytes) snapshot=1448378368
		Virtual memory (bytes) snapshot=16055025664
		Total committed heap usage (bytes)=1697120256
		Peak Map Physical memory (bytes)=366559232
		Peak Map Virtual memory (bytes)=4016832512
		Peak Reduce Physical memory (bytes)=366493696
		Peak Reduce Virtual memory (bytes)=4015771648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201006 01:38:57.981" starttime="20201006 01:38:57.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:38:57.982" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:38:57.982" starttime="20201006 01:38:57.981"></status>
</kw>
<status status="PASS" endtime="20201006 01:38:57.982" starttime="20201006 01:38:18.238"></status>
</kw>
<msg timestamp="20201006 01:38:57.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:38:57.982" starttime="20201006 01:38:18.238"></status>
</kw>
<msg timestamp="20201006 01:38:57.983" level="INFO">${output} = 2020-10-06 01:38:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-06 01:38:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201006 01:38:57.983" starttime="20201006 01:38:18.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201006 01:38:57.984" starttime="20201006 01:38:57.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201006 01:38:57.984" starttime="20201006 01:38:57.984"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201006 01:38:57.985" critical="yes" starttime="20201006 01:38:18.207"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201006 01:38:57.986" starttime="20201006 01:37:40.022"></status>
</suite>
<status status="PASS" elapsedtime="205335" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="597947" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
