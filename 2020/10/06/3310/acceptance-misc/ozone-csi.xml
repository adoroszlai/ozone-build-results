<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201006 01:22:39.452" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:22:27.704" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:22:27.708" level="INFO">${rc} = 1</msg>
<msg timestamp="20201006 01:22:27.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:22:27.709" starttime="20201006 01:22:27.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:22:27.710" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:22:27.710" starttime="20201006 01:22:27.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:22:27.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201006 01:22:27.711" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201006 01:22:27.711" starttime="20201006 01:22:27.710"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:27.711" starttime="20201006 01:22:27.697"></status>
</kw>
<msg timestamp="20201006 01:22:27.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201006 01:22:27.711" starttime="20201006 01:22:27.697"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:27.711" starttime="20201006 01:22:27.697"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:27.712" starttime="20201006 01:22:27.696"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:22:28.717" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:22:28.719" level="INFO">${rc} = 1</msg>
<msg timestamp="20201006 01:22:28.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:22:28.719" starttime="20201006 01:22:28.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:22:28.720" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:22:28.720" starttime="20201006 01:22:28.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:22:28.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201006 01:22:28.721" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201006 01:22:28.721" starttime="20201006 01:22:28.721"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:28.722" starttime="20201006 01:22:28.714"></status>
</kw>
<msg timestamp="20201006 01:22:28.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201006 01:22:28.722" starttime="20201006 01:22:28.713"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:28.722" starttime="20201006 01:22:28.713"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:28.722" starttime="20201006 01:22:28.712"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:22:29.726" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:22:29.728" level="INFO">${rc} = 1</msg>
<msg timestamp="20201006 01:22:29.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:22:29.728" starttime="20201006 01:22:29.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:22:29.729" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:22:29.729" starttime="20201006 01:22:29.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:22:29.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201006 01:22:29.730" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201006 01:22:29.730" starttime="20201006 01:22:29.729"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:29.730" starttime="20201006 01:22:29.724"></status>
</kw>
<msg timestamp="20201006 01:22:29.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201006 01:22:29.730" starttime="20201006 01:22:29.724"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:29.731" starttime="20201006 01:22:29.723"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:29.731" starttime="20201006 01:22:29.723"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:22:30.736" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:22:30.737" level="INFO">${rc} = 1</msg>
<msg timestamp="20201006 01:22:30.737" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:22:30.737" starttime="20201006 01:22:30.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:22:30.738" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:22:30.738" starttime="20201006 01:22:30.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:22:30.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201006 01:22:30.739" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201006 01:22:30.739" starttime="20201006 01:22:30.738"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:30.740" starttime="20201006 01:22:30.733"></status>
</kw>
<msg timestamp="20201006 01:22:30.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201006 01:22:30.740" starttime="20201006 01:22:30.732"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:30.740" starttime="20201006 01:22:30.732"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:30.740" starttime="20201006 01:22:30.731"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:22:31.756" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:22:31.758" level="INFO">${rc} = 1</msg>
<msg timestamp="20201006 01:22:31.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:22:31.758" starttime="20201006 01:22:31.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:22:31.759" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:22:31.759" starttime="20201006 01:22:31.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:22:31.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201006 01:22:31.760" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201006 01:22:31.760" starttime="20201006 01:22:31.759"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:31.760" starttime="20201006 01:22:31.742"></status>
</kw>
<msg timestamp="20201006 01:22:31.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201006 01:22:31.761" starttime="20201006 01:22:31.742"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:31.761" starttime="20201006 01:22:31.741"></status>
</kw>
<status status="FAIL" endtime="20201006 01:22:31.761" starttime="20201006 01:22:31.741"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:22:32.766" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:22:32.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:22:32.767" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201006 01:22:32.767" starttime="20201006 01:22:32.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:22:32.768" level="INFO"></msg>
<status status="PASS" endtime="20201006 01:22:32.768" starttime="20201006 01:22:32.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:22:32.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:22:32.769" starttime="20201006 01:22:32.768"></status>
</kw>
<status status="PASS" endtime="20201006 01:22:32.769" starttime="20201006 01:22:32.763"></status>
</kw>
<msg timestamp="20201006 01:22:32.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:22:32.769" starttime="20201006 01:22:32.763"></status>
</kw>
<status status="PASS" endtime="20201006 01:22:32.770" starttime="20201006 01:22:32.762"></status>
</kw>
<status status="PASS" endtime="20201006 01:22:32.770" starttime="20201006 01:22:32.761"></status>
</kw>
<status status="PASS" endtime="20201006 01:22:32.770" starttime="20201006 01:22:27.696"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201006 01:22:32.770" critical="yes" starttime="20201006 01:22:27.695"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201006 01:22:32.775" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201006 01:22:33.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201006 01:22:33.105" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201006 01:22:33.105" starttime="20201006 01:22:32.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201006 01:22:33.106" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201006 01:22:33.106" starttime="20201006 01:22:33.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201006 01:22:33.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201006 01:22:33.107" starttime="20201006 01:22:33.106"></status>
</kw>
<status status="PASS" endtime="20201006 01:22:33.107" starttime="20201006 01:22:32.773"></status>
</kw>
<msg timestamp="20201006 01:22:33.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201006 01:22:33.107" starttime="20201006 01:22:32.772"></status>
</kw>
<msg timestamp="20201006 01:22:33.108" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201006 01:22:33.108" starttime="20201006 01:22:32.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201006 01:22:33.108" starttime="20201006 01:22:33.108"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201006 01:22:33.109" critical="yes" starttime="20201006 01:22:32.771"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201006 01:22:33.110" starttime="20201006 01:22:27.624"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
