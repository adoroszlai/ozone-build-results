<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201013 13:34:28.132" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:30:45.344" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:30:49.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:30:49.377" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:30:49.377" starttime="20201013 13:30:45.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:30:49.378" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:30:49.379" starttime="20201013 13:30:49.378"></status>
</kw>
<msg timestamp="20201013 13:30:49.379" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:30:49.379" starttime="20201013 13:30:45.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:30:49.392" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:30:52.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:30:52.822" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:30:52.822" starttime="20201013 13:30:49.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:30:52.823" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:30:52.823" starttime="20201013 13:30:52.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:30:52.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:30:52.823" starttime="20201013 13:30:52.823"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:52.824" starttime="20201013 13:30:49.381"></status>
</kw>
<msg timestamp="20201013 13:30:52.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:30:52.824" starttime="20201013 13:30:49.381"></status>
</kw>
<msg timestamp="20201013 13:30:52.824" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:30:52.824" starttime="20201013 13:30:49.380"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201013 13:30:52.825" starttime="20201013 13:30:52.824"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:52.825" starttime="20201013 13:30:49.380"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:52.825" starttime="20201013 13:30:49.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:30:52.829" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:30:56.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:30:56.208" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:30:56.208" starttime="20201013 13:30:52.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:30:56.210" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:30:56.210" starttime="20201013 13:30:56.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:30:56.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:30:56.210" starttime="20201013 13:30:56.210"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:56.211" starttime="20201013 13:30:52.827"></status>
</kw>
<msg timestamp="20201013 13:30:56.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:30:56.211" starttime="20201013 13:30:52.826"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:56.211" starttime="20201013 13:30:52.826"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:56.211" starttime="20201013 13:30:52.826"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:56.211" starttime="20201013 13:30:52.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201013 13:30:56.212" starttime="20201013 13:30:56.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:30:56.215" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:00.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:00.090" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:00.090" starttime="20201013 13:30:56.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:00.091" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:30:55.968Z",
  "modificationTime" : "2020-10-13T13:30:55.968Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201013 13:31:00.091" starttime="20201013 13:31:00.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:00.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:00.092" starttime="20201013 13:31:00.092"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:00.093" starttime="20201013 13:30:56.212"></status>
</kw>
<msg timestamp="20201013 13:31:00.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:00.093" starttime="20201013 13:30:56.212"></status>
</kw>
<msg timestamp="20201013 13:31:00.093" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:00.093" starttime="20201013 13:30:56.212"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201013 13:31:00.094" starttime="20201013 13:31:00.093"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:31:00.097" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:31:00.097" starttime="20201013 13:31:00.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:31:00.098" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:31:00.098" starttime="20201013 13:31:00.097"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:00.098" starttime="20201013 13:31:00.096"></status>
</kw>
<msg timestamp="20201013 13:31:00.098" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:31:00.098" starttime="20201013 13:31:00.096"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:00.098" starttime="20201013 13:31:00.095"></status>
</kw>
<msg timestamp="20201013 13:31:00.099" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:31:00.099" starttime="20201013 13:31:00.094"></status>
</kw>
<msg timestamp="20201013 13:31:00.099" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:31:00.099" starttime="20201013 13:31:00.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:00.102" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:03.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:03.731" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:03.732" starttime="20201013 13:31:00.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:03.733" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:31:03.733" starttime="20201013 13:31:03.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:03.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:03.733" starttime="20201013 13:31:03.733"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:03.734" starttime="20201013 13:31:00.099"></status>
</kw>
<msg timestamp="20201013 13:31:03.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:03.734" starttime="20201013 13:31:00.099"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:03.734" starttime="20201013 13:31:00.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:03.740" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:11.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:11.524" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:11.524" starttime="20201013 13:31:03.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:11.525" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:31:11.526" starttime="20201013 13:31:11.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:11.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:11.526" starttime="20201013 13:31:11.526"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:11.526" starttime="20201013 13:31:03.735"></status>
</kw>
<msg timestamp="20201013 13:31:11.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:11.527" starttime="20201013 13:31:03.735"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:11.527" starttime="20201013 13:31:03.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:11.531" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:16.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:16.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:16.769" starttime="20201013 13:31:11.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:16.770" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:31:16.770" starttime="20201013 13:31:16.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:16.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:16.771" starttime="20201013 13:31:16.770"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:16.771" starttime="20201013 13:31:11.528"></status>
</kw>
<msg timestamp="20201013 13:31:16.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:16.771" starttime="20201013 13:31:11.528"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:16.771" starttime="20201013 13:31:11.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:16.774" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:21.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:21.548" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:21.549" starttime="20201013 13:31:16.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:21.550" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:31:21.550" starttime="20201013 13:31:21.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:21.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:21.551" starttime="20201013 13:31:21.550"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:21.552" starttime="20201013 13:31:16.772"></status>
</kw>
<msg timestamp="20201013 13:31:21.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:21.552" starttime="20201013 13:31:16.772"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:21.552" starttime="20201013 13:31:16.771"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:31:21.552" critical="yes" starttime="20201013 13:30:45.339"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:31:21.558" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:31:21.558" starttime="20201013 13:31:21.557"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:31:21.558" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:31:21.558" starttime="20201013 13:31:21.558"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:21.559" starttime="20201013 13:31:21.557"></status>
</kw>
<msg timestamp="20201013 13:31:21.559" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:31:21.559" starttime="20201013 13:31:21.556"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:21.559" starttime="20201013 13:31:21.556"></status>
</kw>
<msg timestamp="20201013 13:31:21.559" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:31:21.559" starttime="20201013 13:31:21.555"></status>
</kw>
<msg timestamp="20201013 13:31:21.559" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:31:21.560" starttime="20201013 13:31:21.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:21.564" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:24.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:24.778" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:24.778" starttime="20201013 13:31:21.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:24.783" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:31:24.783" starttime="20201013 13:31:24.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:24.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:24.784" starttime="20201013 13:31:24.783"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:24.784" starttime="20201013 13:31:21.561"></status>
</kw>
<msg timestamp="20201013 13:31:24.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:24.784" starttime="20201013 13:31:21.561"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:24.784" starttime="20201013 13:31:21.560"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:24.788" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:28.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:28.100" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:31:28.100" starttime="20201013 13:31:24.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:28.101" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:31:28.101" starttime="20201013 13:31:28.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:28.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:28.102" starttime="20201013 13:31:28.101"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:28.102" starttime="20201013 13:31:24.785"></status>
</kw>
<msg timestamp="20201013 13:31:28.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:28.102" starttime="20201013 13:31:24.785"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:28.102" starttime="20201013 13:31:24.784"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:31:28.103" critical="yes" starttime="20201013 13:31:21.554"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201013 13:31:28.104" starttime="20201013 13:30:45.290"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:33:02.525" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:33:02.525" starttime="20201013 13:33:02.524"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:33:02.525" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:33:02.525" starttime="20201013 13:33:02.525"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:02.525" starttime="20201013 13:33:02.522"></status>
</kw>
<msg timestamp="20201013 13:33:02.526" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:33:02.526" starttime="20201013 13:33:02.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:33:02.527" starttime="20201013 13:33:02.526"></status>
</kw>
<msg timestamp="20201013 13:33:02.527" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:33:02.527" starttime="20201013 13:33:02.526"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:02.527" starttime="20201013 13:33:02.521"></status>
</kw>
<msg timestamp="20201013 13:33:02.527" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:33:02.527" starttime="20201013 13:33:02.520"></status>
</kw>
<msg timestamp="20201013 13:33:02.527" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:33:02.527" starttime="20201013 13:33:02.520"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:33:02.528" level="INFO">${random} = 71697</msg>
<status status="PASS" endtime="20201013 13:33:02.528" starttime="20201013 13:33:02.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:33:02.531" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-71697 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:33:06.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:33:06.539" level="INFO">${output} = 2020-10-13 13:33:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:33:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:33:06.539" starttime="20201013 13:33:02.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:33:06.540" level="INFO">2020-10-13 13:33:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:33:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:33:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:33:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:33:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-737CAE7DA21D-&gt;68458292-34b5-473b-b05a-3cd33663444c
2020-10-13 13:33:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201013 13:33:06.540" starttime="20201013 13:33:06.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:33:06.540" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:33:06.541" starttime="20201013 13:33:06.540"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:06.541" starttime="20201013 13:33:02.529"></status>
</kw>
<msg timestamp="20201013 13:33:06.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:33:06.542" starttime="20201013 13:33:02.528"></status>
</kw>
<msg timestamp="20201013 13:33:06.542" level="INFO">${result} = 2020-10-13 13:33:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:33:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:33:06.542" starttime="20201013 13:33:02.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:33:06.545" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:33:08.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:33:08.607" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:33 ofs://om/volume1/bucket1/ozone-71697
-rw-...</msg>
<status status="PASS" endtime="20201013 13:33:08.608" starttime="20201013 13:33:06.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:33:08.609" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:33 ofs://om/volume1/bucket1/ozone-71697
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:31 ofs://om/volume1/bucket1/ozone-76938
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:32 ofs://om/volume1/bucket1/wordcount-04.txt</msg>
<status status="PASS" endtime="20201013 13:33:08.609" starttime="20201013 13:33:08.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:33:08.609" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:33:08.609" starttime="20201013 13:33:08.609"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:08.610" starttime="20201013 13:33:06.543"></status>
</kw>
<msg timestamp="20201013 13:33:08.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:33:08.610" starttime="20201013 13:33:06.543"></status>
</kw>
<msg timestamp="20201013 13:33:08.610" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:33 ofs://om/volume1/bucket1/ozone-71697
-rw-...</msg>
<status status="PASS" endtime="20201013 13:33:08.610" starttime="20201013 13:33:06.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:33:08.611" starttime="20201013 13:33:08.610"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:33:08.611" critical="yes" starttime="20201013 13:33:02.519"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:33:08.612" starttime="20201013 13:33:02.476"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:31:37.825" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:31:37.825" starttime="20201013 13:31:37.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:31:37.826" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:31:37.826" starttime="20201013 13:31:37.825"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:37.826" starttime="20201013 13:31:37.823"></status>
</kw>
<msg timestamp="20201013 13:31:37.826" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:31:37.826" starttime="20201013 13:31:37.823"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:37.826" starttime="20201013 13:31:37.822"></status>
</kw>
<msg timestamp="20201013 13:31:37.826" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:31:37.826" starttime="20201013 13:31:37.822"></status>
</kw>
<msg timestamp="20201013 13:31:37.827" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:31:37.827" starttime="20201013 13:31:37.821"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:31:37.827" level="INFO">${random} = 76938</msg>
<status status="PASS" endtime="20201013 13:31:37.827" starttime="20201013 13:31:37.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:37.830" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76938 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:42.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:42.081" level="INFO">${output} = 2020-10-13 13:31:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:31:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:31:42.081" starttime="20201013 13:31:37.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:42.082" level="INFO">2020-10-13 13:31:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:31:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:31:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:31:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:31:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-441DAB4FA8F2-&gt;68458292-34b5-473b-b05a-3cd33663444c
2020-10-13 13:31:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201013 13:31:42.082" starttime="20201013 13:31:42.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:42.083" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:42.083" starttime="20201013 13:31:42.083"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:42.083" starttime="20201013 13:31:37.828"></status>
</kw>
<msg timestamp="20201013 13:31:42.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:42.084" starttime="20201013 13:31:37.828"></status>
</kw>
<msg timestamp="20201013 13:31:42.084" level="INFO">${result} = 2020-10-13 13:31:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:31:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:31:42.084" starttime="20201013 13:31:37.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:42.087" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:44.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:44.138" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:31 o3fs://bucket1.volume1.om/ozone-76938
dr...</msg>
<status status="PASS" endtime="20201013 13:31:44.138" starttime="20201013 13:31:42.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:44.139" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:31 o3fs://bucket1.volume1.om/ozone-76938
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:31:44.139" starttime="20201013 13:31:44.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:44.140" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:44.140" starttime="20201013 13:31:44.140"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:44.140" starttime="20201013 13:31:42.085"></status>
</kw>
<msg timestamp="20201013 13:31:44.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:44.141" starttime="20201013 13:31:42.085"></status>
</kw>
<msg timestamp="20201013 13:31:44.141" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:31 o3fs://bucket1.volume1.om/ozone-76938
dr...</msg>
<status status="PASS" endtime="20201013 13:31:44.141" starttime="20201013 13:31:42.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:31:44.141" starttime="20201013 13:31:44.141"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:31:44.141" critical="yes" starttime="20201013 13:31:37.820"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:31:44.142" starttime="20201013 13:31:37.778"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:32.938" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:32.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:32.941" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201013 13:31:32.941" starttime="20201013 13:31:32.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:32.942" level="INFO">rm</msg>
<status status="PASS" endtime="20201013 13:31:32.942" starttime="20201013 13:31:32.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:32.943" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:32.943" starttime="20201013 13:31:32.942"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:32.943" starttime="20201013 13:31:32.937"></status>
</kw>
<msg timestamp="20201013 13:31:32.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:32.943" starttime="20201013 13:31:32.937"></status>
</kw>
<msg timestamp="20201013 13:31:32.943" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201013 13:31:32.944" starttime="20201013 13:31:32.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:31:32.945" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:31:32.945" starttime="20201013 13:31:32.944"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:32.947" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:32.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:32.961" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:31:32.961" starttime="20201013 13:31:32.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:32.962" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:31:32.962" starttime="20201013 13:31:32.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:32.962" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:32.962" starttime="20201013 13:31:32.962"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:32.962" starttime="20201013 13:31:32.946"></status>
</kw>
<msg timestamp="20201013 13:31:32.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:32.963" starttime="20201013 13:31:32.946"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:32.963" starttime="20201013 13:31:32.945"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:32.963" starttime="20201013 13:31:32.945"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:32.963" starttime="20201013 13:31:32.936"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:31:32.963" critical="yes" starttime="20201013 13:31:32.935"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201013 13:31:32.964" starttime="20201013 13:31:32.900"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:30:40.276" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:30:40.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:30:40.287" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201013 13:30:40.287" starttime="20201013 13:30:40.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:30:40.288" level="INFO">om</msg>
<status status="PASS" endtime="20201013 13:30:40.288" starttime="20201013 13:30:40.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:30:40.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:30:40.289" starttime="20201013 13:30:40.288"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:40.289" starttime="20201013 13:30:40.270"></status>
</kw>
<msg timestamp="20201013 13:30:40.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:30:40.289" starttime="20201013 13:30:40.270"></status>
</kw>
<msg timestamp="20201013 13:30:40.289" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201013 13:30:40.289" starttime="20201013 13:30:40.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:30:40.290" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:30:40.290" starttime="20201013 13:30:40.289"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:30:40.295" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:30:40.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:30:40.320" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:30:40.320" starttime="20201013 13:30:40.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:30:40.321" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:30:40.321" starttime="20201013 13:30:40.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:30:40.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:30:40.322" starttime="20201013 13:30:40.322"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:40.322" starttime="20201013 13:30:40.291"></status>
</kw>
<msg timestamp="20201013 13:30:40.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:30:40.322" starttime="20201013 13:30:40.291"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:40.323" starttime="20201013 13:30:40.291"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:40.323" starttime="20201013 13:30:40.290"></status>
</kw>
<status status="PASS" endtime="20201013 13:30:40.323" starttime="20201013 13:30:40.269"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:30:40.323" critical="yes" starttime="20201013 13:30:40.268"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201013 13:30:40.324" starttime="20201013 13:30:40.219"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:33:13.836" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:33:13.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:33:13.844" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:13.844" starttime="20201013 13:33:13.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:33:13.845" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:13.845" starttime="20201013 13:33:13.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:33:13.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:33:13.846" starttime="20201013 13:33:13.845"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:13.846" starttime="20201013 13:33:13.834"></status>
</kw>
<msg timestamp="20201013 13:33:13.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:33:13.846" starttime="20201013 13:33:13.834"></status>
</kw>
<msg timestamp="20201013 13:33:13.847" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:13.847" starttime="20201013 13:33:13.833"></status>
</kw>
<msg timestamp="20201013 13:33:13.847" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:13.847" starttime="20201013 13:33:13.833"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:33:13.850" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:33:13.850" starttime="20201013 13:33:13.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:33:13.850" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:33:13.850" starttime="20201013 13:33:13.850"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:13.851" starttime="20201013 13:33:13.849"></status>
</kw>
<msg timestamp="20201013 13:33:13.851" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:33:13.851" starttime="20201013 13:33:13.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:33:13.852" starttime="20201013 13:33:13.851"></status>
</kw>
<msg timestamp="20201013 13:33:13.852" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:33:13.852" starttime="20201013 13:33:13.851"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:13.852" starttime="20201013 13:33:13.848"></status>
</kw>
<msg timestamp="20201013 13:33:13.852" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:33:13.852" starttime="20201013 13:33:13.847"></status>
</kw>
<msg timestamp="20201013 13:33:13.852" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:33:13.852" starttime="20201013 13:33:13.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:33:13.855" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:33:47.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:33:47.976" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:33:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:33:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:33:47.976" starttime="20201013 13:33:13.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:33:47.977" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:33:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:33:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:33:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:33:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:33:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-74875CB529BF-&gt;68458292-34b5-473b-b05a-3cd33663444c
2020-10-13 13:33:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:33:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:33:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-13 13:33:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595998055, maxDate=1603200798055, sequenceNumber=3, masterKeyId=2))
2020-10-13 13:33:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 91 92 a9 91 d2 2e 38 91 9a db b1 d4 2e 40 03 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-13 13:33:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595998055, maxDate=1603200798055, sequenceNumber=3, masterKeyId=2)
2020-10-13 13:33:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:33:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:33:18 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:33:18 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:33:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602595803428_0003
2020-10-13 13:33:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 91 92 a9 91 d2 2e 38 91 9a db b1 d4 2e 40 03 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595998055, maxDate=1603200798055, sequenceNumber=3, masterKeyId=2)]
2020-10-13 13:33:19 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:33:19 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:33:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-13 13:33:19 INFO  YarnClientImpl:311 - Submitted application application_1602595803428_0003
2020-10-13 13:33:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602595803428_0003/
2020-10-13 13:33:19 INFO  Job:1619 - Running job: job_1602595803428_0003
2020-10-13 13:33:28 INFO  Job:1640 - Job job_1602595803428_0003 running in uber mode : false
2020-10-13 13:33:28 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:33:39 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:33:41 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:33:42 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:33:46 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:33:47 INFO  Job:1658 - Job job_1602595803428_0003 completed successfully
2020-10-13 13:33:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052773
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50596
		Total time spent by all reduces in occupied slots (ms)=7938
		Total time spent by all map tasks (ms)=25298
		Total time spent by all reduce tasks (ms)=3969
		Total vcore-milliseconds taken by all map tasks=25298
		Total vcore-milliseconds taken by all reduce tasks=3969
		Total megabyte-milliseconds taken by all map tasks=51810304
		Total megabyte-milliseconds taken by all reduce tasks=8128512
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1312
		CPU time spent (ms)=8110
		Physical memory (bytes) snapshot=1156562944
		Virtual memory (bytes) snapshot=14283038720
		Total committed heap usage (bytes)=1002438656
		Peak Map Physical memory (bytes)=290889728
		Peak Map Virtual memory (bytes)=3575545856
		Peak Reduce Physical memory (bytes)=294572032
		Peak Reduce Virtual memory (bytes)=3573743616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.834 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201013 13:33:47.977" starttime="20201013 13:33:47.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:33:47.978" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:33:47.978" starttime="20201013 13:33:47.977"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:47.978" starttime="20201013 13:33:13.853"></status>
</kw>
<msg timestamp="20201013 13:33:47.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:33:47.978" starttime="20201013 13:33:13.853"></status>
</kw>
<msg timestamp="20201013 13:33:47.979" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:33:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:33:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:33:47.979" starttime="20201013 13:33:13.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:33:47.980" starttime="20201013 13:33:47.979"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:33:47.980" critical="yes" starttime="20201013 13:33:13.832"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:33:47.985" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:33:47.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:33:47.996" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:47.996" starttime="20201013 13:33:47.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:33:47.997" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:47.997" starttime="20201013 13:33:47.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:33:47.998" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:33:47.998" starttime="20201013 13:33:47.997"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:47.998" starttime="20201013 13:33:47.983"></status>
</kw>
<msg timestamp="20201013 13:33:47.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:33:47.998" starttime="20201013 13:33:47.982"></status>
</kw>
<msg timestamp="20201013 13:33:47.999" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:47.999" starttime="20201013 13:33:47.982"></status>
</kw>
<msg timestamp="20201013 13:33:47.999" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:33:47.999" starttime="20201013 13:33:47.981"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:33:48.000" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201013 13:33:48.000" starttime="20201013 13:33:47.999"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:33:48.003" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:33:48.003" starttime="20201013 13:33:48.003"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:33:48.004" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:33:48.004" starttime="20201013 13:33:48.004"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.004" starttime="20201013 13:33:48.002"></status>
</kw>
<msg timestamp="20201013 13:33:48.004" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:33:48.004" starttime="20201013 13:33:48.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:33:48.005" starttime="20201013 13:33:48.005"></status>
</kw>
<msg timestamp="20201013 13:33:48.006" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:33:48.006" starttime="20201013 13:33:48.005"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.006" starttime="20201013 13:33:48.001"></status>
</kw>
<msg timestamp="20201013 13:33:48.006" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:33:48.006" starttime="20201013 13:33:48.001"></status>
</kw>
<msg timestamp="20201013 13:33:48.006" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:33:48.006" starttime="20201013 13:33:48.000"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:33:48.010" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:33:48.010" starttime="20201013 13:33:48.009"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:33:48.010" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:33:48.010" starttime="20201013 13:33:48.010"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.011" starttime="20201013 13:33:48.009"></status>
</kw>
<msg timestamp="20201013 13:33:48.011" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:33:48.011" starttime="20201013 13:33:48.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:33:48.012" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201013 13:33:48.013" starttime="20201013 13:33:48.012"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:33:48.013" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201013 13:33:48.013" starttime="20201013 13:33:48.013"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.013" starttime="20201013 13:33:48.011"></status>
</kw>
<msg timestamp="20201013 13:33:48.013" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201013 13:33:48.014" starttime="20201013 13:33:48.011"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.014" starttime="20201013 13:33:48.008"></status>
</kw>
<msg timestamp="20201013 13:33:48.014" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:33:48.014" starttime="20201013 13:33:48.007"></status>
</kw>
<msg timestamp="20201013 13:33:48.014" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:33:48.014" starttime="20201013 13:33:48.006"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:33:48.017" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:33:48.017" starttime="20201013 13:33:48.017"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:33:48.018" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:33:48.018" starttime="20201013 13:33:48.017"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.018" starttime="20201013 13:33:48.016"></status>
</kw>
<msg timestamp="20201013 13:33:48.018" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:33:48.018" starttime="20201013 13:33:48.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:33:48.020" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201013 13:33:48.020" starttime="20201013 13:33:48.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:33:48.020" level="INFO">${result} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201013 13:33:48.020" starttime="20201013 13:33:48.020"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.020" starttime="20201013 13:33:48.019"></status>
</kw>
<msg timestamp="20201013 13:33:48.021" level="INFO">${path_with_leading} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201013 13:33:48.021" starttime="20201013 13:33:48.018"></status>
</kw>
<status status="PASS" endtime="20201013 13:33:48.021" starttime="20201013 13:33:48.015"></status>
</kw>
<msg timestamp="20201013 13:33:48.021" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201013 13:33:48.021" starttime="20201013 13:33:48.015"></status>
</kw>
<msg timestamp="20201013 13:33:48.021" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201013 13:33:48.021" starttime="20201013 13:33:48.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:33:48.024" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:34:19.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:34:19.993" level="INFO">${output} = 2020-10-13 13:33:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:33:50 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201013 13:34:19.993" starttime="20201013 13:33:48.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:34:19.994" level="INFO">2020-10-13 13:33:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:33:50 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-13 13:33:50 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602596030504, maxDate=1603200830504, sequenceNumber=4, masterKeyId=2))
2020-10-13 13:33:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca 8f ab 91 d2 2e 38 ca 97 dd b1 d4 2e 40 04 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-13 13:33:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602596030504, maxDate=1603200830504, sequenceNumber=4, masterKeyId=2)
2020-10-13 13:33:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:33:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:33:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:33:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:33:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:33:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CEE5C08A96F6-&gt;68458292-34b5-473b-b05a-3cd33663444c
2020-10-13 13:33:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:33:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:33:52 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:33:52 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:33:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602595803428_0004
2020-10-13 13:33:52 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca 8f ab 91 d2 2e 38 ca 97 dd b1 d4 2e 40 04 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602596030504, maxDate=1603200830504, sequenceNumber=4, masterKeyId=2)]
2020-10-13 13:33:52 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:33:52 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:33:52 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-13 13:33:53 INFO  YarnClientImpl:311 - Submitted application application_1602595803428_0004
2020-10-13 13:33:54 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602595803428_0004/
2020-10-13 13:33:54 INFO  Job:1619 - Running job: job_1602595803428_0004
2020-10-13 13:34:02 INFO  Job:1640 - Job job_1602595803428_0004 running in uber mode : false
2020-10-13 13:34:02 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:34:12 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:34:13 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:34:14 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:34:18 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:34:19 INFO  Job:1658 - Job job_1602595803428_0004 completed successfully
2020-10-13 13:34:19 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44464
		Total time spent by all reduces in occupied slots (ms)=7774
		Total time spent by all map tasks (ms)=22232
		Total time spent by all reduce tasks (ms)=3887
		Total vcore-milliseconds taken by all map tasks=22232
		Total vcore-milliseconds taken by all reduce tasks=3887
		Total megabyte-milliseconds taken by all map tasks=45531136
		Total megabyte-milliseconds taken by all reduce tasks=7960576
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=999
		CPU time spent (ms)=7990
		Physical memory (bytes) snapshot=1205317632
		Virtual memory (bytes) snapshot=14274252800
		Total committed heap usage (bytes)=1064828928
		Peak Map Physical memory (bytes)=372985856
		Peak Map Virtual memory (bytes)=3571585024
		Peak Reduce Physical memory (bytes)=288747520
		Peak Reduce Virtual memory (bytes)=3576541184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201013 13:34:19.994" starttime="20201013 13:34:19.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:34:19.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:34:19.995" starttime="20201013 13:34:19.994"></status>
</kw>
<status status="PASS" endtime="20201013 13:34:19.995" starttime="20201013 13:33:48.022"></status>
</kw>
<msg timestamp="20201013 13:34:19.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:34:19.995" starttime="20201013 13:33:48.022"></status>
</kw>
<msg timestamp="20201013 13:34:19.996" level="INFO">${output} = 2020-10-13 13:33:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:33:50 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201013 13:34:19.996" starttime="20201013 13:33:48.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:34:19.997" starttime="20201013 13:34:19.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:34:19.997" starttime="20201013 13:34:19.997"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:34:19.997" critical="yes" starttime="20201013 13:33:47.981"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:34:19.998" starttime="20201013 13:33:13.788"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:48.744" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:31:48.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:31:48.751" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:31:48.751" starttime="20201013 13:31:48.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:31:48.752" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:31:48.752" starttime="20201013 13:31:48.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:31:48.753" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:31:48.753" starttime="20201013 13:31:48.752"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:48.753" starttime="20201013 13:31:48.742"></status>
</kw>
<msg timestamp="20201013 13:31:48.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:31:48.753" starttime="20201013 13:31:48.742"></status>
</kw>
<msg timestamp="20201013 13:31:48.753" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:31:48.753" starttime="20201013 13:31:48.742"></status>
</kw>
<msg timestamp="20201013 13:31:48.753" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:31:48.753" starttime="20201013 13:31:48.741"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:31:48.756" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:31:48.757" starttime="20201013 13:31:48.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:31:48.757" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:31:48.757" starttime="20201013 13:31:48.757"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:48.757" starttime="20201013 13:31:48.756"></status>
</kw>
<msg timestamp="20201013 13:31:48.757" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:31:48.757" starttime="20201013 13:31:48.755"></status>
</kw>
<status status="PASS" endtime="20201013 13:31:48.758" starttime="20201013 13:31:48.755"></status>
</kw>
<msg timestamp="20201013 13:31:48.758" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:31:48.758" starttime="20201013 13:31:48.754"></status>
</kw>
<msg timestamp="20201013 13:31:48.758" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:31:48.758" starttime="20201013 13:31:48.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:31:48.760" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:32:23.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:32:23.511" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:31:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:31:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:32:23.511" starttime="20201013 13:31:48.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:32:23.512" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:31:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:31:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:31:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:31:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:31:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FF8229F70F69-&gt;68458292-34b5-473b-b05a-3cd33663444c
2020-10-13 13:31:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:31:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:31:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-13 13:31:52 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595912840, maxDate=1603200712840, sequenceNumber=1, masterKeyId=2))
2020-10-13 13:31:52 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fb f6 a3 91 d2 2e 38 fb fe d5 b1 d4 2e 40 01 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-13 13:31:52 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595912840, maxDate=1603200712840, sequenceNumber=1, masterKeyId=2)
2020-10-13 13:31:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:31:53 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:31:53 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:31:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602595803428_0001
2020-10-13 13:31:53 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fb f6 a3 91 d2 2e 38 fb fe d5 b1 d4 2e 40 01 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595912840, maxDate=1603200712840, sequenceNumber=1, masterKeyId=2)]
2020-10-13 13:31:53 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:31:53 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:31:53 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-13 13:31:55 INFO  YarnClientImpl:311 - Submitted application application_1602595803428_0001
2020-10-13 13:31:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602595803428_0001/
2020-10-13 13:31:55 INFO  Job:1619 - Running job: job_1602595803428_0001
2020-10-13 13:32:05 INFO  Job:1640 - Job job_1602595803428_0001 running in uber mode : false
2020-10-13 13:32:05 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:32:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:32:17 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:32:21 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:32:22 INFO  Job:1658 - Job job_1602595803428_0001 completed successfully
2020-10-13 13:32:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41748
		Total time spent by all reduces in occupied slots (ms)=7492
		Total time spent by all map tasks (ms)=20874
		Total time spent by all reduce tasks (ms)=3746
		Total vcore-milliseconds taken by all map tasks=20874
		Total vcore-milliseconds taken by all reduce tasks=3746
		Total megabyte-milliseconds taken by all map tasks=42749952
		Total megabyte-milliseconds taken by all reduce tasks=7671808
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1062
		CPU time spent (ms)=6280
		Physical memory (bytes) snapshot=1106829312
		Virtual memory (bytes) snapshot=14275657728
		Total committed heap usage (bytes)=1010827264
		Peak Map Physical memory (bytes)=289959936
		Peak Map Virtual memory (bytes)=3578716160
		Peak Reduce Physical memory (bytes)=270544896
		Peak Reduce Virtual memory (bytes)=3566231552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.728 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201013 13:32:23.512" starttime="20201013 13:32:23.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:32:23.513" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:32:23.513" starttime="20201013 13:32:23.513"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.513" starttime="20201013 13:31:48.759"></status>
</kw>
<msg timestamp="20201013 13:32:23.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:32:23.514" starttime="20201013 13:31:48.759"></status>
</kw>
<msg timestamp="20201013 13:32:23.514" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:31:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:31:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:32:23.514" starttime="20201013 13:31:48.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:32:23.515" starttime="20201013 13:32:23.514"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:32:23.515" critical="yes" starttime="20201013 13:31:48.741"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:32:23.520" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:32:23.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:32:23.526" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:32:23.526" starttime="20201013 13:32:23.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:32:23.527" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:32:23.527" starttime="20201013 13:32:23.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:32:23.527" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:32:23.527" starttime="20201013 13:32:23.527"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.527" starttime="20201013 13:32:23.517"></status>
</kw>
<msg timestamp="20201013 13:32:23.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:32:23.528" starttime="20201013 13:32:23.517"></status>
</kw>
<msg timestamp="20201013 13:32:23.528" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:32:23.528" starttime="20201013 13:32:23.517"></status>
</kw>
<msg timestamp="20201013 13:32:23.528" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:32:23.528" starttime="20201013 13:32:23.516"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:32:23.529" level="INFO">${random} = 04</msg>
<status status="PASS" endtime="20201013 13:32:23.529" starttime="20201013 13:32:23.528"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:32:23.532" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:32:23.532" starttime="20201013 13:32:23.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:32:23.533" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:32:23.533" starttime="20201013 13:32:23.532"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.533" starttime="20201013 13:32:23.531"></status>
</kw>
<msg timestamp="20201013 13:32:23.533" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:32:23.533" starttime="20201013 13:32:23.531"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.534" starttime="20201013 13:32:23.530"></status>
</kw>
<msg timestamp="20201013 13:32:23.534" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:32:23.534" starttime="20201013 13:32:23.529"></status>
</kw>
<msg timestamp="20201013 13:32:23.534" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:32:23.534" starttime="20201013 13:32:23.529"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:32:23.537" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:32:23.537" starttime="20201013 13:32:23.537"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:32:23.538" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:32:23.538" starttime="20201013 13:32:23.537"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.538" starttime="20201013 13:32:23.536"></status>
</kw>
<msg timestamp="20201013 13:32:23.538" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:32:23.538" starttime="20201013 13:32:23.536"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.538" starttime="20201013 13:32:23.535"></status>
</kw>
<msg timestamp="20201013 13:32:23.539" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:32:23.539" starttime="20201013 13:32:23.535"></status>
</kw>
<msg timestamp="20201013 13:32:23.539" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:32:23.539" starttime="20201013 13:32:23.534"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:32:23.542" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:32:23.542" starttime="20201013 13:32:23.541"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:32:23.542" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:32:23.542" starttime="20201013 13:32:23.542"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.543" starttime="20201013 13:32:23.541"></status>
</kw>
<msg timestamp="20201013 13:32:23.543" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:32:23.543" starttime="20201013 13:32:23.540"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:23.543" starttime="20201013 13:32:23.540"></status>
</kw>
<msg timestamp="20201013 13:32:23.543" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201013 13:32:23.543" starttime="20201013 13:32:23.539"></status>
</kw>
<msg timestamp="20201013 13:32:23.543" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201013 13:32:23.543" starttime="20201013 13:32:23.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:32:23.555" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-04.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:32:56.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:32:56.808" level="INFO">${output} = 2020-10-13 13:32:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:32:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201013 13:32:56.808" starttime="20201013 13:32:23.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:32:56.809" level="INFO">2020-10-13 13:32:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:32:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-13 13:32:26 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595946082, maxDate=1603200746082, sequenceNumber=2, masterKeyId=2))
2020-10-13 13:32:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 fb a5 91 d2 2e 38 e4 83 d8 b1 d4 2e 40 02 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-13 13:32:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595946082, maxDate=1603200746082, sequenceNumber=2, masterKeyId=2)
2020-10-13 13:32:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:32:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:32:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:32:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:32:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:32:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FE0360BE8656-&gt;68458292-34b5-473b-b05a-3cd33663444c
2020-10-13 13:32:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:32:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:32:28 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:32:28 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:32:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602595803428_0002
2020-10-13 13:32:28 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 fb a5 91 d2 2e 38 e4 83 d8 b1 d4 2e 40 02 48 01 5a 0d 32 39 33 34 33 30 36 39 31 39 31 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602595946082, maxDate=1603200746082, sequenceNumber=2, masterKeyId=2)]
2020-10-13 13:32:28 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:32:28 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:32:28 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-13 13:32:29 INFO  YarnClientImpl:311 - Submitted application application_1602595803428_0002
2020-10-13 13:32:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602595803428_0002/
2020-10-13 13:32:29 INFO  Job:1619 - Running job: job_1602595803428_0002
2020-10-13 13:32:38 INFO  Job:1640 - Job job_1602595803428_0002 running in uber mode : false
2020-10-13 13:32:38 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:32:48 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:32:50 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:32:51 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:32:55 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:32:56 INFO  Job:1658 - Job job_1602595803428_0002 completed successfully
2020-10-13 13:32:56 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46384
		Total time spent by all reduces in occupied slots (ms)=8262
		Total time spent by all map tasks (ms)=23192
		Total time spent by all reduce tasks (ms)=4131
		Total vcore-milliseconds taken by all map tasks=23192
		Total vcore-milliseconds taken by all reduce tasks=4131
		Total megabyte-milliseconds taken by all map tasks=47497216
		Total megabyte-milliseconds taken by all reduce tasks=8460288
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1114
		CPU time spent (ms)=8100
		Physical memory (bytes) snapshot=1329233920
		Virtual memory (bytes) snapshot=14298234880
		Total committed heap usage (bytes)=1130364928
		Peak Map Physical memory (bytes)=375414784
		Peak Map Virtual memory (bytes)=3579314176
		Peak Reduce Physical memory (bytes)=371212288
		Peak Reduce Virtual memory (bytes)=3576360960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201013 13:32:56.809" starttime="20201013 13:32:56.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:32:56.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:32:56.810" starttime="20201013 13:32:56.810"></status>
</kw>
<status status="PASS" endtime="20201013 13:32:56.811" starttime="20201013 13:32:23.544"></status>
</kw>
<msg timestamp="20201013 13:32:56.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:32:56.811" starttime="20201013 13:32:23.544"></status>
</kw>
<msg timestamp="20201013 13:32:56.812" level="INFO">${output} = 2020-10-13 13:32:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-10-13 13:32:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201013 13:32:56.812" starttime="20201013 13:32:23.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:32:56.812" starttime="20201013 13:32:56.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:32:56.813" starttime="20201013 13:32:56.812"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:32:56.813" critical="yes" starttime="20201013 13:32:23.516"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:32:56.814" starttime="20201013 13:31:48.697"></status>
</suite>
<status status="PASS" elapsedtime="189810" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
