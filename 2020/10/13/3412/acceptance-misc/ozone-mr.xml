<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201013 13:13:52.149" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:09.764" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:12.010" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:00:12.010" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:00:12.010" starttime="20201013 13:00:09.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:12.012" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:00:12.012" starttime="20201013 13:00:12.011"></status>
</kw>
<msg timestamp="20201013 13:00:12.012" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:00:12.012" starttime="20201013 13:00:09.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:12.018" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:14.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:14.233" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:14.233" starttime="20201013 13:00:12.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:14.234" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:14.234" starttime="20201013 13:00:14.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:14.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:14.235" starttime="20201013 13:00:14.234"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:14.235" starttime="20201013 13:00:12.014"></status>
</kw>
<msg timestamp="20201013 13:00:14.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:14.235" starttime="20201013 13:00:12.014"></status>
</kw>
<msg timestamp="20201013 13:00:14.235" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201013 13:00:14.235" starttime="20201013 13:00:12.013"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201013 13:00:14.236" starttime="20201013 13:00:14.236"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:14.236" starttime="20201013 13:00:12.013"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:14.236" starttime="20201013 13:00:12.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:14.241" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:16.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:16.361" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:16.361" starttime="20201013 13:00:14.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:16.362" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:16.362" starttime="20201013 13:00:16.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:16.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:16.362" starttime="20201013 13:00:16.362"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:16.363" starttime="20201013 13:00:14.239"></status>
</kw>
<msg timestamp="20201013 13:00:16.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:16.363" starttime="20201013 13:00:14.238"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:16.363" starttime="20201013 13:00:14.237"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:16.363" starttime="20201013 13:00:14.237"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:16.363" starttime="20201013 13:00:14.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201013 13:00:16.364" starttime="20201013 13:00:16.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:16.368" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:18.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:18.689" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:00:16.214Z",
  "modificat...</msg>
<status status="PASS" endtime="20201013 13:00:18.689" starttime="20201013 13:00:16.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:18.691" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:00:16.214Z",
  "modificationTime" : "2020-10-13T13:00:16.214Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201013 13:00:18.691" starttime="20201013 13:00:18.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:18.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:18.691" starttime="20201013 13:00:18.691"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:18.692" starttime="20201013 13:00:16.365"></status>
</kw>
<msg timestamp="20201013 13:00:18.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:18.692" starttime="20201013 13:00:16.365"></status>
</kw>
<msg timestamp="20201013 13:00:18.692" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:00:16.214Z",
  "modificat...</msg>
<status status="PASS" endtime="20201013 13:00:18.692" starttime="20201013 13:00:16.364"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201013 13:00:18.693" starttime="20201013 13:00:18.692"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:00:18.696" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:00:18.697" starttime="20201013 13:00:18.696"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:00:18.697" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:00:18.697" starttime="20201013 13:00:18.697"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:18.697" starttime="20201013 13:00:18.696"></status>
</kw>
<msg timestamp="20201013 13:00:18.697" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:00:18.697" starttime="20201013 13:00:18.695"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:18.698" starttime="20201013 13:00:18.694"></status>
</kw>
<msg timestamp="20201013 13:00:18.698" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:00:18.698" starttime="20201013 13:00:18.694"></status>
</kw>
<msg timestamp="20201013 13:00:18.698" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:00:18.698" starttime="20201013 13:00:18.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:18.702" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:20.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:20.893" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:20.893" starttime="20201013 13:00:18.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:20.895" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:20.895" starttime="20201013 13:00:20.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:20.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:20.895" starttime="20201013 13:00:20.895"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:20.896" starttime="20201013 13:00:18.699"></status>
</kw>
<msg timestamp="20201013 13:00:20.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:20.896" starttime="20201013 13:00:18.699"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:20.896" starttime="20201013 13:00:18.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:20.901" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:27.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:27.010" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:27.010" starttime="20201013 13:00:20.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:27.011" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:27.011" starttime="20201013 13:00:27.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:27.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:27.012" starttime="20201013 13:00:27.011"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:27.012" starttime="20201013 13:00:20.897"></status>
</kw>
<msg timestamp="20201013 13:00:27.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:27.012" starttime="20201013 13:00:20.897"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:27.012" starttime="20201013 13:00:20.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:27.016" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:31.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:31.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:31.379" starttime="20201013 13:00:27.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:31.380" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:31.380" starttime="20201013 13:00:31.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:31.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:31.381" starttime="20201013 13:00:31.380"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:31.381" starttime="20201013 13:00:27.013"></status>
</kw>
<msg timestamp="20201013 13:00:31.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:31.381" starttime="20201013 13:00:27.013"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:31.382" starttime="20201013 13:00:27.012"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:31.386" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:35.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:35.361" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:35.362" starttime="20201013 13:00:31.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:35.363" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:35.363" starttime="20201013 13:00:35.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:35.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:35.363" starttime="20201013 13:00:35.363"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:35.364" starttime="20201013 13:00:31.383"></status>
</kw>
<msg timestamp="20201013 13:00:35.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:35.364" starttime="20201013 13:00:31.382"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:35.364" starttime="20201013 13:00:31.382"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:00:35.364" critical="yes" starttime="20201013 13:00:09.758"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:00:35.370" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:00:35.370" starttime="20201013 13:00:35.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:00:35.371" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:00:35.371" starttime="20201013 13:00:35.370"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:35.371" starttime="20201013 13:00:35.369"></status>
</kw>
<msg timestamp="20201013 13:00:35.371" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:00:35.371" starttime="20201013 13:00:35.368"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:35.371" starttime="20201013 13:00:35.368"></status>
</kw>
<msg timestamp="20201013 13:00:35.371" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:00:35.371" starttime="20201013 13:00:35.367"></status>
</kw>
<msg timestamp="20201013 13:00:35.371" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:00:35.372" starttime="20201013 13:00:35.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:35.375" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:37.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:37.573" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:37.573" starttime="20201013 13:00:35.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:37.574" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:37.574" starttime="20201013 13:00:37.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:37.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:37.574" starttime="20201013 13:00:37.574"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:37.575" starttime="20201013 13:00:35.372"></status>
</kw>
<msg timestamp="20201013 13:00:37.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:37.575" starttime="20201013 13:00:35.372"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:37.575" starttime="20201013 13:00:35.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:37.579" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:39.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:39.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:00:39.696" starttime="20201013 13:00:37.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:39.698" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:00:39.698" starttime="20201013 13:00:39.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:39.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:39.698" starttime="20201013 13:00:39.698"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:39.699" starttime="20201013 13:00:37.576"></status>
</kw>
<msg timestamp="20201013 13:00:39.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:39.699" starttime="20201013 13:00:37.576"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:39.699" starttime="20201013 13:00:37.575"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:00:39.699" critical="yes" starttime="20201013 13:00:35.366"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201013 13:00:39.701" starttime="20201013 13:00:09.701"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:02:10.563" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:02:10.563" starttime="20201013 13:02:10.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:02:10.564" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:02:10.564" starttime="20201013 13:02:10.563"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:10.564" starttime="20201013 13:02:10.562"></status>
</kw>
<msg timestamp="20201013 13:02:10.564" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:02:10.564" starttime="20201013 13:02:10.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:02:10.565" starttime="20201013 13:02:10.565"></status>
</kw>
<msg timestamp="20201013 13:02:10.565" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:02:10.565" starttime="20201013 13:02:10.564"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:10.565" starttime="20201013 13:02:10.562"></status>
</kw>
<msg timestamp="20201013 13:02:10.565" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:02:10.565" starttime="20201013 13:02:10.561"></status>
</kw>
<msg timestamp="20201013 13:02:10.566" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:02:10.566" starttime="20201013 13:02:10.560"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:02:10.566" level="INFO">${random} = 38496</msg>
<status status="PASS" endtime="20201013 13:02:10.566" starttime="20201013 13:02:10.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:02:10.571" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-38496 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:02:14.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:02:14.004" level="INFO">${output} = 2020-10-13 13:02:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:02:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 ...</msg>
<status status="PASS" endtime="20201013 13:02:14.004" starttime="20201013 13:02:10.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:02:14.005" level="INFO">2020-10-13 13:02:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:02:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 13:02:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-13 13:02:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:02:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4B99E2745ECE-&gt;6004a398-c12d-4a85-9630-883264c696e3
2020-10-13 13:02:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201013 13:02:14.005" starttime="20201013 13:02:14.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:02:14.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:02:14.006" starttime="20201013 13:02:14.005"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:14.006" starttime="20201013 13:02:10.567"></status>
</kw>
<msg timestamp="20201013 13:02:14.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:02:14.006" starttime="20201013 13:02:10.567"></status>
</kw>
<msg timestamp="20201013 13:02:14.006" level="INFO">${result} = 2020-10-13 13:02:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:02:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 ...</msg>
<status status="PASS" endtime="20201013 13:02:14.006" starttime="20201013 13:02:10.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:02:14.010" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:02:15.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:02:15.924" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-13 13:02 ofs://om/volume1/bucket1/ozone-38496
-rw-...</msg>
<status status="PASS" endtime="20201013 13:02:15.924" starttime="20201013 13:02:14.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:02:15.925" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-13 13:02 ofs://om/volume1/bucket1/ozone-38496
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-13 13:00 ofs://om/volume1/bucket1/ozone-88479
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:01 ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201013 13:02:15.926" starttime="20201013 13:02:15.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:02:15.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:02:15.926" starttime="20201013 13:02:15.926"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:15.926" starttime="20201013 13:02:14.007"></status>
</kw>
<msg timestamp="20201013 13:02:15.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:02:15.927" starttime="20201013 13:02:14.007"></status>
</kw>
<msg timestamp="20201013 13:02:15.927" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-13 13:02 ofs://om/volume1/bucket1/ozone-38496
-rw-...</msg>
<status status="PASS" endtime="20201013 13:02:15.927" starttime="20201013 13:02:14.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:02:15.927" starttime="20201013 13:02:15.927"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:02:15.928" critical="yes" starttime="20201013 13:02:10.559"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:02:15.928" starttime="20201013 13:02:10.512"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:00:44.541" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:00:44.542" starttime="20201013 13:00:44.541"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:00:44.542" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:00:44.542" starttime="20201013 13:00:44.542"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:44.542" starttime="20201013 13:00:44.541"></status>
</kw>
<msg timestamp="20201013 13:00:44.542" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:00:44.542" starttime="20201013 13:00:44.540"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:44.542" starttime="20201013 13:00:44.540"></status>
</kw>
<msg timestamp="20201013 13:00:44.543" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:00:44.543" starttime="20201013 13:00:44.539"></status>
</kw>
<msg timestamp="20201013 13:00:44.543" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:00:44.543" starttime="20201013 13:00:44.538"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:00:44.543" level="INFO">${random} = 88479</msg>
<status status="PASS" endtime="20201013 13:00:44.543" starttime="20201013 13:00:44.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:44.548" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-88479 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:48.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:48.091" level="INFO">${output} = 2020-10-13 13:00:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:00:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 ...</msg>
<status status="PASS" endtime="20201013 13:00:48.091" starttime="20201013 13:00:44.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:48.092" level="INFO">2020-10-13 13:00:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:00:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 13:00:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-13 13:00:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:00:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-31DB238AB236-&gt;6004a398-c12d-4a85-9630-883264c696e3
2020-10-13 13:00:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201013 13:00:48.092" starttime="20201013 13:00:48.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:48.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:48.093" starttime="20201013 13:00:48.092"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:48.093" starttime="20201013 13:00:44.544"></status>
</kw>
<msg timestamp="20201013 13:00:48.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:48.093" starttime="20201013 13:00:44.544"></status>
</kw>
<msg timestamp="20201013 13:00:48.093" level="INFO">${result} = 2020-10-13 13:00:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:00:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 ...</msg>
<status status="PASS" endtime="20201013 13:00:48.093" starttime="20201013 13:00:44.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:48.096" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:49.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:49.864" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-13 13:00 o3fs://bucket1.volume1.om/ozone-88479
dr...</msg>
<status status="PASS" endtime="20201013 13:00:49.864" starttime="20201013 13:00:48.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:49.866" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-13 13:00 o3fs://bucket1.volume1.om/ozone-88479
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:00:49.866" starttime="20201013 13:00:49.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:49.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:49.866" starttime="20201013 13:00:49.866"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:49.866" starttime="20201013 13:00:48.094"></status>
</kw>
<msg timestamp="20201013 13:00:49.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:49.867" starttime="20201013 13:00:48.094"></status>
</kw>
<msg timestamp="20201013 13:00:49.867" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-13 13:00 o3fs://bucket1.volume1.om/ozone-88479
dr...</msg>
<status status="PASS" endtime="20201013 13:00:49.867" starttime="20201013 13:00:48.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:00:49.867" starttime="20201013 13:00:49.867"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:00:49.868" critical="yes" starttime="20201013 13:00:44.536"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:00:49.869" starttime="20201013 13:00:44.489"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:02:20.837" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:02:20.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:02:20.843" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:20.843" starttime="20201013 13:02:20.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:02:20.844" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:20.844" starttime="20201013 13:02:20.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:02:20.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:02:20.844" starttime="20201013 13:02:20.844"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:20.845" starttime="20201013 13:02:20.832"></status>
</kw>
<msg timestamp="20201013 13:02:20.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:02:20.845" starttime="20201013 13:02:20.832"></status>
</kw>
<msg timestamp="20201013 13:02:20.845" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:20.845" starttime="20201013 13:02:20.832"></status>
</kw>
<msg timestamp="20201013 13:02:20.845" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:20.845" starttime="20201013 13:02:20.831"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:02:20.849" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:02:20.849" starttime="20201013 13:02:20.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:02:20.849" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:02:20.849" starttime="20201013 13:02:20.849"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:20.850" starttime="20201013 13:02:20.848"></status>
</kw>
<msg timestamp="20201013 13:02:20.850" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:02:20.850" starttime="20201013 13:02:20.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:02:20.851" starttime="20201013 13:02:20.850"></status>
</kw>
<msg timestamp="20201013 13:02:20.851" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:02:20.851" starttime="20201013 13:02:20.850"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:20.851" starttime="20201013 13:02:20.847"></status>
</kw>
<msg timestamp="20201013 13:02:20.851" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:02:20.851" starttime="20201013 13:02:20.846"></status>
</kw>
<msg timestamp="20201013 13:02:20.851" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:02:20.851" starttime="20201013 13:02:20.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:02:20.856" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:02:54.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:02:54.148" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:02:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:02:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201013 13:02:54.148" starttime="20201013 13:02:20.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:02:54.149" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:02:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:02:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 13:02:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-13 13:02:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:02:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-39422EEDDEDA-&gt;6004a398-c12d-4a85-9630-883264c696e3
2020-10-13 13:02:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:02:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:02:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:02:24 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-13 13:02:24 INFO  JobSubmitter:198 - number of splits:3
2020-10-13 13:02:24 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602593978824_0003
2020-10-13 13:02:25 INFO  YarnClientImpl:273 - Submitted application application_1602593978824_0003
2020-10-13 13:02:25 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602593978824_0003/
2020-10-13 13:02:25 INFO  Job:1339 - Running job: job_1602593978824_0003
2020-10-13 13:02:32 INFO  Job:1360 - Job job_1602593978824_0003 running in uber mode : false
2020-10-13 13:02:32 INFO  Job:1367 -  map 0% reduce 0%
2020-10-13 13:02:38 INFO  Job:1367 -  map 33% reduce 0%
2020-10-13 13:02:43 INFO  Job:1367 -  map 67% reduce 0%
2020-10-13 13:02:48 INFO  Job:1367 -  map 100% reduce 0%
2020-10-13 13:02:53 INFO  Job:1367 -  map 100% reduce 100%
2020-10-13 13:02:53 INFO  Job:1378 - Job job_1602593978824_0003 completed successfully
2020-10-13 13:02:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39368
		Total time spent by all reduces in occupied slots (ms)=15736
		Total time spent by all map tasks (ms)=9842
		Total time spent by all reduce tasks (ms)=3934
		Total vcore-milliseconds taken by all map tasks=9842
		Total vcore-milliseconds taken by all reduce tasks=3934
		Total megabyte-milliseconds taken by all map tasks=40312832
		Total megabyte-milliseconds taken by all reduce tasks=16113664
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=614
		CPU time spent (ms)=7050
		Physical memory (bytes) snapshot=1133428736
		Virtual memory (bytes) snapshot=16055656448
		Total committed heap usage (bytes)=1055391744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.392 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201013 13:02:54.149" starttime="20201013 13:02:54.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:02:54.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:02:54.150" starttime="20201013 13:02:54.150"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.150" starttime="20201013 13:02:20.852"></status>
</kw>
<msg timestamp="20201013 13:02:54.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:02:54.151" starttime="20201013 13:02:20.852"></status>
</kw>
<msg timestamp="20201013 13:02:54.151" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:02:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:02:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201013 13:02:54.151" starttime="20201013 13:02:20.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:02:54.151" starttime="20201013 13:02:54.151"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:02:54.152" critical="yes" starttime="20201013 13:02:20.831"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:02:54.156" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:02:54.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:02:54.162" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:54.162" starttime="20201013 13:02:54.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:02:54.163" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:54.163" starttime="20201013 13:02:54.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:02:54.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:02:54.163" starttime="20201013 13:02:54.163"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.164" starttime="20201013 13:02:54.154"></status>
</kw>
<msg timestamp="20201013 13:02:54.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:02:54.164" starttime="20201013 13:02:54.154"></status>
</kw>
<msg timestamp="20201013 13:02:54.164" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:54.164" starttime="20201013 13:02:54.153"></status>
</kw>
<msg timestamp="20201013 13:02:54.164" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:02:54.164" starttime="20201013 13:02:54.153"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:02:54.165" level="INFO">${random} = 62</msg>
<status status="PASS" endtime="20201013 13:02:54.165" starttime="20201013 13:02:54.164"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:02:54.168" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:02:54.168" starttime="20201013 13:02:54.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:02:54.169" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:02:54.169" starttime="20201013 13:02:54.169"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.169" starttime="20201013 13:02:54.168"></status>
</kw>
<msg timestamp="20201013 13:02:54.169" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:02:54.169" starttime="20201013 13:02:54.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:02:54.170" starttime="20201013 13:02:54.170"></status>
</kw>
<msg timestamp="20201013 13:02:54.170" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:02:54.170" starttime="20201013 13:02:54.169"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.171" starttime="20201013 13:02:54.166"></status>
</kw>
<msg timestamp="20201013 13:02:54.171" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:02:54.171" starttime="20201013 13:02:54.166"></status>
</kw>
<msg timestamp="20201013 13:02:54.171" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:02:54.171" starttime="20201013 13:02:54.165"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:02:54.173" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:02:54.174" starttime="20201013 13:02:54.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:02:54.174" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:02:54.174" starttime="20201013 13:02:54.174"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.174" starttime="20201013 13:02:54.173"></status>
</kw>
<msg timestamp="20201013 13:02:54.174" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:02:54.174" starttime="20201013 13:02:54.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:02:54.176" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201013 13:02:54.176" starttime="20201013 13:02:54.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:02:54.176" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201013 13:02:54.176" starttime="20201013 13:02:54.176"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.177" starttime="20201013 13:02:54.175"></status>
</kw>
<msg timestamp="20201013 13:02:54.177" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201013 13:02:54.177" starttime="20201013 13:02:54.174"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.177" starttime="20201013 13:02:54.172"></status>
</kw>
<msg timestamp="20201013 13:02:54.177" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:02:54.177" starttime="20201013 13:02:54.171"></status>
</kw>
<msg timestamp="20201013 13:02:54.177" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:02:54.177" starttime="20201013 13:02:54.171"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:02:54.180" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:02:54.180" starttime="20201013 13:02:54.180"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:02:54.181" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:02:54.181" starttime="20201013 13:02:54.180"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.181" starttime="20201013 13:02:54.179"></status>
</kw>
<msg timestamp="20201013 13:02:54.181" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:02:54.181" starttime="20201013 13:02:54.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:02:54.182" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201013 13:02:54.182" starttime="20201013 13:02:54.182"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:02:54.183" level="INFO">${result} = /wordcount-62.txt</msg>
<status status="PASS" endtime="20201013 13:02:54.183" starttime="20201013 13:02:54.182"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.183" starttime="20201013 13:02:54.181"></status>
</kw>
<msg timestamp="20201013 13:02:54.183" level="INFO">${path_with_leading} = /wordcount-62.txt</msg>
<status status="PASS" endtime="20201013 13:02:54.183" starttime="20201013 13:02:54.181"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:54.183" starttime="20201013 13:02:54.178"></status>
</kw>
<msg timestamp="20201013 13:02:54.183" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-62.txt</msg>
<status status="PASS" endtime="20201013 13:02:54.183" starttime="20201013 13:02:54.178"></status>
</kw>
<msg timestamp="20201013 13:02:54.184" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-62.txt</msg>
<status status="PASS" endtime="20201013 13:02:54.184" starttime="20201013 13:02:54.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:02:54.188" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-62.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:03:31.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:03:31.101" level="INFO">${output} = 2020-10-13 13:02:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:02:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201013 13:03:31.101" starttime="20201013 13:02:54.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:03:31.102" level="INFO">2020-10-13 13:02:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:02:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:02:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:02:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 13:02:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-13 13:02:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:02:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C8B55D5A5E2F-&gt;6004a398-c12d-4a85-9630-883264c696e3
2020-10-13 13:02:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:02:57 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-13 13:02:57 INFO  JobSubmitter:198 - number of splits:3
2020-10-13 13:02:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602593978824_0004
2020-10-13 13:02:58 INFO  YarnClientImpl:273 - Submitted application application_1602593978824_0004
2020-10-13 13:02:58 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602593978824_0004/
2020-10-13 13:02:58 INFO  Job:1339 - Running job: job_1602593978824_0004
2020-10-13 13:03:06 INFO  Job:1360 - Job job_1602593978824_0004 running in uber mode : false
2020-10-13 13:03:06 INFO  Job:1367 -  map 0% reduce 0%
2020-10-13 13:03:13 INFO  Job:1367 -  map 33% reduce 0%
2020-10-13 13:03:18 INFO  Job:1367 -  map 67% reduce 0%
2020-10-13 13:03:23 INFO  Job:1367 -  map 100% reduce 0%
2020-10-13 13:03:30 INFO  Job:1367 -  map 100% reduce 100%
2020-10-13 13:03:30 INFO  Job:1378 - Job job_1602593978824_0004 completed successfully
2020-10-13 13:03:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=677009
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42468
		Total time spent by all reduces in occupied slots (ms)=25384
		Total time spent by all map tasks (ms)=10617
		Total time spent by all reduce tasks (ms)=6346
		Total vcore-milliseconds taken by all map tasks=10617
		Total vcore-milliseconds taken by all reduce tasks=6346
		Total megabyte-milliseconds taken by all map tasks=43487232
		Total megabyte-milliseconds taken by all reduce tasks=25993216
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=654
		CPU time spent (ms)=7690
		Physical memory (bytes) snapshot=1123856384
		Virtual memory (bytes) snapshot=16055242752
		Total committed heap usage (bytes)=1014497280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201013 13:03:31.102" starttime="20201013 13:03:31.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:03:31.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:03:31.103" starttime="20201013 13:03:31.102"></status>
</kw>
<status status="PASS" endtime="20201013 13:03:31.103" starttime="20201013 13:02:54.185"></status>
</kw>
<msg timestamp="20201013 13:03:31.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:03:31.103" starttime="20201013 13:02:54.184"></status>
</kw>
<msg timestamp="20201013 13:03:31.104" level="INFO">${output} = 2020-10-13 13:02:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:02:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201013 13:03:31.104" starttime="20201013 13:02:54.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:03:31.105" starttime="20201013 13:03:31.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:03:31.105" starttime="20201013 13:03:31.105"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:03:31.105" critical="yes" starttime="20201013 13:02:54.152"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:03:31.106" starttime="20201013 13:02:20.784"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:54.572" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:00:54.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:00:54.578" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:00:54.578" starttime="20201013 13:00:54.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:00:54.579" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:00:54.579" starttime="20201013 13:00:54.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:00:54.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:00:54.580" starttime="20201013 13:00:54.579"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:54.580" starttime="20201013 13:00:54.567"></status>
</kw>
<msg timestamp="20201013 13:00:54.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:00:54.580" starttime="20201013 13:00:54.567"></status>
</kw>
<msg timestamp="20201013 13:00:54.580" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:00:54.581" starttime="20201013 13:00:54.566"></status>
</kw>
<msg timestamp="20201013 13:00:54.581" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:00:54.581" starttime="20201013 13:00:54.566"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:00:54.584" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:00:54.584" starttime="20201013 13:00:54.583"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:00:54.585" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:00:54.585" starttime="20201013 13:00:54.584"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:54.585" starttime="20201013 13:00:54.583"></status>
</kw>
<msg timestamp="20201013 13:00:54.585" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:00:54.585" starttime="20201013 13:00:54.583"></status>
</kw>
<status status="PASS" endtime="20201013 13:00:54.585" starttime="20201013 13:00:54.582"></status>
</kw>
<msg timestamp="20201013 13:00:54.586" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:00:54.586" starttime="20201013 13:00:54.581"></status>
</kw>
<msg timestamp="20201013 13:00:54.586" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:00:54.586" starttime="20201013 13:00:54.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:00:54.590" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:01:31.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:01:31.372" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:00:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:00:56 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201013 13:01:31.372" starttime="20201013 13:00:54.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:01:31.373" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:00:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:00:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 13:00:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-13 13:00:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:00:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D9C3CB3D8B8-&gt;6004a398-c12d-4a85-9630-883264c696e3
2020-10-13 13:00:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:00:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:00:58 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-13 13:00:58 INFO  JobSubmitter:198 - number of splits:3
2020-10-13 13:00:58 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602593978824_0001
2020-10-13 13:00:59 INFO  YarnClientImpl:273 - Submitted application application_1602593978824_0001
2020-10-13 13:00:59 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602593978824_0001/
2020-10-13 13:00:59 INFO  Job:1339 - Running job: job_1602593978824_0001
2020-10-13 13:01:09 INFO  Job:1360 - Job job_1602593978824_0001 running in uber mode : false
2020-10-13 13:01:09 INFO  Job:1367 -  map 0% reduce 0%
2020-10-13 13:01:14 INFO  Job:1367 -  map 33% reduce 0%
2020-10-13 13:01:19 INFO  Job:1367 -  map 67% reduce 0%
2020-10-13 13:01:24 INFO  Job:1367 -  map 100% reduce 0%
2020-10-13 13:01:29 INFO  Job:1367 -  map 100% reduce 100%
2020-10-13 13:01:30 INFO  Job:1378 - Job job_1602593978824_0001 completed successfully
2020-10-13 13:01:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614469
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40416
		Total time spent by all reduces in occupied slots (ms)=15688
		Total time spent by all map tasks (ms)=10104
		Total time spent by all reduce tasks (ms)=3922
		Total vcore-milliseconds taken by all map tasks=10104
		Total vcore-milliseconds taken by all reduce tasks=3922
		Total megabyte-milliseconds taken by all map tasks=41385984
		Total megabyte-milliseconds taken by all reduce tasks=16064512
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=639
		CPU time spent (ms)=6990
		Physical memory (bytes) snapshot=1136812032
		Virtual memory (bytes) snapshot=16070103040
		Total committed heap usage (bytes)=987234304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.86 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201013 13:01:31.374" starttime="20201013 13:01:31.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:01:31.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:01:31.374" starttime="20201013 13:01:31.374"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.375" starttime="20201013 13:00:54.587"></status>
</kw>
<msg timestamp="20201013 13:01:31.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:01:31.375" starttime="20201013 13:00:54.586"></status>
</kw>
<msg timestamp="20201013 13:01:31.375" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:00:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:00:56 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201013 13:01:31.375" starttime="20201013 13:00:54.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:01:31.376" starttime="20201013 13:01:31.375"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:01:31.376" critical="yes" starttime="20201013 13:00:54.566"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:01:31.380" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:01:31.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:01:31.387" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:01:31.387" starttime="20201013 13:01:31.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:01:31.388" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:01:31.388" starttime="20201013 13:01:31.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:01:31.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:01:31.388" starttime="20201013 13:01:31.388"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.388" starttime="20201013 13:01:31.378"></status>
</kw>
<msg timestamp="20201013 13:01:31.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:01:31.389" starttime="20201013 13:01:31.378"></status>
</kw>
<msg timestamp="20201013 13:01:31.389" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:01:31.389" starttime="20201013 13:01:31.377"></status>
</kw>
<msg timestamp="20201013 13:01:31.389" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201013 13:01:31.389" starttime="20201013 13:01:31.377"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:01:31.390" level="INFO">${random} = 15</msg>
<status status="PASS" endtime="20201013 13:01:31.390" starttime="20201013 13:01:31.389"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:01:31.393" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:01:31.393" starttime="20201013 13:01:31.392"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:01:31.393" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:01:31.393" starttime="20201013 13:01:31.393"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.393" starttime="20201013 13:01:31.392"></status>
</kw>
<msg timestamp="20201013 13:01:31.394" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:01:31.394" starttime="20201013 13:01:31.392"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.394" starttime="20201013 13:01:31.391"></status>
</kw>
<msg timestamp="20201013 13:01:31.394" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:01:31.394" starttime="20201013 13:01:31.390"></status>
</kw>
<msg timestamp="20201013 13:01:31.394" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:01:31.394" starttime="20201013 13:01:31.390"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:01:31.397" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:01:31.397" starttime="20201013 13:01:31.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:01:31.397" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:01:31.397" starttime="20201013 13:01:31.397"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.397" starttime="20201013 13:01:31.396"></status>
</kw>
<msg timestamp="20201013 13:01:31.398" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:01:31.398" starttime="20201013 13:01:31.396"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.398" starttime="20201013 13:01:31.395"></status>
</kw>
<msg timestamp="20201013 13:01:31.398" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:01:31.398" starttime="20201013 13:01:31.395"></status>
</kw>
<msg timestamp="20201013 13:01:31.398" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:01:31.398" starttime="20201013 13:01:31.394"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:01:31.401" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:01:31.401" starttime="20201013 13:01:31.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:01:31.402" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:01:31.402" starttime="20201013 13:01:31.401"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.402" starttime="20201013 13:01:31.400"></status>
</kw>
<msg timestamp="20201013 13:01:31.402" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:01:31.402" starttime="20201013 13:01:31.400"></status>
</kw>
<status status="PASS" endtime="20201013 13:01:31.402" starttime="20201013 13:01:31.399"></status>
</kw>
<msg timestamp="20201013 13:01:31.402" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-15.txt</msg>
<status status="PASS" endtime="20201013 13:01:31.402" starttime="20201013 13:01:31.399"></status>
</kw>
<msg timestamp="20201013 13:01:31.402" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-15.txt</msg>
<status status="PASS" endtime="20201013 13:01:31.402" starttime="20201013 13:01:31.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:01:31.408" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-15.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:02:05.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:02:05.835" level="INFO">${output} = 2020-10-13 13:01:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:01:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201013 13:02:05.835" starttime="20201013 13:01:31.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:02:05.836" level="INFO">2020-10-13 13:01:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:01:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:01:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:01:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-13 13:01:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-13 13:01:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:01:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3880C4C44ECD-&gt;6004a398-c12d-4a85-9630-883264c696e3
2020-10-13 13:01:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:01:35 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-13 13:01:35 INFO  JobSubmitter:198 - number of splits:3
2020-10-13 13:01:35 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602593978824_0002
2020-10-13 13:01:35 INFO  YarnClientImpl:273 - Submitted application application_1602593978824_0002
2020-10-13 13:01:36 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602593978824_0002/
2020-10-13 13:01:36 INFO  Job:1339 - Running job: job_1602593978824_0002
2020-10-13 13:01:44 INFO  Job:1360 - Job job_1602593978824_0002 running in uber mode : false
2020-10-13 13:01:44 INFO  Job:1367 -  map 0% reduce 0%
2020-10-13 13:01:50 INFO  Job:1367 -  map 33% reduce 0%
2020-10-13 13:01:55 INFO  Job:1367 -  map 67% reduce 0%
2020-10-13 13:02:00 INFO  Job:1367 -  map 100% reduce 0%
2020-10-13 13:02:04 INFO  Job:1367 -  map 100% reduce 100%
2020-10-13 13:02:05 INFO  Job:1378 - Job job_1602593978824_0002 completed successfully
2020-10-13 13:02:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=677093
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39920
		Total time spent by all reduces in occupied slots (ms)=14376
		Total time spent by all map tasks (ms)=9980
		Total time spent by all reduce tasks (ms)=3594
		Total vcore-milliseconds taken by all map tasks=9980
		Total vcore-milliseconds taken by all reduce tasks=3594
		Total megabyte-milliseconds taken by all map tasks=40878080
		Total megabyte-milliseconds taken by all reduce tasks=14721024
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=596
		CPU time spent (ms)=7490
		Physical memory (bytes) snapshot=1155919872
		Virtual memory (bytes) snapshot=16079491072
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201013 13:02:05.837" starttime="20201013 13:02:05.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:02:05.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:02:05.837" starttime="20201013 13:02:05.837"></status>
</kw>
<status status="PASS" endtime="20201013 13:02:05.837" starttime="20201013 13:01:31.403"></status>
</kw>
<msg timestamp="20201013 13:02:05.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:02:05.838" starttime="20201013 13:01:31.403"></status>
</kw>
<msg timestamp="20201013 13:02:05.838" level="INFO">${output} = 2020-10-13 13:01:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-13 13:01:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201013 13:02:05.838" starttime="20201013 13:01:31.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:02:05.839" starttime="20201013 13:02:05.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:02:05.839" starttime="20201013 13:02:05.839"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:02:05.839" critical="yes" starttime="20201013 13:01:31.376"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:02:05.841" starttime="20201013 13:00:54.518"></status>
</suite>
<status status="PASS" elapsedtime="182441" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:04:40.282" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:04:42.742" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:04:42.742" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:04:42.742" starttime="20201013 13:04:40.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:04:42.744" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:04:42.744" starttime="20201013 13:04:42.743"></status>
</kw>
<msg timestamp="20201013 13:04:42.744" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:04:42.744" starttime="20201013 13:04:40.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:04:42.750" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:04:45.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:04:45.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:04:45.056" starttime="20201013 13:04:42.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:04:45.057" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:04:45.057" starttime="20201013 13:04:45.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:04:45.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:04:45.058" starttime="20201013 13:04:45.058"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:45.058" starttime="20201013 13:04:42.746"></status>
</kw>
<msg timestamp="20201013 13:04:45.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:04:45.059" starttime="20201013 13:04:42.746"></status>
</kw>
<msg timestamp="20201013 13:04:45.059" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201013 13:04:45.059" starttime="20201013 13:04:42.745"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201013 13:04:45.060" starttime="20201013 13:04:45.059"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:45.060" starttime="20201013 13:04:42.745"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:45.060" starttime="20201013 13:04:42.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:04:45.070" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:04:47.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:04:47.293" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:04:47.294" starttime="20201013 13:04:45.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:04:47.295" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:04:47.295" starttime="20201013 13:04:47.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:04:47.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:04:47.295" starttime="20201013 13:04:47.295"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:47.296" starttime="20201013 13:04:45.062"></status>
</kw>
<msg timestamp="20201013 13:04:47.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:04:47.296" starttime="20201013 13:04:45.061"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:47.296" starttime="20201013 13:04:45.061"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:47.296" starttime="20201013 13:04:45.060"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:47.296" starttime="20201013 13:04:45.060"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201013 13:04:47.297" starttime="20201013 13:04:47.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:04:47.302" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:04:49.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:04:49.883" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:04:47.171Z",
  "modificat...</msg>
<status status="PASS" endtime="20201013 13:04:49.883" starttime="20201013 13:04:47.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:04:49.884" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:04:47.171Z",
  "modificationTime" : "2020-10-13T13:04:47.171Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201013 13:04:49.884" starttime="20201013 13:04:49.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:04:49.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:04:49.885" starttime="20201013 13:04:49.884"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:49.885" starttime="20201013 13:04:47.298"></status>
</kw>
<msg timestamp="20201013 13:04:49.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:04:49.885" starttime="20201013 13:04:47.298"></status>
</kw>
<msg timestamp="20201013 13:04:49.886" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:04:47.171Z",
  "modificat...</msg>
<status status="PASS" endtime="20201013 13:04:49.886" starttime="20201013 13:04:47.297"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201013 13:04:49.886" starttime="20201013 13:04:49.886"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:04:49.890" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:04:49.890" starttime="20201013 13:04:49.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:04:49.890" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:04:49.891" starttime="20201013 13:04:49.890"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:49.891" starttime="20201013 13:04:49.889"></status>
</kw>
<msg timestamp="20201013 13:04:49.891" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:04:49.891" starttime="20201013 13:04:49.888"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:49.891" starttime="20201013 13:04:49.888"></status>
</kw>
<msg timestamp="20201013 13:04:49.891" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:04:49.891" starttime="20201013 13:04:49.887"></status>
</kw>
<msg timestamp="20201013 13:04:49.892" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:04:49.892" starttime="20201013 13:04:49.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:04:49.895" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:04:52.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:04:52.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:04:52.112" starttime="20201013 13:04:49.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:04:52.113" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:04:52.113" starttime="20201013 13:04:52.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:04:52.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:04:52.114" starttime="20201013 13:04:52.114"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:52.115" starttime="20201013 13:04:49.893"></status>
</kw>
<msg timestamp="20201013 13:04:52.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:04:52.115" starttime="20201013 13:04:49.892"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:52.115" starttime="20201013 13:04:49.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:04:52.119" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:04:57.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:04:57.913" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:04:57.913" starttime="20201013 13:04:52.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:04:57.915" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:04:57.915" starttime="20201013 13:04:57.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:04:57.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:04:57.916" starttime="20201013 13:04:57.915"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:57.917" starttime="20201013 13:04:52.116"></status>
</kw>
<msg timestamp="20201013 13:04:57.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:04:57.917" starttime="20201013 13:04:52.116"></status>
</kw>
<status status="PASS" endtime="20201013 13:04:57.917" starttime="20201013 13:04:52.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:04:57.921" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:05:02.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:05:02.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:05:02.442" starttime="20201013 13:04:57.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:05:02.443" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:05:02.443" starttime="20201013 13:05:02.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:05:02.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:05:02.444" starttime="20201013 13:05:02.444"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:02.444" starttime="20201013 13:04:57.918"></status>
</kw>
<msg timestamp="20201013 13:05:02.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:05:02.445" starttime="20201013 13:04:57.918"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:02.445" starttime="20201013 13:04:57.917"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:05:02.449" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:05:06.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:05:06.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:05:06.986" starttime="20201013 13:05:02.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:05:06.987" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:05:06.987" starttime="20201013 13:05:06.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:05:06.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:05:06.988" starttime="20201013 13:05:06.987"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:06.988" starttime="20201013 13:05:02.446"></status>
</kw>
<msg timestamp="20201013 13:05:06.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:05:06.989" starttime="20201013 13:05:02.446"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:06.989" starttime="20201013 13:05:02.445"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:05:06.989" critical="yes" starttime="20201013 13:04:40.276"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:05:06.995" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:05:06.995" starttime="20201013 13:05:06.994"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:05:06.995" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:05:06.995" starttime="20201013 13:05:06.995"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:06.996" starttime="20201013 13:05:06.994"></status>
</kw>
<msg timestamp="20201013 13:05:06.996" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:05:06.996" starttime="20201013 13:05:06.993"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:06.996" starttime="20201013 13:05:06.992"></status>
</kw>
<msg timestamp="20201013 13:05:06.996" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:05:06.996" starttime="20201013 13:05:06.992"></status>
</kw>
<msg timestamp="20201013 13:05:06.996" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:05:06.997" starttime="20201013 13:05:06.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:05:07.000" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:05:09.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:05:09.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:05:09.473" starttime="20201013 13:05:06.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:05:09.474" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:05:09.474" starttime="20201013 13:05:09.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:05:09.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:05:09.475" starttime="20201013 13:05:09.475"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:09.475" starttime="20201013 13:05:06.997"></status>
</kw>
<msg timestamp="20201013 13:05:09.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:05:09.476" starttime="20201013 13:05:06.997"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:09.476" starttime="20201013 13:05:06.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:05:09.480" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:05:11.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:05:11.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:05:11.932" starttime="20201013 13:05:09.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:05:11.934" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:05:11.934" starttime="20201013 13:05:11.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:05:11.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:05:11.934" starttime="20201013 13:05:11.934"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:11.935" starttime="20201013 13:05:09.477"></status>
</kw>
<msg timestamp="20201013 13:05:11.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:05:11.935" starttime="20201013 13:05:09.477"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:11.935" starttime="20201013 13:05:09.476"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:05:11.935" critical="yes" starttime="20201013 13:05:06.990"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201013 13:05:11.936" starttime="20201013 13:04:40.218"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:06:59.451" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:06:59.451" starttime="20201013 13:06:59.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:06:59.451" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:06:59.451" starttime="20201013 13:06:59.451"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:59.451" starttime="20201013 13:06:59.450"></status>
</kw>
<msg timestamp="20201013 13:06:59.451" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:06:59.451" starttime="20201013 13:06:59.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:06:59.452" starttime="20201013 13:06:59.452"></status>
</kw>
<msg timestamp="20201013 13:06:59.452" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:06:59.453" starttime="20201013 13:06:59.452"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:59.453" starttime="20201013 13:06:59.449"></status>
</kw>
<msg timestamp="20201013 13:06:59.453" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:06:59.453" starttime="20201013 13:06:59.448"></status>
</kw>
<msg timestamp="20201013 13:06:59.453" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:06:59.453" starttime="20201013 13:06:59.447"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:06:59.454" level="INFO">${random} = 78196</msg>
<status status="PASS" endtime="20201013 13:06:59.454" starttime="20201013 13:06:59.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:06:59.460" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-78196 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:07:03.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:07:03.155" level="INFO">${output} = 2020-10-13 13:07:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:07:03.155" starttime="20201013 13:06:59.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:07:03.156" level="INFO">2020-10-13 13:07:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-13 13:07:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:07:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:07:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:07:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:07:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-664A622FEA01-&gt;e55674a0-7fc9-4c8c-994e-cdf2765cc11b
2020-10-13 13:07:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:07:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:07:03.156" starttime="20201013 13:07:03.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:07:03.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:07:03.157" starttime="20201013 13:07:03.156"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:03.157" starttime="20201013 13:06:59.454"></status>
</kw>
<msg timestamp="20201013 13:07:03.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:07:03.157" starttime="20201013 13:06:59.454"></status>
</kw>
<msg timestamp="20201013 13:07:03.158" level="INFO">${result} = 2020-10-13 13:07:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:07:03.158" starttime="20201013 13:06:59.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:07:03.161" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:07:05.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:07:05.119" level="INFO">${output} = 2020-10-13 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:07:05.119" starttime="20201013 13:07:03.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:07:05.120" level="INFO">2020-10-13 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-13 13:05 ofs://om/volume1/bucket1/ozone-77801
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-13 13:07 ofs://om/volume1/bucket1/ozone-78196
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:05 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:06 ofs://om/volume1/bucket1/wordcount-61.txt
2020-10-13 13:07:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:07:05.120" starttime="20201013 13:07:05.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:07:05.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:07:05.121" starttime="20201013 13:07:05.121"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:05.121" starttime="20201013 13:07:03.159"></status>
</kw>
<msg timestamp="20201013 13:07:05.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:07:05.122" starttime="20201013 13:07:03.158"></status>
</kw>
<msg timestamp="20201013 13:07:05.122" level="INFO">${result} = 2020-10-13 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:07:05.122" starttime="20201013 13:07:03.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:07:05.122" starttime="20201013 13:07:05.122"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:07:05.122" critical="yes" starttime="20201013 13:06:59.446"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:07:05.124" starttime="20201013 13:06:59.388"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:05:17.177" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:05:17.177" starttime="20201013 13:05:17.174"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:05:17.178" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:05:17.178" starttime="20201013 13:05:17.178"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:17.178" starttime="20201013 13:05:17.173"></status>
</kw>
<msg timestamp="20201013 13:05:17.178" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:05:17.178" starttime="20201013 13:05:17.173"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:17.179" starttime="20201013 13:05:17.172"></status>
</kw>
<msg timestamp="20201013 13:05:17.179" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:05:17.179" starttime="20201013 13:05:17.172"></status>
</kw>
<msg timestamp="20201013 13:05:17.179" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:05:17.179" starttime="20201013 13:05:17.170"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:05:17.179" level="INFO">${random} = 77801</msg>
<status status="PASS" endtime="20201013 13:05:17.179" starttime="20201013 13:05:17.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:05:17.186" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-77801 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:05:21.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:05:21.191" level="INFO">${output} = 2020-10-13 13:05:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:05:21.191" starttime="20201013 13:05:17.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:05:21.193" level="INFO">2020-10-13 13:05:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:19 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-13 13:05:19 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:05:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:05:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:05:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:05:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-765331CF25BA-&gt;e55674a0-7fc9-4c8c-994e-cdf2765cc11b
2020-10-13 13:05:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:05:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:05:21.193" starttime="20201013 13:05:21.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:05:21.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:05:21.193" starttime="20201013 13:05:21.193"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:21.193" starttime="20201013 13:05:17.180"></status>
</kw>
<msg timestamp="20201013 13:05:21.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:05:21.194" starttime="20201013 13:05:17.180"></status>
</kw>
<msg timestamp="20201013 13:05:21.194" level="INFO">${result} = 2020-10-13 13:05:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:05:21.194" starttime="20201013 13:05:17.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:05:21.198" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:05:23.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:05:23.242" level="INFO">${output} = 2020-10-13 13:05:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:05:23.242" starttime="20201013 13:05:21.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:05:23.243" level="INFO">2020-10-13 13:05:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-13 13:05 o3fs://bucket1.volume1.om/ozone-77801
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:05 o3fs://bucket1.volume1.om/user
2020-10-13 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:05:23.244" starttime="20201013 13:05:23.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:05:23.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:05:23.244" starttime="20201013 13:05:23.244"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:23.244" starttime="20201013 13:05:21.195"></status>
</kw>
<msg timestamp="20201013 13:05:23.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:05:23.245" starttime="20201013 13:05:21.195"></status>
</kw>
<msg timestamp="20201013 13:05:23.245" level="INFO">${result} = 2020-10-13 13:05:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:05:23.245" starttime="20201013 13:05:21.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:05:23.245" starttime="20201013 13:05:23.245"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:05:23.246" critical="yes" starttime="20201013 13:05:17.170"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:05:23.247" starttime="20201013 13:05:17.119"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:07:10.216" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:07:10.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:07:10.222" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:10.222" starttime="20201013 13:07:10.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:07:10.223" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:10.223" starttime="20201013 13:07:10.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:07:10.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:07:10.224" starttime="20201013 13:07:10.223"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:10.224" starttime="20201013 13:07:10.211"></status>
</kw>
<msg timestamp="20201013 13:07:10.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:07:10.224" starttime="20201013 13:07:10.211"></status>
</kw>
<msg timestamp="20201013 13:07:10.224" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:10.224" starttime="20201013 13:07:10.211"></status>
</kw>
<msg timestamp="20201013 13:07:10.224" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:10.224" starttime="20201013 13:07:10.210"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:07:10.228" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:07:10.228" starttime="20201013 13:07:10.228"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:07:10.229" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:07:10.229" starttime="20201013 13:07:10.228"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:10.229" starttime="20201013 13:07:10.227"></status>
</kw>
<msg timestamp="20201013 13:07:10.229" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:07:10.229" starttime="20201013 13:07:10.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:07:10.230" starttime="20201013 13:07:10.230"></status>
</kw>
<msg timestamp="20201013 13:07:10.230" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:07:10.230" starttime="20201013 13:07:10.229"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:10.230" starttime="20201013 13:07:10.226"></status>
</kw>
<msg timestamp="20201013 13:07:10.230" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:07:10.230" starttime="20201013 13:07:10.225"></status>
</kw>
<msg timestamp="20201013 13:07:10.231" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:07:10.231" starttime="20201013 13:07:10.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:07:10.234" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:07:51.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:07:51.752" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07...</msg>
<status status="PASS" endtime="20201013 13:07:51.753" starttime="20201013 13:07:10.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:07:51.754" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-13 13:07:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:07:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:07:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:07:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:07:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4795BFFCC8A5-&gt;e55674a0-7fc9-4c8c-994e-cdf2765cc11b
2020-10-13 13:07:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:07:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-13 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:07:14 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:07:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594259640_0003
2020-10-13 13:07:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:07:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:15 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:07:15 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-13 13:07:15 INFO  YarnClientImpl:324 - Submitted application application_1602594259640_0003
2020-10-13 13:07:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594259640_0003/
2020-10-13 13:07:15 INFO  Job:1619 - Running job: job_1602594259640_0003
2020-10-13 13:07:23 INFO  Job:1640 - Job job_1602594259640_0003 running in uber mode : false
2020-10-13 13:07:23 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:07:30 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:07:35 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:07:41 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:07:50 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:07:50 INFO  Job:1658 - Job job_1602594259640_0003 completed successfully
2020-10-13 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020257
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43736
		Total time spent by all reduces in occupied slots (ms)=26496
		Total time spent by all map tasks (ms)=10934
		Total time spent by all reduce tasks (ms)=6624
		Total vcore-milliseconds taken by all map tasks=10934
		Total vcore-milliseconds taken by all reduce tasks=6624
		Total megabyte-milliseconds taken by all map tasks=44785664
		Total megabyte-milliseconds taken by all reduce tasks=27131904
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=643
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1175646208
		Virtual memory (bytes) snapshot=16071933952
		Total committed heap usage (bytes)=1055391744
		Peak Map Physical memory (bytes)=294367232
		Peak Map Virtual memory (bytes)=4015570944
		Peak Reduce Physical memory (bytes)=294760448
		Peak Reduce Virtual memory (bytes)=4030058496
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.4 seconds
2020-10-13 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-13 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:07:51.754" starttime="20201013 13:07:51.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:07:51.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:07:51.754" starttime="20201013 13:07:51.754"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.755" starttime="20201013 13:07:10.231"></status>
</kw>
<msg timestamp="20201013 13:07:51.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:07:51.755" starttime="20201013 13:07:10.231"></status>
</kw>
<msg timestamp="20201013 13:07:51.755" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07...</msg>
<status status="PASS" endtime="20201013 13:07:51.755" starttime="20201013 13:07:10.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:07:51.756" starttime="20201013 13:07:51.756"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:07:51.756" critical="yes" starttime="20201013 13:07:10.210"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:07:51.762" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:07:51.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:07:51.769" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:51.769" starttime="20201013 13:07:51.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:07:51.770" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:51.770" starttime="20201013 13:07:51.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:07:51.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:07:51.771" starttime="20201013 13:07:51.770"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.771" starttime="20201013 13:07:51.760"></status>
</kw>
<msg timestamp="20201013 13:07:51.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:07:51.771" starttime="20201013 13:07:51.759"></status>
</kw>
<msg timestamp="20201013 13:07:51.771" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:51.771" starttime="20201013 13:07:51.759"></status>
</kw>
<msg timestamp="20201013 13:07:51.771" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:07:51.772" starttime="20201013 13:07:51.758"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:07:51.772" level="INFO">${random} = 73</msg>
<status status="PASS" endtime="20201013 13:07:51.772" starttime="20201013 13:07:51.772"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:07:51.776" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:07:51.776" starttime="20201013 13:07:51.775"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:07:51.776" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:07:51.776" starttime="20201013 13:07:51.776"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.776" starttime="20201013 13:07:51.775"></status>
</kw>
<msg timestamp="20201013 13:07:51.776" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:07:51.776" starttime="20201013 13:07:51.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:07:51.777" starttime="20201013 13:07:51.777"></status>
</kw>
<msg timestamp="20201013 13:07:51.777" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:07:51.777" starttime="20201013 13:07:51.777"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.778" starttime="20201013 13:07:51.774"></status>
</kw>
<msg timestamp="20201013 13:07:51.778" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:07:51.778" starttime="20201013 13:07:51.773"></status>
</kw>
<msg timestamp="20201013 13:07:51.778" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:07:51.778" starttime="20201013 13:07:51.772"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:07:51.781" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:07:51.781" starttime="20201013 13:07:51.781"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:07:51.782" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:07:51.782" starttime="20201013 13:07:51.781"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.782" starttime="20201013 13:07:51.780"></status>
</kw>
<msg timestamp="20201013 13:07:51.782" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:07:51.782" starttime="20201013 13:07:51.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:07:51.783" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201013 13:07:51.783" starttime="20201013 13:07:51.783"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:07:51.784" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201013 13:07:51.784" starttime="20201013 13:07:51.783"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.784" starttime="20201013 13:07:51.782"></status>
</kw>
<msg timestamp="20201013 13:07:51.784" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201013 13:07:51.784" starttime="20201013 13:07:51.782"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.784" starttime="20201013 13:07:51.779"></status>
</kw>
<msg timestamp="20201013 13:07:51.784" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:07:51.784" starttime="20201013 13:07:51.779"></status>
</kw>
<msg timestamp="20201013 13:07:51.785" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:07:51.785" starttime="20201013 13:07:51.778"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:07:51.787" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:07:51.788" starttime="20201013 13:07:51.787"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:07:51.788" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:07:51.788" starttime="20201013 13:07:51.788"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.788" starttime="20201013 13:07:51.787"></status>
</kw>
<msg timestamp="20201013 13:07:51.788" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:07:51.788" starttime="20201013 13:07:51.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:07:51.790" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201013 13:07:51.790" starttime="20201013 13:07:51.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:07:51.790" level="INFO">${result} = /wordcount-73.txt</msg>
<status status="PASS" endtime="20201013 13:07:51.790" starttime="20201013 13:07:51.790"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.790" starttime="20201013 13:07:51.789"></status>
</kw>
<msg timestamp="20201013 13:07:51.790" level="INFO">${path_with_leading} = /wordcount-73.txt</msg>
<status status="PASS" endtime="20201013 13:07:51.790" starttime="20201013 13:07:51.789"></status>
</kw>
<status status="PASS" endtime="20201013 13:07:51.791" starttime="20201013 13:07:51.786"></status>
</kw>
<msg timestamp="20201013 13:07:51.791" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201013 13:07:51.791" starttime="20201013 13:07:51.785"></status>
</kw>
<msg timestamp="20201013 13:07:51.791" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201013 13:07:51.791" starttime="20201013 13:07:51.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:07:51.796" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-73.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:08:30.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:08:30.564" level="INFO">${output} = 2020-10-13 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:08:30.564" starttime="20201013 13:07:51.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:08:30.565" level="INFO">2020-10-13 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:07:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:54 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-13 13:07:54 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:07:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:07:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:07:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:07:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ECAD68EFD456-&gt;e55674a0-7fc9-4c8c-994e-cdf2765cc11b
2020-10-13 13:07:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:07:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:07:55 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:07:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594259640_0004
2020-10-13 13:07:56 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:07:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:56 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:07:56 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-13 13:07:56 INFO  YarnClientImpl:324 - Submitted application application_1602594259640_0004
2020-10-13 13:07:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594259640_0004/
2020-10-13 13:07:56 INFO  Job:1619 - Running job: job_1602594259640_0004
2020-10-13 13:08:04 INFO  Job:1640 - Job job_1602594259640_0004 running in uber mode : false
2020-10-13 13:08:04 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:08:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:08:17 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:08:24 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:08:29 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:08:30 INFO  Job:1658 - Job job_1602594259640_0004 completed successfully
2020-10-13 13:08:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:08:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082921
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43360
		Total time spent by all reduces in occupied slots (ms)=15996
		Total time spent by all map tasks (ms)=10840
		Total time spent by all reduce tasks (ms)=3999
		Total vcore-milliseconds taken by all map tasks=10840
		Total vcore-milliseconds taken by all reduce tasks=3999
		Total megabyte-milliseconds taken by all map tasks=44400640
		Total megabyte-milliseconds taken by all reduce tasks=16379904
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=664
		CPU time spent (ms)=8120
		Physical memory (bytes) snapshot=1179549696
		Virtual memory (bytes) snapshot=16069529600
		Total committed heap usage (bytes)=1134559232
		Peak Map Physical memory (bytes)=297308160
		Peak Map Virtual memory (bytes)=4015087616
		Peak Reduce Physical memory (bytes)=298647552
		Peak Reduce Virtual memory (bytes)=4032331776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-13 13:08:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:08:30.565" starttime="20201013 13:08:30.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:08:30.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:08:30.566" starttime="20201013 13:08:30.565"></status>
</kw>
<status status="PASS" endtime="20201013 13:08:30.566" starttime="20201013 13:07:51.792"></status>
</kw>
<msg timestamp="20201013 13:08:30.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:08:30.566" starttime="20201013 13:07:51.792"></status>
</kw>
<msg timestamp="20201013 13:08:30.567" level="INFO">${output} = 2020-10-13 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:07:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:08:30.567" starttime="20201013 13:07:51.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:08:30.567" starttime="20201013 13:08:30.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:08:30.568" starttime="20201013 13:08:30.567"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:08:30.568" critical="yes" starttime="20201013 13:07:51.758"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:08:30.570" starttime="20201013 13:07:10.155"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:05:28.523" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:05:28.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:05:28.528" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:05:28.528" starttime="20201013 13:05:28.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:05:28.529" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:05:28.529" starttime="20201013 13:05:28.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:05:28.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:05:28.530" starttime="20201013 13:05:28.529"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:28.530" starttime="20201013 13:05:28.517"></status>
</kw>
<msg timestamp="20201013 13:05:28.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:05:28.530" starttime="20201013 13:05:28.517"></status>
</kw>
<msg timestamp="20201013 13:05:28.530" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:05:28.530" starttime="20201013 13:05:28.516"></status>
</kw>
<msg timestamp="20201013 13:05:28.530" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:05:28.530" starttime="20201013 13:05:28.516"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:05:28.534" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:05:28.534" starttime="20201013 13:05:28.533"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:05:28.535" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:05:28.535" starttime="20201013 13:05:28.534"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:28.535" starttime="20201013 13:05:28.533"></status>
</kw>
<msg timestamp="20201013 13:05:28.535" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:05:28.535" starttime="20201013 13:05:28.532"></status>
</kw>
<status status="PASS" endtime="20201013 13:05:28.535" starttime="20201013 13:05:28.532"></status>
</kw>
<msg timestamp="20201013 13:05:28.535" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:05:28.535" starttime="20201013 13:05:28.531"></status>
</kw>
<msg timestamp="20201013 13:05:28.535" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:05:28.535" starttime="20201013 13:05:28.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:05:28.540" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:06:11.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:06:11.358" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:05:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05...</msg>
<status status="PASS" endtime="20201013 13:06:11.358" starttime="20201013 13:05:28.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:06:11.359" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:05:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:30 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-13 13:05:30 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:05:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:05:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:05:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:05:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A7C59E3D6188-&gt;e55674a0-7fc9-4c8c-994e-cdf2765cc11b
2020-10-13 13:05:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-13 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:05:35 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:05:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594259640_0001
2020-10-13 13:05:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:35 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:05:35 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-13 13:05:36 INFO  YarnClientImpl:324 - Submitted application application_1602594259640_0001
2020-10-13 13:05:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594259640_0001/
2020-10-13 13:05:36 INFO  Job:1619 - Running job: job_1602594259640_0001
2020-10-13 13:05:46 INFO  Job:1640 - Job job_1602594259640_0001 running in uber mode : false
2020-10-13 13:05:46 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:05:53 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:05:59 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:06:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:06:09 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:06:10 INFO  Job:1658 - Job job_1602594259640_0001 completed successfully
2020-10-13 13:06:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020469
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42784
		Total time spent by all reduces in occupied slots (ms)=16384
		Total time spent by all map tasks (ms)=10696
		Total time spent by all reduce tasks (ms)=4096
		Total vcore-milliseconds taken by all map tasks=10696
		Total vcore-milliseconds taken by all reduce tasks=4096
		Total megabyte-milliseconds taken by all map tasks=43810816
		Total megabyte-milliseconds taken by all reduce tasks=16777216
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=664
		CPU time spent (ms)=7200
		Physical memory (bytes) snapshot=1163673600
		Virtual memory (bytes) snapshot=16057061376
		Total committed heap usage (bytes)=1153957888
		Peak Map Physical memory (bytes)=296476672
		Peak Map Virtual memory (bytes)=4014141440
		Peak Reduce Physical memory (bytes)=298676224
		Peak Reduce Virtual memory (bytes)=4032647168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.215 seconds
2020-10-13 13:06:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:10 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-13 13:06:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:06:11.359" starttime="20201013 13:06:11.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:06:11.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:06:11.360" starttime="20201013 13:06:11.359"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.360" starttime="20201013 13:05:28.536"></status>
</kw>
<msg timestamp="20201013 13:06:11.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:06:11.360" starttime="20201013 13:05:28.536"></status>
</kw>
<msg timestamp="20201013 13:06:11.361" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:05:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:05...</msg>
<status status="PASS" endtime="20201013 13:06:11.361" starttime="20201013 13:05:28.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:06:11.361" starttime="20201013 13:06:11.361"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:06:11.361" critical="yes" starttime="20201013 13:05:28.515"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:06:11.366" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:06:11.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:06:11.372" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:06:11.372" starttime="20201013 13:06:11.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:06:11.373" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:06:11.374" starttime="20201013 13:06:11.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:06:11.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:06:11.374" starttime="20201013 13:06:11.374"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.374" starttime="20201013 13:06:11.364"></status>
</kw>
<msg timestamp="20201013 13:06:11.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:06:11.375" starttime="20201013 13:06:11.363"></status>
</kw>
<msg timestamp="20201013 13:06:11.375" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:06:11.375" starttime="20201013 13:06:11.363"></status>
</kw>
<msg timestamp="20201013 13:06:11.375" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201013 13:06:11.375" starttime="20201013 13:06:11.363"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:06:11.376" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201013 13:06:11.376" starttime="20201013 13:06:11.375"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:06:11.379" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:06:11.379" starttime="20201013 13:06:11.379"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:06:11.380" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:06:11.380" starttime="20201013 13:06:11.380"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.381" starttime="20201013 13:06:11.378"></status>
</kw>
<msg timestamp="20201013 13:06:11.381" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:06:11.381" starttime="20201013 13:06:11.378"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.381" starttime="20201013 13:06:11.377"></status>
</kw>
<msg timestamp="20201013 13:06:11.381" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:06:11.381" starttime="20201013 13:06:11.377"></status>
</kw>
<msg timestamp="20201013 13:06:11.381" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:06:11.381" starttime="20201013 13:06:11.376"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:06:11.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:06:11.385" starttime="20201013 13:06:11.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:06:11.385" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:06:11.385" starttime="20201013 13:06:11.385"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.385" starttime="20201013 13:06:11.384"></status>
</kw>
<msg timestamp="20201013 13:06:11.386" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:06:11.386" starttime="20201013 13:06:11.383"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.386" starttime="20201013 13:06:11.383"></status>
</kw>
<msg timestamp="20201013 13:06:11.386" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:06:11.386" starttime="20201013 13:06:11.382"></status>
</kw>
<msg timestamp="20201013 13:06:11.386" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:06:11.386" starttime="20201013 13:06:11.382"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:06:11.390" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:06:11.390" starttime="20201013 13:06:11.390"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:06:11.391" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:06:11.391" starttime="20201013 13:06:11.390"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.392" starttime="20201013 13:06:11.389"></status>
</kw>
<msg timestamp="20201013 13:06:11.392" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:06:11.392" starttime="20201013 13:06:11.388"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:11.392" starttime="20201013 13:06:11.388"></status>
</kw>
<msg timestamp="20201013 13:06:11.392" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201013 13:06:11.392" starttime="20201013 13:06:11.387"></status>
</kw>
<msg timestamp="20201013 13:06:11.393" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201013 13:06:11.393" starttime="20201013 13:06:11.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:06:11.398" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:06:54.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:06:54.263" level="INFO">${output} = 2020-10-13 13:06:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:06:54.263" starttime="20201013 13:06:11.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:06:54.265" level="INFO">2020-10-13 13:06:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-13 13:06:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-13 13:06:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:06:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:06:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:06:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-80D27076D5CC-&gt;e55674a0-7fc9-4c8c-994e-cdf2765cc11b
2020-10-13 13:06:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:06:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:06:15 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:06:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594259640_0002
2020-10-13 13:06:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:06:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:16 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:06:16 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-13 13:06:16 INFO  YarnClientImpl:324 - Submitted application application_1602594259640_0002
2020-10-13 13:06:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594259640_0002/
2020-10-13 13:06:16 INFO  Job:1619 - Running job: job_1602594259640_0002
2020-10-13 13:06:24 INFO  Job:1640 - Job job_1602594259640_0002 running in uber mode : false
2020-10-13 13:06:24 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:06:31 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:06:37 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:06:43 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:06:49 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:06:53 INFO  Job:1658 - Job job_1602594259640_0002 completed successfully
2020-10-13 13:06:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44964
		Total time spent by all reduces in occupied slots (ms)=20188
		Total time spent by all map tasks (ms)=11241
		Total time spent by all reduce tasks (ms)=5047
		Total vcore-milliseconds taken by all map tasks=11241
		Total vcore-milliseconds taken by all reduce tasks=5047
		Total megabyte-milliseconds taken by all map tasks=46043136
		Total megabyte-milliseconds taken by all reduce tasks=20672512
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=8070
		Physical memory (bytes) snapshot=1185128448
		Virtual memory (bytes) snapshot=16074706944
		Total committed heap usage (bytes)=1062731776
		Peak Map Physical memory (bytes)=298860544
		Peak Map Virtual memory (bytes)=4015439872
		Peak Reduce Physical memory (bytes)=298463232
		Peak Reduce Virtual memory (bytes)=4035911680
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-13 13:06:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201013 13:06:54.265" starttime="20201013 13:06:54.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:06:54.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:06:54.266" starttime="20201013 13:06:54.265"></status>
</kw>
<status status="PASS" endtime="20201013 13:06:54.266" starttime="20201013 13:06:11.394"></status>
</kw>
<msg timestamp="20201013 13:06:54.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:06:54.266" starttime="20201013 13:06:11.394"></status>
</kw>
<msg timestamp="20201013 13:06:54.267" level="INFO">${output} = 2020-10-13 13:06:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-13 13:06:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201013 13:06:54.267" starttime="20201013 13:06:11.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:06:54.267" starttime="20201013 13:06:54.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:06:54.268" starttime="20201013 13:06:54.267"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:06:54.268" critical="yes" starttime="20201013 13:06:11.362"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:06:54.269" starttime="20201013 13:05:28.463"></status>
</suite>
<status status="PASS" elapsedtime="209803" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:09:47.613" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:09:52.458" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:09:52.458" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:09:52.458" starttime="20201013 13:09:47.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:09:52.460" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:09:52.460" starttime="20201013 13:09:52.459"></status>
</kw>
<msg timestamp="20201013 13:09:52.460" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201013 13:09:52.460" starttime="20201013 13:09:47.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:09:52.466" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:09:55.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:09:55.843" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:09:55.843" starttime="20201013 13:09:52.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:09:55.845" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:09:55.845" starttime="20201013 13:09:55.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:09:55.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:09:55.846" starttime="20201013 13:09:55.846"></status>
</kw>
<status status="PASS" endtime="20201013 13:09:55.846" starttime="20201013 13:09:52.462"></status>
</kw>
<msg timestamp="20201013 13:09:55.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:09:55.847" starttime="20201013 13:09:52.462"></status>
</kw>
<msg timestamp="20201013 13:09:55.847" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201013 13:09:55.847" starttime="20201013 13:09:52.461"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201013 13:09:55.847" starttime="20201013 13:09:55.847"></status>
</kw>
<status status="PASS" endtime="20201013 13:09:55.848" starttime="20201013 13:09:52.461"></status>
</kw>
<status status="PASS" endtime="20201013 13:09:55.848" starttime="20201013 13:09:52.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:09:55.853" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:09:59.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:09:59.212" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:09:59.212" starttime="20201013 13:09:55.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:09:59.213" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:09:59.213" starttime="20201013 13:09:59.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:09:59.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:09:59.214" starttime="20201013 13:09:59.213"></status>
</kw>
<status status="PASS" endtime="20201013 13:09:59.214" starttime="20201013 13:09:55.850"></status>
</kw>
<msg timestamp="20201013 13:09:59.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:09:59.214" starttime="20201013 13:09:55.849"></status>
</kw>
<status status="PASS" endtime="20201013 13:09:59.215" starttime="20201013 13:09:55.849"></status>
</kw>
<status status="PASS" endtime="20201013 13:09:59.215" starttime="20201013 13:09:55.848"></status>
</kw>
<status status="PASS" endtime="20201013 13:09:59.215" starttime="20201013 13:09:55.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201013 13:09:59.215" starttime="20201013 13:09:59.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:09:59.220" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:02.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:02.704" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:09:58.947Z",
  "modificat...</msg>
<status status="PASS" endtime="20201013 13:10:02.704" starttime="20201013 13:09:59.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:02.705" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:09:58.947Z",
  "modificationTime" : "2020-10-13T13:09:58.947Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201013 13:10:02.706" starttime="20201013 13:10:02.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:02.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:02.706" starttime="20201013 13:10:02.706"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:02.707" starttime="20201013 13:09:59.217"></status>
</kw>
<msg timestamp="20201013 13:10:02.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:02.707" starttime="20201013 13:09:59.216"></status>
</kw>
<msg timestamp="20201013 13:10:02.707" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:09:58.947Z",
  "modificat...</msg>
<status status="PASS" endtime="20201013 13:10:02.707" starttime="20201013 13:09:59.216"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201013 13:10:02.708" starttime="20201013 13:10:02.707"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:10:02.712" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:10:02.712" starttime="20201013 13:10:02.712"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:10:02.713" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:10:02.713" starttime="20201013 13:10:02.712"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:02.713" starttime="20201013 13:10:02.711"></status>
</kw>
<msg timestamp="20201013 13:10:02.713" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:10:02.713" starttime="20201013 13:10:02.711"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:02.713" starttime="20201013 13:10:02.710"></status>
</kw>
<msg timestamp="20201013 13:10:02.714" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:10:02.714" starttime="20201013 13:10:02.709"></status>
</kw>
<msg timestamp="20201013 13:10:02.714" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201013 13:10:02.714" starttime="20201013 13:10:02.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:02.719" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:06.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:06.261" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:10:06.261" starttime="20201013 13:10:02.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:06.262" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:10:06.263" starttime="20201013 13:10:06.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:06.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:06.264" starttime="20201013 13:10:06.263"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:06.264" starttime="20201013 13:10:02.715"></status>
</kw>
<msg timestamp="20201013 13:10:06.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:06.264" starttime="20201013 13:10:02.714"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:06.264" starttime="20201013 13:10:02.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:06.269" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:13.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:13.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:10:13.708" starttime="20201013 13:10:06.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:13.709" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:10:13.709" starttime="20201013 13:10:13.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:13.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:13.709" starttime="20201013 13:10:13.709"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:13.710" starttime="20201013 13:10:06.266"></status>
</kw>
<msg timestamp="20201013 13:10:13.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:13.710" starttime="20201013 13:10:06.265"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:13.710" starttime="20201013 13:10:06.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:13.714" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:19.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:19.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:10:19.379" starttime="20201013 13:10:13.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:19.381" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:10:19.381" starttime="20201013 13:10:19.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:19.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:19.382" starttime="20201013 13:10:19.381"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:19.382" starttime="20201013 13:10:13.711"></status>
</kw>
<msg timestamp="20201013 13:10:19.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:19.382" starttime="20201013 13:10:13.711"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:19.382" starttime="20201013 13:10:13.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:19.387" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:25.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:25.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:10:25.007" starttime="20201013 13:10:19.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:25.008" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:10:25.008" starttime="20201013 13:10:25.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:25.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:25.009" starttime="20201013 13:10:25.008"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:25.009" starttime="20201013 13:10:19.383"></status>
</kw>
<msg timestamp="20201013 13:10:25.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:25.009" starttime="20201013 13:10:19.383"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:25.009" starttime="20201013 13:10:19.382"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:10:25.010" critical="yes" starttime="20201013 13:09:47.606"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:10:25.015" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:10:25.015" starttime="20201013 13:10:25.015"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:10:25.016" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:10:25.016" starttime="20201013 13:10:25.015"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:25.016" starttime="20201013 13:10:25.014"></status>
</kw>
<msg timestamp="20201013 13:10:25.016" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:10:25.016" starttime="20201013 13:10:25.014"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:25.017" starttime="20201013 13:10:25.013"></status>
</kw>
<msg timestamp="20201013 13:10:25.017" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:10:25.017" starttime="20201013 13:10:25.012"></status>
</kw>
<msg timestamp="20201013 13:10:25.017" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:10:25.017" starttime="20201013 13:10:25.012"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:25.021" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:28.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:28.291" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:10:28.291" starttime="20201013 13:10:25.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:28.292" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:10:28.292" starttime="20201013 13:10:28.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:28.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:28.293" starttime="20201013 13:10:28.292"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:28.293" starttime="20201013 13:10:25.018"></status>
</kw>
<msg timestamp="20201013 13:10:28.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:28.293" starttime="20201013 13:10:25.018"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:28.293" starttime="20201013 13:10:25.017"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:28.297" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:31.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:31.624" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:10:31.624" starttime="20201013 13:10:28.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:31.626" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:10:31.626" starttime="20201013 13:10:31.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:31.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:31.627" starttime="20201013 13:10:31.626"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:31.627" starttime="20201013 13:10:28.294"></status>
</kw>
<msg timestamp="20201013 13:10:31.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:31.627" starttime="20201013 13:10:28.294"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:31.627" starttime="20201013 13:10:28.294"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:10:31.628" critical="yes" starttime="20201013 13:10:25.011"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201013 13:10:31.629" starttime="20201013 13:09:47.548"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:12:16.388" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:12:16.388" starttime="20201013 13:12:16.387"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:12:16.389" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:12:16.389" starttime="20201013 13:12:16.388"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:16.389" starttime="20201013 13:12:16.386"></status>
</kw>
<msg timestamp="20201013 13:12:16.389" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:12:16.389" starttime="20201013 13:12:16.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:12:16.390" starttime="20201013 13:12:16.390"></status>
</kw>
<msg timestamp="20201013 13:12:16.390" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:12:16.390" starttime="20201013 13:12:16.389"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:16.390" starttime="20201013 13:12:16.385"></status>
</kw>
<msg timestamp="20201013 13:12:16.391" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:12:16.391" starttime="20201013 13:12:16.384"></status>
</kw>
<msg timestamp="20201013 13:12:16.391" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:12:16.391" starttime="20201013 13:12:16.383"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:12:16.391" level="INFO">${random} = 84199</msg>
<status status="PASS" endtime="20201013 13:12:16.391" starttime="20201013 13:12:16.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:12:16.394" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-84199 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:12:20.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:12:20.201" level="INFO">${output} = 2020-10-13 13:12:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:12:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:12:20.201" starttime="20201013 13:12:16.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:12:20.202" level="INFO">2020-10-13 13:12:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:12:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:12:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:12:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:12:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E794E38C7CF4-&gt;8104c52b-07df-479a-aafd-e040d6c06927
2020-10-13 13:12:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201013 13:12:20.202" starttime="20201013 13:12:20.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:12:20.203" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:12:20.203" starttime="20201013 13:12:20.202"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:20.203" starttime="20201013 13:12:16.392"></status>
</kw>
<msg timestamp="20201013 13:12:20.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:12:20.204" starttime="20201013 13:12:16.392"></status>
</kw>
<msg timestamp="20201013 13:12:20.204" level="INFO">${result} = 2020-10-13 13:12:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:12:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:12:20.204" starttime="20201013 13:12:16.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:12:20.207" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:12:22.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:12:22.292" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:10 ofs://om/volume1/bucket1/ozone-19469
-rw-...</msg>
<status status="PASS" endtime="20201013 13:12:22.292" starttime="20201013 13:12:20.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:12:22.293" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:10 ofs://om/volume1/bucket1/ozone-19469
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:12 ofs://om/volume1/bucket1/ozone-84199
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:11 ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201013 13:12:22.293" starttime="20201013 13:12:22.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:12:22.293" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:12:22.293" starttime="20201013 13:12:22.293"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:22.294" starttime="20201013 13:12:20.205"></status>
</kw>
<msg timestamp="20201013 13:12:22.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:12:22.294" starttime="20201013 13:12:20.205"></status>
</kw>
<msg timestamp="20201013 13:12:22.294" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:10 ofs://om/volume1/bucket1/ozone-19469
-rw-...</msg>
<status status="PASS" endtime="20201013 13:12:22.294" starttime="20201013 13:12:20.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:12:22.295" starttime="20201013 13:12:22.294"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:12:22.295" critical="yes" starttime="20201013 13:12:16.383"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:12:22.296" starttime="20201013 13:12:16.339"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:10:36.799" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:10:36.799" starttime="20201013 13:10:36.797"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:10:36.800" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:10:36.800" starttime="20201013 13:10:36.799"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:36.800" starttime="20201013 13:10:36.797"></status>
</kw>
<msg timestamp="20201013 13:10:36.800" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:10:36.800" starttime="20201013 13:10:36.796"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:36.800" starttime="20201013 13:10:36.796"></status>
</kw>
<msg timestamp="20201013 13:10:36.801" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:10:36.801" starttime="20201013 13:10:36.795"></status>
</kw>
<msg timestamp="20201013 13:10:36.801" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:10:36.801" starttime="20201013 13:10:36.794"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:10:36.801" level="INFO">${random} = 19469</msg>
<status status="PASS" endtime="20201013 13:10:36.801" starttime="20201013 13:10:36.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:36.804" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-19469 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:41.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:41.005" level="INFO">${output} = 2020-10-13 13:10:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:10:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:10:41.005" starttime="20201013 13:10:36.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:41.006" level="INFO">2020-10-13 13:10:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:10:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:10:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:10:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:10:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4DD95D78BC72-&gt;8104c52b-07df-479a-aafd-e040d6c06927
2020-10-13 13:10:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201013 13:10:41.006" starttime="20201013 13:10:41.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:41.007" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:41.007" starttime="20201013 13:10:41.006"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:41.007" starttime="20201013 13:10:36.802"></status>
</kw>
<msg timestamp="20201013 13:10:41.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:41.008" starttime="20201013 13:10:36.802"></status>
</kw>
<msg timestamp="20201013 13:10:41.008" level="INFO">${result} = 2020-10-13 13:10:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:10:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201013 13:10:41.008" starttime="20201013 13:10:36.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:41.011" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:43.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:43.124" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:10 o3fs://bucket1.volume1.om/ozone-19469
dr...</msg>
<status status="PASS" endtime="20201013 13:10:43.124" starttime="20201013 13:10:41.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:43.126" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:10 o3fs://bucket1.volume1.om/ozone-19469
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201013 13:10:43.126" starttime="20201013 13:10:43.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:43.126" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:43.126" starttime="20201013 13:10:43.126"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:43.127" starttime="20201013 13:10:41.009"></status>
</kw>
<msg timestamp="20201013 13:10:43.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:43.127" starttime="20201013 13:10:41.009"></status>
</kw>
<msg timestamp="20201013 13:10:43.127" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-13 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-13 13:10 o3fs://bucket1.volume1.om/ozone-19469
dr...</msg>
<status status="PASS" endtime="20201013 13:10:43.127" starttime="20201013 13:10:41.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:10:43.128" starttime="20201013 13:10:43.128"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:10:43.128" critical="yes" starttime="20201013 13:10:36.793"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201013 13:10:43.129" starttime="20201013 13:10:36.745"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:12:27.343" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:12:27.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:12:27.352" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:12:27.352" starttime="20201013 13:12:27.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:12:27.353" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:12:27.353" starttime="20201013 13:12:27.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:12:27.354" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:12:27.354" starttime="20201013 13:12:27.353"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:27.354" starttime="20201013 13:12:27.340"></status>
</kw>
<msg timestamp="20201013 13:12:27.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:12:27.354" starttime="20201013 13:12:27.340"></status>
</kw>
<msg timestamp="20201013 13:12:27.354" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:12:27.355" starttime="20201013 13:12:27.340"></status>
</kw>
<msg timestamp="20201013 13:12:27.355" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:12:27.355" starttime="20201013 13:12:27.339"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:12:27.358" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:12:27.358" starttime="20201013 13:12:27.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:12:27.359" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:12:27.359" starttime="20201013 13:12:27.359"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:27.359" starttime="20201013 13:12:27.357"></status>
</kw>
<msg timestamp="20201013 13:12:27.359" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:12:27.359" starttime="20201013 13:12:27.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:12:27.360" starttime="20201013 13:12:27.360"></status>
</kw>
<msg timestamp="20201013 13:12:27.361" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:12:27.361" starttime="20201013 13:12:27.360"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:27.361" starttime="20201013 13:12:27.356"></status>
</kw>
<msg timestamp="20201013 13:12:27.361" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:12:27.361" starttime="20201013 13:12:27.356"></status>
</kw>
<msg timestamp="20201013 13:12:27.361" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:12:27.361" starttime="20201013 13:12:27.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:12:27.364" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:13:05.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:13:05.566" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:12:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:12:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:13:05.567" starttime="20201013 13:12:27.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:13:05.568" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:12:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:12:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:12:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:12:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:12:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-196F07A38294-&gt;8104c52b-07df-479a-aafd-e040d6c06927
2020-10-13 13:12:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:12:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:12:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:12:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:12:31 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:12:31 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:12:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594566610_0003
2020-10-13 13:12:31 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:12:32 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:12:32 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:12:32 INFO  YarnClientImpl:311 - Submitted application application_1602594566610_0003
2020-10-13 13:12:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594566610_0003/
2020-10-13 13:12:32 INFO  Job:1619 - Running job: job_1602594566610_0003
2020-10-13 13:12:40 INFO  Job:1640 - Job job_1602594566610_0003 running in uber mode : false
2020-10-13 13:12:40 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:12:47 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:12:53 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:12:59 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:13:03 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:13:04 INFO  Job:1658 - Job job_1602594566610_0003 completed successfully
2020-10-13 13:13:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043281
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42948
		Total time spent by all reduces in occupied slots (ms)=16612
		Total time spent by all map tasks (ms)=10737
		Total time spent by all reduce tasks (ms)=4153
		Total vcore-milliseconds taken by all map tasks=10737
		Total vcore-milliseconds taken by all reduce tasks=4153
		Total megabyte-milliseconds taken by all map tasks=43978752
		Total megabyte-milliseconds taken by all reduce tasks=17010688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=598
		CPU time spent (ms)=7300
		Physical memory (bytes) snapshot=1425920000
		Virtual memory (bytes) snapshot=16034582528
		Total committed heap usage (bytes)=1623719936
		Peak Map Physical memory (bytes)=361234432
		Peak Map Virtual memory (bytes)=4010143744
		Peak Reduce Physical memory (bytes)=378916864
		Peak Reduce Virtual memory (bytes)=4027457536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.146 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201013 13:13:05.568" starttime="20201013 13:13:05.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:13:05.568" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:13:05.569" starttime="20201013 13:13:05.568"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.569" starttime="20201013 13:12:27.362"></status>
</kw>
<msg timestamp="20201013 13:13:05.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:13:05.569" starttime="20201013 13:12:27.362"></status>
</kw>
<msg timestamp="20201013 13:13:05.570" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:12:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:12:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:13:05.570" starttime="20201013 13:12:27.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:13:05.570" starttime="20201013 13:13:05.570"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:13:05.571" critical="yes" starttime="20201013 13:12:27.339"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:13:05.576" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:13:05.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:13:05.582" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:13:05.582" starttime="20201013 13:13:05.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:13:05.583" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:13:05.583" starttime="20201013 13:13:05.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:13:05.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:13:05.584" starttime="20201013 13:13:05.583"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.584" starttime="20201013 13:13:05.574"></status>
</kw>
<msg timestamp="20201013 13:13:05.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:13:05.584" starttime="20201013 13:13:05.574"></status>
</kw>
<msg timestamp="20201013 13:13:05.584" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:13:05.584" starttime="20201013 13:13:05.573"></status>
</kw>
<msg timestamp="20201013 13:13:05.584" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:13:05.584" starttime="20201013 13:13:05.573"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:13:05.585" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201013 13:13:05.585" starttime="20201013 13:13:05.585"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:13:05.589" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:13:05.589" starttime="20201013 13:13:05.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:13:05.589" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:13:05.590" starttime="20201013 13:13:05.589"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.590" starttime="20201013 13:13:05.588"></status>
</kw>
<msg timestamp="20201013 13:13:05.590" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:13:05.590" starttime="20201013 13:13:05.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:13:05.591" starttime="20201013 13:13:05.591"></status>
</kw>
<msg timestamp="20201013 13:13:05.591" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201013 13:13:05.591" starttime="20201013 13:13:05.590"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.591" starttime="20201013 13:13:05.587"></status>
</kw>
<msg timestamp="20201013 13:13:05.591" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:13:05.591" starttime="20201013 13:13:05.586"></status>
</kw>
<msg timestamp="20201013 13:13:05.592" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201013 13:13:05.592" starttime="20201013 13:13:05.585"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:13:05.596" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:13:05.596" starttime="20201013 13:13:05.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:13:05.596" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:13:05.596" starttime="20201013 13:13:05.596"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.597" starttime="20201013 13:13:05.595"></status>
</kw>
<msg timestamp="20201013 13:13:05.597" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:13:05.597" starttime="20201013 13:13:05.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:13:05.599" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201013 13:13:05.599" starttime="20201013 13:13:05.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:13:05.599" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201013 13:13:05.599" starttime="20201013 13:13:05.599"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.599" starttime="20201013 13:13:05.598"></status>
</kw>
<msg timestamp="20201013 13:13:05.600" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201013 13:13:05.600" starttime="20201013 13:13:05.597"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.600" starttime="20201013 13:13:05.593"></status>
</kw>
<msg timestamp="20201013 13:13:05.600" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:13:05.600" starttime="20201013 13:13:05.592"></status>
</kw>
<msg timestamp="20201013 13:13:05.600" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201013 13:13:05.600" starttime="20201013 13:13:05.592"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201013 13:13:05.604" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201013 13:13:05.604" starttime="20201013 13:13:05.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:13:05.604" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201013 13:13:05.604" starttime="20201013 13:13:05.604"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.604" starttime="20201013 13:13:05.603"></status>
</kw>
<msg timestamp="20201013 13:13:05.604" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201013 13:13:05.605" starttime="20201013 13:13:05.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:13:05.606" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201013 13:13:05.606" starttime="20201013 13:13:05.606"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:13:05.607" level="INFO">${result} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201013 13:13:05.607" starttime="20201013 13:13:05.606"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.607" starttime="20201013 13:13:05.605"></status>
</kw>
<msg timestamp="20201013 13:13:05.607" level="INFO">${path_with_leading} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201013 13:13:05.607" starttime="20201013 13:13:05.605"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:05.607" starttime="20201013 13:13:05.602"></status>
</kw>
<msg timestamp="20201013 13:13:05.607" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201013 13:13:05.607" starttime="20201013 13:13:05.601"></status>
</kw>
<msg timestamp="20201013 13:13:05.607" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201013 13:13:05.608" starttime="20201013 13:13:05.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:13:05.610" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:13:44.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:13:44.357" level="INFO">${output} = 2020-10-13 13:13:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:13:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201013 13:13:44.357" starttime="20201013 13:13:05.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:13:44.358" level="INFO">2020-10-13 13:13:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:13:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:13:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:13:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:13:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:13:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:13:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D12727A87BD4-&gt;8104c52b-07df-479a-aafd-e040d6c06927
2020-10-13 13:13:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:13:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:13:09 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:13:09 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:13:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594566610_0004
2020-10-13 13:13:09 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:13:10 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:13:10 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:13:10 INFO  YarnClientImpl:311 - Submitted application application_1602594566610_0004
2020-10-13 13:13:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594566610_0004/
2020-10-13 13:13:10 INFO  Job:1619 - Running job: job_1602594566610_0004
2020-10-13 13:13:18 INFO  Job:1640 - Job job_1602594566610_0004 running in uber mode : false
2020-10-13 13:13:18 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:13:25 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:13:31 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:13:37 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:13:42 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:13:43 INFO  Job:1658 - Job job_1602594566610_0004 completed successfully
2020-10-13 13:13:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105937
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43988
		Total time spent by all reduces in occupied slots (ms)=16812
		Total time spent by all map tasks (ms)=10997
		Total time spent by all reduce tasks (ms)=4203
		Total vcore-milliseconds taken by all map tasks=10997
		Total vcore-milliseconds taken by all reduce tasks=4203
		Total megabyte-milliseconds taken by all map tasks=45043712
		Total megabyte-milliseconds taken by all reduce tasks=17215488
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=8300
		Physical memory (bytes) snapshot=1466986496
		Virtual memory (bytes) snapshot=16052224000
		Total committed heap usage (bytes)=1651507200
		Peak Map Physical memory (bytes)=372981760
		Peak Map Virtual memory (bytes)=4015415296
		Peak Reduce Physical memory (bytes)=369844224
		Peak Reduce Virtual memory (bytes)=4019712000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201013 13:13:44.358" starttime="20201013 13:13:44.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:13:44.359" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:13:44.359" starttime="20201013 13:13:44.359"></status>
</kw>
<status status="PASS" endtime="20201013 13:13:44.359" starttime="20201013 13:13:05.608"></status>
</kw>
<msg timestamp="20201013 13:13:44.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:13:44.360" starttime="20201013 13:13:05.608"></status>
</kw>
<msg timestamp="20201013 13:13:44.360" level="INFO">${output} = 2020-10-13 13:13:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:13:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201013 13:13:44.360" starttime="20201013 13:13:05.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:13:44.361" starttime="20201013 13:13:44.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:13:44.362" starttime="20201013 13:13:44.361"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:13:44.362" critical="yes" starttime="20201013 13:13:05.572"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:13:44.363" starttime="20201013 13:12:27.287"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:48.177" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:10:48.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:10:48.185" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:10:48.185" starttime="20201013 13:10:48.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:10:48.186" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:10:48.186" starttime="20201013 13:10:48.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:10:48.187" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:10:48.187" starttime="20201013 13:10:48.186"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:48.187" starttime="20201013 13:10:48.175"></status>
</kw>
<msg timestamp="20201013 13:10:48.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:10:48.187" starttime="20201013 13:10:48.174"></status>
</kw>
<msg timestamp="20201013 13:10:48.188" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:10:48.188" starttime="20201013 13:10:48.173"></status>
</kw>
<msg timestamp="20201013 13:10:48.188" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:10:48.188" starttime="20201013 13:10:48.173"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:10:48.192" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:10:48.192" starttime="20201013 13:10:48.191"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:10:48.192" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:10:48.192" starttime="20201013 13:10:48.192"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:48.193" starttime="20201013 13:10:48.191"></status>
</kw>
<msg timestamp="20201013 13:10:48.193" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:10:48.193" starttime="20201013 13:10:48.190"></status>
</kw>
<status status="PASS" endtime="20201013 13:10:48.193" starttime="20201013 13:10:48.189"></status>
</kw>
<msg timestamp="20201013 13:10:48.193" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:10:48.193" starttime="20201013 13:10:48.189"></status>
</kw>
<msg timestamp="20201013 13:10:48.193" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:10:48.193" starttime="20201013 13:10:48.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:10:48.196" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:11:32.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:11:32.422" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:10:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:10:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:11:32.422" starttime="20201013 13:10:48.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:11:32.423" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:10:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:10:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:10:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:10:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:10:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC8640C5E6A6-&gt;8104c52b-07df-479a-aafd-e040d6c06927
2020-10-13 13:10:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-13 13:10:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:10:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:10:55 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:10:55 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:10:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594566610_0001
2020-10-13 13:10:55 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:10:55 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:10:55 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:10:56 INFO  YarnClientImpl:311 - Submitted application application_1602594566610_0001
2020-10-13 13:10:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594566610_0001/
2020-10-13 13:10:56 INFO  Job:1619 - Running job: job_1602594566610_0001
2020-10-13 13:11:07 INFO  Job:1640 - Job job_1602594566610_0001 running in uber mode : false
2020-10-13 13:11:07 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:11:14 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:11:19 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:11:25 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:11:30 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:11:31 INFO  Job:1658 - Job job_1602594566610_0001 completed successfully
2020-10-13 13:11:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043493
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43636
		Total time spent by all reduces in occupied slots (ms)=17548
		Total time spent by all map tasks (ms)=10909
		Total time spent by all reduce tasks (ms)=4387
		Total vcore-milliseconds taken by all map tasks=10909
		Total vcore-milliseconds taken by all reduce tasks=4387
		Total megabyte-milliseconds taken by all map tasks=44683264
		Total megabyte-milliseconds taken by all reduce tasks=17969152
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=669
		CPU time spent (ms)=6830
		Physical memory (bytes) snapshot=1391570944
		Virtual memory (bytes) snapshot=16015409152
		Total committed heap usage (bytes)=1626865664
		Peak Map Physical memory (bytes)=352415744
		Peak Map Virtual memory (bytes)=4007890944
		Peak Reduce Physical memory (bytes)=354746368
		Peak Reduce Virtual memory (bytes)=4010496000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.614 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201013 13:11:32.423" starttime="20201013 13:11:32.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:11:32.424" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:11:32.424" starttime="20201013 13:11:32.423"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.424" starttime="20201013 13:10:48.194"></status>
</kw>
<msg timestamp="20201013 13:11:32.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:11:32.424" starttime="20201013 13:10:48.194"></status>
</kw>
<msg timestamp="20201013 13:11:32.425" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-13 13:10:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:10:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201013 13:11:32.425" starttime="20201013 13:10:48.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:11:32.425" starttime="20201013 13:11:32.425"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:11:32.426" critical="yes" starttime="20201013 13:10:48.172"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:11:32.430" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:11:32.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:11:32.437" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:11:32.437" starttime="20201013 13:11:32.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:11:32.438" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:11:32.438" starttime="20201013 13:11:32.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:11:32.439" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:11:32.439" starttime="20201013 13:11:32.438"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.439" starttime="20201013 13:11:32.428"></status>
</kw>
<msg timestamp="20201013 13:11:32.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:11:32.439" starttime="20201013 13:11:32.428"></status>
</kw>
<msg timestamp="20201013 13:11:32.440" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:11:32.440" starttime="20201013 13:11:32.428"></status>
</kw>
<msg timestamp="20201013 13:11:32.440" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201013 13:11:32.440" starttime="20201013 13:11:32.427"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:11:32.440" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201013 13:11:32.441" starttime="20201013 13:11:32.440"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:11:32.444" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:11:32.444" starttime="20201013 13:11:32.444"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:11:32.445" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:11:32.445" starttime="20201013 13:11:32.445"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.445" starttime="20201013 13:11:32.444"></status>
</kw>
<msg timestamp="20201013 13:11:32.445" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:11:32.445" starttime="20201013 13:11:32.443"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.446" starttime="20201013 13:11:32.442"></status>
</kw>
<msg timestamp="20201013 13:11:32.446" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:11:32.446" starttime="20201013 13:11:32.441"></status>
</kw>
<msg timestamp="20201013 13:11:32.446" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201013 13:11:32.446" starttime="20201013 13:11:32.441"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:11:32.449" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:11:32.449" starttime="20201013 13:11:32.449"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:11:32.450" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:11:32.450" starttime="20201013 13:11:32.450"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.450" starttime="20201013 13:11:32.449"></status>
</kw>
<msg timestamp="20201013 13:11:32.450" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:11:32.450" starttime="20201013 13:11:32.448"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.451" starttime="20201013 13:11:32.447"></status>
</kw>
<msg timestamp="20201013 13:11:32.451" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:11:32.451" starttime="20201013 13:11:32.447"></status>
</kw>
<msg timestamp="20201013 13:11:32.451" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201013 13:11:32.451" starttime="20201013 13:11:32.446"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201013 13:11:32.454" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201013 13:11:32.455" starttime="20201013 13:11:32.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:11:32.455" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201013 13:11:32.455" starttime="20201013 13:11:32.455"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.455" starttime="20201013 13:11:32.453"></status>
</kw>
<msg timestamp="20201013 13:11:32.455" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201013 13:11:32.455" starttime="20201013 13:11:32.453"></status>
</kw>
<status status="PASS" endtime="20201013 13:11:32.456" starttime="20201013 13:11:32.452"></status>
</kw>
<msg timestamp="20201013 13:11:32.456" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201013 13:11:32.456" starttime="20201013 13:11:32.452"></status>
</kw>
<msg timestamp="20201013 13:11:32.456" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201013 13:11:32.456" starttime="20201013 13:11:32.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:11:32.459" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:12:11.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:12:11.380" level="INFO">${output} = 2020-10-13 13:11:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:11:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201013 13:12:11.380" starttime="20201013 13:11:32.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:12:11.382" level="INFO">2020-10-13 13:11:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:11:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-13 13:11:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-13 13:11:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:11:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-13 13:11:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:11:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B9602DEC3FD3-&gt;8104c52b-07df-479a-aafd-e040d6c06927
2020-10-13 13:11:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:11:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-13 13:11:36 INFO  JobSubmitter:202 - number of splits:3
2020-10-13 13:11:36 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-13 13:11:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602594566610_0002
2020-10-13 13:11:36 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-13 13:11:37 INFO  Configuration:2752 - resource-types.xml not found
2020-10-13 13:11:37 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-13 13:11:37 INFO  YarnClientImpl:311 - Submitted application application_1602594566610_0002
2020-10-13 13:11:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602594566610_0002/
2020-10-13 13:11:37 INFO  Job:1619 - Running job: job_1602594566610_0002
2020-10-13 13:11:45 INFO  Job:1640 - Job job_1602594566610_0002 running in uber mode : false
2020-10-13 13:11:45 INFO  Job:1647 -  map 0% reduce 0%
2020-10-13 13:11:52 INFO  Job:1647 -  map 33% reduce 0%
2020-10-13 13:11:58 INFO  Job:1647 -  map 67% reduce 0%
2020-10-13 13:12:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-13 13:12:09 INFO  Job:1647 -  map 100% reduce 100%
2020-10-13 13:12:10 INFO  Job:1658 - Job job_1602594566610_0002 completed successfully
2020-10-13 13:12:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1106021
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43904
		Total time spent by all reduces in occupied slots (ms)=16180
		Total time spent by all map tasks (ms)=10976
		Total time spent by all reduce tasks (ms)=4045
		Total vcore-milliseconds taken by all map tasks=10976
		Total vcore-milliseconds taken by all reduce tasks=4045
		Total megabyte-milliseconds taken by all map tasks=44957696
		Total megabyte-milliseconds taken by all reduce tasks=16568320
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=624
		CPU time spent (ms)=7840
		Physical memory (bytes) snapshot=1354059776
		Virtual memory (bytes) snapshot=16035528704
		Total committed heap usage (bytes)=1439170560
		Peak Map Physical memory (bytes)=355913728
		Peak Map Virtual memory (bytes)=4010332160
		Peak Reduce Physical memory (bytes)=379473920
		Peak Reduce Virtual memory (bytes)=4017623040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201013 13:12:11.382" starttime="20201013 13:12:11.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:12:11.383" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:12:11.383" starttime="20201013 13:12:11.382"></status>
</kw>
<status status="PASS" endtime="20201013 13:12:11.383" starttime="20201013 13:11:32.457"></status>
</kw>
<msg timestamp="20201013 13:12:11.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:12:11.383" starttime="20201013 13:11:32.457"></status>
</kw>
<msg timestamp="20201013 13:12:11.384" level="INFO">${output} = 2020-10-13 13:11:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-13 13:11:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201013 13:12:11.384" starttime="20201013 13:11:32.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201013 13:12:11.385" starttime="20201013 13:12:11.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201013 13:12:11.385" starttime="20201013 13:12:11.385"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201013 13:12:11.385" critical="yes" starttime="20201013 13:11:32.426"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201013 13:12:11.386" starttime="20201013 13:10:48.121"></status>
</suite>
<status status="PASS" elapsedtime="216763" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="609007" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
