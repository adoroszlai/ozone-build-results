<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201013 13:40:30.401" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:14.245" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:25.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:25.797" level="INFO">${output} = 2020-10-13 13:36:16,115 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:16,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:25.797" starttime="20201013 13:36:14.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:25.798" level="INFO">2020-10-13 13:36:16,115 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:16,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:36:16,252 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-13 13:36:19,133 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-13 13:36:20,305 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-13 13:36:20,306 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-13 13:36:20,306 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-13 13:36:20,306 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-13 13:36:20,307 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-13 13:36:20,307 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-13 13:36:20,307 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-13 13:36:20,310 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-13 13:36:20,314 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:20,361 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-63507, with testuser/scm@EXAMPLE.COM as owner.
2020-10-13 13:36:21,003 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-63507/bucket-0-39421, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-13 13:36:21,318 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:22,318 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:23,323 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:23,505 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-13 13:36:24,324 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,530
Average Time spent in bucket creation: 00:00:00,326
Average Time spent in key creation: 00:00:01,237
Average Time spent in key write: 00:00:01,242
Total bytes written: 10240
Total Execution time: 00:00:08,940
***************************************************</msg>
<status status="PASS" endtime="20201013 13:36:25.798" starttime="20201013 13:36:25.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:25.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:25.799" starttime="20201013 13:36:25.799"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:25.799" starttime="20201013 13:36:14.241"></status>
</kw>
<msg timestamp="20201013 13:36:25.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:25.800" starttime="20201013 13:36:14.240"></status>
</kw>
<msg timestamp="20201013 13:36:25.800" level="INFO">${result} = 2020-10-13 13:36:16,115 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:16,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:25.800" starttime="20201013 13:36:14.239"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:36:25.801" starttime="20201013 13:36:25.801"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:25.801" starttime="20201013 13:36:25.800"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:36:25.802" critical="yes" starttime="20201013 13:36:14.239"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:25.808" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:34.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:34.566" level="INFO">${output} = 2020-10-13 13:36:27,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:27,847 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:34.566" starttime="20201013 13:36:25.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:34.568" level="INFO">2020-10-13 13:36:27,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:27,847 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:36:27,847 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-13 13:36:28,035 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kru6hgqxxm
2020-10-13 13:36:28,051 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-13 13:36:29,055 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:29,165 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-13 13:36:29,748 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-13 13:36:29,869 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-13 13:36:30,055 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:30,841 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-13 13:36:31,056 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:31,224 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-13 13:36:31,225 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3832D1D07C55-&gt;faba61a2-37b1-48b4-b5f5-b2ba88e3030f
2020-10-13 13:36:31,227 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-13 13:36:32,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:33,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:34,058 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-13 13:36:34,229 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3943.047782, max=3943.047782, mean=3943.047782, stddev=0.0, median=3943.047782, p75=3943.047782, p95=3943.047782, p98=3943.047782, p99=3943.047782, p999=3943.047782, mean_rate=0.23419219279444728, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-13 13:36:34,230 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-13 13:36:34,230 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-13 13:36:34,230 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201013 13:36:34.568" starttime="20201013 13:36:34.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:34.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:34.569" starttime="20201013 13:36:34.569"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:34.569" starttime="20201013 13:36:25.805"></status>
</kw>
<msg timestamp="20201013 13:36:34.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:34.570" starttime="20201013 13:36:25.804"></status>
</kw>
<msg timestamp="20201013 13:36:34.570" level="INFO">${result} = 2020-10-13 13:36:27,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:27,847 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:34.570" starttime="20201013 13:36:25.803"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:36:34.571" starttime="20201013 13:36:34.571"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:34.571" starttime="20201013 13:36:34.570"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:36:34.572" critical="yes" starttime="20201013 13:36:25.803"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:34.577" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:39.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:39.549" level="INFO">${output} = 2020-10-13 13:36:36,321 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:36,547 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:39.549" starttime="20201013 13:36:34.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:39.550" level="INFO">2020-10-13 13:36:36,321 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:36,547 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:36:36,547 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-13 13:36:36,727 [main] INFO freon.BaseFreonGenerator: Executing test with prefix grrpmberit
2020-10-13 13:36:36,747 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-13 13:36:37,756 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:37,827 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-13 13:36:38,506 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-13 13:36:38,756 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-13 13:36:39,523 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=279.331632, max=279.331632, mean=279.331632, stddev=0.0, median=279.331632, p75=279.331632, p95=279.331632, p98=279.331632, p99=279.331632, p999=279.331632, mean_rate=0.8689614954358792, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-13 13:36:39,524 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-13 13:36:39,524 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-13 13:36:39,524 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201013 13:36:39.550" starttime="20201013 13:36:39.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:39.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:39.551" starttime="20201013 13:36:39.551"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:39.551" starttime="20201013 13:36:34.574"></status>
</kw>
<msg timestamp="20201013 13:36:39.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:39.552" starttime="20201013 13:36:34.574"></status>
</kw>
<msg timestamp="20201013 13:36:39.552" level="INFO">${result} = 2020-10-13 13:36:36,321 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:36,547 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:39.552" starttime="20201013 13:36:34.573"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:36:39.553" starttime="20201013 13:36:39.553"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:39.553" starttime="20201013 13:36:39.552"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:36:39.553" critical="yes" starttime="20201013 13:36:34.573"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:39.559" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:44.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:44.520" level="INFO">${output} = 2020-10-13 13:36:41,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:41,498 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:44.520" starttime="20201013 13:36:39.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:44.521" level="INFO">2020-10-13 13:36:41,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:41,498 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-13 13:36:41,498 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-13 13:36:41,654 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kxxcsnjsv8
2020-10-13 13:36:41,676 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-13 13:36:42,685 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-13 13:36:42,910 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-13 13:36:43,442 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-13 13:36:43,687 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-13 13:36:44,489 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=131.421526, max=131.421526, mean=131.421526, stddev=0.0, median=131.421526, p75=131.421526, p95=131.421526, p98=131.421526, p99=131.421526, p999=131.421526, mean_rate=0.8770689141340079, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-13 13:36:44,495 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-13 13:36:44,503 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-13 13:36:44,505 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201013 13:36:44.521" starttime="20201013 13:36:44.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:44.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:44.522" starttime="20201013 13:36:44.521"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:44.522" starttime="20201013 13:36:39.556"></status>
</kw>
<msg timestamp="20201013 13:36:44.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:44.522" starttime="20201013 13:36:39.556"></status>
</kw>
<msg timestamp="20201013 13:36:44.523" level="INFO">${result} = 2020-10-13 13:36:41,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-13 13:36:41,498 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201013 13:36:44.523" starttime="20201013 13:36:39.555"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:36:44.524" starttime="20201013 13:36:44.523"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:44.524" starttime="20201013 13:36:44.523"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201013 13:36:44.524" critical="yes" starttime="20201013 13:36:39.554"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201013 13:36:44.525" starttime="20201013 13:36:14.210"></status>
</suite>
<status status="PASS" endtime="20201013 13:36:44.528" starttime="20201013 13:36:14.182"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:06.166" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:06.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:06.172" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:36:06.172" starttime="20201013 13:36:06.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:06.173" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:36:06.173" starttime="20201013 13:36:06.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:06.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:06.174" starttime="20201013 13:36:06.173"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:06.174" starttime="20201013 13:36:06.154"></status>
</kw>
<msg timestamp="20201013 13:36:06.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:06.174" starttime="20201013 13:36:06.154"></status>
</kw>
<msg timestamp="20201013 13:36:06.175" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:36:06.175" starttime="20201013 13:36:06.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:36:06.175" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:36:06.175" starttime="20201013 13:36:06.175"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:06.189" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:06.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:06.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:36:06.204" starttime="20201013 13:36:06.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:06.205" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:36:06.205" starttime="20201013 13:36:06.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:06.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:06.207" starttime="20201013 13:36:06.205"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:06.207" starttime="20201013 13:36:06.177"></status>
</kw>
<msg timestamp="20201013 13:36:06.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:06.212" starttime="20201013 13:36:06.176"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:06.212" starttime="20201013 13:36:06.176"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:06.212" starttime="20201013 13:36:06.175"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:06.212" starttime="20201013 13:36:06.153"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:36:06.213" critical="yes" starttime="20201013 13:36:06.148"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201013 13:36:06.218" starttime="20201013 13:36:06.020"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201013 13:36:50.215" level="INFO">${random} = 90101</msg>
<status status="PASS" endtime="20201013 13:36:50.215" starttime="20201013 13:36:50.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201013 13:36:50.216" level="INFO">${source} = 90101-source</msg>
<status status="PASS" endtime="20201013 13:36:50.216" starttime="20201013 13:36:50.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201013 13:36:50.217" level="INFO">${target} = 90101-target</msg>
<status status="PASS" endtime="20201013 13:36:50.217" starttime="20201013 13:36:50.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:50.223" level="INFO">Running command 'ozone sh volume create 90101-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:54.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:54.122" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:36:54.122" starttime="20201013 13:36:50.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:54.123" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:36:54.123" starttime="20201013 13:36:54.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:54.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:54.123" starttime="20201013 13:36:54.123"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:54.124" starttime="20201013 13:36:50.218"></status>
</kw>
<msg timestamp="20201013 13:36:54.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:54.124" starttime="20201013 13:36:50.218"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:54.124" starttime="20201013 13:36:50.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:54.129" level="INFO">Running command 'ozone sh volume create 90101-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:36:58.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:36:58.561" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:36:58.561" starttime="20201013 13:36:54.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:36:58.562" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:36:58.562" starttime="20201013 13:36:58.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:36:58.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:36:58.563" starttime="20201013 13:36:58.562"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:58.563" starttime="20201013 13:36:54.125"></status>
</kw>
<msg timestamp="20201013 13:36:58.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:36:58.563" starttime="20201013 13:36:54.125"></status>
</kw>
<status status="PASS" endtime="20201013 13:36:58.564" starttime="20201013 13:36:54.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:36:58.570" level="INFO">Running command 'ozone sh bucket create 90101-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:02.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:02.083" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:02.083" starttime="20201013 13:36:58.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:02.084" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:02.084" starttime="20201013 13:37:02.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:02.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:02.084" starttime="20201013 13:37:02.084"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:02.085" starttime="20201013 13:36:58.565"></status>
</kw>
<msg timestamp="20201013 13:37:02.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:02.085" starttime="20201013 13:36:58.565"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:02.085" starttime="20201013 13:36:58.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:02.088" level="INFO">Running command 'ozone sh key put 90101-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:08.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:08.288" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:08.288" starttime="20201013 13:37:02.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:08.289" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:08.289" starttime="20201013 13:37:08.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:08.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:08.290" starttime="20201013 13:37:08.289"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:08.290" starttime="20201013 13:37:02.086"></status>
</kw>
<msg timestamp="20201013 13:37:08.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:08.290" starttime="20201013 13:37:02.086"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:08.290" starttime="20201013 13:37:02.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:08.295" level="INFO">Running command 'ozone sh bucket create 90101-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:11.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:11.998" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:11.998" starttime="20201013 13:37:08.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:11.999" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:11.999" starttime="20201013 13:37:11.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:11.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:11.999" starttime="20201013 13:37:11.999"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:12.000" starttime="20201013 13:37:08.292"></status>
</kw>
<msg timestamp="20201013 13:37:12.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:12.000" starttime="20201013 13:37:08.291"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:12.000" starttime="20201013 13:37:08.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:12.005" level="INFO">Running command 'ozone sh bucket link 90101-source/readable-bucket 90101-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:15.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:15.767" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:15.767" starttime="20201013 13:37:12.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:15.768" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:15.769" starttime="20201013 13:37:15.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:15.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:15.769" starttime="20201013 13:37:15.769"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:15.770" starttime="20201013 13:37:12.001"></status>
</kw>
<msg timestamp="20201013 13:37:15.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:15.770" starttime="20201013 13:37:12.001"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:15.770" starttime="20201013 13:37:12.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:15.774" level="INFO">Running command 'ozone sh bucket link 90101-source/readable-bucket 90101-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:19.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:19.856" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:19.856" starttime="20201013 13:37:15.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:19.857" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:19.857" starttime="20201013 13:37:19.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:19.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:19.858" starttime="20201013 13:37:19.857"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:19.858" starttime="20201013 13:37:15.771"></status>
</kw>
<msg timestamp="20201013 13:37:19.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:19.858" starttime="20201013 13:37:15.771"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:19.858" starttime="20201013 13:37:15.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:19.863" level="INFO">Running command 'ozone sh bucket link 90101-source/unreadable-bucket 90101-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:23.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:23.683" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:23.683" starttime="20201013 13:37:19.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:23.684" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:23.685" starttime="20201013 13:37:23.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:23.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:23.685" starttime="20201013 13:37:23.685"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:23.685" starttime="20201013 13:37:19.859"></status>
</kw>
<msg timestamp="20201013 13:37:23.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:23.686" starttime="20201013 13:37:19.859"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:23.686" starttime="20201013 13:37:19.859"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:23.689" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90101-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:27.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:27.353" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:27.353" starttime="20201013 13:37:23.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:27.354" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201013 13:37:27.355" starttime="20201013 13:37:27.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:27.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:27.355" starttime="20201013 13:37:27.355"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:27.356" starttime="20201013 13:37:23.687"></status>
</kw>
<msg timestamp="20201013 13:37:27.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:27.356" starttime="20201013 13:37:23.687"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:27.356" starttime="20201013 13:37:23.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:27.360" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90101-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:31.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:31.755" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:31.755" starttime="20201013 13:37:27.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:31.756" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201013 13:37:31.757" starttime="20201013 13:37:31.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:31.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:31.757" starttime="20201013 13:37:31.757"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:31.757" starttime="20201013 13:37:27.357"></status>
</kw>
<msg timestamp="20201013 13:37:31.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:31.758" starttime="20201013 13:37:27.357"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:31.758" starttime="20201013 13:37:27.356"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:31.762" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90101-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:36.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:36.024" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:36.024" starttime="20201013 13:37:31.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:36.025" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201013 13:37:36.025" starttime="20201013 13:37:36.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:36.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:36.025" starttime="20201013 13:37:36.025"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:36.025" starttime="20201013 13:37:31.759"></status>
</kw>
<msg timestamp="20201013 13:37:36.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:36.026" starttime="20201013 13:37:31.758"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:36.026" starttime="20201013 13:37:31.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:36.031" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90101-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:39.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:39.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:39.853" starttime="20201013 13:37:36.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:39.854" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201013 13:37:39.854" starttime="20201013 13:37:39.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:39.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:39.854" starttime="20201013 13:37:39.854"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:39.855" starttime="20201013 13:37:36.027"></status>
</kw>
<msg timestamp="20201013 13:37:39.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:39.855" starttime="20201013 13:37:36.026"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:39.855" starttime="20201013 13:37:36.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:39.862" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90101-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:43.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:43.550" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:43.550" starttime="20201013 13:37:39.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:43.551" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201013 13:37:43.551" starttime="20201013 13:37:43.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:43.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:43.551" starttime="20201013 13:37:43.551"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.552" starttime="20201013 13:37:39.856"></status>
</kw>
<msg timestamp="20201013 13:37:43.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:43.552" starttime="20201013 13:37:39.856"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.552" starttime="20201013 13:37:39.855"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.552" starttime="20201013 13:36:58.564"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.552" starttime="20201013 13:36:58.564"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.553" starttime="20201013 13:36:50.214"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:43.559" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:43.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:43.562" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:37:43.562" starttime="20201013 13:37:43.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:43.563" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:37:43.563" starttime="20201013 13:37:43.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:43.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:43.563" starttime="20201013 13:37:43.563"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.564" starttime="20201013 13:37:43.556"></status>
</kw>
<msg timestamp="20201013 13:37:43.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:43.564" starttime="20201013 13:37:43.556"></status>
</kw>
<msg timestamp="20201013 13:37:43.564" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:37:43.564" starttime="20201013 13:37:43.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:37:43.565" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:37:43.565" starttime="20201013 13:37:43.564"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:43.569" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:43.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:43.582" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:37:43.582" starttime="20201013 13:37:43.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:43.583" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:37:43.583" starttime="20201013 13:37:43.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:43.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:43.583" starttime="20201013 13:37:43.583"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.584" starttime="20201013 13:37:43.567"></status>
</kw>
<msg timestamp="20201013 13:37:43.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:43.584" starttime="20201013 13:37:43.566"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.584" starttime="20201013 13:37:43.566"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.584" starttime="20201013 13:37:43.566"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.584" starttime="20201013 13:37:43.555"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:43.584" starttime="20201013 13:37:43.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:43.588" level="INFO">Running command 'ozone sh bucket link 90101-source/no-such-bucket 90101-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:47.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:47.335" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:47.336" starttime="20201013 13:37:43.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:47.337" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:47.337" starttime="20201013 13:37:47.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:47.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:47.338" starttime="20201013 13:37:47.337"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:47.338" starttime="20201013 13:37:43.585"></status>
</kw>
<msg timestamp="20201013 13:37:47.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:47.338" starttime="20201013 13:37:43.585"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:47.338" starttime="20201013 13:37:43.584"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:47.341" level="INFO">Running command 'ozone sh key list 90101-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:51.194" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:37:51.194" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:51.194" starttime="20201013 13:37:47.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:51.195" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201013 13:37:51.196" starttime="20201013 13:37:51.195"></status>
</kw>
<msg timestamp="20201013 13:37:51.196" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:51.196" starttime="20201013 13:37:47.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201013 13:37:51.197" starttime="20201013 13:37:51.196"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:37:51.197" critical="yes" starttime="20201013 13:37:43.553"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:51.203" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:51.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:51.206" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:37:51.206" starttime="20201013 13:37:51.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:51.207" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:37:51.207" starttime="20201013 13:37:51.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:51.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:51.208" starttime="20201013 13:37:51.207"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:51.208" starttime="20201013 13:37:51.201"></status>
</kw>
<msg timestamp="20201013 13:37:51.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:51.208" starttime="20201013 13:37:51.200"></status>
</kw>
<msg timestamp="20201013 13:37:51.208" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:37:51.208" starttime="20201013 13:37:51.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:37:51.209" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:37:51.209" starttime="20201013 13:37:51.209"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:51.214" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:51.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:51.225" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:37:51.225" starttime="20201013 13:37:51.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:51.226" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:37:51.227" starttime="20201013 13:37:51.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:51.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:51.227" starttime="20201013 13:37:51.227"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:51.228" starttime="20201013 13:37:51.211"></status>
</kw>
<msg timestamp="20201013 13:37:51.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:51.228" starttime="20201013 13:37:51.210"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:51.228" starttime="20201013 13:37:51.210"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:51.228" starttime="20201013 13:37:51.209"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:51.228" starttime="20201013 13:37:51.199"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:51.228" starttime="20201013 13:37:51.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:51.233" level="INFO">Running command 'ozone sh bucket link 90101-source/bucket1 90101-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:55.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:55.255" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:55.255" starttime="20201013 13:37:51.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:55.256" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:55.256" starttime="20201013 13:37:55.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:55.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:55.257" starttime="20201013 13:37:55.257"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:55.257" starttime="20201013 13:37:51.229"></status>
</kw>
<msg timestamp="20201013 13:37:55.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:55.258" starttime="20201013 13:37:51.229"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:55.258" starttime="20201013 13:37:51.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:55.262" level="INFO">Running command 'ozone sh bucket create 90101-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:37:59.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:37:59.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:37:59.317" starttime="20201013 13:37:55.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:37:59.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:37:59.318" starttime="20201013 13:37:59.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:37:59.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:37:59.319" starttime="20201013 13:37:59.319"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:59.319" starttime="20201013 13:37:55.259"></status>
</kw>
<msg timestamp="20201013 13:37:59.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:37:59.320" starttime="20201013 13:37:55.259"></status>
</kw>
<status status="PASS" endtime="20201013 13:37:59.320" starttime="20201013 13:37:55.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:37:59.324" level="INFO">Running command 'ozone sh key put 90101-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:06.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:06.303" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:06.304" starttime="20201013 13:37:59.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:06.305" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:38:06.305" starttime="20201013 13:38:06.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:06.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:06.305" starttime="20201013 13:38:06.305"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:06.306" starttime="20201013 13:37:59.321"></status>
</kw>
<msg timestamp="20201013 13:38:06.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:06.306" starttime="20201013 13:37:59.321"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:06.306" starttime="20201013 13:37:59.320"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201013 13:38:06.308" level="INFO">${postfix} = 98267</msg>
<status status="PASS" endtime="20201013 13:38:06.308" starttime="20201013 13:38:06.307"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201013 13:38:06.309" level="INFO">${tmpfile} = /tmp/tempkey-98267</msg>
<status status="PASS" endtime="20201013 13:38:06.309" starttime="20201013 13:38:06.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:06.312" level="INFO">Running command 'ozone sh key get -f 90101-target/link1/key1 /tmp/tempkey-98267 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:12.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:12.165" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:12.165" starttime="20201013 13:38:06.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.167" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:38:12.167" starttime="20201013 13:38:12.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:12.167" starttime="20201013 13:38:12.167"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.168" starttime="20201013 13:38:06.309"></status>
</kw>
<msg timestamp="20201013 13:38:12.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:12.168" starttime="20201013 13:38:06.309"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.168" starttime="20201013 13:38:06.309"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201013 13:38:12.170" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-98267 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:12.173" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201013 13:38:12.173" starttime="20201013 13:38:12.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:12.178" level="INFO">Running command 'rm -f /tmp/tempkey-98267 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:12.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:12.180" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:12.180" starttime="20201013 13:38:12.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.181" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:12.181" starttime="20201013 13:38:12.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:12.182" starttime="20201013 13:38:12.181"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.182" starttime="20201013 13:38:12.175"></status>
</kw>
<msg timestamp="20201013 13:38:12.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:12.182" starttime="20201013 13:38:12.174"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.182" starttime="20201013 13:38:12.174"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:38:12.183" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201013 13:38:12.183" starttime="20201013 13:38:12.183"></status>
</kw>
<msg timestamp="20201013 13:38:12.183" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201013 13:38:12.183" starttime="20201013 13:38:06.307"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:12.184" starttime="20201013 13:38:12.184"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.184" starttime="20201013 13:38:06.306"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:38:12.184" critical="yes" starttime="20201013 13:37:51.198"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:12.190" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:12.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:12.193" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:38:12.193" starttime="20201013 13:38:12.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.194" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:38:12.194" starttime="20201013 13:38:12.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:12.195" starttime="20201013 13:38:12.194"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.195" starttime="20201013 13:38:12.188"></status>
</kw>
<msg timestamp="20201013 13:38:12.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:12.195" starttime="20201013 13:38:12.187"></status>
</kw>
<msg timestamp="20201013 13:38:12.195" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:38:12.195" starttime="20201013 13:38:12.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:38:12.196" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:38:12.196" starttime="20201013 13:38:12.196"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:12.200" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:12.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:12.212" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:12.212" starttime="20201013 13:38:12.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.213" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:12.213" starttime="20201013 13:38:12.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:12.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:12.213" starttime="20201013 13:38:12.213"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.214" starttime="20201013 13:38:12.197"></status>
</kw>
<msg timestamp="20201013 13:38:12.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:12.214" starttime="20201013 13:38:12.197"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.214" starttime="20201013 13:38:12.197"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.214" starttime="20201013 13:38:12.196"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.214" starttime="20201013 13:38:12.186"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:12.214" starttime="20201013 13:38:12.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:12.220" level="INFO">Running command 'ozone sh key put 90101-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:18.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:18.255" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:18.255" starttime="20201013 13:38:12.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:18.256" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:38:18.257" starttime="20201013 13:38:18.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:18.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:18.257" starttime="20201013 13:38:18.257"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:18.258" starttime="20201013 13:38:12.216"></status>
</kw>
<msg timestamp="20201013 13:38:18.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:18.258" starttime="20201013 13:38:12.216"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:18.258" starttime="20201013 13:38:12.215"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201013 13:38:18.260" level="INFO">${postfix} = 08765</msg>
<status status="PASS" endtime="20201013 13:38:18.260" starttime="20201013 13:38:18.259"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201013 13:38:18.260" level="INFO">${tmpfile} = /tmp/tempkey-08765</msg>
<status status="PASS" endtime="20201013 13:38:18.260" starttime="20201013 13:38:18.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:18.264" level="INFO">Running command 'ozone sh key get -f 90101-source/bucket1/key2 /tmp/tempkey-08765 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:23.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:23.993" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:23.993" starttime="20201013 13:38:18.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:23.994" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:38:23.994" starttime="20201013 13:38:23.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:23.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:23.995" starttime="20201013 13:38:23.994"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:23.995" starttime="20201013 13:38:18.261"></status>
</kw>
<msg timestamp="20201013 13:38:23.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:23.995" starttime="20201013 13:38:18.261"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:23.995" starttime="20201013 13:38:18.261"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201013 13:38:23.998" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-08765 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:24.001" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201013 13:38:24.001" starttime="20201013 13:38:23.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:24.007" level="INFO">Running command 'rm -f /tmp/tempkey-08765 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:24.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:24.008" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:24.008" starttime="20201013 13:38:24.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:24.009" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:24.009" starttime="20201013 13:38:24.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:24.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:24.010" starttime="20201013 13:38:24.009"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.010" starttime="20201013 13:38:24.003"></status>
</kw>
<msg timestamp="20201013 13:38:24.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:24.010" starttime="20201013 13:38:24.002"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.011" starttime="20201013 13:38:24.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:38:24.011" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201013 13:38:24.011" starttime="20201013 13:38:24.011"></status>
</kw>
<msg timestamp="20201013 13:38:24.011" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201013 13:38:24.012" starttime="20201013 13:38:18.259"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:24.012" starttime="20201013 13:38:24.012"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.012" starttime="20201013 13:38:18.258"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:38:24.014" critical="yes" starttime="20201013 13:38:12.185"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:24.021" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:24.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:24.023" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:38:24.023" starttime="20201013 13:38:24.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:24.024" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:38:24.024" starttime="20201013 13:38:24.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:24.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:24.025" starttime="20201013 13:38:24.024"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.025" starttime="20201013 13:38:24.018"></status>
</kw>
<msg timestamp="20201013 13:38:24.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:24.025" starttime="20201013 13:38:24.017"></status>
</kw>
<msg timestamp="20201013 13:38:24.025" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:38:24.025" starttime="20201013 13:38:24.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:38:24.026" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:38:24.026" starttime="20201013 13:38:24.026"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:24.032" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:24.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:24.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:24.044" starttime="20201013 13:38:24.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:24.045" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:24.045" starttime="20201013 13:38:24.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:24.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:24.045" starttime="20201013 13:38:24.045"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.046" starttime="20201013 13:38:24.027"></status>
</kw>
<msg timestamp="20201013 13:38:24.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:24.046" starttime="20201013 13:38:24.027"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.046" starttime="20201013 13:38:24.027"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.046" starttime="20201013 13:38:24.026"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.046" starttime="20201013 13:38:24.016"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:24.046" starttime="20201013 13:38:24.016"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:24.051" level="INFO">Running command 'ozone sh key list 90101-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:28.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:28.073" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201013 13:38:28.073" starttime="20201013 13:38:24.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:28.074" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201013 13:38:28.074" starttime="20201013 13:38:28.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:28.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:28.075" starttime="20201013 13:38:28.074"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:28.076" starttime="20201013 13:38:24.048"></status>
</kw>
<msg timestamp="20201013 13:38:28.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:28.076" starttime="20201013 13:38:24.047"></status>
</kw>
<msg timestamp="20201013 13:38:28.076" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201013 13:38:28.076" starttime="20201013 13:38:24.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:28.080" level="INFO">Running command 'ozone sh key list 90101-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:32.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:32.318" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201013 13:38:32.318" starttime="20201013 13:38:28.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:32.319" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201013 13:38:32.319" starttime="20201013 13:38:32.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:32.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:32.320" starttime="20201013 13:38:32.319"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:32.321" starttime="20201013 13:38:28.077"></status>
</kw>
<msg timestamp="20201013 13:38:32.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:32.321" starttime="20201013 13:38:28.077"></status>
</kw>
<msg timestamp="20201013 13:38:32.321" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201013 13:38:32.321" starttime="20201013 13:38:28.076"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:32.322" starttime="20201013 13:38:32.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:32.322" starttime="20201013 13:38:32.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:32.322" starttime="20201013 13:38:32.322"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:38:32.323" critical="yes" starttime="20201013 13:38:24.015"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:32.330" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:32.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:32.334" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:38:32.334" starttime="20201013 13:38:32.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:32.335" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:38:32.335" starttime="20201013 13:38:32.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:32.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:32.337" starttime="20201013 13:38:32.335"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:32.340" starttime="20201013 13:38:32.327"></status>
</kw>
<msg timestamp="20201013 13:38:32.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:32.340" starttime="20201013 13:38:32.326"></status>
</kw>
<msg timestamp="20201013 13:38:32.340" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:38:32.340" starttime="20201013 13:38:32.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:38:32.341" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:38:32.341" starttime="20201013 13:38:32.341"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:32.345" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:32.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:32.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:32.379" starttime="20201013 13:38:32.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:32.381" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:32.387" starttime="20201013 13:38:32.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:32.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:32.387" starttime="20201013 13:38:32.387"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:32.388" starttime="20201013 13:38:32.342"></status>
</kw>
<msg timestamp="20201013 13:38:32.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:32.388" starttime="20201013 13:38:32.342"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:32.390" starttime="20201013 13:38:32.342"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:32.390" starttime="20201013 13:38:32.341"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:32.390" starttime="20201013 13:38:32.326"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:32.390" starttime="20201013 13:38:32.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:32.402" level="INFO">Running command 'ozone sh key delete 90101-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:36.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:36.354" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:36.354" starttime="20201013 13:38:32.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:36.355" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:38:36.355" starttime="20201013 13:38:36.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:36.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:36.356" starttime="20201013 13:38:36.355"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:36.356" starttime="20201013 13:38:32.393"></status>
</kw>
<msg timestamp="20201013 13:38:36.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:36.356" starttime="20201013 13:38:32.392"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:36.356" starttime="20201013 13:38:32.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:36.361" level="INFO">Running command 'ozone sh key list 90101-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:40.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:40.086" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201013 13:38:40.086" starttime="20201013 13:38:36.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:40.087" level="INFO">key1</msg>
<status status="PASS" endtime="20201013 13:38:40.087" starttime="20201013 13:38:40.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:40.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:40.088" starttime="20201013 13:38:40.087"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:40.088" starttime="20201013 13:38:36.357"></status>
</kw>
<msg timestamp="20201013 13:38:40.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:40.088" starttime="20201013 13:38:36.357"></status>
</kw>
<msg timestamp="20201013 13:38:40.089" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201013 13:38:40.089" starttime="20201013 13:38:36.356"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:40.089" starttime="20201013 13:38:40.089"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:38:40.089" critical="yes" starttime="20201013 13:38:32.324"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:40.098" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:40.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:40.101" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:38:40.101" starttime="20201013 13:38:40.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:40.102" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:38:40.102" starttime="20201013 13:38:40.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:40.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:40.103" starttime="20201013 13:38:40.102"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:40.103" starttime="20201013 13:38:40.093"></status>
</kw>
<msg timestamp="20201013 13:38:40.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:40.103" starttime="20201013 13:38:40.093"></status>
</kw>
<msg timestamp="20201013 13:38:40.104" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:38:40.104" starttime="20201013 13:38:40.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:38:40.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:38:40.104" starttime="20201013 13:38:40.104"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:40.110" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:40.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:40.121" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:40.121" starttime="20201013 13:38:40.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:40.122" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:40.122" starttime="20201013 13:38:40.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:40.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:40.123" starttime="20201013 13:38:40.122"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:40.123" starttime="20201013 13:38:40.106"></status>
</kw>
<msg timestamp="20201013 13:38:40.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:40.123" starttime="20201013 13:38:40.106"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:40.123" starttime="20201013 13:38:40.105"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:40.124" starttime="20201013 13:38:40.105"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:40.124" starttime="20201013 13:38:40.092"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:40.124" starttime="20201013 13:38:40.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:40.128" level="INFO">Running command 'ozone sh bucket list 90101-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:43.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:43.847" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:43.847" starttime="20201013 13:38:40.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:43.848" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:47.132Z",
  "modificationTime" : "2020-10-13T13:37:47.132Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:23.594Z",
  "modificationTime" : "2020-10-13T13:37:23.594Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:54.886Z",
  "modificationTime" : "2020-10-13T13:37:54.886Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:15.449Z",
  "modificationTime" : "2020-10-13T13:37:15.449Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:19.585Z",
  "modificationTime" : "2020-10-13T13:37:19.585Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201013 13:38:43.848" starttime="20201013 13:38:43.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:43.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:43.849" starttime="20201013 13:38:43.849"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:43.849" starttime="20201013 13:38:40.125"></status>
</kw>
<msg timestamp="20201013 13:38:43.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:43.850" starttime="20201013 13:38:40.125"></status>
</kw>
<msg timestamp="20201013 13:38:43.850" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:43.850" starttime="20201013 13:38:40.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:43.851" starttime="20201013 13:38:43.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:43.851" starttime="20201013 13:38:43.851"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:38:43.851" critical="yes" starttime="20201013 13:38:40.090"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:43.858" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:43.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:43.860" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:38:43.860" starttime="20201013 13:38:43.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:43.861" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:38:43.861" starttime="20201013 13:38:43.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:43.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:43.862" starttime="20201013 13:38:43.861"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:43.862" starttime="20201013 13:38:43.854"></status>
</kw>
<msg timestamp="20201013 13:38:43.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:43.862" starttime="20201013 13:38:43.854"></status>
</kw>
<msg timestamp="20201013 13:38:43.862" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:38:43.863" starttime="20201013 13:38:43.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:38:43.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:38:43.863" starttime="20201013 13:38:43.863"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:43.868" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:43.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:43.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:43.879" starttime="20201013 13:38:43.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:43.880" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:43.880" starttime="20201013 13:38:43.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:43.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:43.881" starttime="20201013 13:38:43.880"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:43.881" starttime="20201013 13:38:43.865"></status>
</kw>
<msg timestamp="20201013 13:38:43.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:43.881" starttime="20201013 13:38:43.865"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:43.882" starttime="20201013 13:38:43.864"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:43.882" starttime="20201013 13:38:43.863"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:43.882" starttime="20201013 13:38:43.853"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:43.882" starttime="20201013 13:38:43.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:43.887" level="INFO">Running command 'ozone sh bucket info 90101-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:47.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:47.584" level="INFO">${output} = 90101-source bucket1</msg>
<status status="PASS" endtime="20201013 13:38:47.584" starttime="20201013 13:38:43.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:47.586" level="INFO">90101-source bucket1</msg>
<status status="PASS" endtime="20201013 13:38:47.586" starttime="20201013 13:38:47.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:47.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:47.586" starttime="20201013 13:38:47.586"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:47.587" starttime="20201013 13:38:43.883"></status>
</kw>
<msg timestamp="20201013 13:38:47.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:47.587" starttime="20201013 13:38:43.883"></status>
</kw>
<msg timestamp="20201013 13:38:47.587" level="INFO">${result} = 90101-source bucket1</msg>
<status status="PASS" endtime="20201013 13:38:47.587" starttime="20201013 13:38:43.882"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:47.588" starttime="20201013 13:38:47.587"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:38:47.588" critical="yes" starttime="20201013 13:38:43.852"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:47.595" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:47.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:47.597" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:38:47.597" starttime="20201013 13:38:47.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:47.598" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:38:47.598" starttime="20201013 13:38:47.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:47.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:47.599" starttime="20201013 13:38:47.598"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:47.599" starttime="20201013 13:38:47.591"></status>
</kw>
<msg timestamp="20201013 13:38:47.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:47.599" starttime="20201013 13:38:47.591"></status>
</kw>
<msg timestamp="20201013 13:38:47.599" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:38:47.599" starttime="20201013 13:38:47.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:38:47.600" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:38:47.600" starttime="20201013 13:38:47.600"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:47.605" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:47.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:47.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:47.619" starttime="20201013 13:38:47.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:47.621" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:47.621" starttime="20201013 13:38:47.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:47.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:47.622" starttime="20201013 13:38:47.621"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:47.622" starttime="20201013 13:38:47.602"></status>
</kw>
<msg timestamp="20201013 13:38:47.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:47.622" starttime="20201013 13:38:47.601"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:47.622" starttime="20201013 13:38:47.601"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:47.622" starttime="20201013 13:38:47.600"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:47.622" starttime="20201013 13:38:47.590"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:47.622" starttime="20201013 13:38:47.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:47.628" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 90101-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:51.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:51.337" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:38:51.337" starttime="20201013 13:38:47.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:51.338" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201013 13:38:51.339" starttime="20201013 13:38:51.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:51.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:51.339" starttime="20201013 13:38:51.339"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:51.340" starttime="20201013 13:38:47.624"></status>
</kw>
<msg timestamp="20201013 13:38:51.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:51.340" starttime="20201013 13:38:47.623"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:51.340" starttime="20201013 13:38:47.623"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:51.353" level="INFO">Running command 'ozone sh bucket getacl 90101-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:55.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:55.427" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201013 13:38:55.427" starttime="20201013 13:38:51.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:55.428" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201013 13:38:55.428" starttime="20201013 13:38:55.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:55.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:55.429" starttime="20201013 13:38:55.428"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:55.429" starttime="20201013 13:38:51.348"></status>
</kw>
<msg timestamp="20201013 13:38:55.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:55.429" starttime="20201013 13:38:51.348"></status>
</kw>
<msg timestamp="20201013 13:38:55.429" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201013 13:38:55.429" starttime="20201013 13:38:51.347"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:55.430" starttime="20201013 13:38:55.430"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:55.430" starttime="20201013 13:38:51.340"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:55.436" level="INFO">Running command 'ozone sh bucket getacl 90101-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:38:59.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:38:59.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:38:59.084" starttime="20201013 13:38:55.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:38:59.085" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:38:59.085" starttime="20201013 13:38:59.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:38:59.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:38:59.086" starttime="20201013 13:38:59.086"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:59.086" starttime="20201013 13:38:55.432"></status>
</kw>
<msg timestamp="20201013 13:38:59.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:38:59.087" starttime="20201013 13:38:55.432"></status>
</kw>
<msg timestamp="20201013 13:38:59.087" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201013 13:38:59.087" starttime="20201013 13:38:55.431"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:38:59.087" starttime="20201013 13:38:59.087"></status>
</kw>
<status status="PASS" endtime="20201013 13:38:59.088" starttime="20201013 13:38:55.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:38:59.092" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 90101-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:02.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:02.744" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:02.744" starttime="20201013 13:38:59.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:02.745" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201013 13:39:02.745" starttime="20201013 13:39:02.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:02.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:02.746" starttime="20201013 13:39:02.745"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:02.746" starttime="20201013 13:38:59.089"></status>
</kw>
<msg timestamp="20201013 13:39:02.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:02.746" starttime="20201013 13:38:59.088"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:02.747" starttime="20201013 13:38:59.088"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:02.754" level="INFO">Running command 'ozone sh bucket getacl 90101-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:06.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:06.832" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:06.832" starttime="20201013 13:39:02.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:06.834" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:06.834" starttime="20201013 13:39:06.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:06.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:06.835" starttime="20201013 13:39:06.835"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:06.836" starttime="20201013 13:39:02.749"></status>
</kw>
<msg timestamp="20201013 13:39:06.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:06.836" starttime="20201013 13:39:02.749"></status>
</kw>
<msg timestamp="20201013 13:39:06.836" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201013 13:39:06.836" starttime="20201013 13:39:02.748"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:06.837" starttime="20201013 13:39:06.837"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:06.837" starttime="20201013 13:39:02.747"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:06.857" level="INFO">Running command 'ozone sh bucket getacl 90101-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:11.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:11.445" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201013 13:39:11.445" starttime="20201013 13:39:06.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:11.446" level="INFO">READ</msg>
<status status="PASS" endtime="20201013 13:39:11.446" starttime="20201013 13:39:11.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:11.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:11.447" starttime="20201013 13:39:11.446"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.447" starttime="20201013 13:39:06.839"></status>
</kw>
<msg timestamp="20201013 13:39:11.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:11.447" starttime="20201013 13:39:06.839"></status>
</kw>
<msg timestamp="20201013 13:39:11.448" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201013 13:39:11.448" starttime="20201013 13:39:06.838"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:11.448" starttime="20201013 13:39:11.448"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.448" starttime="20201013 13:39:06.837"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:39:11.449" critical="yes" starttime="20201013 13:38:47.589"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:11.455" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:11.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:11.458" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:11.458" starttime="20201013 13:39:11.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:11.459" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:11.459" starttime="20201013 13:39:11.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:11.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:11.460" starttime="20201013 13:39:11.459"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.460" starttime="20201013 13:39:11.453"></status>
</kw>
<msg timestamp="20201013 13:39:11.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:11.460" starttime="20201013 13:39:11.452"></status>
</kw>
<msg timestamp="20201013 13:39:11.461" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:11.461" starttime="20201013 13:39:11.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:11.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:11.461" starttime="20201013 13:39:11.461"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:11.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:11.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:11.484" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:11.484" starttime="20201013 13:39:11.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:11.485" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:11.485" starttime="20201013 13:39:11.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:11.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:11.486" starttime="20201013 13:39:11.485"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.486" starttime="20201013 13:39:11.463"></status>
</kw>
<msg timestamp="20201013 13:39:11.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:11.486" starttime="20201013 13:39:11.463"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.486" starttime="20201013 13:39:11.462"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.486" starttime="20201013 13:39:11.462"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.487" starttime="20201013 13:39:11.451"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:11.487" starttime="20201013 13:39:11.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:11.491" level="INFO">Running command 'ozone sh bucket link 90101-source/bucket2 90101-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:15.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:15.169" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:15.169" starttime="20201013 13:39:11.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:15.171" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:39:15.171" starttime="20201013 13:39:15.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:15.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:15.174" starttime="20201013 13:39:15.173"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:15.174" starttime="20201013 13:39:11.488"></status>
</kw>
<msg timestamp="20201013 13:39:15.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:15.174" starttime="20201013 13:39:11.488"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:15.174" starttime="20201013 13:39:11.487"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:15.177" level="INFO">Running command 'ozone sh bucket create 90101-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:19.898" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:39:19.898" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:19.898" starttime="20201013 13:39:15.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:19.899" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201013 13:39:19.900" starttime="20201013 13:39:19.899"></status>
</kw>
<msg timestamp="20201013 13:39:19.900" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:19.900" starttime="20201013 13:39:15.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:19.901" starttime="20201013 13:39:19.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:19.906" level="INFO">Running command 'ozone sh bucket create 90101-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:23.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:23.266" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:23.266" starttime="20201013 13:39:19.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:23.267" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:39:23.267" starttime="20201013 13:39:23.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:23.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:23.268" starttime="20201013 13:39:23.267"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:23.268" starttime="20201013 13:39:19.901"></status>
</kw>
<msg timestamp="20201013 13:39:23.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:23.268" starttime="20201013 13:39:19.901"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:23.269" starttime="20201013 13:39:19.901"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:23.275" level="INFO">Running command 'ozone sh bucket link 90101-source/bucket1 90101-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:27.195" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:39:27.195" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:27.195" starttime="20201013 13:39:23.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.196" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201013 13:39:27.196" starttime="20201013 13:39:27.196"></status>
</kw>
<msg timestamp="20201013 13:39:27.196" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:27.197" starttime="20201013 13:39:23.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:27.197" starttime="20201013 13:39:27.197"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:39:27.197" critical="yes" starttime="20201013 13:39:11.450"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:27.203" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:27.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:27.205" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:27.205" starttime="20201013 13:39:27.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.206" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:27.206" starttime="20201013 13:39:27.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:27.207" starttime="20201013 13:39:27.206"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.207" starttime="20201013 13:39:27.200"></status>
</kw>
<msg timestamp="20201013 13:39:27.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:27.207" starttime="20201013 13:39:27.200"></status>
</kw>
<msg timestamp="20201013 13:39:27.208" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:27.208" starttime="20201013 13:39:27.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:27.208" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:27.208" starttime="20201013 13:39:27.208"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:27.213" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:27.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:27.224" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:27.224" starttime="20201013 13:39:27.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.225" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:27.225" starttime="20201013 13:39:27.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:27.226" starttime="20201013 13:39:27.225"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.226" starttime="20201013 13:39:27.210"></status>
</kw>
<msg timestamp="20201013 13:39:27.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:27.226" starttime="20201013 13:39:27.209"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.227" starttime="20201013 13:39:27.209"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.227" starttime="20201013 13:39:27.208"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.227" starttime="20201013 13:39:27.199"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.227" starttime="20201013 13:39:27.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:27.232" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:27.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:27.235" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:27.235" starttime="20201013 13:39:27.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.236" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:27.236" starttime="20201013 13:39:27.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:27.237" starttime="20201013 13:39:27.237"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.238" starttime="20201013 13:39:27.229"></status>
</kw>
<msg timestamp="20201013 13:39:27.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:27.238" starttime="20201013 13:39:27.228"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.238" starttime="20201013 13:39:27.228"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:27.243" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:27.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:27.244" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:27.244" starttime="20201013 13:39:27.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.245" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:27.245" starttime="20201013 13:39:27.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:27.246" starttime="20201013 13:39:27.245"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.246" starttime="20201013 13:39:27.239"></status>
</kw>
<msg timestamp="20201013 13:39:27.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:27.246" starttime="20201013 13:39:27.239"></status>
</kw>
<msg timestamp="20201013 13:39:27.246" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:27.246" starttime="20201013 13:39:27.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:27.247" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:27.247" starttime="20201013 13:39:27.247"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:27.252" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:27.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:27.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:27.262" starttime="20201013 13:39:27.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.263" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:27.263" starttime="20201013 13:39:27.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:27.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:27.264" starttime="20201013 13:39:27.263"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.264" starttime="20201013 13:39:27.249"></status>
</kw>
<msg timestamp="20201013 13:39:27.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:27.265" starttime="20201013 13:39:27.248"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.265" starttime="20201013 13:39:27.248"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.265" starttime="20201013 13:39:27.247"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.265" starttime="20201013 13:39:27.238"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:27.265" starttime="20201013 13:39:27.238"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:27.268" level="INFO">Running command 'ozone sh key list 90101-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:31.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:31.039" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:31.039" starttime="20201013 13:39:27.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.040" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "90101-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-13T13:37:05.825Z",
  "modificationTime" : "2020-10-13T13:37:07.797Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201013 13:39:31.040" starttime="20201013 13:39:31.040"></status>
</kw>
<msg timestamp="20201013 13:39:31.041" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:31.041" starttime="20201013 13:39:27.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:31.041" starttime="20201013 13:39:31.041"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.042" starttime="20201013 13:39:27.227"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.042" starttime="20201013 13:39:27.227"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:39:31.042" critical="yes" starttime="20201013 13:39:27.198"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:31.048" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:31.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:31.054" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:31.054" starttime="20201013 13:39:31.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.055" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:31.055" starttime="20201013 13:39:31.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:31.055" starttime="20201013 13:39:31.055"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.056" starttime="20201013 13:39:31.045"></status>
</kw>
<msg timestamp="20201013 13:39:31.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:31.056" starttime="20201013 13:39:31.045"></status>
</kw>
<msg timestamp="20201013 13:39:31.056" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:31.056" starttime="20201013 13:39:31.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:31.057" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:31.057" starttime="20201013 13:39:31.056"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:31.061" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:31.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:31.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:31.079" starttime="20201013 13:39:31.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.080" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:31.080" starttime="20201013 13:39:31.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:31.081" starttime="20201013 13:39:31.080"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.081" starttime="20201013 13:39:31.058"></status>
</kw>
<msg timestamp="20201013 13:39:31.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:31.081" starttime="20201013 13:39:31.058"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.081" starttime="20201013 13:39:31.057"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.082" starttime="20201013 13:39:31.057"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.082" starttime="20201013 13:39:31.044"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.082" starttime="20201013 13:39:31.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:31.088" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:31.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:31.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:31.090" starttime="20201013 13:39:31.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.091" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:31.091" starttime="20201013 13:39:31.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:31.092" starttime="20201013 13:39:31.091"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.092" starttime="20201013 13:39:31.084"></status>
</kw>
<msg timestamp="20201013 13:39:31.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:31.092" starttime="20201013 13:39:31.084"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.092" starttime="20201013 13:39:31.083"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:31.097" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:31.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:31.098" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:31.098" starttime="20201013 13:39:31.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.099" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:31.099" starttime="20201013 13:39:31.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:31.099" starttime="20201013 13:39:31.099"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.100" starttime="20201013 13:39:31.094"></status>
</kw>
<msg timestamp="20201013 13:39:31.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:31.100" starttime="20201013 13:39:31.094"></status>
</kw>
<msg timestamp="20201013 13:39:31.100" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:31.100" starttime="20201013 13:39:31.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:31.101" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:31.101" starttime="20201013 13:39:31.100"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:31.105" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:31.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:31.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:31.114" starttime="20201013 13:39:31.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.115" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:31.115" starttime="20201013 13:39:31.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:31.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:31.115" starttime="20201013 13:39:31.115"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.116" starttime="20201013 13:39:31.102"></status>
</kw>
<msg timestamp="20201013 13:39:31.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:31.116" starttime="20201013 13:39:31.102"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.116" starttime="20201013 13:39:31.101"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.116" starttime="20201013 13:39:31.101"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.116" starttime="20201013 13:39:31.093"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:31.116" starttime="20201013 13:39:31.093"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:31.120" level="INFO">Running command 'ozone sh key list 90101-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:34.576" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:39:34.576" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:34.576" starttime="20201013 13:39:31.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.577" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201013 13:39:34.577" starttime="20201013 13:39:34.576"></status>
</kw>
<msg timestamp="20201013 13:39:34.580" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:34.580" starttime="20201013 13:39:31.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:34.581" starttime="20201013 13:39:34.580"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.581" starttime="20201013 13:39:31.082"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.581" starttime="20201013 13:39:31.082"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:39:34.581" critical="yes" starttime="20201013 13:39:31.043"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:34.587" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:34.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:34.590" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:34.590" starttime="20201013 13:39:34.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.591" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:34.591" starttime="20201013 13:39:34.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:34.592" starttime="20201013 13:39:34.591"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.592" starttime="20201013 13:39:34.585"></status>
</kw>
<msg timestamp="20201013 13:39:34.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:34.592" starttime="20201013 13:39:34.584"></status>
</kw>
<msg timestamp="20201013 13:39:34.593" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:34.593" starttime="20201013 13:39:34.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:34.593" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:34.593" starttime="20201013 13:39:34.593"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:34.598" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:34.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:34.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:34.608" starttime="20201013 13:39:34.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.609" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:34.609" starttime="20201013 13:39:34.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:34.610" starttime="20201013 13:39:34.610"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.610" starttime="20201013 13:39:34.595"></status>
</kw>
<msg timestamp="20201013 13:39:34.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:34.611" starttime="20201013 13:39:34.594"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.611" starttime="20201013 13:39:34.594"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.611" starttime="20201013 13:39:34.593"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.611" starttime="20201013 13:39:34.583"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.611" starttime="20201013 13:39:34.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:34.617" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:34.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:34.620" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:34.620" starttime="20201013 13:39:34.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.621" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:34.621" starttime="20201013 13:39:34.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:34.622" starttime="20201013 13:39:34.621"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.622" starttime="20201013 13:39:34.613"></status>
</kw>
<msg timestamp="20201013 13:39:34.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:34.622" starttime="20201013 13:39:34.613"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.622" starttime="20201013 13:39:34.612"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:34.627" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:34.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:34.630" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:34.630" starttime="20201013 13:39:34.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.631" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:34.631" starttime="20201013 13:39:34.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:34.631" starttime="20201013 13:39:34.631"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.632" starttime="20201013 13:39:34.624"></status>
</kw>
<msg timestamp="20201013 13:39:34.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:34.632" starttime="20201013 13:39:34.624"></status>
</kw>
<msg timestamp="20201013 13:39:34.632" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:34.632" starttime="20201013 13:39:34.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:34.633" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:34.633" starttime="20201013 13:39:34.632"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:34.636" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:34.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:34.647" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:34.647" starttime="20201013 13:39:34.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.648" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:34.648" starttime="20201013 13:39:34.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:34.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:34.648" starttime="20201013 13:39:34.648"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.649" starttime="20201013 13:39:34.634"></status>
</kw>
<msg timestamp="20201013 13:39:34.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:34.649" starttime="20201013 13:39:34.634"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.649" starttime="20201013 13:39:34.634"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.649" starttime="20201013 13:39:34.633"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.649" starttime="20201013 13:39:34.623"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:34.649" starttime="20201013 13:39:34.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:34.655" level="INFO">Running command 'ozone sh bucket info 90101-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:38.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:38.020" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:38.020" starttime="20201013 13:39:34.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:38.021" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:23.594Z",
  "modificationTime" : "2020-10-13T13:37:23.594Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201013 13:39:38.021" starttime="20201013 13:39:38.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:38.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:38.022" starttime="20201013 13:39:38.022"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:38.022" starttime="20201013 13:39:34.650"></status>
</kw>
<msg timestamp="20201013 13:39:38.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:38.022" starttime="20201013 13:39:34.650"></status>
</kw>
<msg timestamp="20201013 13:39:38.023" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:38.023" starttime="20201013 13:39:34.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:38.023" starttime="20201013 13:39:38.023"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:38.024" starttime="20201013 13:39:38.024"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:38.027" level="INFO">Running command 'ozone sh key list 90101-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:41.323" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:39:41.323" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:41.323" starttime="20201013 13:39:38.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:41.324" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201013 13:39:41.324" starttime="20201013 13:39:41.323"></status>
</kw>
<msg timestamp="20201013 13:39:41.324" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:41.324" starttime="20201013 13:39:38.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:41.325" starttime="20201013 13:39:41.325"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.325" starttime="20201013 13:39:34.612"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.325" starttime="20201013 13:39:34.611"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:39:41.325" critical="yes" starttime="20201013 13:39:34.582"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:41.332" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:41.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:41.333" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:41.333" starttime="20201013 13:39:41.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:41.334" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:41.334" starttime="20201013 13:39:41.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:41.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:41.335" starttime="20201013 13:39:41.334"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.335" starttime="20201013 13:39:41.328"></status>
</kw>
<msg timestamp="20201013 13:39:41.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:41.335" starttime="20201013 13:39:41.328"></status>
</kw>
<msg timestamp="20201013 13:39:41.335" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:41.335" starttime="20201013 13:39:41.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:41.336" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:41.336" starttime="20201013 13:39:41.336"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:41.341" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:41.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:41.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:41.352" starttime="20201013 13:39:41.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:41.353" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:41.353" starttime="20201013 13:39:41.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:41.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:41.354" starttime="20201013 13:39:41.353"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.354" starttime="20201013 13:39:41.337"></status>
</kw>
<msg timestamp="20201013 13:39:41.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:41.354" starttime="20201013 13:39:41.337"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.354" starttime="20201013 13:39:41.337"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.354" starttime="20201013 13:39:41.336"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.354" starttime="20201013 13:39:41.327"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:41.354" starttime="20201013 13:39:41.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:41.359" level="INFO">Running command 'ozone sh bucket link 90101-target/loop1 90101-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:44.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:44.693" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:44.693" starttime="20201013 13:39:41.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:44.694" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:39:44.694" starttime="20201013 13:39:44.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:44.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:44.695" starttime="20201013 13:39:44.694"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:44.695" starttime="20201013 13:39:41.355"></status>
</kw>
<msg timestamp="20201013 13:39:44.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:44.695" starttime="20201013 13:39:41.355"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:44.696" starttime="20201013 13:39:41.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:44.700" level="INFO">Running command 'ozone sh bucket link 90101-target/loop2 90101-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:47.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:47.903" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:47.903" starttime="20201013 13:39:44.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:47.904" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:39:47.904" starttime="20201013 13:39:47.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:47.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:47.904" starttime="20201013 13:39:47.904"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:47.905" starttime="20201013 13:39:44.697"></status>
</kw>
<msg timestamp="20201013 13:39:47.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:47.905" starttime="20201013 13:39:44.696"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:47.905" starttime="20201013 13:39:44.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:47.910" level="INFO">Running command 'ozone sh bucket link 90101-target/loop3 90101-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:51.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:51.341" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:51.342" starttime="20201013 13:39:47.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:51.343" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:39:51.343" starttime="20201013 13:39:51.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:51.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:51.343" starttime="20201013 13:39:51.343"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:51.344" starttime="20201013 13:39:47.906"></status>
</kw>
<msg timestamp="20201013 13:39:51.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:51.344" starttime="20201013 13:39:47.906"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:51.344" starttime="20201013 13:39:47.905"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:51.347" level="INFO">Running command 'ozone sh key list 90101-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:54.721" level="INFO">${rc} = 255</msg>
<msg timestamp="20201013 13:39:54.721" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:54.721" starttime="20201013 13:39:51.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:54.722" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201013 13:39:54.722" starttime="20201013 13:39:54.721"></status>
</kw>
<msg timestamp="20201013 13:39:54.722" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:54.722" starttime="20201013 13:39:51.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201013 13:39:54.723" starttime="20201013 13:39:54.722"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:39:54.723" critical="yes" starttime="20201013 13:39:41.326"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:54.729" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:54.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:54.731" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:39:54.731" starttime="20201013 13:39:54.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:54.732" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:39:54.732" starttime="20201013 13:39:54.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:54.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:54.733" starttime="20201013 13:39:54.732"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:54.733" starttime="20201013 13:39:54.726"></status>
</kw>
<msg timestamp="20201013 13:39:54.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:54.733" starttime="20201013 13:39:54.726"></status>
</kw>
<msg timestamp="20201013 13:39:54.733" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:39:54.733" starttime="20201013 13:39:54.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:39:54.734" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:39:54.734" starttime="20201013 13:39:54.734"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:54.740" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:54.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:54.757" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:39:54.757" starttime="20201013 13:39:54.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:54.758" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:39:54.758" starttime="20201013 13:39:54.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:54.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:54.758" starttime="20201013 13:39:54.758"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:54.758" starttime="20201013 13:39:54.736"></status>
</kw>
<msg timestamp="20201013 13:39:54.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:54.759" starttime="20201013 13:39:54.735"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:54.759" starttime="20201013 13:39:54.735"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:54.759" starttime="20201013 13:39:54.734"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:54.759" starttime="20201013 13:39:54.725"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:54.759" starttime="20201013 13:39:54.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:54.763" level="INFO">Running command 'ozone sh bucket link 90101-source/bucket1 90101-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:39:58.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:39:58.297" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:39:58.297" starttime="20201013 13:39:54.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:39:58.298" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:39:58.298" starttime="20201013 13:39:58.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:39:58.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:39:58.299" starttime="20201013 13:39:58.299"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:58.299" starttime="20201013 13:39:54.760"></status>
</kw>
<msg timestamp="20201013 13:39:58.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:39:58.300" starttime="20201013 13:39:54.760"></status>
</kw>
<status status="PASS" endtime="20201013 13:39:58.300" starttime="20201013 13:39:54.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:39:58.304" level="INFO">Running command 'ozone sh key put 90101-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:03.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:03.779" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:40:03.779" starttime="20201013 13:39:58.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:03.780" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:40:03.780" starttime="20201013 13:40:03.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:03.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:03.780" starttime="20201013 13:40:03.780"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:03.781" starttime="20201013 13:39:58.301"></status>
</kw>
<msg timestamp="20201013 13:40:03.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:03.781" starttime="20201013 13:39:58.301"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:03.781" starttime="20201013 13:39:58.300"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201013 13:40:03.783" level="INFO">${postfix} = 42837</msg>
<status status="PASS" endtime="20201013 13:40:03.784" starttime="20201013 13:40:03.783"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201013 13:40:03.784" level="INFO">${tmpfile} = /tmp/tempkey-42837</msg>
<status status="PASS" endtime="20201013 13:40:03.784" starttime="20201013 13:40:03.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:40:03.789" level="INFO">Running command 'ozone sh key get -f 90101-target/link1/key3 /tmp/tempkey-42837 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:09.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:09.377" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:40:09.377" starttime="20201013 13:40:03.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.378" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:40:09.378" starttime="20201013 13:40:09.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:09.379" starttime="20201013 13:40:09.378"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.379" starttime="20201013 13:40:03.785"></status>
</kw>
<msg timestamp="20201013 13:40:09.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:09.379" starttime="20201013 13:40:03.785"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.379" starttime="20201013 13:40:03.784"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201013 13:40:09.381" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-42837 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:09.384" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201013 13:40:09.384" starttime="20201013 13:40:09.379"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:40:09.388" level="INFO">Running command 'rm -f /tmp/tempkey-42837 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:09.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:09.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:40:09.390" starttime="20201013 13:40:09.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.392" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:40:09.392" starttime="20201013 13:40:09.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:09.392" starttime="20201013 13:40:09.392"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.393" starttime="20201013 13:40:09.385"></status>
</kw>
<msg timestamp="20201013 13:40:09.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:09.393" starttime="20201013 13:40:09.385"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.393" starttime="20201013 13:40:09.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201013 13:40:09.393" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201013 13:40:09.394" starttime="20201013 13:40:09.393"></status>
</kw>
<msg timestamp="20201013 13:40:09.394" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201013 13:40:09.394" starttime="20201013 13:40:03.782"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201013 13:40:09.394" starttime="20201013 13:40:09.394"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.394" starttime="20201013 13:40:03.781"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:40:09.395" critical="yes" starttime="20201013 13:39:54.724"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:40:09.400" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:09.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:09.402" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201013 13:40:09.402" starttime="20201013 13:40:09.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.403" level="INFO">scm</msg>
<status status="PASS" endtime="20201013 13:40:09.403" starttime="20201013 13:40:09.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:09.404" starttime="20201013 13:40:09.403"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.404" starttime="20201013 13:40:09.397"></status>
</kw>
<msg timestamp="20201013 13:40:09.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:09.405" starttime="20201013 13:40:09.397"></status>
</kw>
<msg timestamp="20201013 13:40:09.405" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201013 13:40:09.405" starttime="20201013 13:40:09.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201013 13:40:09.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201013 13:40:09.406" starttime="20201013 13:40:09.405"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:40:09.412" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:09.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:09.430" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201013 13:40:09.430" starttime="20201013 13:40:09.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.431" level="INFO"></msg>
<status status="PASS" endtime="20201013 13:40:09.431" starttime="20201013 13:40:09.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:09.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:09.432" starttime="20201013 13:40:09.431"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.432" starttime="20201013 13:40:09.408"></status>
</kw>
<msg timestamp="20201013 13:40:09.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:09.432" starttime="20201013 13:40:09.407"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.432" starttime="20201013 13:40:09.406"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.432" starttime="20201013 13:40:09.406"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.432" starttime="20201013 13:40:09.397"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:09.433" starttime="20201013 13:40:09.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:40:09.437" level="INFO">Running command 'ozone sh bucket delete 90101-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:13.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:13.030" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:40:13.030" starttime="20201013 13:40:09.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:13.031" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201013 13:40:13.031" starttime="20201013 13:40:13.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:13.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:13.031" starttime="20201013 13:40:13.031"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:13.032" starttime="20201013 13:40:09.434"></status>
</kw>
<msg timestamp="20201013 13:40:13.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:13.032" starttime="20201013 13:40:09.434"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:13.032" starttime="20201013 13:40:09.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:40:13.036" level="INFO">Running command 'ozone sh bucket list 90101-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:16.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:16.561" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:40:16.561" starttime="20201013 13:40:13.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:16.562" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:39:23.177Z",
  "modificationTime" : "2020-10-13T13:39:23.177Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:47.132Z",
  "modificationTime" : "2020-10-13T13:37:47.132Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:23.594Z",
  "modificationTime" : "2020-10-13T13:37:23.594Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:39:14.884Z",
  "modificationTime" : "2020-10-13T13:39:14.884Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:39:58.134Z",
  "modificationTime" : "2020-10-13T13:39:58.134Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:39:51.235Z",
  "modificationTime" : "2020-10-13T13:39:51.235Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:39:44.443Z",
  "modificationTime" : "2020-10-13T13:39:44.443Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:39:47.738Z",
  "modificationTime" : "2020-10-13T13:39:47.738Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:15.449Z",
  "modificationTime" : "2020-10-13T13:37:15.449Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90101-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-13T13:37:19.585Z",
  "modificationTime" : "2020-10-13T13:37:19.585Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90101-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201013 13:40:16.562" starttime="20201013 13:40:16.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:16.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:16.563" starttime="20201013 13:40:16.562"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:16.563" starttime="20201013 13:40:13.034"></status>
</kw>
<msg timestamp="20201013 13:40:16.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:16.564" starttime="20201013 13:40:13.033"></status>
</kw>
<msg timestamp="20201013 13:40:16.564" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201013 13:40:16.564" starttime="20201013 13:40:13.033"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:40:16.565" starttime="20201013 13:40:16.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201013 13:40:16.570" level="INFO">Running command 'ozone sh key list 90101-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201013 13:40:20.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201013 13:40:20.414" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201013 13:40:20.414" starttime="20201013 13:40:16.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201013 13:40:20.416" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201013 13:40:20.416" starttime="20201013 13:40:20.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201013 13:40:20.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201013 13:40:20.416" starttime="20201013 13:40:20.416"></status>
</kw>
<status status="PASS" endtime="20201013 13:40:20.417" starttime="20201013 13:40:16.566"></status>
</kw>
<msg timestamp="20201013 13:40:20.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201013 13:40:20.417" starttime="20201013 13:40:16.565"></status>
</kw>
<msg timestamp="20201013 13:40:20.417" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201013 13:40:20.417" starttime="20201013 13:40:16.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201013 13:40:20.418" starttime="20201013 13:40:20.417"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201013 13:40:20.418" critical="yes" starttime="20201013 13:40:09.395"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201013 13:40:20.421" starttime="20201013 13:36:50.162"></status>
</suite>
<status status="PASS" elapsedtime="240803" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
