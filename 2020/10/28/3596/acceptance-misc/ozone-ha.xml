<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 13:10:33.722" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:08:15.643" level="INFO">${random} = 99544</msg>
<status status="PASS" endtime="20201028 13:08:15.643" starttime="20201028 13:08:15.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201028 13:08:15.643" level="INFO">${prefix} = 99544</msg>
<status status="PASS" endtime="20201028 13:08:15.643" starttime="20201028 13:08:15.643"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:15.643" starttime="20201028 13:08:15.642"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:15.653" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:21.549" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:08:21.549" level="INFO">${output} = VOLUME_NOT_FOUND Volume 99544-rpcbasic is not found</msg>
<status status="PASS" endtime="20201028 13:08:21.549" starttime="20201028 13:08:15.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:21.550" level="INFO">VOLUME_NOT_FOUND Volume 99544-rpcbasic is not found</msg>
<status status="PASS" endtime="20201028 13:08:21.550" starttime="20201028 13:08:21.550"></status>
</kw>
<msg timestamp="20201028 13:08:21.551" level="INFO">${result} = VOLUME_NOT_FOUND Volume 99544-rpcbasic is not found</msg>
<status status="PASS" endtime="20201028 13:08:21.551" starttime="20201028 13:08:15.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:21.551" starttime="20201028 13:08:21.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:21.556" level="INFO">Running command 'ozone sh volume create /99544-rpcbasic --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:23.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:23.712" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:23.712" starttime="20201028 13:08:21.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:23.713" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:23.713" starttime="20201028 13:08:23.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:23.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:23.713" starttime="20201028 13:08:23.713"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:23.714" starttime="20201028 13:08:21.552"></status>
</kw>
<msg timestamp="20201028 13:08:23.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:23.714" starttime="20201028 13:08:21.552"></status>
</kw>
<msg timestamp="20201028 13:08:23.714" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 13:08:23.714" starttime="20201028 13:08:21.551"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:23.715" starttime="20201028 13:08:23.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:23.722" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="99544-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:25.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:25.961" level="INFO">${output} = {
  "metadata": {},
  "name": "99544-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-28T13:08:23.422Z",
  "mo...</msg>
<status status="PASS" endtime="20201028 13:08:25.961" starttime="20201028 13:08:23.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:25.962" level="INFO">{
  "metadata": {},
  "name": "99544-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-28T13:08:23.422Z",
  "modificationTime": "2020-10-28T13:08:25.656808Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201028 13:08:25.962" starttime="20201028 13:08:25.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:25.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:25.964" starttime="20201028 13:08:25.963"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:25.964" starttime="20201028 13:08:23.716"></status>
</kw>
<msg timestamp="20201028 13:08:25.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:25.965" starttime="20201028 13:08:23.715"></status>
</kw>
<msg timestamp="20201028 13:08:25.965" level="INFO">${result} = {
  "metadata": {},
  "name": "99544-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-28T13:08:23.422Z",
  "mo...</msg>
<status status="PASS" endtime="20201028 13:08:25.965" starttime="20201028 13:08:23.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:25.965" starttime="20201028 13:08:25.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:25.969" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="99544-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:28.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:28.118" level="INFO">${output} = {
  "metadata": {},
  "name": "99544-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-28T13:08:23.422Z",
  "mo...</msg>
<status status="PASS" endtime="20201028 13:08:28.118" starttime="20201028 13:08:25.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:28.120" level="INFO">{
  "metadata": {},
  "name": "99544-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-28T13:08:23.422Z",
  "modificationTime": "2020-10-28T13:08:27.821968Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201028 13:08:28.120" starttime="20201028 13:08:28.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:28.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:28.120" starttime="20201028 13:08:28.120"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:28.120" starttime="20201028 13:08:25.966"></status>
</kw>
<msg timestamp="20201028 13:08:28.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:28.121" starttime="20201028 13:08:25.966"></status>
</kw>
<msg timestamp="20201028 13:08:28.121" level="INFO">${result} = {
  "metadata": {},
  "name": "99544-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-28T13:08:23.422Z",
  "mo...</msg>
<status status="PASS" endtime="20201028 13:08:28.121" starttime="20201028 13:08:25.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:28.121" starttime="20201028 13:08:28.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:28.126" level="INFO">Running command 'ozone sh volume setquota /99544-rpcbasic --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:30.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:30.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:30.049" starttime="20201028 13:08:28.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:30.050" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:30.051" starttime="20201028 13:08:30.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:30.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:30.051" starttime="20201028 13:08:30.051"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:30.051" starttime="20201028 13:08:28.122"></status>
</kw>
<msg timestamp="20201028 13:08:30.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:30.052" starttime="20201028 13:08:28.122"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:30.052" starttime="20201028 13:08:28.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:30.057" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic | jq -r '. | select(.name=="99544-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:32.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:32.111" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201028 13:08:32.111" starttime="20201028 13:08:30.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:32.112" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201028 13:08:32.112" starttime="20201028 13:08:32.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:32.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:32.112" starttime="20201028 13:08:32.112"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:32.113" starttime="20201028 13:08:30.053"></status>
</kw>
<msg timestamp="20201028 13:08:32.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:32.113" starttime="20201028 13:08:30.053"></status>
</kw>
<msg timestamp="20201028 13:08:32.113" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201028 13:08:32.113" starttime="20201028 13:08:30.052"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:32.114" starttime="20201028 13:08:32.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:32.118" level="INFO">Running command 'ozone sh bucket create /99544-rpcbasic/bb1 --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:34.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:34.081" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:34.081" starttime="20201028 13:08:32.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:34.082" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:34.082" starttime="20201028 13:08:34.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:34.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:34.083" starttime="20201028 13:08:34.082"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:34.083" starttime="20201028 13:08:32.115"></status>
</kw>
<msg timestamp="20201028 13:08:34.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:34.083" starttime="20201028 13:08:32.114"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:34.084" starttime="20201028 13:08:32.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:34.087" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:36.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:36.251" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20201028 13:08:36.251" starttime="20201028 13:08:34.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:36.252" level="INFO">DISK</msg>
<status status="PASS" endtime="20201028 13:08:36.252" starttime="20201028 13:08:36.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:36.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:36.253" starttime="20201028 13:08:36.252"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:36.253" starttime="20201028 13:08:34.085"></status>
</kw>
<msg timestamp="20201028 13:08:36.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:36.253" starttime="20201028 13:08:34.084"></status>
</kw>
<msg timestamp="20201028 13:08:36.254" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20201028 13:08:36.254" starttime="20201028 13:08:34.084"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:36.254" starttime="20201028 13:08:36.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:36.259" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:38.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:38.348" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201028 13:08:38.348" starttime="20201028 13:08:36.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:38.349" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201028 13:08:38.349" starttime="20201028 13:08:38.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:38.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:38.350" starttime="20201028 13:08:38.350"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:38.350" starttime="20201028 13:08:36.255"></status>
</kw>
<msg timestamp="20201028 13:08:38.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:38.351" starttime="20201028 13:08:36.255"></status>
</kw>
<msg timestamp="20201028 13:08:38.351" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201028 13:08:38.351" starttime="20201028 13:08:36.254"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:38.351" starttime="20201028 13:08:38.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:38.355" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:40.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:40.473" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20201028 13:08:40.473" starttime="20201028 13:08:38.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:40.474" level="INFO">100</msg>
<status status="PASS" endtime="20201028 13:08:40.474" starttime="20201028 13:08:40.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:40.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:40.475" starttime="20201028 13:08:40.474"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:40.475" starttime="20201028 13:08:38.352"></status>
</kw>
<msg timestamp="20201028 13:08:40.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:40.475" starttime="20201028 13:08:38.352"></status>
</kw>
<msg timestamp="20201028 13:08:40.475" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20201028 13:08:40.475" starttime="20201028 13:08:38.351"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:40.476" starttime="20201028 13:08:40.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --count-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:40.480" level="INFO">Running command 'ozone sh bucket setquota /99544-rpcbasic/bb1 --space-quota 1TB --count-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:42.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:42.350" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:42.350" starttime="20201028 13:08:40.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:42.351" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:42.351" starttime="20201028 13:08:42.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:42.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:42.352" starttime="20201028 13:08:42.352"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:42.352" starttime="20201028 13:08:40.477"></status>
</kw>
<msg timestamp="20201028 13:08:42.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:42.353" starttime="20201028 13:08:40.477"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:42.353" starttime="20201028 13:08:40.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:42.357" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:44.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:44.535" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20201028 13:08:44.535" starttime="20201028 13:08:42.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:44.536" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20201028 13:08:44.536" starttime="20201028 13:08:44.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:44.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:44.537" starttime="20201028 13:08:44.536"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:44.537" starttime="20201028 13:08:42.354"></status>
</kw>
<msg timestamp="20201028 13:08:44.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:44.537" starttime="20201028 13:08:42.354"></status>
</kw>
<msg timestamp="20201028 13:08:44.538" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20201028 13:08:44.538" starttime="20201028 13:08:42.353"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:44.538" starttime="20201028 13:08:44.538"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:44.542" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:46.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:46.725" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20201028 13:08:46.725" starttime="20201028 13:08:44.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:46.726" level="INFO">1000</msg>
<status status="PASS" endtime="20201028 13:08:46.726" starttime="20201028 13:08:46.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:46.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:46.726" starttime="20201028 13:08:46.726"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:46.727" starttime="20201028 13:08:44.539"></status>
</kw>
<msg timestamp="20201028 13:08:46.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:46.727" starttime="20201028 13:08:44.539"></status>
</kw>
<msg timestamp="20201028 13:08:46.727" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20201028 13:08:46.727" starttime="20201028 13:08:44.538"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:46.728" starttime="20201028 13:08:46.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:46.733" level="INFO">Running command 'ozone sh bucket list /99544-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:48.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:48.956" level="INFO">${output} = 99544-rpcbasic</msg>
<status status="PASS" endtime="20201028 13:08:48.956" starttime="20201028 13:08:46.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:48.958" level="INFO">99544-rpcbasic</msg>
<status status="PASS" endtime="20201028 13:08:48.958" starttime="20201028 13:08:48.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:48.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:48.959" starttime="20201028 13:08:48.958"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:48.959" starttime="20201028 13:08:46.729"></status>
</kw>
<msg timestamp="20201028 13:08:48.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:48.959" starttime="20201028 13:08:46.729"></status>
</kw>
<msg timestamp="20201028 13:08:48.959" level="INFO">${result} = 99544-rpcbasic</msg>
<status status="PASS" endtime="20201028 13:08:48.959" starttime="20201028 13:08:46.728"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:08:48.960" starttime="20201028 13:08:48.959"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:48.965" level="INFO">Running command 'ozone sh key put /99544-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:54.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:54.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:54.142" starttime="20201028 13:08:48.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:54.143" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:54.144" starttime="20201028 13:08:54.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:54.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:54.144" starttime="20201028 13:08:54.144"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:54.145" starttime="20201028 13:08:48.962"></status>
</kw>
<msg timestamp="20201028 13:08:54.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:54.145" starttime="20201028 13:08:48.961"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:54.145" starttime="20201028 13:08:48.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:54.149" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:54.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:54.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:54.153" starttime="20201028 13:08:54.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:54.154" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:54.154" starttime="20201028 13:08:54.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:54.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:54.154" starttime="20201028 13:08:54.154"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:54.155" starttime="20201028 13:08:54.146"></status>
</kw>
<msg timestamp="20201028 13:08:54.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:54.155" starttime="20201028 13:08:54.146"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:54.155" starttime="20201028 13:08:54.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:54.162" level="INFO">Running command 'ozone sh key get /99544-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:58.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:58.647" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:58.647" starttime="20201028 13:08:54.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:58.648" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:58.648" starttime="20201028 13:08:58.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:58.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:58.649" starttime="20201028 13:08:58.648"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:58.649" starttime="20201028 13:08:54.160"></status>
</kw>
<msg timestamp="20201028 13:08:58.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:58.649" starttime="20201028 13:08:54.160"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:58.649" starttime="20201028 13:08:54.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:58.653" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:08:58.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:08:58.655" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:08:58.655" starttime="20201028 13:08:58.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:08:58.656" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:08:58.656" starttime="20201028 13:08:58.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:08:58.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:08:58.657" starttime="20201028 13:08:58.656"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:58.657" starttime="20201028 13:08:58.650"></status>
</kw>
<msg timestamp="20201028 13:08:58.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:08:58.657" starttime="20201028 13:08:58.650"></status>
</kw>
<status status="PASS" endtime="20201028 13:08:58.657" starttime="20201028 13:08:58.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:08:58.661" level="INFO">Running command 'ozone sh key put -t RATIS /99544-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:02.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:02.805" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:02.805" starttime="20201028 13:08:58.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:02.806" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:02.806" starttime="20201028 13:09:02.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:02.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:02.806" starttime="20201028 13:09:02.806"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:02.807" starttime="20201028 13:08:58.658"></status>
</kw>
<msg timestamp="20201028 13:09:02.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:02.807" starttime="20201028 13:08:58.658"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:02.807" starttime="20201028 13:08:58.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:02.811" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:02.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:02.813" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:02.813" starttime="20201028 13:09:02.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:02.814" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:02.814" starttime="20201028 13:09:02.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:02.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:02.815" starttime="20201028 13:09:02.814"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:02.815" starttime="20201028 13:09:02.808"></status>
</kw>
<msg timestamp="20201028 13:09:02.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:02.815" starttime="20201028 13:09:02.808"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:02.815" starttime="20201028 13:09:02.807"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:02.818" level="INFO">Running command 'ozone sh key get /99544-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:07.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:07.123" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:07.123" starttime="20201028 13:09:02.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:07.124" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:07.125" starttime="20201028 13:09:07.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:07.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:07.125" starttime="20201028 13:09:07.125"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:07.125" starttime="20201028 13:09:02.816"></status>
</kw>
<msg timestamp="20201028 13:09:07.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:07.126" starttime="20201028 13:09:02.816"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:07.126" starttime="20201028 13:09:02.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:07.130" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:07.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:07.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:07.132" starttime="20201028 13:09:07.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:07.134" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:07.134" starttime="20201028 13:09:07.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:07.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:07.134" starttime="20201028 13:09:07.134"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:07.135" starttime="20201028 13:09:07.127"></status>
</kw>
<msg timestamp="20201028 13:09:07.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:07.135" starttime="20201028 13:09:07.126"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:07.135" starttime="20201028 13:09:07.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:07.139" level="INFO">Running command 'ozone sh key info /99544-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:09.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:09.343" level="INFO">${output} = {
  "volumeName": "99544-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-28T13:09:00.833Z",
  "modificationTime": "2020-10-28T13:09:02.436Z",
...</msg>
<status status="PASS" endtime="20201028 13:09:09.343" starttime="20201028 13:09:07.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:09.344" level="INFO">{
  "volumeName": "99544-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-28T13:09:00.833Z",
  "modificationTime": "2020-10-28T13:09:02.436Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 105112570482589700,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201028 13:09:09.344" starttime="20201028 13:09:09.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:09.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:09.345" starttime="20201028 13:09:09.344"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:09.345" starttime="20201028 13:09:07.136"></status>
</kw>
<msg timestamp="20201028 13:09:09.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:09.346" starttime="20201028 13:09:07.136"></status>
</kw>
<msg timestamp="20201028 13:09:09.346" level="INFO">${result} = {
  "volumeName": "99544-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-28T13:09:00.833Z",
  "modificationTime": "2020-10-28T13:09:02.436Z",
...</msg>
<status status="PASS" endtime="20201028 13:09:09.346" starttime="20201028 13:09:07.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:09.346" starttime="20201028 13:09:09.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:09.351" level="INFO">Running command 'ozone sh key delete /99544-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:11.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:11.359" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:11.359" starttime="20201028 13:09:09.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:11.360" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:11.360" starttime="20201028 13:09:11.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:11.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:11.361" starttime="20201028 13:09:11.360"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:11.361" starttime="20201028 13:09:09.347"></status>
</kw>
<msg timestamp="20201028 13:09:11.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:11.362" starttime="20201028 13:09:09.347"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:11.362" starttime="20201028 13:09:09.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:11.368" level="INFO">Running command 'ozone sh key cp /99544-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:15.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:15.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:15.337" starttime="20201028 13:09:11.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:15.338" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:15.338" starttime="20201028 13:09:15.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:15.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:15.339" starttime="20201028 13:09:15.339"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:15.339" starttime="20201028 13:09:11.363"></status>
</kw>
<msg timestamp="20201028 13:09:15.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:15.340" starttime="20201028 13:09:11.363"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:15.340" starttime="20201028 13:09:11.362"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:15.346" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:15.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:15.347" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:15.347" starttime="20201028 13:09:15.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:15.348" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:15.348" starttime="20201028 13:09:15.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:15.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:15.349" starttime="20201028 13:09:15.348"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:15.349" starttime="20201028 13:09:15.341"></status>
</kw>
<msg timestamp="20201028 13:09:15.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:15.349" starttime="20201028 13:09:15.341"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:15.349" starttime="20201028 13:09:15.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:15.354" level="INFO">Running command 'ozone sh key get /99544-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:19.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:19.002" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:19.002" starttime="20201028 13:09:15.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:19.003" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:19.003" starttime="20201028 13:09:19.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:19.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:19.004" starttime="20201028 13:09:19.003"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:19.004" starttime="20201028 13:09:15.351"></status>
</kw>
<msg timestamp="20201028 13:09:19.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:19.004" starttime="20201028 13:09:15.350"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:19.004" starttime="20201028 13:09:15.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:19.015" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:19.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:19.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:19.019" starttime="20201028 13:09:19.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:19.020" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:19.020" starttime="20201028 13:09:19.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:19.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:19.020" starttime="20201028 13:09:19.020"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:19.020" starttime="20201028 13:09:19.005"></status>
</kw>
<msg timestamp="20201028 13:09:19.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:19.021" starttime="20201028 13:09:19.005"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:19.021" starttime="20201028 13:09:19.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:19.024" level="INFO">Running command 'ozone sh key delete /99544-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:20.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:20.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:20.868" starttime="20201028 13:09:19.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:20.869" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:20.869" starttime="20201028 13:09:20.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:20.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:20.869" starttime="20201028 13:09:20.869"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:20.870" starttime="20201028 13:09:19.022"></status>
</kw>
<msg timestamp="20201028 13:09:20.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:20.870" starttime="20201028 13:09:19.021"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:20.870" starttime="20201028 13:09:19.021"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:20.873" level="INFO">Running command 'ozone sh key get /99544-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:22.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:09:22.667" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201028 13:09:22.667" starttime="20201028 13:09:20.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:22.668" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201028 13:09:22.668" starttime="20201028 13:09:22.667"></status>
</kw>
<msg timestamp="20201028 13:09:22.669" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201028 13:09:22.669" starttime="20201028 13:09:20.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:22.669" starttime="20201028 13:09:22.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:22.674" level="INFO">Running command 'ozone sh key get --force /99544-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:25.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:25.994" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:25.994" starttime="20201028 13:09:22.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:25.995" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:25.995" starttime="20201028 13:09:25.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:25.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:25.996" starttime="20201028 13:09:25.995"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:25.996" starttime="20201028 13:09:22.670"></status>
</kw>
<msg timestamp="20201028 13:09:25.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:25.996" starttime="20201028 13:09:22.670"></status>
</kw>
<msg timestamp="20201028 13:09:25.996" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 13:09:25.996" starttime="20201028 13:09:22.669"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:25.997" starttime="20201028 13:09:25.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:26.002" level="INFO">Running command 'ozone sh key info /99544-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:28.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:28.035" level="INFO">${output} = {
  "volumeName": "99544-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-28T13:08:50.861Z",
  "modificationTime": "2020-10-28T13:08:53.697Z",
  "rep...</msg>
<status status="PASS" endtime="20201028 13:09:28.035" starttime="20201028 13:09:25.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:28.036" level="INFO">{
  "volumeName": "99544-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-28T13:08:50.861Z",
  "modificationTime": "2020-10-28T13:08:53.697Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105112569829130240,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201028 13:09:28.036" starttime="20201028 13:09:28.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:28.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:28.037" starttime="20201028 13:09:28.036"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:28.037" starttime="20201028 13:09:25.998"></status>
</kw>
<msg timestamp="20201028 13:09:28.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:28.037" starttime="20201028 13:09:25.998"></status>
</kw>
<msg timestamp="20201028 13:09:28.037" level="INFO">${result} = {
  "volumeName": "99544-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-28T13:08:50.861Z",
  "modificationTime": "2020-10-28T13:08:53.697Z",
  "rep...</msg>
<status status="PASS" endtime="20201028 13:09:28.037" starttime="20201028 13:09:25.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:28.038" starttime="20201028 13:09:28.038"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:28.042" level="INFO">Running command 'ozone sh key list /99544-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:30.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:30.017" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201028 13:09:30.017" starttime="20201028 13:09:28.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:30.018" level="INFO">key1</msg>
<status status="PASS" endtime="20201028 13:09:30.018" starttime="20201028 13:09:30.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:30.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:30.019" starttime="20201028 13:09:30.018"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:30.019" starttime="20201028 13:09:28.039"></status>
</kw>
<msg timestamp="20201028 13:09:30.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:30.019" starttime="20201028 13:09:28.039"></status>
</kw>
<msg timestamp="20201028 13:09:30.019" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20201028 13:09:30.020" starttime="20201028 13:09:28.038"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:30.020" starttime="20201028 13:09:30.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:30.025" level="INFO">Running command 'ozone sh key rename /99544-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:31.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:31.842" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:31.842" starttime="20201028 13:09:30.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:31.843" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:31.843" starttime="20201028 13:09:31.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:31.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:31.844" starttime="20201028 13:09:31.843"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:31.844" starttime="20201028 13:09:30.021"></status>
</kw>
<msg timestamp="20201028 13:09:31.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:31.844" starttime="20201028 13:09:30.021"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:31.845" starttime="20201028 13:09:30.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:31.849" level="INFO">Running command 'ozone sh key list /99544-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:33.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:33.869" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20201028 13:09:33.869" starttime="20201028 13:09:31.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:33.871" level="INFO">key2</msg>
<status status="PASS" endtime="20201028 13:09:33.871" starttime="20201028 13:09:33.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:33.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:33.871" starttime="20201028 13:09:33.871"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:33.872" starttime="20201028 13:09:31.846"></status>
</kw>
<msg timestamp="20201028 13:09:33.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:33.872" starttime="20201028 13:09:31.845"></status>
</kw>
<msg timestamp="20201028 13:09:33.872" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20201028 13:09:33.872" starttime="20201028 13:09:31.845"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:33.872" starttime="20201028 13:09:33.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:33.877" level="INFO">Running command 'ozone sh key delete /99544-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:35.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:35.755" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:35.755" starttime="20201028 13:09:33.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:35.756" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:35.756" starttime="20201028 13:09:35.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:35.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:35.757" starttime="20201028 13:09:35.756"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:35.757" starttime="20201028 13:09:33.874"></status>
</kw>
<msg timestamp="20201028 13:09:35.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:35.757" starttime="20201028 13:09:33.873"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:35.757" starttime="20201028 13:09:33.873"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:35.758" starttime="20201028 13:08:48.960"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:35.758" starttime="20201028 13:08:48.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:35.762" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /99544-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:37.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:37.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:37.721" starttime="20201028 13:09:35.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:37.722" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:37.722" starttime="20201028 13:09:37.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:37.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:37.723" starttime="20201028 13:09:37.723"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:37.723" starttime="20201028 13:09:35.759"></status>
</kw>
<msg timestamp="20201028 13:09:37.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:37.723" starttime="20201028 13:09:35.758"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:37.724" starttime="20201028 13:09:35.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:37.728" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:39.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:39.750" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:09:39.750" starttime="20201028 13:09:37.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:39.751" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:09:39.751" starttime="20201028 13:09:39.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:39.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:39.752" starttime="20201028 13:09:39.751"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:39.752" starttime="20201028 13:09:37.725"></status>
</kw>
<msg timestamp="20201028 13:09:39.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:39.752" starttime="20201028 13:09:37.725"></status>
</kw>
<msg timestamp="20201028 13:09:39.752" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:09:39.752" starttime="20201028 13:09:37.724"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:39.753" starttime="20201028 13:09:39.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --count-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:39.757" level="INFO">Running command 'ozone sh bucket clrquota --count-quota /99544-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:41.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:41.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:41.733" starttime="20201028 13:09:39.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:41.734" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:41.734" starttime="20201028 13:09:41.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:41.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:41.735" starttime="20201028 13:09:41.734"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:41.735" starttime="20201028 13:09:39.754"></status>
</kw>
<msg timestamp="20201028 13:09:41.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:41.735" starttime="20201028 13:09:39.754"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:41.736" starttime="20201028 13:09:39.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:41.739" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:43.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:43.990" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:09:43.990" starttime="20201028 13:09:41.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:43.991" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:09:43.991" starttime="20201028 13:09:43.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:43.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:43.991" starttime="20201028 13:09:43.991"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:43.992" starttime="20201028 13:09:41.737"></status>
</kw>
<msg timestamp="20201028 13:09:43.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:43.992" starttime="20201028 13:09:41.736"></status>
</kw>
<msg timestamp="20201028 13:09:43.992" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:09:43.992" starttime="20201028 13:09:41.736"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:43.993" starttime="20201028 13:09:43.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:43.996" level="INFO">Running command 'ozone sh volume clrquota --space-quota /99544-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:46.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:46.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:46.183" starttime="20201028 13:09:43.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:46.184" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:46.184" starttime="20201028 13:09:46.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:46.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:46.185" starttime="20201028 13:09:46.184"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:46.185" starttime="20201028 13:09:43.994"></status>
</kw>
<msg timestamp="20201028 13:09:46.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:46.185" starttime="20201028 13:09:43.993"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:46.185" starttime="20201028 13:09:43.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:46.191" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic | jq -r '. | select(.name=="99544-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:48.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:48.431" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:09:48.431" starttime="20201028 13:09:46.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:48.432" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:09:48.432" starttime="20201028 13:09:48.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:48.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:48.433" starttime="20201028 13:09:48.433"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:48.433" starttime="20201028 13:09:46.187"></status>
</kw>
<msg timestamp="20201028 13:09:48.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:48.434" starttime="20201028 13:09:46.186"></status>
</kw>
<msg timestamp="20201028 13:09:48.434" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:09:48.434" starttime="20201028 13:09:46.186"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:48.434" starttime="20201028 13:09:48.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --count-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:48.439" level="INFO">Running command 'ozone sh volume clrquota --count-quota /99544-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:50.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:50.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:50.488" starttime="20201028 13:09:48.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:50.489" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:50.489" starttime="20201028 13:09:50.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:50.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:50.490" starttime="20201028 13:09:50.490"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:50.490" starttime="20201028 13:09:48.435"></status>
</kw>
<msg timestamp="20201028 13:09:50.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:50.490" starttime="20201028 13:09:48.435"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:50.491" starttime="20201028 13:09:48.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:50.495" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic | jq -r '. | select(.name=="99544-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:52.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:52.731" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:09:52.731" starttime="20201028 13:09:50.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:52.732" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:09:52.732" starttime="20201028 13:09:52.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:52.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:52.733" starttime="20201028 13:09:52.733"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:52.733" starttime="20201028 13:09:50.492"></status>
</kw>
<msg timestamp="20201028 13:09:52.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:52.734" starttime="20201028 13:09:50.491"></status>
</kw>
<msg timestamp="20201028 13:09:52.734" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:09:52.734" starttime="20201028 13:09:50.491"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:09:52.734" starttime="20201028 13:09:52.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:52.739" level="INFO">Running command 'ozone sh bucket delete /99544-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:54.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:54.766" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:54.767" starttime="20201028 13:09:52.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:54.768" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:54.768" starttime="20201028 13:09:54.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:54.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:54.768" starttime="20201028 13:09:54.768"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:54.769" starttime="20201028 13:09:52.735"></status>
</kw>
<msg timestamp="20201028 13:09:54.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:54.769" starttime="20201028 13:09:52.735"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:54.770" starttime="20201028 13:09:52.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:54.774" level="INFO">Running command 'ozone sh volume delete /99544-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:56.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:56.902" level="INFO">${output} = Volume 99544-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201028 13:09:56.903" starttime="20201028 13:09:54.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:56.904" level="INFO">Volume 99544-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201028 13:09:56.904" starttime="20201028 13:09:56.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:56.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:56.904" starttime="20201028 13:09:56.904"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:56.905" starttime="20201028 13:09:54.771"></status>
</kw>
<msg timestamp="20201028 13:09:56.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:56.905" starttime="20201028 13:09:54.770"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:56.905" starttime="20201028 13:09:54.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:56.910" level="INFO">Running command 'ozone sh volume create /99544-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:09:58.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:09:58.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:09:58.875" starttime="20201028 13:09:56.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:09:58.876" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:09:58.876" starttime="20201028 13:09:58.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:09:58.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:09:58.877" starttime="20201028 13:09:58.876"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:58.877" starttime="20201028 13:09:56.906"></status>
</kw>
<msg timestamp="20201028 13:09:58.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:09:58.877" starttime="20201028 13:09:56.906"></status>
</kw>
<status status="PASS" endtime="20201028 13:09:58.878" starttime="20201028 13:09:56.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:09:58.882" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic | jq -r '. | select(.name=="99544-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:01.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:01.085" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:01.085" starttime="20201028 13:09:58.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:01.086" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:01.086" starttime="20201028 13:10:01.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:01.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:01.087" starttime="20201028 13:10:01.086"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:01.087" starttime="20201028 13:09:58.879"></status>
</kw>
<msg timestamp="20201028 13:10:01.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:01.087" starttime="20201028 13:09:58.879"></status>
</kw>
<msg timestamp="20201028 13:10:01.088" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:01.088" starttime="20201028 13:09:58.878"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:01.088" starttime="20201028 13:10:01.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:01.093" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic | jq -r '. | select(.name=="99544-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:03.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:03.548" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:03.548" starttime="20201028 13:10:01.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:03.550" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:03.550" starttime="20201028 13:10:03.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:03.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:03.551" starttime="20201028 13:10:03.550"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:03.551" starttime="20201028 13:10:01.089"></status>
</kw>
<msg timestamp="20201028 13:10:03.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:03.551" starttime="20201028 13:10:01.089"></status>
</kw>
<msg timestamp="20201028 13:10:03.551" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:03.551" starttime="20201028 13:10:01.088"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:03.552" starttime="20201028 13:10:03.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:03.557" level="INFO">Running command 'ozone sh bucket create /99544-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:05.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:05.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:10:05.915" starttime="20201028 13:10:03.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:05.916" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:10:05.916" starttime="20201028 13:10:05.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:05.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:05.917" starttime="20201028 13:10:05.917"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:05.917" starttime="20201028 13:10:03.553"></status>
</kw>
<msg timestamp="20201028 13:10:05.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:05.918" starttime="20201028 13:10:03.553"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:05.918" starttime="20201028 13:10:03.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:05.922" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:08.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:08.286" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:08.286" starttime="20201028 13:10:05.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:08.287" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:08.287" starttime="20201028 13:10:08.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:08.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:08.288" starttime="20201028 13:10:08.288"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:08.288" starttime="20201028 13:10:05.919"></status>
</kw>
<msg timestamp="20201028 13:10:08.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:08.291" starttime="20201028 13:10:05.919"></status>
</kw>
<msg timestamp="20201028 13:10:08.291" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:08.291" starttime="20201028 13:10:05.918"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:08.292" starttime="20201028 13:10:08.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:08.297" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:10.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:10.620" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:10.620" starttime="20201028 13:10:08.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:10.621" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:10.621" starttime="20201028 13:10:10.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:10.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:10.622" starttime="20201028 13:10:10.621"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:10.622" starttime="20201028 13:10:08.293"></status>
</kw>
<msg timestamp="20201028 13:10:10.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:10.622" starttime="20201028 13:10:08.293"></status>
</kw>
<msg timestamp="20201028 13:10:10.623" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:10.623" starttime="20201028 13:10:08.292"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:10.623" starttime="20201028 13:10:10.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:10.628" level="INFO">Running command 'ozone sh volume setquota /99544-rpcbasic --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:12.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:12.498" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:10:12.498" starttime="20201028 13:10:10.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:12.504" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:10:12.504" starttime="20201028 13:10:12.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:12.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:12.505" starttime="20201028 13:10:12.504"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:12.505" starttime="20201028 13:10:10.624"></status>
</kw>
<msg timestamp="20201028 13:10:12.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:12.505" starttime="20201028 13:10:10.624"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:12.506" starttime="20201028 13:10:10.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:12.516" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic | jq -r '. | select(.name=="99544-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:14.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:14.718" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:14.718" starttime="20201028 13:10:12.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:14.719" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:14.719" starttime="20201028 13:10:14.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:14.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:14.720" starttime="20201028 13:10:14.720"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:14.720" starttime="20201028 13:10:12.507"></status>
</kw>
<msg timestamp="20201028 13:10:14.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:14.720" starttime="20201028 13:10:12.507"></status>
</kw>
<msg timestamp="20201028 13:10:14.721" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:14.721" starttime="20201028 13:10:12.506"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:14.721" starttime="20201028 13:10:14.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:14.726" level="INFO">Running command 'ozone sh volume info /99544-rpcbasic | jq -r '. | select(.name=="99544-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:16.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:16.982" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:16.982" starttime="20201028 13:10:14.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:16.984" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:16.984" starttime="20201028 13:10:16.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:16.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:16.985" starttime="20201028 13:10:16.984"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:16.985" starttime="20201028 13:10:14.722"></status>
</kw>
<msg timestamp="20201028 13:10:16.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:16.985" starttime="20201028 13:10:14.722"></status>
</kw>
<msg timestamp="20201028 13:10:16.986" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:16.986" starttime="20201028 13:10:14.721"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:16.986" starttime="20201028 13:10:16.986"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:16.991" level="INFO">Running command 'ozone sh bucket setquota /99544-rpcbasic/bb1 --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:18.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:18.900" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:10:18.900" starttime="20201028 13:10:16.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:18.901" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:10:18.901" starttime="20201028 13:10:18.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:18.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:18.902" starttime="20201028 13:10:18.901"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:18.902" starttime="20201028 13:10:16.987"></status>
</kw>
<msg timestamp="20201028 13:10:18.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:18.902" starttime="20201028 13:10:16.987"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:18.902" starttime="20201028 13:10:16.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:18.908" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:21.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:21.051" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:21.051" starttime="20201028 13:10:18.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:21.052" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:21.052" starttime="20201028 13:10:21.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:21.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:21.053" starttime="20201028 13:10:21.052"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:21.053" starttime="20201028 13:10:18.904"></status>
</kw>
<msg timestamp="20201028 13:10:21.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:21.053" starttime="20201028 13:10:18.903"></status>
</kw>
<msg timestamp="20201028 13:10:21.054" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:21.054" starttime="20201028 13:10:18.903"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:21.054" starttime="20201028 13:10:21.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:21.059" level="INFO">Running command 'ozone sh bucket info /99544-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:23.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:23.123" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201028 13:10:23.123" starttime="20201028 13:10:21.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:23.124" level="INFO">-1</msg>
<status status="PASS" endtime="20201028 13:10:23.124" starttime="20201028 13:10:23.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:23.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:23.125" starttime="20201028 13:10:23.124"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:23.125" starttime="20201028 13:10:21.055"></status>
</kw>
<msg timestamp="20201028 13:10:23.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:23.125" starttime="20201028 13:10:21.055"></status>
</kw>
<msg timestamp="20201028 13:10:23.125" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201028 13:10:23.125" starttime="20201028 13:10:21.054"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:10:23.126" starttime="20201028 13:10:23.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:23.130" level="INFO">Running command 'ozone sh bucket delete /99544-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:24.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:24.929" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:10:24.929" starttime="20201028 13:10:23.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:24.930" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:10:24.930" starttime="20201028 13:10:24.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:24.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:24.931" starttime="20201028 13:10:24.930"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:24.931" starttime="20201028 13:10:23.127"></status>
</kw>
<msg timestamp="20201028 13:10:24.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:24.931" starttime="20201028 13:10:23.127"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:24.932" starttime="20201028 13:10:23.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:10:24.935" level="INFO">Running command 'ozone sh volume delete /99544-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:10:26.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:10:26.867" level="INFO">${output} = Volume 99544-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201028 13:10:26.867" starttime="20201028 13:10:24.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:10:26.868" level="INFO">Volume 99544-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201028 13:10:26.869" starttime="20201028 13:10:26.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:10:26.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:10:26.869" starttime="20201028 13:10:26.869"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:26.869" starttime="20201028 13:10:24.932"></status>
</kw>
<msg timestamp="20201028 13:10:26.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:10:26.870" starttime="20201028 13:10:24.932"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:26.870" starttime="20201028 13:10:24.932"></status>
</kw>
<status status="PASS" endtime="20201028 13:10:26.870" starttime="20201028 13:08:15.647"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:10:26.870" critical="yes" starttime="20201028 13:08:15.643"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20201028 13:10:26.871" starttime="20201028 13:08:15.554"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
