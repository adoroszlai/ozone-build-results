<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 13:33:35.900" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201028 13:30:53.195" starttime="20201028 13:30:53.195"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:30:53.202" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:30:53.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:30:53.282" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 28 Oct 2020 13:30:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 28 Oct 2020 12:57:12 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201028 13:30:53.282" starttime="20201028 13:30:53.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:30:53.283" level="INFO">HTTP/1.1 200 OK
Date: Wed, 28 Oct 2020 13:30:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 28 Oct 2020 12:57:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201028 13:30:53.283" starttime="20201028 13:30:53.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:30:53.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:30:53.284" starttime="20201028 13:30:53.284"></status>
</kw>
<status status="PASS" endtime="20201028 13:30:53.284" starttime="20201028 13:30:53.196"></status>
</kw>
<msg timestamp="20201028 13:30:53.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:30:53.285" starttime="20201028 13:30:53.196"></status>
</kw>
<msg timestamp="20201028 13:30:53.285" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 28 Oct 2020 13:30:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 28 Oct 2020 12:57:12 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201028 13:30:53.285" starttime="20201028 13:30:53.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201028 13:30:53.286" starttime="20201028 13:30:53.285"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:30:53.286" critical="yes" starttime="20201028 13:30:53.194"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201028 13:30:53.289" starttime="20201028 13:30:53.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:30:53.297" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:31:54.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:31:54.126" level="INFO">${output} = 2020-10-28 13:30:55,019 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:30:55,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:31:54.126" starttime="20201028 13:30:53.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:31:54.127" level="INFO">2020-10-28 13:30:55,019 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:30:55,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:30:55,156 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 13:30:56,935 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-28 13:30:56,936 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-10-28 13:30:56,936 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-10-28 13:30:56,936 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-10-28 13:30:56,936 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-28 13:30:56,936 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-28 13:30:56,936 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-10-28 13:30:56,938 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-10-28 13:30:56,940 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-28 13:30:56,949 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-28 13:30:56,994 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-97563, with hadoop as owner.
2020-10-28 13:30:57,268 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-39296, with hadoop as owner.
2020-10-28 13:30:57,276 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-19859, with hadoop as owner.
2020-10-28 13:30:57,282 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-63061, with hadoop as owner.
2020-10-28 13:30:57,286 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-86524, with hadoop as owner.
2020-10-28 13:30:57,298 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97563/bucket-0-05973, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,394 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-39296/bucket-0-26893, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,401 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-19859/bucket-0-69326, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,411 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-63061/bucket-0-00463, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,420 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86524/bucket-0-55566, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,428 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97563/bucket-1-40861, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-39296/bucket-1-70641, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,444 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-19859/bucket-1-02136, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,452 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-63061/bucket-1-43816, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,456 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86524/bucket-1-52429, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,461 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97563/bucket-2-84164, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,468 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-39296/bucket-2-84929, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,474 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-19859/bucket-2-59808, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,483 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-63061/bucket-2-15362, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,492 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86524/bucket-2-27271, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97563/bucket-3-48692, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,504 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-39296/bucket-3-13008, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,511 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-19859/bucket-3-78302, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,514 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-63061/bucket-3-97787, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,518 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86524/bucket-3-27980, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,521 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-97563/bucket-4-46409, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,525 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-39296/bucket-4-92707, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,528 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-19859/bucket-4-74031, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,532 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-63061/bucket-4-01663, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,537 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86524/bucket-4-78076, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:30:57,955 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-28 13:30:58,958 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-28 13:30:59,105 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-28 13:30:59,788 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:30:59,788 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-9E067CFE382C-&gt;eab8d44a-5b26-458f-8a2a-ae4cdfaaf1c7
2020-10-28 13:30:59,791 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:30:59,959 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-28 13:31:00,959 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-28 13:31:01,962 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-28 13:31:02,258 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-FA19BF091714-&gt;f2bded59-2771-409a-bc18-910ecebb5afd
2020-10-28 13:31:02,268 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:31:02,969 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-28 13:31:03,969 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-28 13:31:04,970 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-10-28 13:31:05,970 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-10-28 13:31:06,971 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-10-28 13:31:07,972 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-10-28 13:31:08,972 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-28 13:31:09,973 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-28 13:31:10,974 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-28 13:31:11,975 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-10-28 13:31:12,975 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-10-28 13:31:13,983 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-10-28 13:31:14,984 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-10-28 13:31:15,984 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-10-28 13:31:16,985 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-10-28 13:31:17,985 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-10-28 13:31:18,986 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-10-28 13:31:19,987 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-10-28 13:31:20,988 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-10-28 13:31:21,988 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-10-28 13:31:22,990 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-10-28 13:31:23,991 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-10-28 13:31:24,992 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-10-28 13:31:25,992 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-10-28 13:31:26,992 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-10-28 13:31:27,993 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-10-28 13:31:28,994 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-10-28 13:31:29,994 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-10-28 13:31:30,995 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-10-28 13:31:31,995 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-10-28 13:31:32,995 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-10-28 13:31:33,996 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-10-28 13:31:34,997 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-10-28 13:31:35,997 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-10-28 13:31:36,998 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-10-28 13:31:37,998 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-10-28 13:31:39,000 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-10-28 13:31:40,001 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-10-28 13:31:41,001 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-10-28 13:31:42,002 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-10-28 13:31:43,002 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-10-28 13:31:44,003 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-10-28 13:31:45,003 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-10-28 13:31:46,004 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-10-28 13:31:47,005 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-10-28 13:31:48,018 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-10-28 13:31:49,018 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,324
Average Time spent in bucket creation: 00:00:00,182
Average Time spent in key creation: 00:00:02,058
Average Time spent in key write: 00:00:01,443
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:58,472
***************************************************</msg>
<status status="PASS" endtime="20201028 13:31:54.127" starttime="20201028 13:31:54.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:31:54.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:31:54.128" starttime="20201028 13:31:54.128"></status>
</kw>
<status status="PASS" endtime="20201028 13:31:54.128" starttime="20201028 13:30:53.289"></status>
</kw>
<msg timestamp="20201028 13:31:54.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:31:54.129" starttime="20201028 13:30:53.289"></status>
</kw>
<msg timestamp="20201028 13:31:54.129" level="INFO">${result} = 2020-10-28 13:30:55,019 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:30:55,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:31:54.129" starttime="20201028 13:30:53.289"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201028 13:31:54.130" starttime="20201028 13:31:54.130"></status>
</kw>
<status status="PASS" endtime="20201028 13:31:54.130" starttime="20201028 13:31:54.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201028 13:31:54.130" starttime="20201028 13:31:54.130"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:31:54.131" critical="yes" starttime="20201028 13:30:53.287"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 13:31:54.132" starttime="20201028 13:30:53.148"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:31:58.490" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:32:00.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:32:00.782" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201028 13:32:00.782" starttime="20201028 13:31:58.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:32:00.783" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201028 13:32:00.783" starttime="20201028 13:32:00.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:32:00.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:32:00.784" starttime="20201028 13:32:00.783"></status>
</kw>
<status status="PASS" endtime="20201028 13:32:00.784" starttime="20201028 13:31:58.486"></status>
</kw>
<msg timestamp="20201028 13:32:00.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:32:00.784" starttime="20201028 13:31:58.485"></status>
</kw>
<msg timestamp="20201028 13:32:00.784" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201028 13:32:00.784" starttime="20201028 13:31:58.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201028 13:32:00.785" starttime="20201028 13:32:00.784"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:32:00.785" critical="yes" starttime="20201028 13:31:58.484"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:32:00.791" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:32:02.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:32:02.961" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201028 13:32:02.961" starttime="20201028 13:32:00.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:32:02.963" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201028 13:32:02.963" starttime="20201028 13:32:02.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:32:02.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:32:02.963" starttime="20201028 13:32:02.963"></status>
</kw>
<status status="PASS" endtime="20201028 13:32:02.964" starttime="20201028 13:32:00.788"></status>
</kw>
<msg timestamp="20201028 13:32:02.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:32:02.964" starttime="20201028 13:32:00.787"></status>
</kw>
<msg timestamp="20201028 13:32:02.964" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201028 13:32:02.964" starttime="20201028 13:32:00.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201028 13:32:02.964" starttime="20201028 13:32:02.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201028 13:32:02.965" starttime="20201028 13:32:02.965"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:32:02.965" critical="yes" starttime="20201028 13:32:00.786"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 13:32:02.966" starttime="20201028 13:31:58.434"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:32:07.317" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:32:09.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:32:09.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:09.970" starttime="20201028 13:32:07.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:32:09.971" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:32:09.971" starttime="20201028 13:32:09.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:32:09.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:32:09.972" starttime="20201028 13:32:09.972"></status>
</kw>
<status status="PASS" endtime="20201028 13:32:09.972" starttime="20201028 13:32:07.311"></status>
</kw>
<msg timestamp="20201028 13:32:09.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:32:09.972" starttime="20201028 13:32:07.311"></status>
</kw>
<msg timestamp="20201028 13:32:09.973" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:09.973" starttime="20201028 13:32:07.311"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:32:09.973" starttime="20201028 13:32:09.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:32:09.978" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:32:12.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:32:12.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:12.650" starttime="20201028 13:32:09.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:32:12.652" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:32:12.652" starttime="20201028 13:32:12.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:32:12.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:32:12.652" starttime="20201028 13:32:12.652"></status>
</kw>
<status status="PASS" endtime="20201028 13:32:12.653" starttime="20201028 13:32:09.974"></status>
</kw>
<msg timestamp="20201028 13:32:12.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:32:12.653" starttime="20201028 13:32:09.974"></status>
</kw>
<msg timestamp="20201028 13:32:12.653" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:12.653" starttime="20201028 13:32:09.973"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:32:12.653" starttime="20201028 13:32:12.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:32:12.657" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:32:17.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:32:17.246" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:17.246" starttime="20201028 13:32:12.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:32:17.247" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:32:17.247" starttime="20201028 13:32:17.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:32:17.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:32:17.248" starttime="20201028 13:32:17.248"></status>
</kw>
<status status="PASS" endtime="20201028 13:32:17.248" starttime="20201028 13:32:12.654"></status>
</kw>
<msg timestamp="20201028 13:32:17.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:32:17.249" starttime="20201028 13:32:12.654"></status>
</kw>
<msg timestamp="20201028 13:32:17.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:17.249" starttime="20201028 13:32:12.654"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:32:17.249" starttime="20201028 13:32:17.249"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:32:17.250" critical="yes" starttime="20201028 13:32:07.310"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 13:32:17.251" starttime="20201028 13:32:07.264"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:32:55.255" level="INFO">${random} = 23312</msg>
<status status="PASS" endtime="20201028 13:32:55.255" starttime="20201028 13:32:55.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:32:55.261" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-23312 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:33:29.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:33:29.996" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:33:29.996" starttime="20201028 13:32:55.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:33:29.997" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:33:29.997" starttime="20201028 13:33:29.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:33:29.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:33:29.998" starttime="20201028 13:33:29.998"></status>
</kw>
<status status="PASS" endtime="20201028 13:33:29.998" starttime="20201028 13:32:55.256"></status>
</kw>
<msg timestamp="20201028 13:33:29.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:33:29.998" starttime="20201028 13:32:55.256"></status>
</kw>
<msg timestamp="20201028 13:33:29.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:33:29.999" starttime="20201028 13:32:55.255"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:33:30.000" starttime="20201028 13:33:29.999"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:33:30.000" critical="yes" starttime="20201028 13:32:55.254"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 13:33:30.001" starttime="20201028 13:32:55.207"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:32:23.307" level="INFO">${random} = 32672</msg>
<status status="PASS" endtime="20201028 13:32:23.307" starttime="20201028 13:32:23.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:32:23.312" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-32672 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:32:27.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:32:27.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:27.590" starttime="20201028 13:32:23.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:32:27.591" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:32:27.591" starttime="20201028 13:32:27.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:32:27.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:32:27.592" starttime="20201028 13:32:27.591"></status>
</kw>
<status status="PASS" endtime="20201028 13:32:27.592" starttime="20201028 13:32:23.308"></status>
</kw>
<msg timestamp="20201028 13:32:27.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:32:27.592" starttime="20201028 13:32:23.308"></status>
</kw>
<msg timestamp="20201028 13:32:27.592" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:32:27.592" starttime="20201028 13:32:23.307"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:32:27.593" starttime="20201028 13:32:27.593"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:32:27.593" critical="yes" starttime="20201028 13:32:23.306"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 13:32:27.594" starttime="20201028 13:32:23.263"></status>
</suite>
<status status="PASS" elapsedtime="114628" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
