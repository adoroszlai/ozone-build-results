<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 13:46:33.965" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:42:43.378" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:42:53.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:42:53.317" level="INFO">${output} = 2020-10-28 13:42:44,792 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:42:44,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:42:53.317" starttime="20201028 13:42:43.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:42:53.318" level="INFO">2020-10-28 13:42:44,792 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:42:44,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:42:44,987 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 13:42:47,824 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-28 13:42:47,825 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-28 13:42:47,825 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-28 13:42:47,825 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-28 13:42:47,825 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-28 13:42:47,825 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-28 13:42:47,826 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-28 13:42:47,834 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-28 13:42:47,843 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:42:47,886 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-33802, with testuser/scm@EXAMPLE.COM as owner.
2020-10-28 13:42:48,318 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33802/bucket-0-97515, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:42:48,851 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:42:49,858 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:42:50,514 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-28 13:42:50,862 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:42:51,863 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,421
Average Time spent in bucket creation: 00:00:00,216
Average Time spent in key creation: 00:00:00,984
Average Time spent in key write: 00:00:01,422
Total bytes written: 10240
Total Execution time: 00:00:07,847
***************************************************</msg>
<status status="PASS" endtime="20201028 13:42:53.318" starttime="20201028 13:42:53.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:42:53.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:42:53.318" starttime="20201028 13:42:53.318"></status>
</kw>
<status status="PASS" endtime="20201028 13:42:53.319" starttime="20201028 13:42:43.374"></status>
</kw>
<msg timestamp="20201028 13:42:53.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:42:53.319" starttime="20201028 13:42:43.373"></status>
</kw>
<msg timestamp="20201028 13:42:53.319" level="INFO">${result} = 2020-10-28 13:42:44,792 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:42:44,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:42:53.319" starttime="20201028 13:42:43.373"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:42:53.320" starttime="20201028 13:42:53.320"></status>
</kw>
<status status="PASS" endtime="20201028 13:42:53.320" starttime="20201028 13:42:53.320"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:42:53.321" critical="yes" starttime="20201028 13:42:43.372"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:42:53.326" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:01.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:01.135" level="INFO">${output} = 2020-10-28 13:42:54,777 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:42:54,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:43:01.135" starttime="20201028 13:42:53.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:01.138" level="INFO">2020-10-28 13:42:54,777 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:42:54,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:42:54,968 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 13:42:55,092 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gm4hud0esp
2020-10-28 13:42:55,104 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 13:42:56,105 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:42:56,477 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-28 13:42:56,524 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 13:42:57,106 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:42:57,114 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-28 13:42:57,467 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:42:57,467 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A853B358EC1E-&gt;f4112ad2-1598-4fe7-b277-aa3b290fabf3
2020-10-28 13:42:57,468 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:42:58,107 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:42:59,107 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:43:00,108 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-28 13:43:00,727 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3271.854203, max=3271.854203, mean=3271.854203, stddev=0.0, median=3271.854203, p75=3271.854203, p95=3271.854203, p98=3271.854203, p99=3271.854203, p999=3271.854203, mean_rate=0.240642176441461, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-28 13:43:00,728 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-28 13:43:00,729 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-28 13:43:00,729 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201028 13:43:01.138" starttime="20201028 13:43:01.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:01.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:01.138" starttime="20201028 13:43:01.138"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:01.139" starttime="20201028 13:42:53.324"></status>
</kw>
<msg timestamp="20201028 13:43:01.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:01.139" starttime="20201028 13:42:53.323"></status>
</kw>
<msg timestamp="20201028 13:43:01.139" level="INFO">${result} = 2020-10-28 13:42:54,777 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:42:54,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:43:01.139" starttime="20201028 13:42:53.323"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:43:01.140" starttime="20201028 13:43:01.140"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:01.140" starttime="20201028 13:43:01.139"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:43:01.140" critical="yes" starttime="20201028 13:42:53.322"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:01.146" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:05.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:05.603" level="INFO">${output} = 2020-10-28 13:43:02,685 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:43:02,889 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:43:05.604" starttime="20201028 13:43:01.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:05.605" level="INFO">2020-10-28 13:43:02,685 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:43:02,889 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:43:02,889 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 13:43:03,040 [main] INFO freon.BaseFreonGenerator: Executing test with prefix czax0njrm6
2020-10-28 13:43:03,068 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 13:43:04,071 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:43:05,072 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-28 13:43:05,532 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=182.414953, max=182.414953, mean=182.414953, stddev=0.0, median=182.414953, p75=182.414953, p95=182.414953, p98=182.414953, p99=182.414953, p999=182.414953, mean_rate=0.8950591978638074, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-28 13:43:05,533 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-10-28 13:43:05,536 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-28 13:43:05,536 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201028 13:43:05.605" starttime="20201028 13:43:05.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:05.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:05.605" starttime="20201028 13:43:05.605"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:05.606" starttime="20201028 13:43:01.143"></status>
</kw>
<msg timestamp="20201028 13:43:05.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:05.606" starttime="20201028 13:43:01.143"></status>
</kw>
<msg timestamp="20201028 13:43:05.606" level="INFO">${result} = 2020-10-28 13:43:02,685 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:43:02,889 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:43:05.606" starttime="20201028 13:43:01.142"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:43:05.607" starttime="20201028 13:43:05.607"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:05.607" starttime="20201028 13:43:05.606"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:43:05.607" critical="yes" starttime="20201028 13:43:01.141"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:05.614" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:10.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:10.741" level="INFO">${output} = 2020-10-28 13:43:07,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:43:07,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:43:10.741" starttime="20201028 13:43:05.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:10.742" level="INFO">2020-10-28 13:43:07,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:43:07,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:43:07,760 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 13:43:07,884 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8wirt9nmpa
2020-10-28 13:43:07,897 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 13:43:08,903 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 13:43:09,904 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-28 13:43:10,716 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=173.519107, max=173.519107, mean=173.519107, stddev=0.0, median=173.519107, p75=173.519107, p95=173.519107, p98=173.519107, p99=173.519107, p999=173.519107, mean_rate=0.8750259346749213, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-28 13:43:10,722 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-28 13:43:10,727 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-28 13:43:10,727 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201028 13:43:10.742" starttime="20201028 13:43:10.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:10.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:10.743" starttime="20201028 13:43:10.743"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:10.743" starttime="20201028 13:43:05.610"></status>
</kw>
<msg timestamp="20201028 13:43:10.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:10.744" starttime="20201028 13:43:05.610"></status>
</kw>
<msg timestamp="20201028 13:43:10.744" level="INFO">${result} = 2020-10-28 13:43:07,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 13:43:07,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 13:43:10.744" starttime="20201028 13:43:05.609"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:43:10.745" starttime="20201028 13:43:10.744"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:10.745" starttime="20201028 13:43:10.744"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:43:10.745" critical="yes" starttime="20201028 13:43:05.608"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 13:43:10.746" starttime="20201028 13:42:43.347"></status>
</suite>
<status status="PASS" endtime="20201028 13:43:10.750" starttime="20201028 13:42:43.321"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:42:38.293" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:42:38.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:42:38.296" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:42:38.296" starttime="20201028 13:42:38.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:42:38.297" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:42:38.297" starttime="20201028 13:42:38.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:42:38.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:42:38.298" starttime="20201028 13:42:38.298"></status>
</kw>
<status status="PASS" endtime="20201028 13:42:38.298" starttime="20201028 13:42:38.289"></status>
</kw>
<msg timestamp="20201028 13:42:38.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:42:38.298" starttime="20201028 13:42:38.289"></status>
</kw>
<msg timestamp="20201028 13:42:38.299" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:42:38.299" starttime="20201028 13:42:38.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:42:38.299" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:42:38.299" starttime="20201028 13:42:38.299"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:42:38.303" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:42:38.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:42:38.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:42:38.315" starttime="20201028 13:42:38.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:42:38.316" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:42:38.316" starttime="20201028 13:42:38.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:42:38.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:42:38.316" starttime="20201028 13:42:38.316"></status>
</kw>
<status status="PASS" endtime="20201028 13:42:38.317" starttime="20201028 13:42:38.301"></status>
</kw>
<msg timestamp="20201028 13:42:38.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:42:38.317" starttime="20201028 13:42:38.300"></status>
</kw>
<status status="PASS" endtime="20201028 13:42:38.317" starttime="20201028 13:42:38.300"></status>
</kw>
<status status="PASS" endtime="20201028 13:42:38.317" starttime="20201028 13:42:38.300"></status>
</kw>
<status status="PASS" endtime="20201028 13:42:38.317" starttime="20201028 13:42:38.288"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:42:38.317" critical="yes" starttime="20201028 13:42:38.287"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201028 13:42:38.319" starttime="20201028 13:42:38.241"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:43:15.959" level="INFO">${random} = 15590</msg>
<status status="PASS" endtime="20201028 13:43:15.959" starttime="20201028 13:43:15.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201028 13:43:15.961" level="INFO">${source} = 15590-source</msg>
<status status="PASS" endtime="20201028 13:43:15.961" starttime="20201028 13:43:15.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201028 13:43:15.962" level="INFO">${target} = 15590-target</msg>
<status status="PASS" endtime="20201028 13:43:15.962" starttime="20201028 13:43:15.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:15.967" level="INFO">Running command 'ozone sh volume create 15590-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:19.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:19.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:19.339" starttime="20201028 13:43:15.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:19.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:19.341" starttime="20201028 13:43:19.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:19.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:19.341" starttime="20201028 13:43:19.341"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:19.342" starttime="20201028 13:43:15.962"></status>
</kw>
<msg timestamp="20201028 13:43:19.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:19.342" starttime="20201028 13:43:15.962"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:19.342" starttime="20201028 13:43:15.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:19.346" level="INFO">Running command 'ozone sh volume create 15590-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:22.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:22.541" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:22.541" starttime="20201028 13:43:19.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:22.543" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:22.543" starttime="20201028 13:43:22.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:22.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:22.543" starttime="20201028 13:43:22.543"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:22.544" starttime="20201028 13:43:19.343"></status>
</kw>
<msg timestamp="20201028 13:43:22.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:22.544" starttime="20201028 13:43:19.343"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:22.544" starttime="20201028 13:43:19.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:22.550" level="INFO">Running command 'ozone sh bucket create 15590-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:25.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:25.692" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:25.692" starttime="20201028 13:43:22.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:25.693" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:25.693" starttime="20201028 13:43:25.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:25.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:25.693" starttime="20201028 13:43:25.693"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:25.694" starttime="20201028 13:43:22.546"></status>
</kw>
<msg timestamp="20201028 13:43:25.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:25.694" starttime="20201028 13:43:22.545"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:25.694" starttime="20201028 13:43:22.545"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:25.698" level="INFO">Running command 'ozone sh key put 15590-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:31.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:31.242" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:31.242" starttime="20201028 13:43:25.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:31.243" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:31.243" starttime="20201028 13:43:31.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:31.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:31.244" starttime="20201028 13:43:31.243"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:31.244" starttime="20201028 13:43:25.695"></status>
</kw>
<msg timestamp="20201028 13:43:31.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:31.244" starttime="20201028 13:43:25.695"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:31.244" starttime="20201028 13:43:25.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:31.248" level="INFO">Running command 'ozone sh bucket create 15590-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:34.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:34.479" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:34.479" starttime="20201028 13:43:31.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:34.480" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:34.480" starttime="20201028 13:43:34.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:34.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:34.481" starttime="20201028 13:43:34.480"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:34.481" starttime="20201028 13:43:31.245"></status>
</kw>
<msg timestamp="20201028 13:43:34.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:34.481" starttime="20201028 13:43:31.245"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:34.481" starttime="20201028 13:43:31.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:34.485" level="INFO">Running command 'ozone sh bucket link 15590-source/readable-bucket 15590-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:37.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:37.659" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:37.659" starttime="20201028 13:43:34.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:37.660" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:37.660" starttime="20201028 13:43:37.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:37.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:37.661" starttime="20201028 13:43:37.660"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:37.661" starttime="20201028 13:43:34.482"></status>
</kw>
<msg timestamp="20201028 13:43:37.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:37.661" starttime="20201028 13:43:34.482"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:37.661" starttime="20201028 13:43:34.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:37.666" level="INFO">Running command 'ozone sh bucket link 15590-source/readable-bucket 15590-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:40.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:40.703" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:40.703" starttime="20201028 13:43:37.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:40.704" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:40.704" starttime="20201028 13:43:40.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:40.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:40.704" starttime="20201028 13:43:40.704"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:40.705" starttime="20201028 13:43:37.662"></status>
</kw>
<msg timestamp="20201028 13:43:40.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:40.705" starttime="20201028 13:43:37.662"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:40.705" starttime="20201028 13:43:37.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:40.710" level="INFO">Running command 'ozone sh bucket link 15590-source/unreadable-bucket 15590-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:43.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:43.872" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:43.872" starttime="20201028 13:43:40.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:43.873" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:43:43.874" starttime="20201028 13:43:43.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:43.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:43.874" starttime="20201028 13:43:43.874"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:43.874" starttime="20201028 13:43:40.707"></status>
</kw>
<msg timestamp="20201028 13:43:43.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:43.875" starttime="20201028 13:43:40.706"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:43.875" starttime="20201028 13:43:40.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:43.878" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 15590-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:47.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:47.360" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:47.360" starttime="20201028 13:43:43.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:47.361" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 13:43:47.361" starttime="20201028 13:43:47.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:47.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:47.362" starttime="20201028 13:43:47.361"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:47.362" starttime="20201028 13:43:43.876"></status>
</kw>
<msg timestamp="20201028 13:43:47.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:47.362" starttime="20201028 13:43:43.875"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:47.363" starttime="20201028 13:43:43.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:47.369" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 15590-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:50.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:50.702" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:50.703" starttime="20201028 13:43:47.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:50.703" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 13:43:50.704" starttime="20201028 13:43:50.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:50.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:50.704" starttime="20201028 13:43:50.704"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:50.704" starttime="20201028 13:43:47.364"></status>
</kw>
<msg timestamp="20201028 13:43:50.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:50.705" starttime="20201028 13:43:47.363"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:50.705" starttime="20201028 13:43:47.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:50.709" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 15590-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:54.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:54.008" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:54.009" starttime="20201028 13:43:50.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:54.009" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 13:43:54.010" starttime="20201028 13:43:54.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:54.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:54.010" starttime="20201028 13:43:54.010"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:54.010" starttime="20201028 13:43:50.705"></status>
</kw>
<msg timestamp="20201028 13:43:54.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:54.010" starttime="20201028 13:43:50.705"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:54.011" starttime="20201028 13:43:50.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:54.014" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 15590-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:43:57.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:43:57.379" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:43:57.380" starttime="20201028 13:43:54.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:43:57.380" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 13:43:57.381" starttime="20201028 13:43:57.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:43:57.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:43:57.381" starttime="20201028 13:43:57.381"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:57.381" starttime="20201028 13:43:54.012"></status>
</kw>
<msg timestamp="20201028 13:43:57.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:43:57.382" starttime="20201028 13:43:54.011"></status>
</kw>
<status status="PASS" endtime="20201028 13:43:57.382" starttime="20201028 13:43:54.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:43:57.385" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 15590-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:01.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:01.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:01.064" starttime="20201028 13:43:57.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:01.065" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 13:44:01.065" starttime="20201028 13:44:01.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:01.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:01.065" starttime="20201028 13:44:01.065"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.066" starttime="20201028 13:43:57.383"></status>
</kw>
<msg timestamp="20201028 13:44:01.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:01.066" starttime="20201028 13:43:57.382"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.066" starttime="20201028 13:43:57.382"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.066" starttime="20201028 13:43:22.545"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.066" starttime="20201028 13:43:22.544"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.067" starttime="20201028 13:43:15.959"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:01.073" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:01.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:01.075" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:01.075" starttime="20201028 13:44:01.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:01.076" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:01.076" starttime="20201028 13:44:01.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:01.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:01.076" starttime="20201028 13:44:01.076"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.077" starttime="20201028 13:44:01.070"></status>
</kw>
<msg timestamp="20201028 13:44:01.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:01.077" starttime="20201028 13:44:01.069"></status>
</kw>
<msg timestamp="20201028 13:44:01.077" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:01.077" starttime="20201028 13:44:01.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:01.078" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:01.079" starttime="20201028 13:44:01.077"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:01.083" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:01.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:01.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:01.112" starttime="20201028 13:44:01.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:01.113" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:01.113" starttime="20201028 13:44:01.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:01.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:01.114" starttime="20201028 13:44:01.113"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.114" starttime="20201028 13:44:01.080"></status>
</kw>
<msg timestamp="20201028 13:44:01.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:01.114" starttime="20201028 13:44:01.080"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.114" starttime="20201028 13:44:01.079"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.114" starttime="20201028 13:44:01.079"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.114" starttime="20201028 13:44:01.068"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:01.115" starttime="20201028 13:44:01.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:01.118" level="INFO">Running command 'ozone sh bucket link 15590-source/no-such-bucket 15590-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:04.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:04.472" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:04.472" starttime="20201028 13:44:01.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:04.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:04.473" starttime="20201028 13:44:04.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:04.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:04.474" starttime="20201028 13:44:04.474"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:04.474" starttime="20201028 13:44:01.116"></status>
</kw>
<msg timestamp="20201028 13:44:04.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:04.474" starttime="20201028 13:44:01.115"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:04.475" starttime="20201028 13:44:01.115"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:04.477" level="INFO">Running command 'ozone sh key list 15590-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:07.828" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:44:07.828" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:07.828" starttime="20201028 13:44:04.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:07.829" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201028 13:44:07.829" starttime="20201028 13:44:07.829"></status>
</kw>
<msg timestamp="20201028 13:44:07.830" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:07.830" starttime="20201028 13:44:04.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:07.830" starttime="20201028 13:44:07.830"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:44:07.831" critical="yes" starttime="20201028 13:44:01.067"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:07.837" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:07.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:07.839" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:07.839" starttime="20201028 13:44:07.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:07.840" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:07.840" starttime="20201028 13:44:07.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:07.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:07.841" starttime="20201028 13:44:07.840"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:07.841" starttime="20201028 13:44:07.834"></status>
</kw>
<msg timestamp="20201028 13:44:07.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:07.841" starttime="20201028 13:44:07.834"></status>
</kw>
<msg timestamp="20201028 13:44:07.841" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:07.841" starttime="20201028 13:44:07.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:07.842" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:07.842" starttime="20201028 13:44:07.841"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:07.846" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:07.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:07.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:07.869" starttime="20201028 13:44:07.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:07.870" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:07.870" starttime="20201028 13:44:07.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:07.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:07.871" starttime="20201028 13:44:07.870"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:07.871" starttime="20201028 13:44:07.843"></status>
</kw>
<msg timestamp="20201028 13:44:07.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:07.871" starttime="20201028 13:44:07.843"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:07.871" starttime="20201028 13:44:07.842"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:07.871" starttime="20201028 13:44:07.842"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:07.872" starttime="20201028 13:44:07.833"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:07.872" starttime="20201028 13:44:07.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:07.876" level="INFO">Running command 'ozone sh bucket link 15590-source/bucket1 15590-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:11.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:11.414" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:11.414" starttime="20201028 13:44:07.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:11.415" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:11.415" starttime="20201028 13:44:11.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:11.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:11.416" starttime="20201028 13:44:11.415"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:11.416" starttime="20201028 13:44:07.873"></status>
</kw>
<msg timestamp="20201028 13:44:11.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:11.416" starttime="20201028 13:44:07.872"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:11.417" starttime="20201028 13:44:07.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:11.420" level="INFO">Running command 'ozone sh bucket create 15590-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:14.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:14.981" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:14.981" starttime="20201028 13:44:11.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:14.982" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:14.982" starttime="20201028 13:44:14.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:14.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:14.983" starttime="20201028 13:44:14.983"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:14.983" starttime="20201028 13:44:11.418"></status>
</kw>
<msg timestamp="20201028 13:44:14.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:14.983" starttime="20201028 13:44:11.417"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:14.984" starttime="20201028 13:44:11.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:14.988" level="INFO">Running command 'ozone sh key put 15590-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:20.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:20.559" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:20.559" starttime="20201028 13:44:14.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:20.560" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:20.560" starttime="20201028 13:44:20.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:20.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:20.561" starttime="20201028 13:44:20.560"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:20.561" starttime="20201028 13:44:14.985"></status>
</kw>
<msg timestamp="20201028 13:44:20.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:20.561" starttime="20201028 13:44:14.984"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:20.562" starttime="20201028 13:44:14.984"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201028 13:44:20.563" level="INFO">${postfix} = 85852</msg>
<status status="PASS" endtime="20201028 13:44:20.563" starttime="20201028 13:44:20.563"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201028 13:44:20.564" level="INFO">${tmpfile} = /tmp/tempkey-85852</msg>
<status status="PASS" endtime="20201028 13:44:20.564" starttime="20201028 13:44:20.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:20.568" level="INFO">Running command 'ozone sh key get -f 15590-target/link1/key1 /tmp/tempkey-85852 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:26.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:26.189" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:26.190" starttime="20201028 13:44:20.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.191" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:26.191" starttime="20201028 13:44:26.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:26.191" starttime="20201028 13:44:26.191"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.192" starttime="20201028 13:44:20.565"></status>
</kw>
<msg timestamp="20201028 13:44:26.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:26.192" starttime="20201028 13:44:20.564"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.192" starttime="20201028 13:44:20.564"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201028 13:44:26.195" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-85852 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:26.197" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201028 13:44:26.197" starttime="20201028 13:44:26.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:26.202" level="INFO">Running command 'rm -f /tmp/tempkey-85852 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:26.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:26.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:26.204" starttime="20201028 13:44:26.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.205" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:26.205" starttime="20201028 13:44:26.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:26.205" starttime="20201028 13:44:26.205"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.206" starttime="20201028 13:44:26.198"></status>
</kw>
<msg timestamp="20201028 13:44:26.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:26.206" starttime="20201028 13:44:26.198"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.206" starttime="20201028 13:44:26.197"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:44:26.207" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201028 13:44:26.207" starttime="20201028 13:44:26.206"></status>
</kw>
<msg timestamp="20201028 13:44:26.207" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201028 13:44:26.207" starttime="20201028 13:44:20.562"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:26.207" starttime="20201028 13:44:26.207"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.207" starttime="20201028 13:44:20.562"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:44:26.208" critical="yes" starttime="20201028 13:44:07.831"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:26.214" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:26.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:26.215" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:26.215" starttime="20201028 13:44:26.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.216" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:26.216" starttime="20201028 13:44:26.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:26.217" starttime="20201028 13:44:26.216"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.217" starttime="20201028 13:44:26.210"></status>
</kw>
<msg timestamp="20201028 13:44:26.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:26.218" starttime="20201028 13:44:26.210"></status>
</kw>
<msg timestamp="20201028 13:44:26.218" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:26.218" starttime="20201028 13:44:26.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:26.218" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:26.218" starttime="20201028 13:44:26.218"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:26.223" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:26.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:26.245" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:26.245" starttime="20201028 13:44:26.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.246" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:26.246" starttime="20201028 13:44:26.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:26.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:26.247" starttime="20201028 13:44:26.246"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.247" starttime="20201028 13:44:26.220"></status>
</kw>
<msg timestamp="20201028 13:44:26.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:26.248" starttime="20201028 13:44:26.220"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.248" starttime="20201028 13:44:26.219"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.248" starttime="20201028 13:44:26.219"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.248" starttime="20201028 13:44:26.209"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:26.248" starttime="20201028 13:44:26.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:26.253" level="INFO">Running command 'ozone sh key put 15590-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:31.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:31.860" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:31.860" starttime="20201028 13:44:26.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:31.862" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:31.862" starttime="20201028 13:44:31.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:31.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:31.862" starttime="20201028 13:44:31.862"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:31.863" starttime="20201028 13:44:26.250"></status>
</kw>
<msg timestamp="20201028 13:44:31.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:31.863" starttime="20201028 13:44:26.249"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:31.863" starttime="20201028 13:44:26.249"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201028 13:44:31.865" level="INFO">${postfix} = 43871</msg>
<status status="PASS" endtime="20201028 13:44:31.865" starttime="20201028 13:44:31.865"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201028 13:44:31.866" level="INFO">${tmpfile} = /tmp/tempkey-43871</msg>
<status status="PASS" endtime="20201028 13:44:31.866" starttime="20201028 13:44:31.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:31.870" level="INFO">Running command 'ozone sh key get -f 15590-source/bucket1/key2 /tmp/tempkey-43871 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:36.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:36.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:36.640" starttime="20201028 13:44:31.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:36.641" starttime="20201028 13:44:36.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:36.642" starttime="20201028 13:44:36.641"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.642" starttime="20201028 13:44:31.867"></status>
</kw>
<msg timestamp="20201028 13:44:36.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:36.642" starttime="20201028 13:44:31.866"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.642" starttime="20201028 13:44:31.866"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201028 13:44:36.646" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-43871 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:36.647" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201028 13:44:36.647" starttime="20201028 13:44:36.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:36.651" level="INFO">Running command 'rm -f /tmp/tempkey-43871 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:36.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:36.653" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:36.653" starttime="20201028 13:44:36.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.654" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:36.654" starttime="20201028 13:44:36.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:36.654" starttime="20201028 13:44:36.654"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.654" starttime="20201028 13:44:36.648"></status>
</kw>
<msg timestamp="20201028 13:44:36.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:36.655" starttime="20201028 13:44:36.648"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.655" starttime="20201028 13:44:36.647"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:44:36.655" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201028 13:44:36.655" starttime="20201028 13:44:36.655"></status>
</kw>
<msg timestamp="20201028 13:44:36.656" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201028 13:44:36.656" starttime="20201028 13:44:31.864"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:36.656" starttime="20201028 13:44:36.656"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.656" starttime="20201028 13:44:31.863"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:44:36.657" critical="yes" starttime="20201028 13:44:26.208"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:36.663" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:36.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:36.664" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:36.664" starttime="20201028 13:44:36.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.665" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:36.665" starttime="20201028 13:44:36.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:36.666" starttime="20201028 13:44:36.665"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.666" starttime="20201028 13:44:36.659"></status>
</kw>
<msg timestamp="20201028 13:44:36.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:36.666" starttime="20201028 13:44:36.659"></status>
</kw>
<msg timestamp="20201028 13:44:36.666" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:36.666" starttime="20201028 13:44:36.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:36.667" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:36.667" starttime="20201028 13:44:36.666"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:36.671" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:36.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:36.690" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:36.690" starttime="20201028 13:44:36.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.691" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:36.691" starttime="20201028 13:44:36.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:36.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:36.692" starttime="20201028 13:44:36.691"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.692" starttime="20201028 13:44:36.668"></status>
</kw>
<msg timestamp="20201028 13:44:36.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:36.692" starttime="20201028 13:44:36.668"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.693" starttime="20201028 13:44:36.667"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.694" starttime="20201028 13:44:36.667"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.694" starttime="20201028 13:44:36.658"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:36.694" starttime="20201028 13:44:36.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:36.698" level="INFO">Running command 'ozone sh key list 15590-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:40.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:40.134" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201028 13:44:40.134" starttime="20201028 13:44:36.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:40.135" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201028 13:44:40.135" starttime="20201028 13:44:40.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:40.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:40.136" starttime="20201028 13:44:40.135"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:40.136" starttime="20201028 13:44:36.695"></status>
</kw>
<msg timestamp="20201028 13:44:40.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:40.136" starttime="20201028 13:44:36.695"></status>
</kw>
<msg timestamp="20201028 13:44:40.136" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201028 13:44:40.137" starttime="20201028 13:44:36.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:40.142" level="INFO">Running command 'ozone sh key list 15590-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:43.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:43.640" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201028 13:44:43.640" starttime="20201028 13:44:40.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:43.641" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201028 13:44:43.641" starttime="20201028 13:44:43.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:43.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:43.642" starttime="20201028 13:44:43.641"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:43.642" starttime="20201028 13:44:40.138"></status>
</kw>
<msg timestamp="20201028 13:44:43.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:43.642" starttime="20201028 13:44:40.137"></status>
</kw>
<msg timestamp="20201028 13:44:43.643" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201028 13:44:43.643" starttime="20201028 13:44:40.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:43.643" starttime="20201028 13:44:43.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:43.644" starttime="20201028 13:44:43.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:43.644" starttime="20201028 13:44:43.644"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:44:43.644" critical="yes" starttime="20201028 13:44:36.657"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:43.650" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:43.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:43.653" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:43.653" starttime="20201028 13:44:43.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:43.654" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:43.654" starttime="20201028 13:44:43.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:43.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:43.654" starttime="20201028 13:44:43.654"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:43.655" starttime="20201028 13:44:43.647"></status>
</kw>
<msg timestamp="20201028 13:44:43.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:43.655" starttime="20201028 13:44:43.647"></status>
</kw>
<msg timestamp="20201028 13:44:43.655" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:43.655" starttime="20201028 13:44:43.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:43.656" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:43.656" starttime="20201028 13:44:43.655"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:43.660" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:43.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:43.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:43.677" starttime="20201028 13:44:43.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:43.678" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:43.678" starttime="20201028 13:44:43.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:43.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:43.678" starttime="20201028 13:44:43.678"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:43.679" starttime="20201028 13:44:43.657"></status>
</kw>
<msg timestamp="20201028 13:44:43.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:43.679" starttime="20201028 13:44:43.657"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:43.679" starttime="20201028 13:44:43.657"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:43.679" starttime="20201028 13:44:43.656"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:43.679" starttime="20201028 13:44:43.646"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:43.679" starttime="20201028 13:44:43.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:43.683" level="INFO">Running command 'ozone sh key delete 15590-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:47.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:47.128" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:47.128" starttime="20201028 13:44:43.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:47.133" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:44:47.133" starttime="20201028 13:44:47.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:47.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:47.134" starttime="20201028 13:44:47.133"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:47.134" starttime="20201028 13:44:43.680"></status>
</kw>
<msg timestamp="20201028 13:44:47.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:47.134" starttime="20201028 13:44:43.680"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:47.134" starttime="20201028 13:44:43.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:47.141" level="INFO">Running command 'ozone sh key list 15590-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:50.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:50.665" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201028 13:44:50.665" starttime="20201028 13:44:47.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:50.667" level="INFO">key1</msg>
<status status="PASS" endtime="20201028 13:44:50.667" starttime="20201028 13:44:50.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:50.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:50.668" starttime="20201028 13:44:50.667"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:50.668" starttime="20201028 13:44:47.137"></status>
</kw>
<msg timestamp="20201028 13:44:50.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:50.668" starttime="20201028 13:44:47.137"></status>
</kw>
<msg timestamp="20201028 13:44:50.668" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201028 13:44:50.668" starttime="20201028 13:44:47.134"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:50.669" starttime="20201028 13:44:50.668"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:44:50.669" critical="yes" starttime="20201028 13:44:43.645"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:50.676" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:50.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:50.677" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:50.678" starttime="20201028 13:44:50.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:50.678" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:50.679" starttime="20201028 13:44:50.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:50.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:50.679" starttime="20201028 13:44:50.679"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:50.680" starttime="20201028 13:44:50.672"></status>
</kw>
<msg timestamp="20201028 13:44:50.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:50.680" starttime="20201028 13:44:50.672"></status>
</kw>
<msg timestamp="20201028 13:44:50.680" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:50.680" starttime="20201028 13:44:50.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:50.681" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:50.681" starttime="20201028 13:44:50.680"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:50.686" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:50.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:50.707" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:50.707" starttime="20201028 13:44:50.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:50.708" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:50.708" starttime="20201028 13:44:50.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:50.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:50.709" starttime="20201028 13:44:50.708"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:50.709" starttime="20201028 13:44:50.682"></status>
</kw>
<msg timestamp="20201028 13:44:50.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:50.709" starttime="20201028 13:44:50.682"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:50.709" starttime="20201028 13:44:50.681"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:50.709" starttime="20201028 13:44:50.681"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:50.709" starttime="20201028 13:44:50.671"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:50.710" starttime="20201028 13:44:50.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:50.714" level="INFO">Running command 'ozone sh bucket list 15590-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:53.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:53.943" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:53.943" starttime="20201028 13:44:50.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:53.944" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:44:04.305Z",
  "modificationTime" : "2020-10-28T13:44:04.305Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:43:43.669Z",
  "modificationTime" : "2020-10-28T13:44:00.952Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:44:11.235Z",
  "modificationTime" : "2020-10-28T13:44:11.235Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:43:37.578Z",
  "modificationTime" : "2020-10-28T13:43:57.307Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:43:40.541Z",
  "modificationTime" : "2020-10-28T13:43:40.541Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 13:44:53.945" starttime="20201028 13:44:53.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:53.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:53.945" starttime="20201028 13:44:53.945"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:53.945" starttime="20201028 13:44:50.711"></status>
</kw>
<msg timestamp="20201028 13:44:53.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:53.946" starttime="20201028 13:44:50.710"></status>
</kw>
<msg timestamp="20201028 13:44:53.946" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:44:53.946" starttime="20201028 13:44:50.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:53.946" starttime="20201028 13:44:53.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:53.947" starttime="20201028 13:44:53.947"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:44:53.947" critical="yes" starttime="20201028 13:44:50.670"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:53.953" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:53.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:53.955" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:53.955" starttime="20201028 13:44:53.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:53.956" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:53.956" starttime="20201028 13:44:53.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:53.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:53.957" starttime="20201028 13:44:53.956"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:53.957" starttime="20201028 13:44:53.950"></status>
</kw>
<msg timestamp="20201028 13:44:53.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:53.957" starttime="20201028 13:44:53.950"></status>
</kw>
<msg timestamp="20201028 13:44:53.957" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:53.957" starttime="20201028 13:44:53.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:53.958" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:53.958" starttime="20201028 13:44:53.958"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:53.963" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:53.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:53.972" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:53.972" starttime="20201028 13:44:53.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:53.973" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:53.973" starttime="20201028 13:44:53.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:53.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:53.974" starttime="20201028 13:44:53.973"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:53.974" starttime="20201028 13:44:53.960"></status>
</kw>
<msg timestamp="20201028 13:44:53.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:53.974" starttime="20201028 13:44:53.959"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:53.974" starttime="20201028 13:44:53.959"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:53.974" starttime="20201028 13:44:53.958"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:53.974" starttime="20201028 13:44:53.949"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:53.974" starttime="20201028 13:44:53.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:53.979" level="INFO">Running command 'ozone sh bucket info 15590-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:57.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:57.931" level="INFO">${output} = 15590-source bucket1</msg>
<status status="PASS" endtime="20201028 13:44:57.931" starttime="20201028 13:44:53.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:57.932" level="INFO">15590-source bucket1</msg>
<status status="PASS" endtime="20201028 13:44:57.933" starttime="20201028 13:44:57.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:57.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:57.933" starttime="20201028 13:44:57.933"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:57.933" starttime="20201028 13:44:53.975"></status>
</kw>
<msg timestamp="20201028 13:44:57.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:57.934" starttime="20201028 13:44:53.975"></status>
</kw>
<msg timestamp="20201028 13:44:57.934" level="INFO">${result} = 15590-source bucket1</msg>
<status status="PASS" endtime="20201028 13:44:57.934" starttime="20201028 13:44:53.975"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:44:57.934" starttime="20201028 13:44:57.934"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:44:57.935" critical="yes" starttime="20201028 13:44:53.948"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:57.943" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:57.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:57.947" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:44:57.947" starttime="20201028 13:44:57.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:57.948" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:44:57.948" starttime="20201028 13:44:57.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:57.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:57.948" starttime="20201028 13:44:57.948"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:57.949" starttime="20201028 13:44:57.938"></status>
</kw>
<msg timestamp="20201028 13:44:57.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:57.949" starttime="20201028 13:44:57.937"></status>
</kw>
<msg timestamp="20201028 13:44:57.949" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:44:57.949" starttime="20201028 13:44:57.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:44:57.950" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:44:57.950" starttime="20201028 13:44:57.949"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:57.954" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:44:57.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:44:57.972" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:44:57.972" starttime="20201028 13:44:57.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:44:57.973" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:44:57.973" starttime="20201028 13:44:57.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:44:57.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:44:57.974" starttime="20201028 13:44:57.973"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:57.974" starttime="20201028 13:44:57.951"></status>
</kw>
<msg timestamp="20201028 13:44:57.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:44:57.974" starttime="20201028 13:44:57.951"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:57.974" starttime="20201028 13:44:57.950"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:57.974" starttime="20201028 13:44:57.950"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:57.974" starttime="20201028 13:44:57.937"></status>
</kw>
<status status="PASS" endtime="20201028 13:44:57.974" starttime="20201028 13:44:57.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:44:57.978" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 15590-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:01.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:01.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:01.640" starttime="20201028 13:44:57.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:01.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 13:45:01.641" starttime="20201028 13:45:01.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:01.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:01.642" starttime="20201028 13:45:01.641"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:01.642" starttime="20201028 13:44:57.975"></status>
</kw>
<msg timestamp="20201028 13:45:01.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:01.642" starttime="20201028 13:44:57.975"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:01.643" starttime="20201028 13:44:57.975"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:01.647" level="INFO">Running command 'ozone sh bucket getacl 15590-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:05.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:05.250" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201028 13:45:05.250" starttime="20201028 13:45:01.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:05.251" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201028 13:45:05.251" starttime="20201028 13:45:05.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:05.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:05.252" starttime="20201028 13:45:05.251"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:05.252" starttime="20201028 13:45:01.645"></status>
</kw>
<msg timestamp="20201028 13:45:05.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:05.253" starttime="20201028 13:45:01.644"></status>
</kw>
<msg timestamp="20201028 13:45:05.253" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201028 13:45:05.253" starttime="20201028 13:45:01.644"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:05.253" starttime="20201028 13:45:05.253"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:05.254" starttime="20201028 13:45:01.643"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:05.259" level="INFO">Running command 'ozone sh bucket getacl 15590-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:08.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:08.649" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:08.649" starttime="20201028 13:45:05.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:08.650" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:08.650" starttime="20201028 13:45:08.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:08.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:08.652" starttime="20201028 13:45:08.650"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:08.652" starttime="20201028 13:45:05.255"></status>
</kw>
<msg timestamp="20201028 13:45:08.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:08.652" starttime="20201028 13:45:05.255"></status>
</kw>
<msg timestamp="20201028 13:45:08.653" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201028 13:45:08.653" starttime="20201028 13:45:05.254"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:08.653" starttime="20201028 13:45:08.653"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:08.653" starttime="20201028 13:45:05.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:08.658" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 15590-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:12.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:12.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:12.854" starttime="20201028 13:45:08.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:12.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 13:45:12.855" starttime="20201028 13:45:12.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:12.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:12.856" starttime="20201028 13:45:12.855"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:12.856" starttime="20201028 13:45:08.655"></status>
</kw>
<msg timestamp="20201028 13:45:12.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:12.856" starttime="20201028 13:45:08.654"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:12.856" starttime="20201028 13:45:08.654"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:12.861" level="INFO">Running command 'ozone sh bucket getacl 15590-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:16.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:16.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:16.272" starttime="20201028 13:45:12.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:16.273" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:16.273" starttime="20201028 13:45:16.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:16.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:16.274" starttime="20201028 13:45:16.274"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:16.274" starttime="20201028 13:45:12.858"></status>
</kw>
<msg timestamp="20201028 13:45:16.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:16.274" starttime="20201028 13:45:12.858"></status>
</kw>
<msg timestamp="20201028 13:45:16.275" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201028 13:45:16.275" starttime="20201028 13:45:12.857"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:16.276" starttime="20201028 13:45:16.275"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:16.276" starttime="20201028 13:45:12.857"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:16.282" level="INFO">Running command 'ozone sh bucket getacl 15590-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:19.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:19.962" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201028 13:45:19.962" starttime="20201028 13:45:16.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:19.963" level="INFO">READ</msg>
<status status="PASS" endtime="20201028 13:45:19.963" starttime="20201028 13:45:19.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:19.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:19.964" starttime="20201028 13:45:19.964"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.964" starttime="20201028 13:45:16.278"></status>
</kw>
<msg timestamp="20201028 13:45:19.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:19.965" starttime="20201028 13:45:16.277"></status>
</kw>
<msg timestamp="20201028 13:45:19.965" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201028 13:45:19.965" starttime="20201028 13:45:16.277"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:19.965" starttime="20201028 13:45:19.965"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.966" starttime="20201028 13:45:16.276"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:45:19.966" critical="yes" starttime="20201028 13:44:57.935"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:19.973" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:19.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:19.975" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:19.975" starttime="20201028 13:45:19.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:19.976" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:19.976" starttime="20201028 13:45:19.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:19.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:19.976" starttime="20201028 13:45:19.976"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.977" starttime="20201028 13:45:19.969"></status>
</kw>
<msg timestamp="20201028 13:45:19.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:19.977" starttime="20201028 13:45:19.969"></status>
</kw>
<msg timestamp="20201028 13:45:19.977" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:19.977" starttime="20201028 13:45:19.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:19.978" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:19.978" starttime="20201028 13:45:19.977"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:19.983" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:19.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:19.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:19.993" starttime="20201028 13:45:19.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:19.994" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:19.994" starttime="20201028 13:45:19.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:19.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:19.994" starttime="20201028 13:45:19.994"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.995" starttime="20201028 13:45:19.979"></status>
</kw>
<msg timestamp="20201028 13:45:19.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:19.995" starttime="20201028 13:45:19.979"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.995" starttime="20201028 13:45:19.978"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.995" starttime="20201028 13:45:19.978"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.995" starttime="20201028 13:45:19.968"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:19.995" starttime="20201028 13:45:19.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:19.999" level="INFO">Running command 'ozone sh bucket link 15590-source/bucket2 15590-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:23.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:23.708" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:23.708" starttime="20201028 13:45:19.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:23.709" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:45:23.709" starttime="20201028 13:45:23.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:23.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:23.710" starttime="20201028 13:45:23.709"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:23.710" starttime="20201028 13:45:19.996"></status>
</kw>
<msg timestamp="20201028 13:45:23.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:23.710" starttime="20201028 13:45:19.996"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:23.710" starttime="20201028 13:45:19.995"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:23.713" level="INFO">Running command 'ozone sh bucket create 15590-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:27.052" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:45:27.052" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:27.052" starttime="20201028 13:45:23.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:27.053" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201028 13:45:27.053" starttime="20201028 13:45:27.052"></status>
</kw>
<msg timestamp="20201028 13:45:27.053" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:27.053" starttime="20201028 13:45:23.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:27.054" starttime="20201028 13:45:27.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:27.058" level="INFO">Running command 'ozone sh bucket create 15590-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:30.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:30.398" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:30.398" starttime="20201028 13:45:27.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:30.399" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:45:30.399" starttime="20201028 13:45:30.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:30.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:30.400" starttime="20201028 13:45:30.399"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:30.400" starttime="20201028 13:45:27.055"></status>
</kw>
<msg timestamp="20201028 13:45:30.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:30.400" starttime="20201028 13:45:27.055"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:30.401" starttime="20201028 13:45:27.054"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:30.404" level="INFO">Running command 'ozone sh bucket link 15590-source/bucket1 15590-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:34.043" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:45:34.043" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:34.043" starttime="20201028 13:45:30.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.044" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201028 13:45:34.044" starttime="20201028 13:45:34.043"></status>
</kw>
<msg timestamp="20201028 13:45:34.045" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:34.045" starttime="20201028 13:45:30.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:34.045" starttime="20201028 13:45:34.045"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:45:34.045" critical="yes" starttime="20201028 13:45:19.967"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:34.051" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:34.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:34.053" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:34.053" starttime="20201028 13:45:34.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.054" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:34.054" starttime="20201028 13:45:34.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:34.055" starttime="20201028 13:45:34.055"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.055" starttime="20201028 13:45:34.048"></status>
</kw>
<msg timestamp="20201028 13:45:34.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:34.056" starttime="20201028 13:45:34.048"></status>
</kw>
<msg timestamp="20201028 13:45:34.056" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:34.056" starttime="20201028 13:45:34.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:34.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:34.057" starttime="20201028 13:45:34.056"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:34.060" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:34.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:34.071" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:34.071" starttime="20201028 13:45:34.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.072" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:34.072" starttime="20201028 13:45:34.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:34.073" starttime="20201028 13:45:34.072"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.073" starttime="20201028 13:45:34.058"></status>
</kw>
<msg timestamp="20201028 13:45:34.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:34.073" starttime="20201028 13:45:34.058"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.073" starttime="20201028 13:45:34.057"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.073" starttime="20201028 13:45:34.057"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.074" starttime="20201028 13:45:34.047"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.074" starttime="20201028 13:45:34.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:34.079" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:34.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:34.082" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:34.083" starttime="20201028 13:45:34.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.084" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:34.084" starttime="20201028 13:45:34.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:34.084" starttime="20201028 13:45:34.084"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.085" starttime="20201028 13:45:34.076"></status>
</kw>
<msg timestamp="20201028 13:45:34.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:34.085" starttime="20201028 13:45:34.076"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.085" starttime="20201028 13:45:34.075"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:34.090" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:34.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:34.091" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:34.091" starttime="20201028 13:45:34.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.092" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:34.092" starttime="20201028 13:45:34.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:34.093" starttime="20201028 13:45:34.092"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.093" starttime="20201028 13:45:34.086"></status>
</kw>
<msg timestamp="20201028 13:45:34.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:34.093" starttime="20201028 13:45:34.086"></status>
</kw>
<msg timestamp="20201028 13:45:34.093" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:34.093" starttime="20201028 13:45:34.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:34.094" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:34.094" starttime="20201028 13:45:34.094"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:34.100" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:34.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:34.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:34.115" starttime="20201028 13:45:34.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.116" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:34.116" starttime="20201028 13:45:34.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:34.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:34.117" starttime="20201028 13:45:34.117"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.118" starttime="20201028 13:45:34.096"></status>
</kw>
<msg timestamp="20201028 13:45:34.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:34.118" starttime="20201028 13:45:34.095"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.118" starttime="20201028 13:45:34.095"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.118" starttime="20201028 13:45:34.094"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.118" starttime="20201028 13:45:34.085"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:34.118" starttime="20201028 13:45:34.085"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:34.122" level="INFO">Running command 'ozone sh key list 15590-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:37.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:37.566" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:37.566" starttime="20201028 13:45:34.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.567" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "15590-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-28T13:43:28.976Z",
  "modificationTime" : "2020-10-28T13:43:30.828Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201028 13:45:37.567" starttime="20201028 13:45:37.566"></status>
</kw>
<msg timestamp="20201028 13:45:37.567" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:37.567" starttime="20201028 13:45:34.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:37.568" starttime="20201028 13:45:37.568"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.568" starttime="20201028 13:45:34.074"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.568" starttime="20201028 13:45:34.074"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:45:37.568" critical="yes" starttime="20201028 13:45:34.046"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:37.575" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:37.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:37.576" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:37.576" starttime="20201028 13:45:37.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.577" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:37.577" starttime="20201028 13:45:37.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:37.578" starttime="20201028 13:45:37.578"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.578" starttime="20201028 13:45:37.571"></status>
</kw>
<msg timestamp="20201028 13:45:37.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:37.579" starttime="20201028 13:45:37.571"></status>
</kw>
<msg timestamp="20201028 13:45:37.579" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:37.579" starttime="20201028 13:45:37.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:37.580" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:37.580" starttime="20201028 13:45:37.579"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:37.583" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:37.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:37.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:37.600" starttime="20201028 13:45:37.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.600" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:37.601" starttime="20201028 13:45:37.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:37.601" starttime="20201028 13:45:37.601"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.601" starttime="20201028 13:45:37.581"></status>
</kw>
<msg timestamp="20201028 13:45:37.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:37.602" starttime="20201028 13:45:37.581"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.602" starttime="20201028 13:45:37.580"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.602" starttime="20201028 13:45:37.580"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.602" starttime="20201028 13:45:37.570"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.602" starttime="20201028 13:45:37.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:37.607" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:37.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:37.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:37.611" starttime="20201028 13:45:37.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.612" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:37.612" starttime="20201028 13:45:37.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:37.612" starttime="20201028 13:45:37.612"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.613" starttime="20201028 13:45:37.604"></status>
</kw>
<msg timestamp="20201028 13:45:37.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:37.613" starttime="20201028 13:45:37.604"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.613" starttime="20201028 13:45:37.603"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:37.618" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:37.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:37.619" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:37.619" starttime="20201028 13:45:37.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.620" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:37.620" starttime="20201028 13:45:37.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:37.621" starttime="20201028 13:45:37.621"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.621" starttime="20201028 13:45:37.615"></status>
</kw>
<msg timestamp="20201028 13:45:37.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:37.621" starttime="20201028 13:45:37.614"></status>
</kw>
<msg timestamp="20201028 13:45:37.622" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:37.622" starttime="20201028 13:45:37.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:37.622" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:37.622" starttime="20201028 13:45:37.622"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:37.627" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:37.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:37.642" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:37.642" starttime="20201028 13:45:37.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.643" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:37.643" starttime="20201028 13:45:37.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:37.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:37.644" starttime="20201028 13:45:37.643"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.644" starttime="20201028 13:45:37.624"></status>
</kw>
<msg timestamp="20201028 13:45:37.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:37.644" starttime="20201028 13:45:37.624"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.644" starttime="20201028 13:45:37.623"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.644" starttime="20201028 13:45:37.623"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.644" starttime="20201028 13:45:37.614"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:37.645" starttime="20201028 13:45:37.613"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:37.647" level="INFO">Running command 'ozone sh key list 15590-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:40.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:45:40.669" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:40.669" starttime="20201028 13:45:37.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.670" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201028 13:45:40.670" starttime="20201028 13:45:40.670"></status>
</kw>
<msg timestamp="20201028 13:45:40.671" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:40.671" starttime="20201028 13:45:37.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:40.671" starttime="20201028 13:45:40.671"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.671" starttime="20201028 13:45:37.603"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.672" starttime="20201028 13:45:37.603"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:45:40.672" critical="yes" starttime="20201028 13:45:37.569"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:40.678" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:40.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:40.680" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:40.680" starttime="20201028 13:45:40.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.680" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:40.680" starttime="20201028 13:45:40.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:40.681" starttime="20201028 13:45:40.681"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.681" starttime="20201028 13:45:40.675"></status>
</kw>
<msg timestamp="20201028 13:45:40.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:40.681" starttime="20201028 13:45:40.674"></status>
</kw>
<msg timestamp="20201028 13:45:40.682" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:40.682" starttime="20201028 13:45:40.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:40.682" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:40.682" starttime="20201028 13:45:40.682"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:40.686" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:40.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:40.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:40.709" starttime="20201028 13:45:40.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.710" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:40.710" starttime="20201028 13:45:40.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:40.711" starttime="20201028 13:45:40.711"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.711" starttime="20201028 13:45:40.683"></status>
</kw>
<msg timestamp="20201028 13:45:40.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:40.712" starttime="20201028 13:45:40.683"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.712" starttime="20201028 13:45:40.683"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.712" starttime="20201028 13:45:40.682"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.712" starttime="20201028 13:45:40.674"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.712" starttime="20201028 13:45:40.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:40.718" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:40.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:40.720" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:40.720" starttime="20201028 13:45:40.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.721" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:40.721" starttime="20201028 13:45:40.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:40.721" starttime="20201028 13:45:40.721"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.721" starttime="20201028 13:45:40.714"></status>
</kw>
<msg timestamp="20201028 13:45:40.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:40.722" starttime="20201028 13:45:40.714"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.722" starttime="20201028 13:45:40.713"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:40.726" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:40.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:40.728" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:40.728" starttime="20201028 13:45:40.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.728" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:40.729" starttime="20201028 13:45:40.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:40.729" starttime="20201028 13:45:40.729"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.729" starttime="20201028 13:45:40.723"></status>
</kw>
<msg timestamp="20201028 13:45:40.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:40.730" starttime="20201028 13:45:40.723"></status>
</kw>
<msg timestamp="20201028 13:45:40.730" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:40.730" starttime="20201028 13:45:40.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:40.730" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:40.730" starttime="20201028 13:45:40.730"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:40.735" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:40.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:40.751" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:40.751" starttime="20201028 13:45:40.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.751" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:40.752" starttime="20201028 13:45:40.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:40.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:40.752" starttime="20201028 13:45:40.752"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.752" starttime="20201028 13:45:40.732"></status>
</kw>
<msg timestamp="20201028 13:45:40.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:40.752" starttime="20201028 13:45:40.732"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.753" starttime="20201028 13:45:40.731"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.753" starttime="20201028 13:45:40.731"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.753" starttime="20201028 13:45:40.722"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:40.753" starttime="20201028 13:45:40.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:40.757" level="INFO">Running command 'ozone sh bucket info 15590-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:44.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:44.158" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:44.158" starttime="20201028 13:45:40.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:44.159" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:43:43.669Z",
  "modificationTime" : "2020-10-28T13:44:00.952Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 13:45:44.159" starttime="20201028 13:45:44.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:44.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:44.160" starttime="20201028 13:45:44.160"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:44.160" starttime="20201028 13:45:40.753"></status>
</kw>
<msg timestamp="20201028 13:45:44.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:44.160" starttime="20201028 13:45:40.753"></status>
</kw>
<msg timestamp="20201028 13:45:44.161" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:44.161" starttime="20201028 13:45:40.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:44.161" starttime="20201028 13:45:44.161"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:44.162" starttime="20201028 13:45:44.161"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:44.165" level="INFO">Running command 'ozone sh key list 15590-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:47.486" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:45:47.487" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:47.487" starttime="20201028 13:45:44.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:47.488" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201028 13:45:47.488" starttime="20201028 13:45:47.487"></status>
</kw>
<msg timestamp="20201028 13:45:47.488" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:47.488" starttime="20201028 13:45:44.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201028 13:45:47.489" starttime="20201028 13:45:47.488"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.489" starttime="20201028 13:45:40.713"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.489" starttime="20201028 13:45:40.712"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:45:47.489" critical="yes" starttime="20201028 13:45:40.673"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:47.495" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:47.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:47.498" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:45:47.498" starttime="20201028 13:45:47.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:47.499" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:45:47.499" starttime="20201028 13:45:47.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:47.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:47.500" starttime="20201028 13:45:47.499"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.500" starttime="20201028 13:45:47.493"></status>
</kw>
<msg timestamp="20201028 13:45:47.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:47.500" starttime="20201028 13:45:47.492"></status>
</kw>
<msg timestamp="20201028 13:45:47.500" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:45:47.500" starttime="20201028 13:45:47.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:45:47.501" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:45:47.501" starttime="20201028 13:45:47.500"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:47.505" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:47.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:47.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:45:47.517" starttime="20201028 13:45:47.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:47.518" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:45:47.518" starttime="20201028 13:45:47.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:47.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:47.518" starttime="20201028 13:45:47.518"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.518" starttime="20201028 13:45:47.502"></status>
</kw>
<msg timestamp="20201028 13:45:47.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:47.519" starttime="20201028 13:45:47.502"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.519" starttime="20201028 13:45:47.501"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.519" starttime="20201028 13:45:47.501"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.519" starttime="20201028 13:45:47.492"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:47.519" starttime="20201028 13:45:47.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:47.523" level="INFO">Running command 'ozone sh bucket link 15590-target/loop1 15590-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:50.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:50.637" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:50.637" starttime="20201028 13:45:47.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:50.638" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:45:50.638" starttime="20201028 13:45:50.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:50.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:50.639" starttime="20201028 13:45:50.638"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:50.639" starttime="20201028 13:45:47.520"></status>
</kw>
<msg timestamp="20201028 13:45:50.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:50.639" starttime="20201028 13:45:47.520"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:50.640" starttime="20201028 13:45:47.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:50.644" level="INFO">Running command 'ozone sh bucket link 15590-target/loop2 15590-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:53.975" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:53.975" starttime="20201028 13:45:50.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:53.976" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:45:53.976" starttime="20201028 13:45:53.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:53.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:53.977" starttime="20201028 13:45:53.976"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:53.977" starttime="20201028 13:45:50.641"></status>
</kw>
<msg timestamp="20201028 13:45:53.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:53.977" starttime="20201028 13:45:50.640"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:53.977" starttime="20201028 13:45:50.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:53.981" level="INFO">Running command 'ozone sh bucket link 15590-target/loop3 15590-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:45:57.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:45:57.072" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:45:57.072" starttime="20201028 13:45:53.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:45:57.073" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:45:57.074" starttime="20201028 13:45:57.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:45:57.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:45:57.074" starttime="20201028 13:45:57.074"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:57.074" starttime="20201028 13:45:53.978"></status>
</kw>
<msg timestamp="20201028 13:45:57.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:45:57.075" starttime="20201028 13:45:53.978"></status>
</kw>
<status status="PASS" endtime="20201028 13:45:57.075" starttime="20201028 13:45:53.978"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:45:57.078" level="INFO">Running command 'ozone sh key list 15590-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:00.876" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:46:00.876" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:00.876" starttime="20201028 13:45:57.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:00.877" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201028 13:46:00.877" starttime="20201028 13:46:00.876"></status>
</kw>
<msg timestamp="20201028 13:46:00.877" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:00.877" starttime="20201028 13:45:57.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201028 13:46:00.878" starttime="20201028 13:46:00.878"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:46:00.878" critical="yes" starttime="20201028 13:45:47.490"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:00.885" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:00.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:00.889" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:46:00.889" starttime="20201028 13:46:00.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:00.890" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:46:00.890" starttime="20201028 13:46:00.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:00.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:00.891" starttime="20201028 13:46:00.891"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:00.891" starttime="20201028 13:46:00.882"></status>
</kw>
<msg timestamp="20201028 13:46:00.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:00.892" starttime="20201028 13:46:00.882"></status>
</kw>
<msg timestamp="20201028 13:46:00.892" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:46:00.892" starttime="20201028 13:46:00.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:46:00.892" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:46:00.893" starttime="20201028 13:46:00.892"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:00.897" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:00.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:00.906" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:46:00.906" starttime="20201028 13:46:00.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:00.907" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:46:00.907" starttime="20201028 13:46:00.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:00.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:00.908" starttime="20201028 13:46:00.908"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:00.908" starttime="20201028 13:46:00.894"></status>
</kw>
<msg timestamp="20201028 13:46:00.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:00.909" starttime="20201028 13:46:00.894"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:00.909" starttime="20201028 13:46:00.893"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:00.909" starttime="20201028 13:46:00.893"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:00.909" starttime="20201028 13:46:00.881"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:00.909" starttime="20201028 13:46:00.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:00.913" level="INFO">Running command 'ozone sh bucket link 15590-source/bucket1 15590-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:04.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:04.009" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:04.009" starttime="20201028 13:46:00.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:04.010" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:46:04.010" starttime="20201028 13:46:04.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:04.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:04.011" starttime="20201028 13:46:04.010"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:04.011" starttime="20201028 13:46:00.910"></status>
</kw>
<msg timestamp="20201028 13:46:04.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:04.012" starttime="20201028 13:46:00.910"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:04.012" starttime="20201028 13:46:00.909"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:04.017" level="INFO">Running command 'ozone sh key put 15590-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:09.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:09.432" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:09.432" starttime="20201028 13:46:04.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:09.433" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:46:09.433" starttime="20201028 13:46:09.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:09.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:09.434" starttime="20201028 13:46:09.433"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:09.434" starttime="20201028 13:46:04.013"></status>
</kw>
<msg timestamp="20201028 13:46:09.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:09.434" starttime="20201028 13:46:04.012"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:09.434" starttime="20201028 13:46:04.012"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201028 13:46:09.437" level="INFO">${postfix} = 85267</msg>
<status status="PASS" endtime="20201028 13:46:09.437" starttime="20201028 13:46:09.436"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201028 13:46:09.437" level="INFO">${tmpfile} = /tmp/tempkey-85267</msg>
<status status="PASS" endtime="20201028 13:46:09.437" starttime="20201028 13:46:09.437"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:09.442" level="INFO">Running command 'ozone sh key get -f 15590-target/link1/key3 /tmp/tempkey-85267 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:15.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:15.024" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:15.024" starttime="20201028 13:46:09.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.025" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:46:15.025" starttime="20201028 13:46:15.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:15.026" starttime="20201028 13:46:15.025"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.026" starttime="20201028 13:46:09.438"></status>
</kw>
<msg timestamp="20201028 13:46:15.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:15.026" starttime="20201028 13:46:09.438"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.027" starttime="20201028 13:46:09.437"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201028 13:46:15.029" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-85267 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:15.031" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201028 13:46:15.031" starttime="20201028 13:46:15.027"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:15.036" level="INFO">Running command 'rm -f /tmp/tempkey-85267 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:15.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:15.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:46:15.039" starttime="20201028 13:46:15.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.040" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:46:15.040" starttime="20201028 13:46:15.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:15.040" starttime="20201028 13:46:15.040"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.041" starttime="20201028 13:46:15.033"></status>
</kw>
<msg timestamp="20201028 13:46:15.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:15.041" starttime="20201028 13:46:15.033"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.041" starttime="20201028 13:46:15.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:46:15.041" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201028 13:46:15.042" starttime="20201028 13:46:15.041"></status>
</kw>
<msg timestamp="20201028 13:46:15.042" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201028 13:46:15.042" starttime="20201028 13:46:09.435"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:46:15.042" starttime="20201028 13:46:15.042"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.042" starttime="20201028 13:46:09.435"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:46:15.043" critical="yes" starttime="20201028 13:46:00.879"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:15.048" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:15.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:15.051" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 13:46:15.051" starttime="20201028 13:46:15.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.052" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 13:46:15.052" starttime="20201028 13:46:15.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:15.053" starttime="20201028 13:46:15.052"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.053" starttime="20201028 13:46:15.046"></status>
</kw>
<msg timestamp="20201028 13:46:15.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:15.053" starttime="20201028 13:46:15.045"></status>
</kw>
<msg timestamp="20201028 13:46:15.053" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 13:46:15.053" starttime="20201028 13:46:15.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 13:46:15.054" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 13:46:15.054" starttime="20201028 13:46:15.054"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:15.059" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:15.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:15.076" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:46:15.076" starttime="20201028 13:46:15.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.077" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:46:15.077" starttime="20201028 13:46:15.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:15.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:15.078" starttime="20201028 13:46:15.077"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.078" starttime="20201028 13:46:15.055"></status>
</kw>
<msg timestamp="20201028 13:46:15.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:15.078" starttime="20201028 13:46:15.055"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.078" starttime="20201028 13:46:15.055"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.078" starttime="20201028 13:46:15.054"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.079" starttime="20201028 13:46:15.045"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:15.079" starttime="20201028 13:46:15.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:15.083" level="INFO">Running command 'ozone sh bucket delete 15590-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:18.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:18.387" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:18.387" starttime="20201028 13:46:15.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:18.388" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 13:46:18.388" starttime="20201028 13:46:18.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:18.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:18.389" starttime="20201028 13:46:18.389"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:18.389" starttime="20201028 13:46:15.080"></status>
</kw>
<msg timestamp="20201028 13:46:18.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:18.390" starttime="20201028 13:46:15.079"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:18.390" starttime="20201028 13:46:15.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:18.394" level="INFO">Running command 'ozone sh bucket list 15590-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:22.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:22.312" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:22.312" starttime="20201028 13:46:18.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:22.314" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:45:30.199Z",
  "modificationTime" : "2020-10-28T13:45:30.199Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:44:04.305Z",
  "modificationTime" : "2020-10-28T13:44:04.305Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:43:43.669Z",
  "modificationTime" : "2020-10-28T13:44:00.952Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:45:23.497Z",
  "modificationTime" : "2020-10-28T13:45:23.497Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:46:03.864Z",
  "modificationTime" : "2020-10-28T13:46:03.864Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:45:57.013Z",
  "modificationTime" : "2020-10-28T13:45:57.013Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:45:50.488Z",
  "modificationTime" : "2020-10-28T13:45:50.488Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:45:53.807Z",
  "modificationTime" : "2020-10-28T13:45:53.807Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:43:37.578Z",
  "modificationTime" : "2020-10-28T13:43:57.307Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "15590-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:43:40.541Z",
  "modificationTime" : "2020-10-28T13:43:40.541Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "15590-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 13:46:22.314" starttime="20201028 13:46:22.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:22.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:22.315" starttime="20201028 13:46:22.314"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:22.315" starttime="20201028 13:46:18.391"></status>
</kw>
<msg timestamp="20201028 13:46:22.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:22.315" starttime="20201028 13:46:18.391"></status>
</kw>
<msg timestamp="20201028 13:46:22.316" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 13:46:22.316" starttime="20201028 13:46:18.390"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:46:22.316" starttime="20201028 13:46:22.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:46:22.322" level="INFO">Running command 'ozone sh key list 15590-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:46:25.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:46:25.816" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201028 13:46:25.816" starttime="20201028 13:46:22.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:46:25.818" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201028 13:46:25.818" starttime="20201028 13:46:25.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:46:25.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:46:25.818" starttime="20201028 13:46:25.818"></status>
</kw>
<status status="PASS" endtime="20201028 13:46:25.819" starttime="20201028 13:46:22.317"></status>
</kw>
<msg timestamp="20201028 13:46:25.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:46:25.819" starttime="20201028 13:46:22.317"></status>
</kw>
<msg timestamp="20201028 13:46:25.819" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201028 13:46:25.819" starttime="20201028 13:46:22.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201028 13:46:25.820" starttime="20201028 13:46:25.819"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:46:25.820" critical="yes" starttime="20201028 13:46:15.043"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201028 13:46:25.823" starttime="20201028 13:43:15.908"></status>
</suite>
<status status="PASS" elapsedtime="217422" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
