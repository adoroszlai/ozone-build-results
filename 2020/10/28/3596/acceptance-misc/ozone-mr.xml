<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 13:24:12.962" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:11:43.159" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:11:45.273" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:11:45.273" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:11:45.273" starttime="20201028 13:11:43.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:11:45.274" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:11:45.274" starttime="20201028 13:11:45.273"></status>
</kw>
<msg timestamp="20201028 13:11:45.274" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:11:45.274" starttime="20201028 13:11:43.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:11:45.280" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:11:47.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:11:47.044" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:11:47.044" starttime="20201028 13:11:45.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:11:47.045" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:11:47.045" starttime="20201028 13:11:47.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:11:47.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:11:47.046" starttime="20201028 13:11:47.045"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:47.046" starttime="20201028 13:11:45.276"></status>
</kw>
<msg timestamp="20201028 13:11:47.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:11:47.046" starttime="20201028 13:11:45.276"></status>
</kw>
<msg timestamp="20201028 13:11:47.047" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 13:11:47.047" starttime="20201028 13:11:45.276"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:11:47.047" starttime="20201028 13:11:47.047"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:47.047" starttime="20201028 13:11:45.275"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:47.047" starttime="20201028 13:11:45.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:11:47.052" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:11:48.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:11:48.946" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:11:48.946" starttime="20201028 13:11:47.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:11:48.947" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:11:48.947" starttime="20201028 13:11:48.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:11:48.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:11:48.947" starttime="20201028 13:11:48.947"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:48.948" starttime="20201028 13:11:47.049"></status>
</kw>
<msg timestamp="20201028 13:11:48.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:11:48.948" starttime="20201028 13:11:47.049"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:48.948" starttime="20201028 13:11:47.048"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:48.948" starttime="20201028 13:11:47.048"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:48.948" starttime="20201028 13:11:47.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 13:11:48.949" starttime="20201028 13:11:48.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:11:48.953" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:11:50.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:11:50.902" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:11:48.913Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 13:11:50.902" starttime="20201028 13:11:48.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:11:50.903" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:11:48.913Z",
  "modificationTime" : "2020-10-28T13:11:48.913Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 13:11:50.903" starttime="20201028 13:11:50.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:11:50.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:11:50.904" starttime="20201028 13:11:50.903"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:50.904" starttime="20201028 13:11:48.949"></status>
</kw>
<msg timestamp="20201028 13:11:50.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:11:50.904" starttime="20201028 13:11:48.949"></status>
</kw>
<msg timestamp="20201028 13:11:50.904" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:11:48.913Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 13:11:50.904" starttime="20201028 13:11:48.949"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 13:11:50.905" starttime="20201028 13:11:50.905"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:11:50.909" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:11:50.909" starttime="20201028 13:11:50.908"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:11:50.909" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:11:50.909" starttime="20201028 13:11:50.909"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:50.909" starttime="20201028 13:11:50.908"></status>
</kw>
<msg timestamp="20201028 13:11:50.909" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:11:50.909" starttime="20201028 13:11:50.907"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:50.910" starttime="20201028 13:11:50.907"></status>
</kw>
<msg timestamp="20201028 13:11:50.910" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 13:11:50.910" starttime="20201028 13:11:50.906"></status>
</kw>
<msg timestamp="20201028 13:11:50.910" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 13:11:50.910" starttime="20201028 13:11:50.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:11:50.913" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:11:52.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:11:52.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:11:52.959" starttime="20201028 13:11:50.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:11:52.960" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:11:52.960" starttime="20201028 13:11:52.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:11:52.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:11:52.961" starttime="20201028 13:11:52.960"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:52.961" starttime="20201028 13:11:50.911"></status>
</kw>
<msg timestamp="20201028 13:11:52.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:11:52.961" starttime="20201028 13:11:50.910"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:52.961" starttime="20201028 13:11:50.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:11:52.965" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:11:57.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:11:57.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:11:57.886" starttime="20201028 13:11:52.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:11:57.887" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:11:57.887" starttime="20201028 13:11:57.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:11:57.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:11:57.888" starttime="20201028 13:11:57.887"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:57.888" starttime="20201028 13:11:52.962"></status>
</kw>
<msg timestamp="20201028 13:11:57.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:11:57.888" starttime="20201028 13:11:52.962"></status>
</kw>
<status status="PASS" endtime="20201028 13:11:57.889" starttime="20201028 13:11:52.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:11:57.892" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:12:02.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:12:02.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:12:02.102" starttime="20201028 13:11:57.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:12:02.103" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:12:02.104" starttime="20201028 13:12:02.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:12:02.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:12:02.104" starttime="20201028 13:12:02.104"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:02.104" starttime="20201028 13:11:57.890"></status>
</kw>
<msg timestamp="20201028 13:12:02.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:12:02.105" starttime="20201028 13:11:57.889"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:02.105" starttime="20201028 13:11:57.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:12:02.109" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:12:05.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:12:05.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:12:05.860" starttime="20201028 13:12:02.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:12:05.861" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:12:05.861" starttime="20201028 13:12:05.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:12:05.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:12:05.861" starttime="20201028 13:12:05.861"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:05.862" starttime="20201028 13:12:02.106"></status>
</kw>
<msg timestamp="20201028 13:12:05.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:12:05.862" starttime="20201028 13:12:02.106"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:05.862" starttime="20201028 13:12:02.105"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:12:05.862" critical="yes" starttime="20201028 13:11:43.148"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:12:05.867" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:12:05.867" starttime="20201028 13:12:05.866"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:12:05.868" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:12:05.868" starttime="20201028 13:12:05.867"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:05.868" starttime="20201028 13:12:05.866"></status>
</kw>
<msg timestamp="20201028 13:12:05.868" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:12:05.868" starttime="20201028 13:12:05.866"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:05.868" starttime="20201028 13:12:05.865"></status>
</kw>
<msg timestamp="20201028 13:12:05.868" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:12:05.868" starttime="20201028 13:12:05.864"></status>
</kw>
<msg timestamp="20201028 13:12:05.869" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:12:05.869" starttime="20201028 13:12:05.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:12:05.872" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:12:07.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:12:07.852" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:12:07.852" starttime="20201028 13:12:05.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:12:07.853" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:12:07.853" starttime="20201028 13:12:07.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:12:07.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:12:07.853" starttime="20201028 13:12:07.853"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:07.854" starttime="20201028 13:12:05.869"></status>
</kw>
<msg timestamp="20201028 13:12:07.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:12:07.854" starttime="20201028 13:12:05.869"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:07.854" starttime="20201028 13:12:05.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:12:07.858" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:12:09.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:12:09.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:12:09.851" starttime="20201028 13:12:07.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:12:09.852" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:12:09.852" starttime="20201028 13:12:09.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:12:09.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:12:09.853" starttime="20201028 13:12:09.852"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:09.853" starttime="20201028 13:12:07.855"></status>
</kw>
<msg timestamp="20201028 13:12:09.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:12:09.853" starttime="20201028 13:12:07.855"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:09.853" starttime="20201028 13:12:07.854"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:12:09.854" critical="yes" starttime="20201028 13:12:05.863"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201028 13:12:09.855" starttime="20201028 13:11:43.101"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:13:41.642" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:13:41.642" starttime="20201028 13:13:41.642"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:13:41.642" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:13:41.642" starttime="20201028 13:13:41.642"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:41.643" starttime="20201028 13:13:41.641"></status>
</kw>
<msg timestamp="20201028 13:13:41.643" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:13:41.643" starttime="20201028 13:13:41.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:13:41.644" starttime="20201028 13:13:41.643"></status>
</kw>
<msg timestamp="20201028 13:13:41.644" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:13:41.644" starttime="20201028 13:13:41.643"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:41.644" starttime="20201028 13:13:41.640"></status>
</kw>
<msg timestamp="20201028 13:13:41.644" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:13:41.644" starttime="20201028 13:13:41.640"></status>
</kw>
<msg timestamp="20201028 13:13:41.644" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:13:41.644" starttime="20201028 13:13:41.639"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:13:41.644" level="INFO">${random} = 78392</msg>
<status status="PASS" endtime="20201028 13:13:41.645" starttime="20201028 13:13:41.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:13:41.650" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-78392 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:13:44.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:13:44.601" level="INFO">${output} = 2020-10-28 13:13:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:13:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 13:13:44.601" starttime="20201028 13:13:41.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:13:44.603" level="INFO">2020-10-28 13:13:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:13:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 13:13:43 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 13:13:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:13:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A7650E8049F5-&gt;e2a8a52e-f619-4673-83ef-600e70af33fe
2020-10-28 13:13:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 13:13:44.603" starttime="20201028 13:13:44.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:13:44.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:13:44.604" starttime="20201028 13:13:44.603"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:44.604" starttime="20201028 13:13:41.645"></status>
</kw>
<msg timestamp="20201028 13:13:44.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:13:44.605" starttime="20201028 13:13:41.645"></status>
</kw>
<msg timestamp="20201028 13:13:44.605" level="INFO">${result} = 2020-10-28 13:13:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:13:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 13:13:44.605" starttime="20201028 13:13:41.645"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:13:44.610" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:13:46.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:13:46.277" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:11 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 13:12 ofs://om/volume1/bucket1/ozone-18258
-rw-...</msg>
<status status="PASS" endtime="20201028 13:13:46.277" starttime="20201028 13:13:44.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:13:46.278" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:11 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 13:12 ofs://om/volume1/bucket1/ozone-18258
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 13:13 ofs://om/volume1/bucket1/ozone-78392
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:12 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:13 ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20201028 13:13:46.278" starttime="20201028 13:13:46.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:13:46.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:13:46.279" starttime="20201028 13:13:46.278"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:46.279" starttime="20201028 13:13:44.606"></status>
</kw>
<msg timestamp="20201028 13:13:46.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:13:46.279" starttime="20201028 13:13:44.606"></status>
</kw>
<msg timestamp="20201028 13:13:46.279" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:11 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 13:12 ofs://om/volume1/bucket1/ozone-18258
-rw-...</msg>
<status status="PASS" endtime="20201028 13:13:46.279" starttime="20201028 13:13:44.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:13:46.280" starttime="20201028 13:13:46.279"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:13:46.280" critical="yes" starttime="20201028 13:13:41.638"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 13:13:46.281" starttime="20201028 13:13:41.596"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:12:14.358" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:12:14.358" starttime="20201028 13:12:14.357"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:12:14.358" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:12:14.358" starttime="20201028 13:12:14.358"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:14.359" starttime="20201028 13:12:14.357"></status>
</kw>
<msg timestamp="20201028 13:12:14.359" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:12:14.359" starttime="20201028 13:12:14.357"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:14.359" starttime="20201028 13:12:14.356"></status>
</kw>
<msg timestamp="20201028 13:12:14.359" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:12:14.359" starttime="20201028 13:12:14.356"></status>
</kw>
<msg timestamp="20201028 13:12:14.359" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:12:14.359" starttime="20201028 13:12:14.355"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:12:14.360" level="INFO">${random} = 18258</msg>
<status status="PASS" endtime="20201028 13:12:14.360" starttime="20201028 13:12:14.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:12:14.365" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-18258 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:12:17.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:12:17.877" level="INFO">${output} = 2020-10-28 13:12:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:12:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 13:12:17.877" starttime="20201028 13:12:14.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:12:17.879" level="INFO">2020-10-28 13:12:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:12:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 13:12:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 13:12:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:12:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C4BCE2A5D450-&gt;e2a8a52e-f619-4673-83ef-600e70af33fe
2020-10-28 13:12:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 13:12:17.879" starttime="20201028 13:12:17.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:12:17.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:12:17.880" starttime="20201028 13:12:17.879"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:17.880" starttime="20201028 13:12:14.360"></status>
</kw>
<msg timestamp="20201028 13:12:17.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:12:17.880" starttime="20201028 13:12:14.360"></status>
</kw>
<msg timestamp="20201028 13:12:17.881" level="INFO">${result} = 2020-10-28 13:12:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:12:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 13:12:17.881" starttime="20201028 13:12:14.360"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:12:17.884" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:12:19.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:12:19.614" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:11 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 13:12 o3fs://bucket1.volume1.om/ozone-18258
dr...</msg>
<status status="PASS" endtime="20201028 13:12:19.615" starttime="20201028 13:12:17.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:12:19.616" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:11 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 13:12 o3fs://bucket1.volume1.om/ozone-18258
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:12 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:12:19.616" starttime="20201028 13:12:19.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:12:19.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:12:19.616" starttime="20201028 13:12:19.616"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:19.617" starttime="20201028 13:12:17.882"></status>
</kw>
<msg timestamp="20201028 13:12:19.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:12:19.617" starttime="20201028 13:12:17.881"></status>
</kw>
<msg timestamp="20201028 13:12:19.617" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:11 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 13:12 o3fs://bucket1.volume1.om/ozone-18258
dr...</msg>
<status status="PASS" endtime="20201028 13:12:19.617" starttime="20201028 13:12:17.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:12:19.617" starttime="20201028 13:12:19.617"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:12:19.618" critical="yes" starttime="20201028 13:12:14.354"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 13:12:19.619" starttime="20201028 13:12:14.310"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:13:50.646" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:13:50.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:13:50.650" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:50.650" starttime="20201028 13:13:50.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:13:50.651" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:50.651" starttime="20201028 13:13:50.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:13:50.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:13:50.652" starttime="20201028 13:13:50.651"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:50.652" starttime="20201028 13:13:50.641"></status>
</kw>
<msg timestamp="20201028 13:13:50.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:13:50.652" starttime="20201028 13:13:50.640"></status>
</kw>
<msg timestamp="20201028 13:13:50.652" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:50.652" starttime="20201028 13:13:50.640"></status>
</kw>
<msg timestamp="20201028 13:13:50.652" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:50.652" starttime="20201028 13:13:50.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:13:50.655" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:13:50.655" starttime="20201028 13:13:50.655"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:13:50.656" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:13:50.656" starttime="20201028 13:13:50.656"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:50.656" starttime="20201028 13:13:50.655"></status>
</kw>
<msg timestamp="20201028 13:13:50.656" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:13:50.656" starttime="20201028 13:13:50.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:13:50.657" starttime="20201028 13:13:50.657"></status>
</kw>
<msg timestamp="20201028 13:13:50.657" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:13:50.657" starttime="20201028 13:13:50.657"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:50.658" starttime="20201028 13:13:50.654"></status>
</kw>
<msg timestamp="20201028 13:13:50.658" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:13:50.658" starttime="20201028 13:13:50.653"></status>
</kw>
<msg timestamp="20201028 13:13:50.658" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:13:50.658" starttime="20201028 13:13:50.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:13:50.661" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:14:26.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:14:26.822" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:13:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:13:52 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 13:14:26.822" starttime="20201028 13:13:50.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:14:26.823" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:13:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:13:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 13:13:52 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 13:13:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:13:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4213CD3FF65-&gt;e2a8a52e-f619-4673-83ef-600e70af33fe
2020-10-28 13:13:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 13:13:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:13:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:13:53 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 13:13:56 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 13:13:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603890675256_0003
2020-10-28 13:13:56 INFO  YarnClientImpl:273 - Submitted application application_1603890675256_0003
2020-10-28 13:13:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603890675256_0003/
2020-10-28 13:13:56 INFO  Job:1339 - Running job: job_1603890675256_0003
2020-10-28 13:14:04 INFO  Job:1360 - Job job_1603890675256_0003 running in uber mode : false
2020-10-28 13:14:04 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 13:14:10 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 13:14:15 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 13:14:19 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 13:14:23 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 13:14:26 INFO  Job:1378 - Job job_1603890675256_0003 completed successfully
2020-10-28 13:14:26 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35880
		Total time spent by all reduces in occupied slots (ms)=13008
		Total time spent by all map tasks (ms)=8970
		Total time spent by all reduce tasks (ms)=3252
		Total vcore-milliseconds taken by all map tasks=8970
		Total vcore-milliseconds taken by all reduce tasks=3252
		Total megabyte-milliseconds taken by all map tasks=36741120
		Total megabyte-milliseconds taken by all reduce tasks=13320192
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=581
		CPU time spent (ms)=6430
		Physical memory (bytes) snapshot=1143296000
		Virtual memory (bytes) snapshot=16062963712
		Total committed heap usage (bytes)=1055391744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.699 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 13:14:26.823" starttime="20201028 13:14:26.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:14:26.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:14:26.824" starttime="20201028 13:14:26.824"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.824" starttime="20201028 13:13:50.659"></status>
</kw>
<msg timestamp="20201028 13:14:26.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:14:26.825" starttime="20201028 13:13:50.658"></status>
</kw>
<msg timestamp="20201028 13:14:26.825" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:13:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:13:52 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 13:14:26.825" starttime="20201028 13:13:50.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:14:26.825" starttime="20201028 13:14:26.825"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:14:26.826" critical="yes" starttime="20201028 13:13:50.639"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:14:26.830" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:14:26.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:14:26.837" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:14:26.837" starttime="20201028 13:14:26.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:14:26.838" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:14:26.838" starttime="20201028 13:14:26.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:14:26.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:14:26.839" starttime="20201028 13:14:26.838"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.839" starttime="20201028 13:14:26.828"></status>
</kw>
<msg timestamp="20201028 13:14:26.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:14:26.839" starttime="20201028 13:14:26.828"></status>
</kw>
<msg timestamp="20201028 13:14:26.839" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:14:26.840" starttime="20201028 13:14:26.827"></status>
</kw>
<msg timestamp="20201028 13:14:26.840" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:14:26.840" starttime="20201028 13:14:26.827"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:14:26.840" level="INFO">${random} = 18</msg>
<status status="PASS" endtime="20201028 13:14:26.840" starttime="20201028 13:14:26.840"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:14:26.844" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:14:26.844" starttime="20201028 13:14:26.844"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:14:26.844" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:14:26.844" starttime="20201028 13:14:26.844"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.845" starttime="20201028 13:14:26.843"></status>
</kw>
<msg timestamp="20201028 13:14:26.845" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:14:26.845" starttime="20201028 13:14:26.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:14:26.846" starttime="20201028 13:14:26.845"></status>
</kw>
<msg timestamp="20201028 13:14:26.846" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:14:26.846" starttime="20201028 13:14:26.845"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.846" starttime="20201028 13:14:26.842"></status>
</kw>
<msg timestamp="20201028 13:14:26.846" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:14:26.846" starttime="20201028 13:14:26.841"></status>
</kw>
<msg timestamp="20201028 13:14:26.846" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:14:26.846" starttime="20201028 13:14:26.840"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:14:26.849" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:14:26.849" starttime="20201028 13:14:26.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:14:26.850" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:14:26.850" starttime="20201028 13:14:26.849"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.850" starttime="20201028 13:14:26.848"></status>
</kw>
<msg timestamp="20201028 13:14:26.850" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:14:26.850" starttime="20201028 13:14:26.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:14:26.851" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201028 13:14:26.851" starttime="20201028 13:14:26.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:14:26.852" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201028 13:14:26.852" starttime="20201028 13:14:26.851"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.852" starttime="20201028 13:14:26.850"></status>
</kw>
<msg timestamp="20201028 13:14:26.852" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201028 13:14:26.852" starttime="20201028 13:14:26.850"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.852" starttime="20201028 13:14:26.847"></status>
</kw>
<msg timestamp="20201028 13:14:26.852" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 13:14:26.852" starttime="20201028 13:14:26.847"></status>
</kw>
<msg timestamp="20201028 13:14:26.853" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 13:14:26.853" starttime="20201028 13:14:26.846"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:14:26.856" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:14:26.856" starttime="20201028 13:14:26.855"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:14:26.856" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:14:26.856" starttime="20201028 13:14:26.856"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.856" starttime="20201028 13:14:26.855"></status>
</kw>
<msg timestamp="20201028 13:14:26.856" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:14:26.856" starttime="20201028 13:14:26.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:14:26.858" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201028 13:14:26.858" starttime="20201028 13:14:26.857"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:14:26.858" level="INFO">${result} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201028 13:14:26.858" starttime="20201028 13:14:26.858"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.858" starttime="20201028 13:14:26.857"></status>
</kw>
<msg timestamp="20201028 13:14:26.858" level="INFO">${path_with_leading} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201028 13:14:26.859" starttime="20201028 13:14:26.857"></status>
</kw>
<status status="PASS" endtime="20201028 13:14:26.859" starttime="20201028 13:14:26.854"></status>
</kw>
<msg timestamp="20201028 13:14:26.859" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201028 13:14:26.859" starttime="20201028 13:14:26.853"></status>
</kw>
<msg timestamp="20201028 13:14:26.859" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201028 13:14:26.859" starttime="20201028 13:14:26.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:14:26.863" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-18.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:15:00.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:15:00.069" level="INFO">${output} = 2020-10-28 13:14:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:14:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 13:15:00.069" starttime="20201028 13:14:26.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:15:00.070" level="INFO">2020-10-28 13:14:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:14:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:14:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:14:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 13:14:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 13:14:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:14:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D84F58584729-&gt;e2a8a52e-f619-4673-83ef-600e70af33fe
2020-10-28 13:14:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:14:30 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 13:14:32 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 13:14:33 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603890675256_0004
2020-10-28 13:14:33 INFO  YarnClientImpl:273 - Submitted application application_1603890675256_0004
2020-10-28 13:14:33 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603890675256_0004/
2020-10-28 13:14:33 INFO  Job:1339 - Running job: job_1603890675256_0004
2020-10-28 13:14:39 INFO  Job:1360 - Job job_1603890675256_0004 running in uber mode : false
2020-10-28 13:14:39 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 13:14:45 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 13:14:50 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 13:14:55 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 13:14:58 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 13:14:59 INFO  Job:1378 - Job job_1603890675256_0004 completed successfully
2020-10-28 13:14:59 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36340
		Total time spent by all reduces in occupied slots (ms)=13308
		Total time spent by all map tasks (ms)=9085
		Total time spent by all reduce tasks (ms)=3327
		Total vcore-milliseconds taken by all map tasks=9085
		Total vcore-milliseconds taken by all reduce tasks=3327
		Total megabyte-milliseconds taken by all map tasks=37212160
		Total megabyte-milliseconds taken by all reduce tasks=13627392
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=6560
		Physical memory (bytes) snapshot=1113923584
		Virtual memory (bytes) snapshot=16043630592
		Total committed heap usage (bytes)=1053818880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 13:15:00.070" starttime="20201028 13:15:00.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:15:00.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:15:00.071" starttime="20201028 13:15:00.070"></status>
</kw>
<status status="PASS" endtime="20201028 13:15:00.071" starttime="20201028 13:14:26.860"></status>
</kw>
<msg timestamp="20201028 13:15:00.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:15:00.071" starttime="20201028 13:14:26.860"></status>
</kw>
<msg timestamp="20201028 13:15:00.071" level="INFO">${output} = 2020-10-28 13:14:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:14:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 13:15:00.071" starttime="20201028 13:14:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 13:15:00.072" starttime="20201028 13:15:00.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:15:00.072" starttime="20201028 13:15:00.072"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:15:00.073" critical="yes" starttime="20201028 13:14:26.826"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 13:15:00.074" starttime="20201028 13:13:50.597"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:12:24.093" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:12:24.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:12:24.100" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:12:24.100" starttime="20201028 13:12:24.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:12:24.101" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:12:24.101" starttime="20201028 13:12:24.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:12:24.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:12:24.102" starttime="20201028 13:12:24.101"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:24.102" starttime="20201028 13:12:24.089"></status>
</kw>
<msg timestamp="20201028 13:12:24.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:12:24.102" starttime="20201028 13:12:24.089"></status>
</kw>
<msg timestamp="20201028 13:12:24.102" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:12:24.102" starttime="20201028 13:12:24.088"></status>
</kw>
<msg timestamp="20201028 13:12:24.102" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:12:24.102" starttime="20201028 13:12:24.088"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:12:24.105" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:12:24.105" starttime="20201028 13:12:24.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:12:24.106" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:12:24.106" starttime="20201028 13:12:24.105"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:24.106" starttime="20201028 13:12:24.104"></status>
</kw>
<msg timestamp="20201028 13:12:24.106" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:12:24.106" starttime="20201028 13:12:24.104"></status>
</kw>
<status status="PASS" endtime="20201028 13:12:24.106" starttime="20201028 13:12:24.104"></status>
</kw>
<msg timestamp="20201028 13:12:24.106" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:12:24.106" starttime="20201028 13:12:24.103"></status>
</kw>
<msg timestamp="20201028 13:12:24.106" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:12:24.107" starttime="20201028 13:12:24.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:12:24.109" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:13:05.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:13:05.687" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:12:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:12:25 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 13:13:05.687" starttime="20201028 13:12:24.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:13:05.688" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:12:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:12:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 13:12:25 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 13:12:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:12:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-186BD6AEA3ED-&gt;e2a8a52e-f619-4673-83ef-600e70af33fe
2020-10-28 13:12:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 13:12:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:12:30 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 13:12:30 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 13:12:30 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603890675256_0001
2020-10-28 13:12:30 INFO  YarnClientImpl:273 - Submitted application application_1603890675256_0001
2020-10-28 13:12:30 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603890675256_0001/
2020-10-28 13:12:30 INFO  Job:1339 - Running job: job_1603890675256_0001
2020-10-28 13:12:39 INFO  Job:1360 - Job job_1603890675256_0001 running in uber mode : false
2020-10-28 13:12:39 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 13:12:45 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 13:12:50 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 13:12:55 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 13:13:02 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 13:13:05 INFO  Job:1378 - Job job_1603890675256_0001 completed successfully
2020-10-28 13:13:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36516
		Total time spent by all reduces in occupied slots (ms)=23516
		Total time spent by all map tasks (ms)=9129
		Total time spent by all reduce tasks (ms)=5879
		Total vcore-milliseconds taken by all map tasks=9129
		Total vcore-milliseconds taken by all reduce tasks=5879
		Total megabyte-milliseconds taken by all map tasks=37392384
		Total megabyte-milliseconds taken by all reduce tasks=24080384
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=557
		CPU time spent (ms)=6360
		Physical memory (bytes) snapshot=1148989440
		Virtual memory (bytes) snapshot=16063250432
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.793 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 13:13:05.688" starttime="20201028 13:13:05.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:13:05.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:13:05.690" starttime="20201028 13:13:05.688"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.690" starttime="20201028 13:12:24.107"></status>
</kw>
<msg timestamp="20201028 13:13:05.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:13:05.690" starttime="20201028 13:12:24.107"></status>
</kw>
<msg timestamp="20201028 13:13:05.690" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:12:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:12:25 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 13:13:05.690" starttime="20201028 13:12:24.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:13:05.691" starttime="20201028 13:13:05.691"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:13:05.691" critical="yes" starttime="20201028 13:12:24.087"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:13:05.695" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:13:05.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:13:05.701" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:05.701" starttime="20201028 13:13:05.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:13:05.702" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:05.702" starttime="20201028 13:13:05.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:13:05.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:13:05.703" starttime="20201028 13:13:05.702"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.703" starttime="20201028 13:13:05.693"></status>
</kw>
<msg timestamp="20201028 13:13:05.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:13:05.703" starttime="20201028 13:13:05.693"></status>
</kw>
<msg timestamp="20201028 13:13:05.703" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:05.703" starttime="20201028 13:13:05.693"></status>
</kw>
<msg timestamp="20201028 13:13:05.703" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 13:13:05.703" starttime="20201028 13:13:05.692"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:13:05.704" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201028 13:13:05.704" starttime="20201028 13:13:05.704"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:13:05.707" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:13:05.707" starttime="20201028 13:13:05.707"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:13:05.708" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:13:05.708" starttime="20201028 13:13:05.707"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.708" starttime="20201028 13:13:05.706"></status>
</kw>
<msg timestamp="20201028 13:13:05.708" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:13:05.708" starttime="20201028 13:13:05.706"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.708" starttime="20201028 13:13:05.705"></status>
</kw>
<msg timestamp="20201028 13:13:05.708" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:13:05.708" starttime="20201028 13:13:05.705"></status>
</kw>
<msg timestamp="20201028 13:13:05.708" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:13:05.708" starttime="20201028 13:13:05.704"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:13:05.711" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:13:05.711" starttime="20201028 13:13:05.711"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:13:05.711" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:13:05.712" starttime="20201028 13:13:05.711"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.712" starttime="20201028 13:13:05.710"></status>
</kw>
<msg timestamp="20201028 13:13:05.712" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:13:05.712" starttime="20201028 13:13:05.710"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.712" starttime="20201028 13:13:05.710"></status>
</kw>
<msg timestamp="20201028 13:13:05.712" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 13:13:05.712" starttime="20201028 13:13:05.709"></status>
</kw>
<msg timestamp="20201028 13:13:05.712" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 13:13:05.712" starttime="20201028 13:13:05.709"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:13:05.715" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:13:05.715" starttime="20201028 13:13:05.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:13:05.715" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:13:05.715" starttime="20201028 13:13:05.715"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.715" starttime="20201028 13:13:05.714"></status>
</kw>
<msg timestamp="20201028 13:13:05.715" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:13:05.716" starttime="20201028 13:13:05.714"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:05.716" starttime="20201028 13:13:05.713"></status>
</kw>
<msg timestamp="20201028 13:13:05.716" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201028 13:13:05.716" starttime="20201028 13:13:05.713"></status>
</kw>
<msg timestamp="20201028 13:13:05.716" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201028 13:13:05.716" starttime="20201028 13:13:05.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:13:05.719" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:13:37.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:13:37.214" level="INFO">${output} = 2020-10-28 13:13:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:13:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 13:13:37.214" starttime="20201028 13:13:05.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:13:37.215" level="INFO">2020-10-28 13:13:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:13:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:13:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:13:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 13:13:07 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 13:13:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:13:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7C51387BE194-&gt;e2a8a52e-f619-4673-83ef-600e70af33fe
2020-10-28 13:13:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:13:08 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 13:13:09 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 13:13:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603890675256_0002
2020-10-28 13:13:09 INFO  YarnClientImpl:273 - Submitted application application_1603890675256_0002
2020-10-28 13:13:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603890675256_0002/
2020-10-28 13:13:09 INFO  Job:1339 - Running job: job_1603890675256_0002
2020-10-28 13:13:17 INFO  Job:1360 - Job job_1603890675256_0002 running in uber mode : false
2020-10-28 13:13:17 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 13:13:23 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 13:13:28 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 13:13:32 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 13:13:35 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 13:13:36 INFO  Job:1378 - Job job_1603890675256_0002 completed successfully
2020-10-28 13:13:36 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35596
		Total time spent by all reduces in occupied slots (ms)=13368
		Total time spent by all map tasks (ms)=8899
		Total time spent by all reduce tasks (ms)=3342
		Total vcore-milliseconds taken by all map tasks=8899
		Total vcore-milliseconds taken by all reduce tasks=3342
		Total megabyte-milliseconds taken by all map tasks=36450304
		Total megabyte-milliseconds taken by all reduce tasks=13688832
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=578
		CPU time spent (ms)=6670
		Physical memory (bytes) snapshot=1145516032
		Virtual memory (bytes) snapshot=16062185472
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 13:13:37.215" starttime="20201028 13:13:37.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:13:37.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:13:37.216" starttime="20201028 13:13:37.215"></status>
</kw>
<status status="PASS" endtime="20201028 13:13:37.216" starttime="20201028 13:13:05.717"></status>
</kw>
<msg timestamp="20201028 13:13:37.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:13:37.216" starttime="20201028 13:13:05.716"></status>
</kw>
<msg timestamp="20201028 13:13:37.217" level="INFO">${output} = 2020-10-28 13:13:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-28 13:13:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 13:13:37.217" starttime="20201028 13:13:05.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 13:13:37.217" starttime="20201028 13:13:37.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:13:37.218" starttime="20201028 13:13:37.217"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:13:37.218" critical="yes" starttime="20201028 13:13:05.692"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 13:13:37.219" starttime="20201028 13:12:24.045"></status>
</suite>
<status status="PASS" elapsedtime="179399" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:01.763" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:03.908" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:16:03.908" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:16:03.908" starttime="20201028 13:16:01.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:03.909" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:16:03.909" starttime="20201028 13:16:03.908"></status>
</kw>
<msg timestamp="20201028 13:16:03.909" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:16:03.909" starttime="20201028 13:16:01.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:03.915" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:05.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:05.836" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:05.836" starttime="20201028 13:16:03.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:05.837" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:05.837" starttime="20201028 13:16:05.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:05.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:05.838" starttime="20201028 13:16:05.837"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:05.838" starttime="20201028 13:16:03.911"></status>
</kw>
<msg timestamp="20201028 13:16:05.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:05.838" starttime="20201028 13:16:03.911"></status>
</kw>
<msg timestamp="20201028 13:16:05.839" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 13:16:05.839" starttime="20201028 13:16:03.910"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:16:05.839" starttime="20201028 13:16:05.839"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:05.839" starttime="20201028 13:16:03.910"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:05.839" starttime="20201028 13:16:03.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:05.853" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:07.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:07.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:07.730" starttime="20201028 13:16:05.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:07.731" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:07.731" starttime="20201028 13:16:07.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:07.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:07.732" starttime="20201028 13:16:07.731"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:07.732" starttime="20201028 13:16:05.849"></status>
</kw>
<msg timestamp="20201028 13:16:07.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:07.732" starttime="20201028 13:16:05.849"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:07.732" starttime="20201028 13:16:05.840"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:07.733" starttime="20201028 13:16:05.840"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:07.733" starttime="20201028 13:16:05.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 13:16:07.733" starttime="20201028 13:16:07.733"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:07.738" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:09.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:09.679" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:16:07.706Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 13:16:09.679" starttime="20201028 13:16:07.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:09.680" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:16:07.706Z",
  "modificationTime" : "2020-10-28T13:16:07.706Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 13:16:09.680" starttime="20201028 13:16:09.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:09.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:09.681" starttime="20201028 13:16:09.680"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:09.681" starttime="20201028 13:16:07.734"></status>
</kw>
<msg timestamp="20201028 13:16:09.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:09.681" starttime="20201028 13:16:07.734"></status>
</kw>
<msg timestamp="20201028 13:16:09.681" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:16:07.706Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 13:16:09.681" starttime="20201028 13:16:07.733"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 13:16:09.682" starttime="20201028 13:16:09.682"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:16:09.686" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:16:09.686" starttime="20201028 13:16:09.685"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:16:09.686" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:16:09.686" starttime="20201028 13:16:09.686"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:09.686" starttime="20201028 13:16:09.685"></status>
</kw>
<msg timestamp="20201028 13:16:09.686" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:16:09.686" starttime="20201028 13:16:09.684"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:09.687" starttime="20201028 13:16:09.684"></status>
</kw>
<msg timestamp="20201028 13:16:09.687" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 13:16:09.687" starttime="20201028 13:16:09.683"></status>
</kw>
<msg timestamp="20201028 13:16:09.687" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 13:16:09.687" starttime="20201028 13:16:09.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:09.690" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:11.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:11.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:11.674" starttime="20201028 13:16:09.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:11.675" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:11.675" starttime="20201028 13:16:11.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:11.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:11.675" starttime="20201028 13:16:11.675"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:11.676" starttime="20201028 13:16:09.688"></status>
</kw>
<msg timestamp="20201028 13:16:11.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:11.676" starttime="20201028 13:16:09.688"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:11.676" starttime="20201028 13:16:09.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:11.681" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:16.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:16.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:16.970" starttime="20201028 13:16:11.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:16.972" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:16.972" starttime="20201028 13:16:16.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:16.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:16.972" starttime="20201028 13:16:16.972"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:16.973" starttime="20201028 13:16:11.677"></status>
</kw>
<msg timestamp="20201028 13:16:16.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:16.973" starttime="20201028 13:16:11.677"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:16.973" starttime="20201028 13:16:11.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:16.977" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:20.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:20.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:20.839" starttime="20201028 13:16:16.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:20.840" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:20.840" starttime="20201028 13:16:20.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:20.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:20.841" starttime="20201028 13:16:20.840"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:20.841" starttime="20201028 13:16:16.974"></status>
</kw>
<msg timestamp="20201028 13:16:20.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:20.841" starttime="20201028 13:16:16.974"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:20.841" starttime="20201028 13:16:16.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:20.845" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:24.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:24.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:24.781" starttime="20201028 13:16:20.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:24.782" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:24.782" starttime="20201028 13:16:24.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:24.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:24.782" starttime="20201028 13:16:24.782"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:24.782" starttime="20201028 13:16:20.842"></status>
</kw>
<msg timestamp="20201028 13:16:24.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:24.783" starttime="20201028 13:16:20.842"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:24.783" starttime="20201028 13:16:20.842"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:16:24.783" critical="yes" starttime="20201028 13:16:01.757"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:16:24.788" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:16:24.789" starttime="20201028 13:16:24.788"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:16:24.789" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:16:24.789" starttime="20201028 13:16:24.789"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:24.789" starttime="20201028 13:16:24.787"></status>
</kw>
<msg timestamp="20201028 13:16:24.789" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:16:24.789" starttime="20201028 13:16:24.787"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:24.790" starttime="20201028 13:16:24.786"></status>
</kw>
<msg timestamp="20201028 13:16:24.790" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:16:24.790" starttime="20201028 13:16:24.786"></status>
</kw>
<msg timestamp="20201028 13:16:24.790" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:16:24.790" starttime="20201028 13:16:24.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:24.793" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:26.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:26.865" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:26.865" starttime="20201028 13:16:24.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:26.866" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:26.866" starttime="20201028 13:16:26.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:26.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:26.867" starttime="20201028 13:16:26.866"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:26.867" starttime="20201028 13:16:24.791"></status>
</kw>
<msg timestamp="20201028 13:16:26.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:26.867" starttime="20201028 13:16:24.791"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:26.867" starttime="20201028 13:16:24.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:26.871" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:28.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:28.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:16:28.847" starttime="20201028 13:16:26.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:28.848" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:16:28.848" starttime="20201028 13:16:28.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:28.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:28.849" starttime="20201028 13:16:28.849"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:28.849" starttime="20201028 13:16:26.868"></status>
</kw>
<msg timestamp="20201028 13:16:28.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:28.849" starttime="20201028 13:16:26.868"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:28.850" starttime="20201028 13:16:26.868"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:16:28.850" critical="yes" starttime="20201028 13:16:24.784"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201028 13:16:28.851" starttime="20201028 13:16:01.708"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:18:02.119" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:18:02.119" starttime="20201028 13:18:02.119"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:18:02.120" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:18:02.120" starttime="20201028 13:18:02.119"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:02.120" starttime="20201028 13:18:02.118"></status>
</kw>
<msg timestamp="20201028 13:18:02.120" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:18:02.120" starttime="20201028 13:18:02.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:18:02.121" starttime="20201028 13:18:02.121"></status>
</kw>
<msg timestamp="20201028 13:18:02.121" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:18:02.121" starttime="20201028 13:18:02.120"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:02.121" starttime="20201028 13:18:02.117"></status>
</kw>
<msg timestamp="20201028 13:18:02.121" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:18:02.121" starttime="20201028 13:18:02.117"></status>
</kw>
<msg timestamp="20201028 13:18:02.122" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:18:02.122" starttime="20201028 13:18:02.115"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:18:02.122" level="INFO">${random} = 68258</msg>
<status status="PASS" endtime="20201028 13:18:02.122" starttime="20201028 13:18:02.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:18:02.127" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-68258 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:18:05.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:18:05.365" level="INFO">${output} = 2020-10-28 13:18:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:18:05.365" starttime="20201028 13:18:02.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:18:05.366" level="INFO">2020-10-28 13:18:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 13:18:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:18:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:18:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:18:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:18:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0AE3DEA5E97F-&gt;728bcf94-ab7f-475f-bf37-4877c8931f5b
2020-10-28 13:18:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:18:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:18:05.367" starttime="20201028 13:18:05.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:18:05.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:18:05.367" starttime="20201028 13:18:05.367"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:05.367" starttime="20201028 13:18:02.123"></status>
</kw>
<msg timestamp="20201028 13:18:05.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:18:05.368" starttime="20201028 13:18:02.123"></status>
</kw>
<msg timestamp="20201028 13:18:05.368" level="INFO">${result} = 2020-10-28 13:18:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:18:05.368" starttime="20201028 13:18:02.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:18:05.373" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:18:07.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:18:07.012" level="INFO">${output} = 2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:18:07.012" starttime="20201028 13:18:05.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:18:07.013" level="INFO">2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:16 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-28 13:18 ofs://om/volume1/bucket1/ozone-68258
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-28 13:16 ofs://om/volume1/bucket1/ozone-81982
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:16 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:17 ofs://om/volume1/bucket1/wordcount-51.txt
2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:18:07.013" starttime="20201028 13:18:07.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:18:07.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:18:07.014" starttime="20201028 13:18:07.013"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:07.014" starttime="20201028 13:18:05.369"></status>
</kw>
<msg timestamp="20201028 13:18:07.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:18:07.014" starttime="20201028 13:18:05.369"></status>
</kw>
<msg timestamp="20201028 13:18:07.015" level="INFO">${result} = 2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:18:07.015" starttime="20201028 13:18:05.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:18:07.015" starttime="20201028 13:18:07.015"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:18:07.015" critical="yes" starttime="20201028 13:18:02.115"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 13:18:07.016" starttime="20201028 13:18:02.068"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:16:33.306" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:16:33.306" starttime="20201028 13:16:33.306"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:16:33.306" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:16:33.306" starttime="20201028 13:16:33.306"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:33.307" starttime="20201028 13:16:33.305"></status>
</kw>
<msg timestamp="20201028 13:16:33.307" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:16:33.307" starttime="20201028 13:16:33.305"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:33.307" starttime="20201028 13:16:33.304"></status>
</kw>
<msg timestamp="20201028 13:16:33.307" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:16:33.307" starttime="20201028 13:16:33.304"></status>
</kw>
<msg timestamp="20201028 13:16:33.307" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:16:33.307" starttime="20201028 13:16:33.302"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:16:33.308" level="INFO">${random} = 81982</msg>
<status status="PASS" endtime="20201028 13:16:33.308" starttime="20201028 13:16:33.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:33.314" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-81982 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:36.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:36.768" level="INFO">${output} = 2020-10-28 13:16:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:16:36.768" starttime="20201028 13:16:33.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:36.769" level="INFO">2020-10-28 13:16:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 13:16:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:16:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:16:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:16:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:16:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD91073D7D34-&gt;728bcf94-ab7f-475f-bf37-4877c8931f5b
2020-10-28 13:16:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:16:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:16:36.769" starttime="20201028 13:16:36.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:36.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:36.770" starttime="20201028 13:16:36.769"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:36.770" starttime="20201028 13:16:33.309"></status>
</kw>
<msg timestamp="20201028 13:16:36.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:36.770" starttime="20201028 13:16:33.308"></status>
</kw>
<msg timestamp="20201028 13:16:36.770" level="INFO">${result} = 2020-10-28 13:16:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:16:36.770" starttime="20201028 13:16:33.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:36.775" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:38.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:38.400" level="INFO">${output} = 2020-10-28 13:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:16:38.400" starttime="20201028 13:16:36.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:38.401" level="INFO">2020-10-28 13:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:38 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:16 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-28 13:16 o3fs://bucket1.volume1.om/ozone-81982
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:16 o3fs://bucket1.volume1.om/user
2020-10-28 13:16:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:16:38.401" starttime="20201028 13:16:38.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:38.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:38.402" starttime="20201028 13:16:38.402"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:38.402" starttime="20201028 13:16:36.771"></status>
</kw>
<msg timestamp="20201028 13:16:38.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:38.402" starttime="20201028 13:16:36.771"></status>
</kw>
<msg timestamp="20201028 13:16:38.403" level="INFO">${result} = 2020-10-28 13:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:16:38.403" starttime="20201028 13:16:36.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:16:38.403" starttime="20201028 13:16:38.403"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:16:38.403" critical="yes" starttime="20201028 13:16:33.302"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 13:16:38.404" starttime="20201028 13:16:33.257"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:18:11.423" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:18:11.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:18:11.429" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:11.429" starttime="20201028 13:18:11.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:18:11.430" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:11.430" starttime="20201028 13:18:11.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:18:11.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:18:11.430" starttime="20201028 13:18:11.430"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:11.431" starttime="20201028 13:18:11.419"></status>
</kw>
<msg timestamp="20201028 13:18:11.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:18:11.431" starttime="20201028 13:18:11.418"></status>
</kw>
<msg timestamp="20201028 13:18:11.431" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:11.431" starttime="20201028 13:18:11.418"></status>
</kw>
<msg timestamp="20201028 13:18:11.431" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:11.431" starttime="20201028 13:18:11.418"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:18:11.434" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:18:11.434" starttime="20201028 13:18:11.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:18:11.435" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:18:11.435" starttime="20201028 13:18:11.434"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:11.435" starttime="20201028 13:18:11.433"></status>
</kw>
<msg timestamp="20201028 13:18:11.435" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:18:11.435" starttime="20201028 13:18:11.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:18:11.436" starttime="20201028 13:18:11.435"></status>
</kw>
<msg timestamp="20201028 13:18:11.436" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:18:11.436" starttime="20201028 13:18:11.435"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:11.436" starttime="20201028 13:18:11.432"></status>
</kw>
<msg timestamp="20201028 13:18:11.436" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:18:11.436" starttime="20201028 13:18:11.432"></status>
</kw>
<msg timestamp="20201028 13:18:11.436" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:18:11.436" starttime="20201028 13:18:11.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:18:11.439" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:18:46.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:18:46.801" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18...</msg>
<status status="PASS" endtime="20201028 13:18:46.801" starttime="20201028 13:18:11.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:18:46.802" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 13:18:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:18:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:18:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:18:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:18:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AF250968764D-&gt;728bcf94-ab7f-475f-bf37-4877c8931f5b
2020-10-28 13:18:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 13:18:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-10-28 13:18:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:18:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:18:15 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:18:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603890942112_0003
2020-10-28 13:18:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:18:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:15 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 13:18:15 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 13:18:15 INFO  YarnClientImpl:324 - Submitted application application_1603890942112_0003
2020-10-28 13:18:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603890942112_0003/
2020-10-28 13:18:15 INFO  Job:1619 - Running job: job_1603890942112_0003
2020-10-28 13:18:22 INFO  Job:1640 - Job job_1603890942112_0003 running in uber mode : false
2020-10-28 13:18:22 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:18:29 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:18:34 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:18:39 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:18:45 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:18:46 INFO  Job:1658 - Job job_1603890942112_0003 completed successfully
2020-10-28 13:18:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:46 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36356
		Total time spent by all reduces in occupied slots (ms)=23144
		Total time spent by all map tasks (ms)=9089
		Total time spent by all reduce tasks (ms)=5786
		Total vcore-milliseconds taken by all map tasks=9089
		Total vcore-milliseconds taken by all reduce tasks=5786
		Total megabyte-milliseconds taken by all map tasks=37228544
		Total megabyte-milliseconds taken by all reduce tasks=23699456
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=6060
		Physical memory (bytes) snapshot=1130029056
		Virtual memory (bytes) snapshot=16052809728
		Total committed heap usage (bytes)=1151860736
		Peak Map Physical memory (bytes)=292782080
		Peak Map Virtual memory (bytes)=4018667520
		Peak Reduce Physical memory (bytes)=281210880
		Peak Reduce Virtual memory (bytes)=4025815040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.859 seconds
2020-10-28 13:18:46 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-28 13:18:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:18:46.802" starttime="20201028 13:18:46.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:18:46.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:18:46.803" starttime="20201028 13:18:46.802"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.803" starttime="20201028 13:18:11.437"></status>
</kw>
<msg timestamp="20201028 13:18:46.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:18:46.803" starttime="20201028 13:18:11.437"></status>
</kw>
<msg timestamp="20201028 13:18:46.804" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18...</msg>
<status status="PASS" endtime="20201028 13:18:46.804" starttime="20201028 13:18:11.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:18:46.804" starttime="20201028 13:18:46.804"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:18:46.804" critical="yes" starttime="20201028 13:18:11.417"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:18:46.809" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:18:46.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:18:46.813" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:46.813" starttime="20201028 13:18:46.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:18:46.814" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:46.814" starttime="20201028 13:18:46.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:18:46.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:18:46.815" starttime="20201028 13:18:46.814"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.815" starttime="20201028 13:18:46.806"></status>
</kw>
<msg timestamp="20201028 13:18:46.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:18:46.815" starttime="20201028 13:18:46.806"></status>
</kw>
<msg timestamp="20201028 13:18:46.816" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:46.816" starttime="20201028 13:18:46.806"></status>
</kw>
<msg timestamp="20201028 13:18:46.816" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:18:46.816" starttime="20201028 13:18:46.805"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:18:46.816" level="INFO">${random} = 40</msg>
<status status="PASS" endtime="20201028 13:18:46.816" starttime="20201028 13:18:46.816"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:18:46.820" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:18:46.820" starttime="20201028 13:18:46.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:18:46.821" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:18:46.821" starttime="20201028 13:18:46.820"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.821" starttime="20201028 13:18:46.819"></status>
</kw>
<msg timestamp="20201028 13:18:46.821" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:18:46.821" starttime="20201028 13:18:46.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:18:46.822" starttime="20201028 13:18:46.822"></status>
</kw>
<msg timestamp="20201028 13:18:46.822" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:18:46.822" starttime="20201028 13:18:46.821"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.822" starttime="20201028 13:18:46.818"></status>
</kw>
<msg timestamp="20201028 13:18:46.822" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:18:46.822" starttime="20201028 13:18:46.817"></status>
</kw>
<msg timestamp="20201028 13:18:46.823" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:18:46.823" starttime="20201028 13:18:46.817"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:18:46.825" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:18:46.825" starttime="20201028 13:18:46.825"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:18:46.826" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:18:46.826" starttime="20201028 13:18:46.825"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.826" starttime="20201028 13:18:46.825"></status>
</kw>
<msg timestamp="20201028 13:18:46.826" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:18:46.826" starttime="20201028 13:18:46.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:18:46.827" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201028 13:18:46.827" starttime="20201028 13:18:46.827"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:18:46.828" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201028 13:18:46.828" starttime="20201028 13:18:46.827"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.828" starttime="20201028 13:18:46.827"></status>
</kw>
<msg timestamp="20201028 13:18:46.828" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201028 13:18:46.828" starttime="20201028 13:18:46.826"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.828" starttime="20201028 13:18:46.824"></status>
</kw>
<msg timestamp="20201028 13:18:46.828" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 13:18:46.829" starttime="20201028 13:18:46.823"></status>
</kw>
<msg timestamp="20201028 13:18:46.829" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 13:18:46.829" starttime="20201028 13:18:46.823"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:18:46.832" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:18:46.832" starttime="20201028 13:18:46.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:18:46.832" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:18:46.832" starttime="20201028 13:18:46.832"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.832" starttime="20201028 13:18:46.831"></status>
</kw>
<msg timestamp="20201028 13:18:46.832" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:18:46.832" starttime="20201028 13:18:46.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:18:46.834" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201028 13:18:46.834" starttime="20201028 13:18:46.833"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:18:46.834" level="INFO">${result} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201028 13:18:46.834" starttime="20201028 13:18:46.834"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.834" starttime="20201028 13:18:46.833"></status>
</kw>
<msg timestamp="20201028 13:18:46.834" level="INFO">${path_with_leading} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201028 13:18:46.834" starttime="20201028 13:18:46.833"></status>
</kw>
<status status="PASS" endtime="20201028 13:18:46.835" starttime="20201028 13:18:46.830"></status>
</kw>
<msg timestamp="20201028 13:18:46.835" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201028 13:18:46.835" starttime="20201028 13:18:46.829"></status>
</kw>
<msg timestamp="20201028 13:18:46.835" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201028 13:18:46.835" starttime="20201028 13:18:46.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:18:46.839" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-40.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:19:25.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:19:25.810" level="INFO">${output} = 2020-10-28 13:18:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:19:25.810" starttime="20201028 13:18:46.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:19:25.811" level="INFO">2020-10-28 13:18:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:49 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 13:18:49 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:18:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:18:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:18:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:18:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3DAA794F1992-&gt;728bcf94-ab7f-475f-bf37-4877c8931f5b
2020-10-28 13:18:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:18:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:18:50 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:18:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603890942112_0004
2020-10-28 13:18:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:18:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:50 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 13:18:50 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 13:18:50 INFO  YarnClientImpl:324 - Submitted application application_1603890942112_0004
2020-10-28 13:18:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603890942112_0004/
2020-10-28 13:18:50 INFO  Job:1619 - Running job: job_1603890942112_0004
2020-10-28 13:18:59 INFO  Job:1640 - Job job_1603890942112_0004 running in uber mode : false
2020-10-28 13:18:59 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:19:05 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:19:10 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:19:15 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:19:19 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:19:25 INFO  Job:1658 - Job job_1603890942112_0004 completed successfully
2020-10-28 13:19:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:19:25 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38556
		Total time spent by all reduces in occupied slots (ms)=13540
		Total time spent by all map tasks (ms)=9639
		Total time spent by all reduce tasks (ms)=3385
		Total vcore-milliseconds taken by all map tasks=9639
		Total vcore-milliseconds taken by all reduce tasks=3385
		Total megabyte-milliseconds taken by all map tasks=39481344
		Total megabyte-milliseconds taken by all reduce tasks=13864960
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=663
		CPU time spent (ms)=7030
		Physical memory (bytes) snapshot=1179983872
		Virtual memory (bytes) snapshot=16088899584
		Total committed heap usage (bytes)=1052246016
		Peak Map Physical memory (bytes)=295956480
		Peak Map Virtual memory (bytes)=4019515392
		Peak Reduce Physical memory (bytes)=295112704
		Peak Reduce Virtual memory (bytes)=4035620864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-28 13:19:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:19:25.811" starttime="20201028 13:19:25.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:19:25.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:19:25.812" starttime="20201028 13:19:25.811"></status>
</kw>
<status status="PASS" endtime="20201028 13:19:25.812" starttime="20201028 13:18:46.836"></status>
</kw>
<msg timestamp="20201028 13:19:25.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:19:25.812" starttime="20201028 13:18:46.836"></status>
</kw>
<msg timestamp="20201028 13:19:25.812" level="INFO">${output} = 2020-10-28 13:18:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:18:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:19:25.812" starttime="20201028 13:18:46.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 13:19:25.813" starttime="20201028 13:19:25.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:19:25.813" starttime="20201028 13:19:25.813"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:19:25.813" critical="yes" starttime="20201028 13:18:46.805"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 13:19:25.814" starttime="20201028 13:18:11.372"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:42.860" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:16:42.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:16:42.865" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:16:42.866" starttime="20201028 13:16:42.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:16:42.866" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:16:42.866" starttime="20201028 13:16:42.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:16:42.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:16:42.867" starttime="20201028 13:16:42.867"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:42.867" starttime="20201028 13:16:42.857"></status>
</kw>
<msg timestamp="20201028 13:16:42.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:16:42.867" starttime="20201028 13:16:42.857"></status>
</kw>
<msg timestamp="20201028 13:16:42.867" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:16:42.867" starttime="20201028 13:16:42.856"></status>
</kw>
<msg timestamp="20201028 13:16:42.868" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:16:42.868" starttime="20201028 13:16:42.856"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:16:42.870" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:16:42.870" starttime="20201028 13:16:42.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:16:42.871" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:16:42.871" starttime="20201028 13:16:42.871"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:42.871" starttime="20201028 13:16:42.870"></status>
</kw>
<msg timestamp="20201028 13:16:42.871" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:16:42.871" starttime="20201028 13:16:42.869"></status>
</kw>
<status status="PASS" endtime="20201028 13:16:42.872" starttime="20201028 13:16:42.869"></status>
</kw>
<msg timestamp="20201028 13:16:42.872" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:16:42.872" starttime="20201028 13:16:42.868"></status>
</kw>
<msg timestamp="20201028 13:16:42.872" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:16:42.872" starttime="20201028 13:16:42.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:16:42.875" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:17:22.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:17:22.087" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:16:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16...</msg>
<status status="PASS" endtime="20201028 13:17:22.087" starttime="20201028 13:16:42.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:17:22.088" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:16:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 13:16:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:16:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:16:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:16:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:16:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-86F34DF2A362-&gt;728bcf94-ab7f-475f-bf37-4877c8931f5b
2020-10-28 13:16:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 13:16:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-10-28 13:16:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:16:46 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:16:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603890942112_0001
2020-10-28 13:16:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:49 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 13:16:49 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 13:16:50 INFO  YarnClientImpl:324 - Submitted application application_1603890942112_0001
2020-10-28 13:16:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603890942112_0001/
2020-10-28 13:16:50 INFO  Job:1619 - Running job: job_1603890942112_0001
2020-10-28 13:17:00 INFO  Job:1640 - Job job_1603890942112_0001 running in uber mode : false
2020-10-28 13:17:00 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:17:06 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:17:11 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:17:16 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:17:21 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:17:21 INFO  Job:1658 - Job job_1603890942112_0001 completed successfully
2020-10-28 13:17:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36592
		Total time spent by all reduces in occupied slots (ms)=14068
		Total time spent by all map tasks (ms)=9148
		Total time spent by all reduce tasks (ms)=3517
		Total vcore-milliseconds taken by all map tasks=9148
		Total vcore-milliseconds taken by all reduce tasks=3517
		Total megabyte-milliseconds taken by all map tasks=37470208
		Total megabyte-milliseconds taken by all reduce tasks=14405632
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=599
		CPU time spent (ms)=6350
		Physical memory (bytes) snapshot=1175384064
		Virtual memory (bytes) snapshot=16071614464
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=296087552
		Peak Map Virtual memory (bytes)=4017389568
		Peak Reduce Physical memory (bytes)=298672128
		Peak Reduce Virtual memory (bytes)=4034641920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.624 seconds
2020-10-28 13:17:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:21 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-28 13:17:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:17:22.088" starttime="20201028 13:17:22.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:17:22.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:17:22.089" starttime="20201028 13:17:22.089"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.089" starttime="20201028 13:16:42.872"></status>
</kw>
<msg timestamp="20201028 13:17:22.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:17:22.090" starttime="20201028 13:16:42.872"></status>
</kw>
<msg timestamp="20201028 13:17:22.090" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:16:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:16...</msg>
<status status="PASS" endtime="20201028 13:17:22.090" starttime="20201028 13:16:42.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:17:22.091" starttime="20201028 13:17:22.090"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:17:22.091" critical="yes" starttime="20201028 13:16:42.855"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:17:22.095" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:17:22.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:17:22.101" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:17:22.101" starttime="20201028 13:17:22.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:17:22.102" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:17:22.102" starttime="20201028 13:17:22.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:17:22.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:17:22.102" starttime="20201028 13:17:22.102"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.103" starttime="20201028 13:17:22.093"></status>
</kw>
<msg timestamp="20201028 13:17:22.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:17:22.103" starttime="20201028 13:17:22.093"></status>
</kw>
<msg timestamp="20201028 13:17:22.103" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:17:22.103" starttime="20201028 13:17:22.092"></status>
</kw>
<msg timestamp="20201028 13:17:22.103" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 13:17:22.103" starttime="20201028 13:17:22.092"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:17:22.104" level="INFO">${random} = 51</msg>
<status status="PASS" endtime="20201028 13:17:22.104" starttime="20201028 13:17:22.103"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:17:22.107" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:17:22.107" starttime="20201028 13:17:22.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:17:22.107" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:17:22.107" starttime="20201028 13:17:22.107"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.107" starttime="20201028 13:17:22.106"></status>
</kw>
<msg timestamp="20201028 13:17:22.108" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:17:22.108" starttime="20201028 13:17:22.106"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.108" starttime="20201028 13:17:22.105"></status>
</kw>
<msg timestamp="20201028 13:17:22.108" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:17:22.108" starttime="20201028 13:17:22.104"></status>
</kw>
<msg timestamp="20201028 13:17:22.108" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:17:22.108" starttime="20201028 13:17:22.104"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:17:22.111" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:17:22.111" starttime="20201028 13:17:22.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:17:22.111" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:17:22.111" starttime="20201028 13:17:22.111"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.111" starttime="20201028 13:17:22.110"></status>
</kw>
<msg timestamp="20201028 13:17:22.111" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:17:22.111" starttime="20201028 13:17:22.110"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.112" starttime="20201028 13:17:22.109"></status>
</kw>
<msg timestamp="20201028 13:17:22.112" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 13:17:22.112" starttime="20201028 13:17:22.109"></status>
</kw>
<msg timestamp="20201028 13:17:22.112" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 13:17:22.112" starttime="20201028 13:17:22.108"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:17:22.115" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:17:22.115" starttime="20201028 13:17:22.114"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:17:22.115" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:17:22.115" starttime="20201028 13:17:22.115"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.115" starttime="20201028 13:17:22.114"></status>
</kw>
<msg timestamp="20201028 13:17:22.115" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:17:22.115" starttime="20201028 13:17:22.113"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:22.116" starttime="20201028 13:17:22.113"></status>
</kw>
<msg timestamp="20201028 13:17:22.116" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-51.txt</msg>
<status status="PASS" endtime="20201028 13:17:22.116" starttime="20201028 13:17:22.113"></status>
</kw>
<msg timestamp="20201028 13:17:22.116" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-51.txt</msg>
<status status="PASS" endtime="20201028 13:17:22.116" starttime="20201028 13:17:22.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:17:22.119" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-51.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:17:57.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:17:57.495" level="INFO">${output} = 2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:17:57.495" starttime="20201028 13:17:22.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:17:57.496" level="INFO">2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:17:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 13:17:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 13:17:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:17:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:17:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:17:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-03F9725A9DCE-&gt;728bcf94-ab7f-475f-bf37-4877c8931f5b
2020-10-28 13:17:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:17:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:17:25 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:17:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603890942112_0002
2020-10-28 13:17:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:17:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:28 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 13:17:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 13:17:28 INFO  YarnClientImpl:324 - Submitted application application_1603890942112_0002
2020-10-28 13:17:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603890942112_0002/
2020-10-28 13:17:28 INFO  Job:1619 - Running job: job_1603890942112_0002
2020-10-28 13:17:35 INFO  Job:1640 - Job job_1603890942112_0002 running in uber mode : false
2020-10-28 13:17:35 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:17:41 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:17:46 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:17:51 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:17:56 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:17:57 INFO  Job:1658 - Job job_1603890942112_0002 completed successfully
2020-10-28 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36816
		Total time spent by all reduces in occupied slots (ms)=13708
		Total time spent by all map tasks (ms)=9204
		Total time spent by all reduce tasks (ms)=3427
		Total vcore-milliseconds taken by all map tasks=9204
		Total vcore-milliseconds taken by all reduce tasks=3427
		Total megabyte-milliseconds taken by all map tasks=37699584
		Total megabyte-milliseconds taken by all reduce tasks=14036992
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=603
		CPU time spent (ms)=6500
		Physical memory (bytes) snapshot=1182998528
		Virtual memory (bytes) snapshot=16082415616
		Total committed heap usage (bytes)=1057488896
		Peak Map Physical memory (bytes)=297390080
		Peak Map Virtual memory (bytes)=4021825536
		Peak Reduce Physical memory (bytes)=294912000
		Peak Reduce Virtual memory (bytes)=4035891200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-28 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 13:17:57.496" starttime="20201028 13:17:57.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:17:57.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:17:57.497" starttime="20201028 13:17:57.496"></status>
</kw>
<status status="PASS" endtime="20201028 13:17:57.497" starttime="20201028 13:17:22.117"></status>
</kw>
<msg timestamp="20201028 13:17:57.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:17:57.497" starttime="20201028 13:17:22.116"></status>
</kw>
<msg timestamp="20201028 13:17:57.498" level="INFO">${output} = 2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 13:17:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 13:17:57.498" starttime="20201028 13:17:22.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 13:17:57.498" starttime="20201028 13:17:57.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:17:57.499" starttime="20201028 13:17:57.498"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:17:57.499" critical="yes" starttime="20201028 13:17:22.091"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 13:17:57.500" starttime="20201028 13:16:42.809"></status>
</suite>
<status status="PASS" elapsedtime="186371" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:28.419" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:20:31.942" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 13:20:31.943" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:20:31.943" starttime="20201028 13:20:28.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:20:31.944" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:20:31.944" starttime="20201028 13:20:31.943"></status>
</kw>
<msg timestamp="20201028 13:20:31.944" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 13:20:31.944" starttime="20201028 13:20:28.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:31.949" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:20:34.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:20:34.913" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:20:34.913" starttime="20201028 13:20:31.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:20:34.914" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:20:34.915" starttime="20201028 13:20:34.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:20:34.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:20:34.915" starttime="20201028 13:20:34.915"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:34.915" starttime="20201028 13:20:31.946"></status>
</kw>
<msg timestamp="20201028 13:20:34.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:20:34.915" starttime="20201028 13:20:31.946"></status>
</kw>
<msg timestamp="20201028 13:20:34.916" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 13:20:34.916" starttime="20201028 13:20:31.945"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 13:20:34.916" starttime="20201028 13:20:34.916"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:34.916" starttime="20201028 13:20:31.945"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:34.916" starttime="20201028 13:20:31.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:34.920" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:20:37.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:20:37.636" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:20:37.636" starttime="20201028 13:20:34.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:20:37.637" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:20:37.637" starttime="20201028 13:20:37.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:20:37.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:20:37.638" starttime="20201028 13:20:37.638"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:37.638" starttime="20201028 13:20:34.918"></status>
</kw>
<msg timestamp="20201028 13:20:37.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:20:37.639" starttime="20201028 13:20:34.918"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:37.639" starttime="20201028 13:20:34.917"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:37.639" starttime="20201028 13:20:34.917"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:37.639" starttime="20201028 13:20:34.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 13:20:37.639" starttime="20201028 13:20:37.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:37.643" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:20:40.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:20:40.642" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:20:37.514Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 13:20:40.642" starttime="20201028 13:20:37.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:20:40.644" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:20:37.514Z",
  "modificationTime" : "2020-10-28T13:20:37.514Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 13:20:40.644" starttime="20201028 13:20:40.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:20:40.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:20:40.644" starttime="20201028 13:20:40.644"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:40.645" starttime="20201028 13:20:37.641"></status>
</kw>
<msg timestamp="20201028 13:20:40.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:20:40.645" starttime="20201028 13:20:37.640"></status>
</kw>
<msg timestamp="20201028 13:20:40.645" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T13:20:37.514Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 13:20:40.645" starttime="20201028 13:20:37.640"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 13:20:40.646" starttime="20201028 13:20:40.645"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:20:40.649" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:20:40.649" starttime="20201028 13:20:40.649"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:20:40.649" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:20:40.649" starttime="20201028 13:20:40.649"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:40.650" starttime="20201028 13:20:40.648"></status>
</kw>
<msg timestamp="20201028 13:20:40.650" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:20:40.650" starttime="20201028 13:20:40.648"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:40.650" starttime="20201028 13:20:40.647"></status>
</kw>
<msg timestamp="20201028 13:20:40.650" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 13:20:40.650" starttime="20201028 13:20:40.647"></status>
</kw>
<msg timestamp="20201028 13:20:40.650" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 13:20:40.650" starttime="20201028 13:20:40.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:40.653" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:20:43.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:20:43.660" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:20:43.660" starttime="20201028 13:20:40.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:20:43.661" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:20:43.662" starttime="20201028 13:20:43.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:20:43.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:20:43.662" starttime="20201028 13:20:43.662"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:43.663" starttime="20201028 13:20:40.651"></status>
</kw>
<msg timestamp="20201028 13:20:43.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:20:43.663" starttime="20201028 13:20:40.651"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:43.663" starttime="20201028 13:20:40.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:43.667" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:20:50.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:20:50.314" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:20:50.314" starttime="20201028 13:20:43.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:20:50.315" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:20:50.315" starttime="20201028 13:20:50.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:20:50.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:20:50.316" starttime="20201028 13:20:50.316"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:50.316" starttime="20201028 13:20:43.664"></status>
</kw>
<msg timestamp="20201028 13:20:50.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:20:50.317" starttime="20201028 13:20:43.664"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:50.317" starttime="20201028 13:20:43.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:50.321" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:20:55.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:20:55.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:20:55.073" starttime="20201028 13:20:50.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:20:55.074" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:20:55.074" starttime="20201028 13:20:55.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:20:55.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:20:55.075" starttime="20201028 13:20:55.074"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:55.075" starttime="20201028 13:20:50.318"></status>
</kw>
<msg timestamp="20201028 13:20:55.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:20:55.075" starttime="20201028 13:20:50.318"></status>
</kw>
<status status="PASS" endtime="20201028 13:20:55.076" starttime="20201028 13:20:50.317"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:20:55.080" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:00.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:00.006" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:21:00.006" starttime="20201028 13:20:55.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:00.007" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:21:00.007" starttime="20201028 13:21:00.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:00.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:00.008" starttime="20201028 13:21:00.007"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:00.008" starttime="20201028 13:20:55.077"></status>
</kw>
<msg timestamp="20201028 13:21:00.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:00.008" starttime="20201028 13:20:55.076"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:00.009" starttime="20201028 13:20:55.076"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:21:00.009" critical="yes" starttime="20201028 13:20:28.414"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:21:00.014" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:21:00.014" starttime="20201028 13:21:00.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:21:00.014" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:21:00.014" starttime="20201028 13:21:00.014"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:00.015" starttime="20201028 13:21:00.013"></status>
</kw>
<msg timestamp="20201028 13:21:00.015" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:21:00.015" starttime="20201028 13:21:00.012"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:00.015" starttime="20201028 13:21:00.012"></status>
</kw>
<msg timestamp="20201028 13:21:00.015" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:21:00.015" starttime="20201028 13:21:00.011"></status>
</kw>
<msg timestamp="20201028 13:21:00.015" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:21:00.015" starttime="20201028 13:21:00.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:00.019" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:02.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:02.828" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:21:02.828" starttime="20201028 13:21:00.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:02.829" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:21:02.829" starttime="20201028 13:21:02.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:02.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:02.829" starttime="20201028 13:21:02.829"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:02.830" starttime="20201028 13:21:00.016"></status>
</kw>
<msg timestamp="20201028 13:21:02.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:02.830" starttime="20201028 13:21:00.016"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:02.830" starttime="20201028 13:21:00.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:02.833" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:05.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:05.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 13:21:05.695" starttime="20201028 13:21:02.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:05.696" level="INFO"></msg>
<status status="PASS" endtime="20201028 13:21:05.696" starttime="20201028 13:21:05.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:05.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:05.697" starttime="20201028 13:21:05.696"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:05.697" starttime="20201028 13:21:02.831"></status>
</kw>
<msg timestamp="20201028 13:21:05.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:05.697" starttime="20201028 13:21:02.831"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:05.697" starttime="20201028 13:21:02.830"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 13:21:05.697" critical="yes" starttime="20201028 13:21:00.009"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201028 13:21:05.699" starttime="20201028 13:20:28.362"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:22:45.636" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:22:45.636" starttime="20201028 13:22:45.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:22:45.637" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:22:45.637" starttime="20201028 13:22:45.636"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:45.637" starttime="20201028 13:22:45.635"></status>
</kw>
<msg timestamp="20201028 13:22:45.637" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:22:45.637" starttime="20201028 13:22:45.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:22:45.638" starttime="20201028 13:22:45.637"></status>
</kw>
<msg timestamp="20201028 13:22:45.638" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:22:45.638" starttime="20201028 13:22:45.637"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:45.638" starttime="20201028 13:22:45.634"></status>
</kw>
<msg timestamp="20201028 13:22:45.638" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:22:45.638" starttime="20201028 13:22:45.634"></status>
</kw>
<msg timestamp="20201028 13:22:45.638" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:22:45.638" starttime="20201028 13:22:45.633"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:22:45.639" level="INFO">${random} = 66828</msg>
<status status="PASS" endtime="20201028 13:22:45.639" starttime="20201028 13:22:45.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:22:45.643" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66828 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:22:48.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:22:48.969" level="INFO">${output} = 2020-10-28 13:22:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:22:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 13:22:48.969" starttime="20201028 13:22:45.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:22:48.970" level="INFO">2020-10-28 13:22:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:22:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:22:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:22:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:22:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9C3163B512E3-&gt;dbe47907-da1c-4b53-a4c3-0f7efea530a4
2020-10-28 13:22:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 13:22:48.970" starttime="20201028 13:22:48.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:22:48.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:22:48.971" starttime="20201028 13:22:48.970"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:48.971" starttime="20201028 13:22:45.639"></status>
</kw>
<msg timestamp="20201028 13:22:48.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:22:48.971" starttime="20201028 13:22:45.639"></status>
</kw>
<msg timestamp="20201028 13:22:48.971" level="INFO">${result} = 2020-10-28 13:22:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:22:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 13:22:48.972" starttime="20201028 13:22:45.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:22:48.975" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:22:50.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:22:50.768" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 13:21 ofs://om/volume1/bucket1/ozone-00034
-rw-...</msg>
<status status="PASS" endtime="20201028 13:22:50.769" starttime="20201028 13:22:48.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:22:50.770" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 13:21 ofs://om/volume1/bucket1/ozone-00034
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 13:22 ofs://om/volume1/bucket1/ozone-66828
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:21 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:22 ofs://om/volume1/bucket1/wordcount-58.txt</msg>
<status status="PASS" endtime="20201028 13:22:50.770" starttime="20201028 13:22:50.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:22:50.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:22:50.770" starttime="20201028 13:22:50.770"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:50.770" starttime="20201028 13:22:48.973"></status>
</kw>
<msg timestamp="20201028 13:22:50.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:22:50.771" starttime="20201028 13:22:48.972"></status>
</kw>
<msg timestamp="20201028 13:22:50.771" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 13:21 ofs://om/volume1/bucket1/ozone-00034
-rw-...</msg>
<status status="PASS" endtime="20201028 13:22:50.771" starttime="20201028 13:22:48.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:22:50.771" starttime="20201028 13:22:50.771"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:22:50.772" critical="yes" starttime="20201028 13:22:45.632"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 13:22:50.772" starttime="20201028 13:22:45.586"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:21:10.173" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:21:10.173" starttime="20201028 13:21:10.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:21:10.174" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:21:10.174" starttime="20201028 13:21:10.174"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:10.174" starttime="20201028 13:21:10.173"></status>
</kw>
<msg timestamp="20201028 13:21:10.174" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:21:10.174" starttime="20201028 13:21:10.172"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:10.174" starttime="20201028 13:21:10.172"></status>
</kw>
<msg timestamp="20201028 13:21:10.174" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:21:10.174" starttime="20201028 13:21:10.171"></status>
</kw>
<msg timestamp="20201028 13:21:10.175" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:21:10.175" starttime="20201028 13:21:10.170"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:21:10.175" level="INFO">${random} = 00034</msg>
<status status="PASS" endtime="20201028 13:21:10.175" starttime="20201028 13:21:10.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:10.181" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-00034 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:13.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:13.666" level="INFO">${output} = 2020-10-28 13:21:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:21:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 13:21:13.666" starttime="20201028 13:21:10.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:13.667" level="INFO">2020-10-28 13:21:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:21:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:21:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:21:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:21:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-006ADD29F750-&gt;dbe47907-da1c-4b53-a4c3-0f7efea530a4
2020-10-28 13:21:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 13:21:13.667" starttime="20201028 13:21:13.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:13.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:13.668" starttime="20201028 13:21:13.667"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:13.668" starttime="20201028 13:21:10.176"></status>
</kw>
<msg timestamp="20201028 13:21:13.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:13.668" starttime="20201028 13:21:10.176"></status>
</kw>
<msg timestamp="20201028 13:21:13.668" level="INFO">${result} = 2020-10-28 13:21:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:21:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 13:21:13.668" starttime="20201028 13:21:10.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:13.673" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:15.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:15.314" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 13:21 o3fs://bucket1.volume1.om/ozone-00034
dr...</msg>
<status status="PASS" endtime="20201028 13:21:15.314" starttime="20201028 13:21:13.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:15.315" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 13:21 o3fs://bucket1.volume1.om/ozone-00034
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:21 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 13:21:15.315" starttime="20201028 13:21:15.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:15.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:15.315" starttime="20201028 13:21:15.315"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:15.316" starttime="20201028 13:21:13.669"></status>
</kw>
<msg timestamp="20201028 13:21:15.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:15.316" starttime="20201028 13:21:13.669"></status>
</kw>
<msg timestamp="20201028 13:21:15.316" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 13:21 o3fs://bucket1.volume1.om/ozone-00034
dr...</msg>
<status status="PASS" endtime="20201028 13:21:15.316" starttime="20201028 13:21:13.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:21:15.317" starttime="20201028 13:21:15.316"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 13:21:15.317" critical="yes" starttime="20201028 13:21:10.170"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 13:21:15.319" starttime="20201028 13:21:10.125"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:22:55.285" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:22:55.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:22:55.290" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:22:55.290" starttime="20201028 13:22:55.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:22:55.291" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:22:55.291" starttime="20201028 13:22:55.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:22:55.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:22:55.292" starttime="20201028 13:22:55.291"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:55.292" starttime="20201028 13:22:55.281"></status>
</kw>
<msg timestamp="20201028 13:22:55.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:22:55.292" starttime="20201028 13:22:55.280"></status>
</kw>
<msg timestamp="20201028 13:22:55.292" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:22:55.292" starttime="20201028 13:22:55.280"></status>
</kw>
<msg timestamp="20201028 13:22:55.293" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:22:55.293" starttime="20201028 13:22:55.280"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:22:55.295" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:22:55.295" starttime="20201028 13:22:55.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:22:55.296" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:22:55.296" starttime="20201028 13:22:55.295"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:55.296" starttime="20201028 13:22:55.295"></status>
</kw>
<msg timestamp="20201028 13:22:55.296" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:22:55.296" starttime="20201028 13:22:55.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:22:55.297" starttime="20201028 13:22:55.297"></status>
</kw>
<msg timestamp="20201028 13:22:55.297" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:22:55.297" starttime="20201028 13:22:55.296"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:55.297" starttime="20201028 13:22:55.294"></status>
</kw>
<msg timestamp="20201028 13:22:55.297" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:22:55.297" starttime="20201028 13:22:55.293"></status>
</kw>
<msg timestamp="20201028 13:22:55.298" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:22:55.298" starttime="20201028 13:22:55.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:22:55.300" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:23:29.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:23:29.450" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:22:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:22:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 13:23:29.451" starttime="20201028 13:22:55.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:23:29.452" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:22:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:22:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:22:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:22:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:22:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FC127AC84FDC-&gt;dbe47907-da1c-4b53-a4c3-0f7efea530a4
2020-10-28 13:22:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 13:22:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:22:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:22:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:22:58 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:22:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603891209229_0003
2020-10-28 13:22:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:22:59 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 13:22:59 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 13:22:59 INFO  YarnClientImpl:329 - Submitted application application_1603891209229_0003
2020-10-28 13:22:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603891209229_0003/
2020-10-28 13:22:59 INFO  Job:1619 - Running job: job_1603891209229_0003
2020-10-28 13:23:06 INFO  Job:1640 - Job job_1603891209229_0003 running in uber mode : false
2020-10-28 13:23:06 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:23:13 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:23:18 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:23:23 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:23:28 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:23:28 INFO  Job:1658 - Job job_1603891209229_0003 completed successfully
2020-10-28 13:23:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37400
		Total time spent by all reduces in occupied slots (ms)=13792
		Total time spent by all map tasks (ms)=9350
		Total time spent by all reduce tasks (ms)=3448
		Total vcore-milliseconds taken by all map tasks=9350
		Total vcore-milliseconds taken by all reduce tasks=3448
		Total megabyte-milliseconds taken by all map tasks=38297600
		Total megabyte-milliseconds taken by all reduce tasks=14123008
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=603
		CPU time spent (ms)=7080
		Physical memory (bytes) snapshot=1489686528
		Virtual memory (bytes) snapshot=16080031744
		Total committed heap usage (bytes)=1697120256
		Peak Map Physical memory (bytes)=378986496
		Peak Map Virtual memory (bytes)=4018262016
		Peak Reduce Physical memory (bytes)=372596736
		Peak Reduce Virtual memory (bytes)=4031680512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.676 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 13:23:29.452" starttime="20201028 13:23:29.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:23:29.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:23:29.452" starttime="20201028 13:23:29.452"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.453" starttime="20201028 13:22:55.298"></status>
</kw>
<msg timestamp="20201028 13:23:29.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:23:29.453" starttime="20201028 13:22:55.298"></status>
</kw>
<msg timestamp="20201028 13:23:29.453" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:22:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:22:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 13:23:29.453" starttime="20201028 13:22:55.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:23:29.454" starttime="20201028 13:23:29.453"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:23:29.454" critical="yes" starttime="20201028 13:22:55.279"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:23:29.459" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:23:29.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:23:29.464" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:23:29.464" starttime="20201028 13:23:29.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:23:29.464" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:23:29.465" starttime="20201028 13:23:29.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:23:29.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:23:29.465" starttime="20201028 13:23:29.465"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.465" starttime="20201028 13:23:29.456"></status>
</kw>
<msg timestamp="20201028 13:23:29.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:23:29.466" starttime="20201028 13:23:29.456"></status>
</kw>
<msg timestamp="20201028 13:23:29.466" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:23:29.466" starttime="20201028 13:23:29.455"></status>
</kw>
<msg timestamp="20201028 13:23:29.466" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:23:29.466" starttime="20201028 13:23:29.455"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:23:29.466" level="INFO">${random} = 03</msg>
<status status="PASS" endtime="20201028 13:23:29.466" starttime="20201028 13:23:29.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:23:29.470" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:23:29.470" starttime="20201028 13:23:29.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:23:29.470" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:23:29.470" starttime="20201028 13:23:29.470"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.470" starttime="20201028 13:23:29.469"></status>
</kw>
<msg timestamp="20201028 13:23:29.470" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:23:29.470" starttime="20201028 13:23:29.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 13:23:29.471" starttime="20201028 13:23:29.471"></status>
</kw>
<msg timestamp="20201028 13:23:29.471" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 13:23:29.471" starttime="20201028 13:23:29.471"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.472" starttime="20201028 13:23:29.468"></status>
</kw>
<msg timestamp="20201028 13:23:29.472" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:23:29.472" starttime="20201028 13:23:29.467"></status>
</kw>
<msg timestamp="20201028 13:23:29.472" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 13:23:29.472" starttime="20201028 13:23:29.467"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:23:29.475" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:23:29.475" starttime="20201028 13:23:29.474"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:23:29.475" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:23:29.475" starttime="20201028 13:23:29.475"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.475" starttime="20201028 13:23:29.474"></status>
</kw>
<msg timestamp="20201028 13:23:29.476" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:23:29.476" starttime="20201028 13:23:29.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:23:29.477" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201028 13:23:29.477" starttime="20201028 13:23:29.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:23:29.477" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201028 13:23:29.477" starttime="20201028 13:23:29.477"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.478" starttime="20201028 13:23:29.476"></status>
</kw>
<msg timestamp="20201028 13:23:29.478" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201028 13:23:29.478" starttime="20201028 13:23:29.476"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.478" starttime="20201028 13:23:29.473"></status>
</kw>
<msg timestamp="20201028 13:23:29.478" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 13:23:29.478" starttime="20201028 13:23:29.473"></status>
</kw>
<msg timestamp="20201028 13:23:29.478" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 13:23:29.478" starttime="20201028 13:23:29.472"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 13:23:29.481" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 13:23:29.481" starttime="20201028 13:23:29.480"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:23:29.482" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 13:23:29.482" starttime="20201028 13:23:29.481"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.482" starttime="20201028 13:23:29.480"></status>
</kw>
<msg timestamp="20201028 13:23:29.482" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 13:23:29.482" starttime="20201028 13:23:29.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:23:29.483" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201028 13:23:29.483" starttime="20201028 13:23:29.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:23:29.483" level="INFO">${result} = /wordcount-03.txt</msg>
<status status="PASS" endtime="20201028 13:23:29.483" starttime="20201028 13:23:29.483"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.484" starttime="20201028 13:23:29.482"></status>
</kw>
<msg timestamp="20201028 13:23:29.484" level="INFO">${path_with_leading} = /wordcount-03.txt</msg>
<status status="PASS" endtime="20201028 13:23:29.484" starttime="20201028 13:23:29.482"></status>
</kw>
<status status="PASS" endtime="20201028 13:23:29.484" starttime="20201028 13:23:29.479"></status>
</kw>
<msg timestamp="20201028 13:23:29.484" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-03.txt</msg>
<status status="PASS" endtime="20201028 13:23:29.484" starttime="20201028 13:23:29.479"></status>
</kw>
<msg timestamp="20201028 13:23:29.484" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-03.txt</msg>
<status status="PASS" endtime="20201028 13:23:29.484" starttime="20201028 13:23:29.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:23:29.487" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-03.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:24:06.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:24:06.200" level="INFO">${output} = 2020-10-28 13:23:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:23:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 13:24:06.200" starttime="20201028 13:23:29.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:24:06.202" level="INFO">2020-10-28 13:23:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:23:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:23:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:23:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:23:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:23:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:23:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9A51F741F707-&gt;dbe47907-da1c-4b53-a4c3-0f7efea530a4
2020-10-28 13:23:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:23:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:23:32 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:23:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603891209229_0004
2020-10-28 13:23:33 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:23:33 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 13:23:33 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 13:23:33 INFO  YarnClientImpl:329 - Submitted application application_1603891209229_0004
2020-10-28 13:23:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603891209229_0004/
2020-10-28 13:23:33 INFO  Job:1619 - Running job: job_1603891209229_0004
2020-10-28 13:23:41 INFO  Job:1640 - Job job_1603891209229_0004 running in uber mode : false
2020-10-28 13:23:41 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:23:48 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:23:52 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:23:58 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:24:02 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:24:05 INFO  Job:1658 - Job job_1603891209229_0004 completed successfully
2020-10-28 13:24:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37444
		Total time spent by all reduces in occupied slots (ms)=14308
		Total time spent by all map tasks (ms)=9361
		Total time spent by all reduce tasks (ms)=3577
		Total vcore-milliseconds taken by all map tasks=9361
		Total vcore-milliseconds taken by all reduce tasks=3577
		Total megabyte-milliseconds taken by all map tasks=38342656
		Total megabyte-milliseconds taken by all reduce tasks=14651392
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=646
		CPU time spent (ms)=7510
		Physical memory (bytes) snapshot=1482326016
		Virtual memory (bytes) snapshot=16084226048
		Total committed heap usage (bytes)=1681391616
		Peak Map Physical memory (bytes)=374697984
		Peak Map Virtual memory (bytes)=4018405376
		Peak Reduce Physical memory (bytes)=370335744
		Peak Reduce Virtual memory (bytes)=4035465216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 13:24:06.202" starttime="20201028 13:24:06.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:24:06.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:24:06.203" starttime="20201028 13:24:06.202"></status>
</kw>
<status status="PASS" endtime="20201028 13:24:06.203" starttime="20201028 13:23:29.485"></status>
</kw>
<msg timestamp="20201028 13:24:06.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:24:06.203" starttime="20201028 13:23:29.485"></status>
</kw>
<msg timestamp="20201028 13:24:06.204" level="INFO">${output} = 2020-10-28 13:23:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:23:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 13:24:06.204" starttime="20201028 13:23:29.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 13:24:06.204" starttime="20201028 13:24:06.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:24:06.205" starttime="20201028 13:24:06.204"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:24:06.205" critical="yes" starttime="20201028 13:23:29.454"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 13:24:06.205" starttime="20201028 13:22:55.235"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:19.772" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:19.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:19.777" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:19.777" starttime="20201028 13:21:19.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:19.778" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:19.778" starttime="20201028 13:21:19.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:19.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:19.778" starttime="20201028 13:21:19.778"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:19.779" starttime="20201028 13:21:19.766"></status>
</kw>
<msg timestamp="20201028 13:21:19.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:19.779" starttime="20201028 13:21:19.766"></status>
</kw>
<msg timestamp="20201028 13:21:19.779" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:19.779" starttime="20201028 13:21:19.766"></status>
</kw>
<msg timestamp="20201028 13:21:19.779" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:19.779" starttime="20201028 13:21:19.765"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:21:19.782" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:21:19.782" starttime="20201028 13:21:19.782"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:21:19.783" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:21:19.783" starttime="20201028 13:21:19.782"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:19.783" starttime="20201028 13:21:19.781"></status>
</kw>
<msg timestamp="20201028 13:21:19.783" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:21:19.783" starttime="20201028 13:21:19.781"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:19.783" starttime="20201028 13:21:19.780"></status>
</kw>
<msg timestamp="20201028 13:21:19.783" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:21:19.783" starttime="20201028 13:21:19.780"></status>
</kw>
<msg timestamp="20201028 13:21:19.783" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:21:19.783" starttime="20201028 13:21:19.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:19.787" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:59.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:59.604" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:21:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:21:21 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 13:21:59.604" starttime="20201028 13:21:19.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:59.605" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:21:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:21:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:21:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:21:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:21:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B56EF32B66ED-&gt;dbe47907-da1c-4b53-a4c3-0f7efea530a4
2020-10-28 13:21:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 13:21:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:21:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:21:23 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:21:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603891209229_0001
2020-10-28 13:21:23 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:21:24 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 13:21:24 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 13:21:24 INFO  YarnClientImpl:329 - Submitted application application_1603891209229_0001
2020-10-28 13:21:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603891209229_0001/
2020-10-28 13:21:24 INFO  Job:1619 - Running job: job_1603891209229_0001
2020-10-28 13:21:33 INFO  Job:1640 - Job job_1603891209229_0001 running in uber mode : false
2020-10-28 13:21:33 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:21:40 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:21:45 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:21:51 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:21:55 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:21:58 INFO  Job:1658 - Job job_1603891209229_0001 completed successfully
2020-10-28 13:21:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37748
		Total time spent by all reduces in occupied slots (ms)=14820
		Total time spent by all map tasks (ms)=9437
		Total time spent by all reduce tasks (ms)=3705
		Total vcore-milliseconds taken by all map tasks=9437
		Total vcore-milliseconds taken by all reduce tasks=3705
		Total megabyte-milliseconds taken by all map tasks=38653952
		Total megabyte-milliseconds taken by all reduce tasks=15175680
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=628
		CPU time spent (ms)=6650
		Physical memory (bytes) snapshot=1483259904
		Virtual memory (bytes) snapshot=16063606784
		Total committed heap usage (bytes)=1698168832
		Peak Map Physical memory (bytes)=378351616
		Peak Map Virtual memory (bytes)=4016111616
		Peak Reduce Physical memory (bytes)=381714432
		Peak Reduce Virtual memory (bytes)=4037312512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.147 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 13:21:59.605" starttime="20201028 13:21:59.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:59.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:59.606" starttime="20201028 13:21:59.605"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.606" starttime="20201028 13:21:19.784"></status>
</kw>
<msg timestamp="20201028 13:21:59.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:59.606" starttime="20201028 13:21:19.784"></status>
</kw>
<msg timestamp="20201028 13:21:59.606" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 13:21:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:21:21 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 13:21:59.606" starttime="20201028 13:21:19.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:21:59.607" starttime="20201028 13:21:59.607"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:21:59.607" critical="yes" starttime="20201028 13:21:19.765"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:59.611" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:21:59.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:21:59.617" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:59.617" starttime="20201028 13:21:59.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:21:59.618" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:59.618" starttime="20201028 13:21:59.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:21:59.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:21:59.619" starttime="20201028 13:21:59.618"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.619" starttime="20201028 13:21:59.609"></status>
</kw>
<msg timestamp="20201028 13:21:59.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:21:59.619" starttime="20201028 13:21:59.609"></status>
</kw>
<msg timestamp="20201028 13:21:59.619" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:59.619" starttime="20201028 13:21:59.608"></status>
</kw>
<msg timestamp="20201028 13:21:59.619" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 13:21:59.620" starttime="20201028 13:21:59.608"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 13:21:59.620" level="INFO">${random} = 58</msg>
<status status="PASS" endtime="20201028 13:21:59.620" starttime="20201028 13:21:59.620"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:21:59.623" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:21:59.623" starttime="20201028 13:21:59.623"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:21:59.624" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:21:59.624" starttime="20201028 13:21:59.623"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.624" starttime="20201028 13:21:59.622"></status>
</kw>
<msg timestamp="20201028 13:21:59.624" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:21:59.624" starttime="20201028 13:21:59.622"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.624" starttime="20201028 13:21:59.621"></status>
</kw>
<msg timestamp="20201028 13:21:59.624" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:21:59.624" starttime="20201028 13:21:59.621"></status>
</kw>
<msg timestamp="20201028 13:21:59.624" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 13:21:59.624" starttime="20201028 13:21:59.620"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:21:59.627" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:21:59.627" starttime="20201028 13:21:59.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:21:59.628" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:21:59.628" starttime="20201028 13:21:59.627"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.628" starttime="20201028 13:21:59.626"></status>
</kw>
<msg timestamp="20201028 13:21:59.628" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:21:59.628" starttime="20201028 13:21:59.626"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.628" starttime="20201028 13:21:59.626"></status>
</kw>
<msg timestamp="20201028 13:21:59.628" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 13:21:59.628" starttime="20201028 13:21:59.625"></status>
</kw>
<msg timestamp="20201028 13:21:59.628" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 13:21:59.628" starttime="20201028 13:21:59.625"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 13:21:59.631" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 13:21:59.631" starttime="20201028 13:21:59.631"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 13:21:59.632" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 13:21:59.632" starttime="20201028 13:21:59.631"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.632" starttime="20201028 13:21:59.630"></status>
</kw>
<msg timestamp="20201028 13:21:59.632" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 13:21:59.632" starttime="20201028 13:21:59.630"></status>
</kw>
<status status="PASS" endtime="20201028 13:21:59.632" starttime="20201028 13:21:59.629"></status>
</kw>
<msg timestamp="20201028 13:21:59.632" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-58.txt</msg>
<status status="PASS" endtime="20201028 13:21:59.632" starttime="20201028 13:21:59.629"></status>
</kw>
<msg timestamp="20201028 13:21:59.632" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-58.txt</msg>
<status status="PASS" endtime="20201028 13:21:59.632" starttime="20201028 13:21:59.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 13:21:59.637" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-58.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 13:22:41.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 13:22:41.245" level="INFO">${output} = 2020-10-28 13:22:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:22:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 13:22:41.245" starttime="20201028 13:21:59.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 13:22:41.246" level="INFO">2020-10-28 13:22:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:22:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 13:22:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 13:22:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 13:22:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 13:22:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 13:22:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-37F337012D26-&gt;dbe47907-da1c-4b53-a4c3-0f7efea530a4
2020-10-28 13:22:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 13:22:03 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 13:22:05 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 13:22:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603891209229_0002
2020-10-28 13:22:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 13:22:06 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 13:22:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 13:22:06 INFO  YarnClientImpl:329 - Submitted application application_1603891209229_0002
2020-10-28 13:22:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603891209229_0002/
2020-10-28 13:22:06 INFO  Job:1619 - Running job: job_1603891209229_0002
2020-10-28 13:22:13 INFO  Job:1640 - Job job_1603891209229_0002 running in uber mode : false
2020-10-28 13:22:13 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 13:22:20 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 13:22:26 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 13:22:31 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 13:22:37 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 13:22:40 INFO  Job:1658 - Job job_1603891209229_0002 completed successfully
2020-10-28 13:22:40 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39324
		Total time spent by all reduces in occupied slots (ms)=23992
		Total time spent by all map tasks (ms)=9831
		Total time spent by all reduce tasks (ms)=5998
		Total vcore-milliseconds taken by all map tasks=9831
		Total vcore-milliseconds taken by all reduce tasks=5998
		Total megabyte-milliseconds taken by all map tasks=40267776
		Total megabyte-milliseconds taken by all reduce tasks=24567808
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=639
		CPU time spent (ms)=7390
		Physical memory (bytes) snapshot=1470947328
		Virtual memory (bytes) snapshot=16087195648
		Total committed heap usage (bytes)=1681915904
		Peak Map Physical memory (bytes)=372699136
		Peak Map Virtual memory (bytes)=4018360320
		Peak Reduce Physical memory (bytes)=374525952
		Peak Reduce Virtual memory (bytes)=4037738496
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 13:22:41.246" starttime="20201028 13:22:41.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 13:22:41.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 13:22:41.247" starttime="20201028 13:22:41.247"></status>
</kw>
<status status="PASS" endtime="20201028 13:22:41.247" starttime="20201028 13:21:59.633"></status>
</kw>
<msg timestamp="20201028 13:22:41.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 13:22:41.248" starttime="20201028 13:21:59.633"></status>
</kw>
<msg timestamp="20201028 13:22:41.248" level="INFO">${output} = 2020-10-28 13:22:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-28 13:22:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 13:22:41.248" starttime="20201028 13:21:59.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 13:22:41.248" starttime="20201028 13:22:41.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 13:22:41.249" starttime="20201028 13:22:41.249"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 13:22:41.249" critical="yes" starttime="20201028 13:21:59.608"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 13:22:41.250" starttime="20201028 13:21:19.723"></status>
</suite>
<status status="PASS" elapsedtime="200214" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="565984" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
