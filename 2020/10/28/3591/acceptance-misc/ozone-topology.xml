<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 02:05:30.659" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201028 02:02:40.717" starttime="20201028 02:02:40.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:02:40.722" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:02:40.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:02:40.802" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 28 Oct 2020 02:02:40 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 28 Oct 2020 01:26:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201028 02:02:40.802" starttime="20201028 02:02:40.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:02:40.803" level="INFO">HTTP/1.1 200 OK
Date: Wed, 28 Oct 2020 02:02:40 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 28 Oct 2020 01:26:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201028 02:02:40.803" starttime="20201028 02:02:40.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:02:40.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:02:40.804" starttime="20201028 02:02:40.803"></status>
</kw>
<status status="PASS" endtime="20201028 02:02:40.804" starttime="20201028 02:02:40.718"></status>
</kw>
<msg timestamp="20201028 02:02:40.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:02:40.805" starttime="20201028 02:02:40.718"></status>
</kw>
<msg timestamp="20201028 02:02:40.805" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 28 Oct 2020 02:02:40 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 28 Oct 2020 01:26:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201028 02:02:40.805" starttime="20201028 02:02:40.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201028 02:02:40.805" starttime="20201028 02:02:40.805"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:02:40.806" critical="yes" starttime="20201028 02:02:40.716"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201028 02:02:40.808" starttime="20201028 02:02:40.807"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:02:40.812" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:03:42.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:03:42.385" level="INFO">${output} = 2020-10-28 02:02:42,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:02:42,723 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:03:42.385" starttime="20201028 02:02:40.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:03:42.386" level="INFO">2020-10-28 02:02:42,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:02:42,723 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 02:02:42,723 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 02:02:45,007 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-28 02:02:45,010 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-10-28 02:02:45,010 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-10-28 02:02:45,011 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-10-28 02:02:45,011 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-28 02:02:45,011 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-28 02:02:45,011 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-10-28 02:02:45,029 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-10-28 02:02:45,031 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-28 02:02:45,038 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-28 02:02:45,126 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-09959, with hadoop as owner.
2020-10-28 02:02:45,483 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-70620, with hadoop as owner.
2020-10-28 02:02:45,498 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-00564, with hadoop as owner.
2020-10-28 02:02:45,507 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-57743, with hadoop as owner.
2020-10-28 02:02:45,515 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-38710, with hadoop as owner.
2020-10-28 02:02:45,532 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09959/bucket-0-97257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,608 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-70620/bucket-0-13040, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00564/bucket-0-27745, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,628 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57743/bucket-0-15944, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,634 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-38710/bucket-0-84009, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,639 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09959/bucket-1-01963, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,658 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-70620/bucket-1-29184, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,669 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00564/bucket-1-83778, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,676 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57743/bucket-1-30783, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,731 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-38710/bucket-1-30378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,737 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09959/bucket-2-69257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,748 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-70620/bucket-2-01130, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,754 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00564/bucket-2-35471, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,762 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57743/bucket-2-77918, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,768 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-38710/bucket-2-25841, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,776 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09959/bucket-3-78173, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,787 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-70620/bucket-3-06399, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,797 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00564/bucket-3-10764, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,803 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57743/bucket-3-75782, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,814 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-38710/bucket-3-40821, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,821 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09959/bucket-4-19194, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,826 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-70620/bucket-4-74323, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,832 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00564/bucket-4-45000, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,837 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57743/bucket-4-75433, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:45,842 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-38710/bucket-4-88838, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:02:46,040 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-28 02:02:47,041 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-28 02:02:47,178 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-28 02:02:47,557 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 02:02:47,557 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A1CB5CCD3227-&gt;c9fde899-5cd5-4bbe-a98f-eb05d1d92637
2020-10-28 02:02:47,559 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 02:02:48,041 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-28 02:02:49,041 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-28 02:02:49,887 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-9ECE3E1D7C73-&gt;8612fe00-7e64-45cf-95b0-304e9f3162d2
2020-10-28 02:02:49,887 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 02:02:50,050 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-28 02:02:51,054 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-28 02:02:52,054 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-28 02:02:53,055 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-10-28 02:02:54,055 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-28 02:02:55,072 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-10-28 02:02:56,072 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-10-28 02:02:57,074 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-10-28 02:02:58,074 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-10-28 02:02:59,075 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-10-28 02:03:00,075 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-10-28 02:03:01,076 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-10-28 02:03:02,076 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-10-28 02:03:03,077 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-10-28 02:03:04,077 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-10-28 02:03:05,078 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-10-28 02:03:06,078 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-10-28 02:03:07,079 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-10-28 02:03:08,079 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-10-28 02:03:09,080 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-10-28 02:03:10,082 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-10-28 02:03:11,082 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-10-28 02:03:12,082 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-10-28 02:03:13,083 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-10-28 02:03:14,083 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-10-28 02:03:15,084 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-10-28 02:03:16,084 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-10-28 02:03:17,085 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-10-28 02:03:18,085 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-10-28 02:03:19,086 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-10-28 02:03:20,086 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-10-28 02:03:21,087 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-10-28 02:03:22,087 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-10-28 02:03:23,087 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-28 02:03:24,088 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-28 02:03:25,088 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-28 02:03:26,089 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-10-28 02:03:27,089 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-10-28 02:03:28,090 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-10-28 02:03:29,090 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-10-28 02:03:30,091 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-10-28 02:03:31,091 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-10-28 02:03:32,091 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-10-28 02:03:33,092 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-10-28 02:03:34,092 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-10-28 02:03:35,093 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-10-28 02:03:36,093 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-10-28 02:03:37,096 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,453
Average Time spent in bucket creation: 00:00:00,223
Average Time spent in key creation: 00:00:01,997
Average Time spent in key write: 00:00:01,217
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:59,025
***************************************************</msg>
<status status="PASS" endtime="20201028 02:03:42.386" starttime="20201028 02:03:42.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:03:42.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:03:42.387" starttime="20201028 02:03:42.386"></status>
</kw>
<status status="PASS" endtime="20201028 02:03:42.387" starttime="20201028 02:02:40.809"></status>
</kw>
<msg timestamp="20201028 02:03:42.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:03:42.387" starttime="20201028 02:02:40.809"></status>
</kw>
<msg timestamp="20201028 02:03:42.388" level="INFO">${result} = 2020-10-28 02:02:42,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:02:42,723 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:03:42.388" starttime="20201028 02:02:40.808"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201028 02:03:42.389" starttime="20201028 02:03:42.388"></status>
</kw>
<status status="PASS" endtime="20201028 02:03:42.389" starttime="20201028 02:03:42.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201028 02:03:42.389" starttime="20201028 02:03:42.389"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:03:42.389" critical="yes" starttime="20201028 02:02:40.806"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 02:03:42.390" starttime="20201028 02:02:40.671"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:03:46.896" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:03:49.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:03:49.415" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201028 02:03:49.415" starttime="20201028 02:03:46.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:03:49.416" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201028 02:03:49.416" starttime="20201028 02:03:49.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:03:49.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:03:49.417" starttime="20201028 02:03:49.416"></status>
</kw>
<status status="PASS" endtime="20201028 02:03:49.417" starttime="20201028 02:03:46.891"></status>
</kw>
<msg timestamp="20201028 02:03:49.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:03:49.417" starttime="20201028 02:03:46.891"></status>
</kw>
<msg timestamp="20201028 02:03:49.418" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201028 02:03:49.418" starttime="20201028 02:03:46.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201028 02:03:49.418" starttime="20201028 02:03:49.418"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:03:49.419" critical="yes" starttime="20201028 02:03:46.889"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:03:49.424" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:03:51.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:03:51.851" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201028 02:03:51.851" starttime="20201028 02:03:49.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:03:51.853" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201028 02:03:51.853" starttime="20201028 02:03:51.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:03:51.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:03:51.853" starttime="20201028 02:03:51.853"></status>
</kw>
<status status="PASS" endtime="20201028 02:03:51.854" starttime="20201028 02:03:49.421"></status>
</kw>
<msg timestamp="20201028 02:03:51.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:03:51.854" starttime="20201028 02:03:49.421"></status>
</kw>
<msg timestamp="20201028 02:03:51.854" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201028 02:03:51.854" starttime="20201028 02:03:49.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201028 02:03:51.855" starttime="20201028 02:03:51.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201028 02:03:51.855" starttime="20201028 02:03:51.855"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:03:51.855" critical="yes" starttime="20201028 02:03:49.420"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 02:03:51.857" starttime="20201028 02:03:46.840"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:03:56.374" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:03:59.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:03:59.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:03:59.103" starttime="20201028 02:03:56.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:03:59.104" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:03:59.104" starttime="20201028 02:03:59.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:03:59.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:03:59.104" starttime="20201028 02:03:59.104"></status>
</kw>
<status status="PASS" endtime="20201028 02:03:59.105" starttime="20201028 02:03:56.370"></status>
</kw>
<msg timestamp="20201028 02:03:59.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:03:59.105" starttime="20201028 02:03:56.370"></status>
</kw>
<msg timestamp="20201028 02:03:59.105" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:03:59.105" starttime="20201028 02:03:56.369"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 02:03:59.106" starttime="20201028 02:03:59.105"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:03:59.109" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:04:01.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:04:01.815" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:04:01.815" starttime="20201028 02:03:59.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:04:01.816" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:04:01.816" starttime="20201028 02:04:01.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:04:01.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:04:01.816" starttime="20201028 02:04:01.816"></status>
</kw>
<status status="PASS" endtime="20201028 02:04:01.817" starttime="20201028 02:03:59.106"></status>
</kw>
<msg timestamp="20201028 02:04:01.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:04:01.817" starttime="20201028 02:03:59.106"></status>
</kw>
<msg timestamp="20201028 02:04:01.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:04:01.817" starttime="20201028 02:03:59.106"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 02:04:01.818" starttime="20201028 02:04:01.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:04:01.822" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:04:06.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:04:06.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:04:06.809" starttime="20201028 02:04:01.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:04:06.810" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:04:06.811" starttime="20201028 02:04:06.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:04:06.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:04:06.811" starttime="20201028 02:04:06.811"></status>
</kw>
<status status="PASS" endtime="20201028 02:04:06.812" starttime="20201028 02:04:01.819"></status>
</kw>
<msg timestamp="20201028 02:04:06.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:04:06.812" starttime="20201028 02:04:01.818"></status>
</kw>
<msg timestamp="20201028 02:04:06.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:04:06.812" starttime="20201028 02:04:01.818"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 02:04:06.815" starttime="20201028 02:04:06.812"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:04:06.816" critical="yes" starttime="20201028 02:03:56.368"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 02:04:06.818" starttime="20201028 02:03:56.321"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 02:04:49.888" level="INFO">${random} = 08606</msg>
<status status="PASS" endtime="20201028 02:04:49.888" starttime="20201028 02:04:49.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:04:49.894" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-08606 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:05:24.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:05:24.550" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:05:24.550" starttime="20201028 02:04:49.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:05:24.551" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:05:24.551" starttime="20201028 02:05:24.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:05:24.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:05:24.552" starttime="20201028 02:05:24.551"></status>
</kw>
<status status="PASS" endtime="20201028 02:05:24.552" starttime="20201028 02:04:49.890"></status>
</kw>
<msg timestamp="20201028 02:05:24.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:05:24.552" starttime="20201028 02:04:49.889"></status>
</kw>
<msg timestamp="20201028 02:05:24.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:05:24.552" starttime="20201028 02:04:49.889"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 02:05:24.553" starttime="20201028 02:05:24.552"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:05:24.553" critical="yes" starttime="20201028 02:04:49.887"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 02:05:24.554" starttime="20201028 02:04:49.841"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 02:04:13.195" level="INFO">${random} = 58136</msg>
<status status="PASS" endtime="20201028 02:04:13.195" starttime="20201028 02:04:13.195"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:04:13.201" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-58136 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:04:17.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:04:17.861" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:04:17.861" starttime="20201028 02:04:13.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:04:17.863" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:04:17.863" starttime="20201028 02:04:17.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:04:17.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:04:17.863" starttime="20201028 02:04:17.863"></status>
</kw>
<status status="PASS" endtime="20201028 02:04:17.864" starttime="20201028 02:04:13.196"></status>
</kw>
<msg timestamp="20201028 02:04:17.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:04:17.864" starttime="20201028 02:04:13.196"></status>
</kw>
<msg timestamp="20201028 02:04:17.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:04:17.864" starttime="20201028 02:04:13.195"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 02:04:17.865" starttime="20201028 02:04:17.864"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:04:17.865" critical="yes" starttime="20201028 02:04:13.194"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 02:04:17.867" starttime="20201028 02:04:13.148"></status>
</suite>
<status status="PASS" elapsedtime="116665" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
