<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 01:37:14.857" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:37:04.253" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:37:04.254" level="INFO">${rc} = 1</msg>
<msg timestamp="20201028 01:37:04.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:37:04.254" starttime="20201028 01:37:04.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:37:04.255" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:37:04.255" starttime="20201028 01:37:04.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:37:04.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201028 01:37:04.256" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201028 01:37:04.256" starttime="20201028 01:37:04.255"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:04.256" starttime="20201028 01:37:04.247"></status>
</kw>
<msg timestamp="20201028 01:37:04.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201028 01:37:04.256" starttime="20201028 01:37:04.247"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:04.257" starttime="20201028 01:37:04.247"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:04.257" starttime="20201028 01:37:04.246"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:37:05.263" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:37:05.264" level="INFO">${rc} = 1</msg>
<msg timestamp="20201028 01:37:05.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:37:05.265" starttime="20201028 01:37:05.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:37:05.265" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:37:05.266" starttime="20201028 01:37:05.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:37:05.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201028 01:37:05.266" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201028 01:37:05.266" starttime="20201028 01:37:05.266"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:05.267" starttime="20201028 01:37:05.259"></status>
</kw>
<msg timestamp="20201028 01:37:05.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201028 01:37:05.267" starttime="20201028 01:37:05.259"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:05.267" starttime="20201028 01:37:05.258"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:05.267" starttime="20201028 01:37:05.257"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:37:06.272" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:37:06.274" level="INFO">${rc} = 1</msg>
<msg timestamp="20201028 01:37:06.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:37:06.274" starttime="20201028 01:37:06.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:37:06.275" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:37:06.276" starttime="20201028 01:37:06.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:37:06.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201028 01:37:06.276" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201028 01:37:06.277" starttime="20201028 01:37:06.276"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:06.277" starttime="20201028 01:37:06.269"></status>
</kw>
<msg timestamp="20201028 01:37:06.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201028 01:37:06.277" starttime="20201028 01:37:06.269"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:06.277" starttime="20201028 01:37:06.268"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:06.277" starttime="20201028 01:37:06.268"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:37:07.283" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:37:07.286" level="INFO">${rc} = 1</msg>
<msg timestamp="20201028 01:37:07.286" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:37:07.286" starttime="20201028 01:37:07.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:37:07.287" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:37:07.287" starttime="20201028 01:37:07.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:37:07.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201028 01:37:07.289" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201028 01:37:07.289" starttime="20201028 01:37:07.288"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:07.289" starttime="20201028 01:37:07.279"></status>
</kw>
<msg timestamp="20201028 01:37:07.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201028 01:37:07.289" starttime="20201028 01:37:07.279"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:07.289" starttime="20201028 01:37:07.278"></status>
</kw>
<status status="FAIL" endtime="20201028 01:37:07.289" starttime="20201028 01:37:07.278"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:37:08.294" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:37:08.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:37:08.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:37:08.296" starttime="20201028 01:37:08.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:37:08.297" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:37:08.297" starttime="20201028 01:37:08.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:37:08.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:37:08.298" starttime="20201028 01:37:08.297"></status>
</kw>
<status status="PASS" endtime="20201028 01:37:08.298" starttime="20201028 01:37:08.291"></status>
</kw>
<msg timestamp="20201028 01:37:08.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:37:08.298" starttime="20201028 01:37:08.291"></status>
</kw>
<status status="PASS" endtime="20201028 01:37:08.298" starttime="20201028 01:37:08.290"></status>
</kw>
<status status="PASS" endtime="20201028 01:37:08.298" starttime="20201028 01:37:08.290"></status>
</kw>
<status status="PASS" endtime="20201028 01:37:08.298" starttime="20201028 01:37:04.246"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201028 01:37:08.299" critical="yes" starttime="20201028 01:37:04.245"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:37:08.303" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:37:08.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:37:08.621" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201028 01:37:08.622" starttime="20201028 01:37:08.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:37:08.623" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201028 01:37:08.623" starttime="20201028 01:37:08.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:37:08.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:37:08.624" starttime="20201028 01:37:08.623"></status>
</kw>
<status status="PASS" endtime="20201028 01:37:08.624" starttime="20201028 01:37:08.301"></status>
</kw>
<msg timestamp="20201028 01:37:08.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:37:08.624" starttime="20201028 01:37:08.301"></status>
</kw>
<msg timestamp="20201028 01:37:08.624" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201028 01:37:08.624" starttime="20201028 01:37:08.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201028 01:37:08.625" starttime="20201028 01:37:08.624"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201028 01:37:08.625" critical="yes" starttime="20201028 01:37:08.299"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201028 01:37:08.626" starttime="20201028 01:37:04.196"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
