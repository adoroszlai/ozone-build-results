<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 02:25:23.224" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:13.813" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:24.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:24.448" level="INFO">${output} = 2020-10-28 02:21:15,776 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:15,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:24.448" starttime="20201028 02:21:13.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:24.449" level="INFO">2020-10-28 02:21:15,776 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:15,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 02:21:15,974 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 02:21:18,457 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-28 02:21:18,457 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-28 02:21:18,457 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-28 02:21:18,457 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-28 02:21:18,457 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-28 02:21:18,458 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-28 02:21:18,458 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-28 02:21:18,467 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-28 02:21:18,480 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:18,568 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-37452, with testuser/scm@EXAMPLE.COM as owner.
2020-10-28 02:21:19,123 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-37452/bucket-0-74188, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:21:19,482 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:20,490 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:21,499 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:21,899 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-28 02:21:22,500 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,588
Average Time spent in bucket creation: 00:00:00,191
Average Time spent in key creation: 00:00:01,336
Average Time spent in key write: 00:00:01,784
Total bytes written: 10240
Total Execution time: 00:00:07,905
***************************************************</msg>
<status status="PASS" endtime="20201028 02:21:24.449" starttime="20201028 02:21:24.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:24.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:24.450" starttime="20201028 02:21:24.449"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:24.450" starttime="20201028 02:21:13.809"></status>
</kw>
<msg timestamp="20201028 02:21:24.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:24.450" starttime="20201028 02:21:13.808"></status>
</kw>
<msg timestamp="20201028 02:21:24.451" level="INFO">${result} = 2020-10-28 02:21:15,776 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:15,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:24.451" starttime="20201028 02:21:13.808"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:21:24.452" starttime="20201028 02:21:24.452"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:24.452" starttime="20201028 02:21:24.451"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:21:24.452" critical="yes" starttime="20201028 02:21:13.807"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:24.458" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:35.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:35.015" level="INFO">${output} = 2020-10-28 02:21:26,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:26,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:35.015" starttime="20201028 02:21:24.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:35.017" level="INFO">2020-10-28 02:21:26,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:26,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 02:21:26,324 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 02:21:26,485 [main] INFO freon.BaseFreonGenerator: Executing test with prefix avmymotloz
2020-10-28 02:21:26,501 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 02:21:27,502 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:28,029 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-28 02:21:28,096 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-28 02:21:28,503 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:28,770 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-28 02:21:29,111 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 02:21:29,112 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-894DB07272DD-&gt;d6b721a4-9c77-4be5-ae4d-35aab3567d93
2020-10-28 02:21:29,113 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 02:21:29,503 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:30,504 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:31,505 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:32,505 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:33,506 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:34,506 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-28 02:21:34,660 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5631.181858, max=5631.181858, mean=5631.181858, stddev=0.0, median=5631.181858, p75=5631.181858, p95=5631.181858, p98=5631.181858, p99=5631.181858, p999=5631.181858, mean_rate=0.15380673897628516, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-28 02:21:34,661 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2020-10-28 02:21:34,677 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-28 02:21:34,677 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201028 02:21:35.017" starttime="20201028 02:21:35.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:35.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:35.018" starttime="20201028 02:21:35.017"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:35.018" starttime="20201028 02:21:24.456"></status>
</kw>
<msg timestamp="20201028 02:21:35.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:35.018" starttime="20201028 02:21:24.455"></status>
</kw>
<msg timestamp="20201028 02:21:35.019" level="INFO">${result} = 2020-10-28 02:21:26,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:26,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:35.019" starttime="20201028 02:21:24.455"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:21:35.020" starttime="20201028 02:21:35.019"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:35.020" starttime="20201028 02:21:35.019"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:21:35.020" critical="yes" starttime="20201028 02:21:24.454"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:35.025" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:39.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:39.609" level="INFO">${output} = 2020-10-28 02:21:36,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:36,846 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:39.609" starttime="20201028 02:21:35.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:39.611" level="INFO">2020-10-28 02:21:36,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:36,846 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 02:21:36,846 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 02:21:37,021 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pj9pvzb8nh
2020-10-28 02:21:37,036 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 02:21:38,046 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:39,047 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-28 02:21:39,527 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=226.091686, max=226.091686, mean=226.091686, stddev=0.0, median=226.091686, p75=226.091686, p95=226.091686, p98=226.091686, p99=226.091686, p999=226.091686, mean_rate=0.8901193804257828, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-28 02:21:39,528 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-28 02:21:39,528 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-28 02:21:39,528 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201028 02:21:39.611" starttime="20201028 02:21:39.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:39.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:39.612" starttime="20201028 02:21:39.611"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:39.612" starttime="20201028 02:21:35.022"></status>
</kw>
<msg timestamp="20201028 02:21:39.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:39.613" starttime="20201028 02:21:35.022"></status>
</kw>
<msg timestamp="20201028 02:21:39.613" level="INFO">${result} = 2020-10-28 02:21:36,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:36,846 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:39.613" starttime="20201028 02:21:35.021"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:21:39.614" starttime="20201028 02:21:39.614"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:39.614" starttime="20201028 02:21:39.613"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:21:39.614" critical="yes" starttime="20201028 02:21:35.021"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:39.619" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:44.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:44.218" level="INFO">${output} = 2020-10-28 02:21:41,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:41,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:44.219" starttime="20201028 02:21:39.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:44.220" level="INFO">2020-10-28 02:21:41,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:41,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-28 02:21:41,455 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-28 02:21:41,594 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mz7krprf67
2020-10-28 02:21:41,620 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-28 02:21:42,628 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-28 02:21:43,629 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-28 02:21:44,153 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=73.488132, max=73.488132, mean=73.488132, stddev=0.0, median=73.488132, p75=73.488132, p95=73.488132, p98=73.488132, p99=73.488132, p999=73.488132, mean_rate=0.8945040470033181, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-28 02:21:44,167 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-28 02:21:44,168 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-28 02:21:44,168 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201028 02:21:44.220" starttime="20201028 02:21:44.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:44.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:44.220" starttime="20201028 02:21:44.220"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:44.221" starttime="20201028 02:21:39.617"></status>
</kw>
<msg timestamp="20201028 02:21:44.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:44.221" starttime="20201028 02:21:39.616"></status>
</kw>
<msg timestamp="20201028 02:21:44.221" level="INFO">${result} = 2020-10-28 02:21:41,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-28 02:21:41,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201028 02:21:44.221" starttime="20201028 02:21:39.616"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:21:44.222" starttime="20201028 02:21:44.222"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:44.222" starttime="20201028 02:21:44.221"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 02:21:44.222" critical="yes" starttime="20201028 02:21:39.615"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201028 02:21:44.224" starttime="20201028 02:21:13.782"></status>
</suite>
<status status="PASS" endtime="20201028 02:21:44.227" starttime="20201028 02:21:13.757"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:08.378" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:08.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:08.380" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:21:08.380" starttime="20201028 02:21:08.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:08.381" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:21:08.381" starttime="20201028 02:21:08.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:08.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:08.382" starttime="20201028 02:21:08.381"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:08.382" starttime="20201028 02:21:08.373"></status>
</kw>
<msg timestamp="20201028 02:21:08.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:08.382" starttime="20201028 02:21:08.372"></status>
</kw>
<msg timestamp="20201028 02:21:08.382" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:21:08.383" starttime="20201028 02:21:08.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:21:08.383" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:21:08.383" starttime="20201028 02:21:08.383"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:08.388" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:08.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:08.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:21:08.400" starttime="20201028 02:21:08.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:08.401" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:21:08.401" starttime="20201028 02:21:08.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:08.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:08.401" starttime="20201028 02:21:08.401"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:08.402" starttime="20201028 02:21:08.384"></status>
</kw>
<msg timestamp="20201028 02:21:08.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:08.402" starttime="20201028 02:21:08.384"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:08.402" starttime="20201028 02:21:08.384"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:08.402" starttime="20201028 02:21:08.383"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:08.402" starttime="20201028 02:21:08.371"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:21:08.403" critical="yes" starttime="20201028 02:21:08.370"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201028 02:21:08.403" starttime="20201028 02:21:08.324"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 02:21:49.732" level="INFO">${random} = 63003</msg>
<status status="PASS" endtime="20201028 02:21:49.732" starttime="20201028 02:21:49.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201028 02:21:49.734" level="INFO">${source} = 63003-source</msg>
<status status="PASS" endtime="20201028 02:21:49.734" starttime="20201028 02:21:49.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201028 02:21:49.735" level="INFO">${target} = 63003-target</msg>
<status status="PASS" endtime="20201028 02:21:49.735" starttime="20201028 02:21:49.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:49.741" level="INFO">Running command 'ozone sh volume create 63003-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:53.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:53.709" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:21:53.709" starttime="20201028 02:21:49.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:53.710" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:21:53.710" starttime="20201028 02:21:53.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:53.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:53.711" starttime="20201028 02:21:53.710"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:53.711" starttime="20201028 02:21:49.736"></status>
</kw>
<msg timestamp="20201028 02:21:53.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:53.711" starttime="20201028 02:21:49.735"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:53.712" starttime="20201028 02:21:49.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:53.717" level="INFO">Running command 'ozone sh volume create 63003-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:21:57.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:21:57.236" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:21:57.236" starttime="20201028 02:21:53.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:21:57.237" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:21:57.237" starttime="20201028 02:21:57.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:21:57.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:21:57.238" starttime="20201028 02:21:57.238"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:57.238" starttime="20201028 02:21:53.713"></status>
</kw>
<msg timestamp="20201028 02:21:57.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:21:57.239" starttime="20201028 02:21:53.712"></status>
</kw>
<status status="PASS" endtime="20201028 02:21:57.239" starttime="20201028 02:21:53.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:21:57.243" level="INFO">Running command 'ozone sh bucket create 63003-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:00.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:00.887" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:00.887" starttime="20201028 02:21:57.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:00.888" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:00.888" starttime="20201028 02:22:00.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:00.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:00.889" starttime="20201028 02:22:00.888"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:00.889" starttime="20201028 02:21:57.241"></status>
</kw>
<msg timestamp="20201028 02:22:00.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:00.889" starttime="20201028 02:21:57.240"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:00.889" starttime="20201028 02:21:57.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:00.903" level="INFO">Running command 'ozone sh key put 63003-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:09.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:09.154" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:09.154" starttime="20201028 02:22:00.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:09.155" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:09.155" starttime="20201028 02:22:09.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:09.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:09.155" starttime="20201028 02:22:09.155"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:09.156" starttime="20201028 02:22:00.896"></status>
</kw>
<msg timestamp="20201028 02:22:09.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:09.156" starttime="20201028 02:22:00.890"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:09.156" starttime="20201028 02:22:00.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:09.160" level="INFO">Running command 'ozone sh bucket create 63003-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:12.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:12.462" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:12.462" starttime="20201028 02:22:09.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:12.463" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:12.463" starttime="20201028 02:22:12.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:12.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:12.464" starttime="20201028 02:22:12.463"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:12.464" starttime="20201028 02:22:09.157"></status>
</kw>
<msg timestamp="20201028 02:22:12.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:12.464" starttime="20201028 02:22:09.157"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:12.464" starttime="20201028 02:22:09.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:12.468" level="INFO">Running command 'ozone sh bucket link 63003-source/readable-bucket 63003-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:15.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:15.984" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:15.984" starttime="20201028 02:22:12.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:15.986" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:15.986" starttime="20201028 02:22:15.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:15.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:15.986" starttime="20201028 02:22:15.986"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:15.987" starttime="20201028 02:22:12.465"></status>
</kw>
<msg timestamp="20201028 02:22:15.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:15.987" starttime="20201028 02:22:12.465"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:15.987" starttime="20201028 02:22:12.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:15.991" level="INFO">Running command 'ozone sh bucket link 63003-source/readable-bucket 63003-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:19.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:19.419" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:19.419" starttime="20201028 02:22:15.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:19.420" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:19.420" starttime="20201028 02:22:19.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:19.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:19.421" starttime="20201028 02:22:19.420"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:19.421" starttime="20201028 02:22:15.988"></status>
</kw>
<msg timestamp="20201028 02:22:19.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:19.421" starttime="20201028 02:22:15.988"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:19.421" starttime="20201028 02:22:15.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:19.426" level="INFO">Running command 'ozone sh bucket link 63003-source/unreadable-bucket 63003-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:22.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:22.921" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:22.921" starttime="20201028 02:22:19.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:22.922" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:22.922" starttime="20201028 02:22:22.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:22.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:22.923" starttime="20201028 02:22:22.922"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:22.923" starttime="20201028 02:22:19.422"></status>
</kw>
<msg timestamp="20201028 02:22:22.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:22.923" starttime="20201028 02:22:19.422"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:22.924" starttime="20201028 02:22:19.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:22.927" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 63003-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:26.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:26.423" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:26.423" starttime="20201028 02:22:22.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:26.424" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 02:22:26.424" starttime="20201028 02:22:26.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:26.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:26.424" starttime="20201028 02:22:26.424"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:26.425" starttime="20201028 02:22:22.925"></status>
</kw>
<msg timestamp="20201028 02:22:26.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:26.425" starttime="20201028 02:22:22.924"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:26.425" starttime="20201028 02:22:22.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:26.430" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 63003-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:29.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:29.770" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:29.770" starttime="20201028 02:22:26.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:29.771" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 02:22:29.771" starttime="20201028 02:22:29.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:29.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:29.771" starttime="20201028 02:22:29.771"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:29.772" starttime="20201028 02:22:26.426"></status>
</kw>
<msg timestamp="20201028 02:22:29.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:29.772" starttime="20201028 02:22:26.426"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:29.772" starttime="20201028 02:22:26.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:29.776" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 63003-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:33.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:33.173" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:33.173" starttime="20201028 02:22:29.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:33.174" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 02:22:33.174" starttime="20201028 02:22:33.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:33.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:33.175" starttime="20201028 02:22:33.174"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:33.175" starttime="20201028 02:22:29.773"></status>
</kw>
<msg timestamp="20201028 02:22:33.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:33.175" starttime="20201028 02:22:29.773"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:33.175" starttime="20201028 02:22:29.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:33.179" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 63003-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:36.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:36.204" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:36.204" starttime="20201028 02:22:33.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:36.207" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 02:22:36.207" starttime="20201028 02:22:36.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:36.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:36.208" starttime="20201028 02:22:36.208"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:36.208" starttime="20201028 02:22:33.176"></status>
</kw>
<msg timestamp="20201028 02:22:36.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:36.209" starttime="20201028 02:22:33.176"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:36.209" starttime="20201028 02:22:33.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:36.213" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 63003-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:39.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:39.574" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:39.574" starttime="20201028 02:22:36.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:39.575" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 02:22:39.575" starttime="20201028 02:22:39.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:39.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:39.575" starttime="20201028 02:22:39.575"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.576" starttime="20201028 02:22:36.210"></status>
</kw>
<msg timestamp="20201028 02:22:39.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:39.576" starttime="20201028 02:22:36.209"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.576" starttime="20201028 02:22:36.209"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.576" starttime="20201028 02:21:57.239"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.577" starttime="20201028 02:21:57.239"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.577" starttime="20201028 02:21:49.732"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:39.583" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:39.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:39.586" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:22:39.586" starttime="20201028 02:22:39.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:39.587" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:22:39.587" starttime="20201028 02:22:39.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:39.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:39.588" starttime="20201028 02:22:39.588"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.588" starttime="20201028 02:22:39.580"></status>
</kw>
<msg timestamp="20201028 02:22:39.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:39.589" starttime="20201028 02:22:39.580"></status>
</kw>
<msg timestamp="20201028 02:22:39.589" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:22:39.589" starttime="20201028 02:22:39.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:22:39.590" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:22:39.590" starttime="20201028 02:22:39.589"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:39.594" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:39.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:39.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:22:39.611" starttime="20201028 02:22:39.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:39.612" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:22:39.612" starttime="20201028 02:22:39.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:39.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:39.612" starttime="20201028 02:22:39.612"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.613" starttime="20201028 02:22:39.592"></status>
</kw>
<msg timestamp="20201028 02:22:39.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:39.613" starttime="20201028 02:22:39.591"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.613" starttime="20201028 02:22:39.591"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.613" starttime="20201028 02:22:39.591"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.613" starttime="20201028 02:22:39.579"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:39.613" starttime="20201028 02:22:39.578"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:39.617" level="INFO">Running command 'ozone sh bucket link 63003-source/no-such-bucket 63003-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:43.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:43.176" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:43.176" starttime="20201028 02:22:39.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:43.177" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:43.178" starttime="20201028 02:22:43.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:43.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:43.178" starttime="20201028 02:22:43.178"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:43.179" starttime="20201028 02:22:39.614"></status>
</kw>
<msg timestamp="20201028 02:22:43.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:43.179" starttime="20201028 02:22:39.614"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:43.179" starttime="20201028 02:22:39.614"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:43.182" level="INFO">Running command 'ozone sh key list 63003-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:46.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 02:22:46.250" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:46.250" starttime="20201028 02:22:43.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:46.251" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201028 02:22:46.251" starttime="20201028 02:22:46.250"></status>
</kw>
<msg timestamp="20201028 02:22:46.252" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:46.252" starttime="20201028 02:22:43.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 02:22:46.252" starttime="20201028 02:22:46.252"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:22:46.253" critical="yes" starttime="20201028 02:22:39.577"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:46.260" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:46.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:46.264" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:22:46.264" starttime="20201028 02:22:46.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:46.265" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:22:46.265" starttime="20201028 02:22:46.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:46.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:46.266" starttime="20201028 02:22:46.265"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:46.266" starttime="20201028 02:22:46.257"></status>
</kw>
<msg timestamp="20201028 02:22:46.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:46.266" starttime="20201028 02:22:46.257"></status>
</kw>
<msg timestamp="20201028 02:22:46.266" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:22:46.266" starttime="20201028 02:22:46.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:22:46.267" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:22:46.267" starttime="20201028 02:22:46.267"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:46.272" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:46.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:46.284" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:22:46.284" starttime="20201028 02:22:46.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:46.285" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:22:46.285" starttime="20201028 02:22:46.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:46.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:46.286" starttime="20201028 02:22:46.285"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:46.286" starttime="20201028 02:22:46.268"></status>
</kw>
<msg timestamp="20201028 02:22:46.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:46.286" starttime="20201028 02:22:46.268"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:46.286" starttime="20201028 02:22:46.268"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:46.287" starttime="20201028 02:22:46.267"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:46.287" starttime="20201028 02:22:46.256"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:46.287" starttime="20201028 02:22:46.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:46.291" level="INFO">Running command 'ozone sh bucket link 63003-source/bucket1 63003-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:49.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:49.849" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:49.849" starttime="20201028 02:22:46.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:49.850" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:49.850" starttime="20201028 02:22:49.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:49.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:49.851" starttime="20201028 02:22:49.850"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:49.851" starttime="20201028 02:22:46.288"></status>
</kw>
<msg timestamp="20201028 02:22:49.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:49.851" starttime="20201028 02:22:46.288"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:49.851" starttime="20201028 02:22:46.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:49.856" level="INFO">Running command 'ozone sh bucket create 63003-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:22:53.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:22:53.576" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:22:53.576" starttime="20201028 02:22:49.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:22:53.577" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:22:53.577" starttime="20201028 02:22:53.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:22:53.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:22:53.578" starttime="20201028 02:22:53.577"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:53.578" starttime="20201028 02:22:49.852"></status>
</kw>
<msg timestamp="20201028 02:22:53.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:22:53.579" starttime="20201028 02:22:49.852"></status>
</kw>
<status status="PASS" endtime="20201028 02:22:53.579" starttime="20201028 02:22:49.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:22:53.584" level="INFO">Running command 'ozone sh key put 63003-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:01.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:01.797" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:01.797" starttime="20201028 02:22:53.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:01.798" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:23:01.799" starttime="20201028 02:23:01.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:01.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:01.799" starttime="20201028 02:23:01.799"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:01.799" starttime="20201028 02:22:53.580"></status>
</kw>
<msg timestamp="20201028 02:23:01.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:01.800" starttime="20201028 02:22:53.580"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:01.800" starttime="20201028 02:22:53.579"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201028 02:23:01.801" level="INFO">${postfix} = 87601</msg>
<status status="PASS" endtime="20201028 02:23:01.801" starttime="20201028 02:23:01.801"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201028 02:23:01.802" level="INFO">${tmpfile} = /tmp/tempkey-87601</msg>
<status status="PASS" endtime="20201028 02:23:01.802" starttime="20201028 02:23:01.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:01.805" level="INFO">Running command 'ozone sh key get -f 63003-target/link1/key1 /tmp/tempkey-87601 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:07.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:07.410" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:07.411" starttime="20201028 02:23:01.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.412" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:23:07.412" starttime="20201028 02:23:07.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:07.413" starttime="20201028 02:23:07.412"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.413" starttime="20201028 02:23:01.803"></status>
</kw>
<msg timestamp="20201028 02:23:07.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:07.413" starttime="20201028 02:23:01.803"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.413" starttime="20201028 02:23:01.802"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201028 02:23:07.417" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-87601 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:07.418" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201028 02:23:07.418" starttime="20201028 02:23:07.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:07.423" level="INFO">Running command 'rm -f /tmp/tempkey-87601 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:07.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:07.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:07.425" starttime="20201028 02:23:07.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.426" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:07.426" starttime="20201028 02:23:07.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:07.427" starttime="20201028 02:23:07.427"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.427" starttime="20201028 02:23:07.420"></status>
</kw>
<msg timestamp="20201028 02:23:07.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:07.427" starttime="20201028 02:23:07.419"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.428" starttime="20201028 02:23:07.419"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 02:23:07.428" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201028 02:23:07.428" starttime="20201028 02:23:07.428"></status>
</kw>
<msg timestamp="20201028 02:23:07.428" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201028 02:23:07.428" starttime="20201028 02:23:01.800"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:07.429" starttime="20201028 02:23:07.429"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.429" starttime="20201028 02:23:01.800"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:23:07.429" critical="yes" starttime="20201028 02:22:46.254"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:07.434" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:07.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:07.437" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:23:07.437" starttime="20201028 02:23:07.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.437" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:23:07.438" starttime="20201028 02:23:07.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:07.438" starttime="20201028 02:23:07.438"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.438" starttime="20201028 02:23:07.432"></status>
</kw>
<msg timestamp="20201028 02:23:07.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:07.439" starttime="20201028 02:23:07.432"></status>
</kw>
<msg timestamp="20201028 02:23:07.439" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:23:07.439" starttime="20201028 02:23:07.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:23:07.439" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:23:07.440" starttime="20201028 02:23:07.439"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:07.444" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:07.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:07.453" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:07.453" starttime="20201028 02:23:07.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.454" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:07.454" starttime="20201028 02:23:07.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:07.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:07.455" starttime="20201028 02:23:07.454"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.455" starttime="20201028 02:23:07.441"></status>
</kw>
<msg timestamp="20201028 02:23:07.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:07.455" starttime="20201028 02:23:07.441"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.455" starttime="20201028 02:23:07.440"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.455" starttime="20201028 02:23:07.440"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.456" starttime="20201028 02:23:07.431"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:07.456" starttime="20201028 02:23:07.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:07.460" level="INFO">Running command 'ozone sh key put 63003-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:15.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:15.632" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:15.632" starttime="20201028 02:23:07.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:15.633" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:23:15.633" starttime="20201028 02:23:15.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:15.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:15.634" starttime="20201028 02:23:15.633"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:15.634" starttime="20201028 02:23:07.457"></status>
</kw>
<msg timestamp="20201028 02:23:15.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:15.634" starttime="20201028 02:23:07.456"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:15.634" starttime="20201028 02:23:07.456"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201028 02:23:15.636" level="INFO">${postfix} = 80935</msg>
<status status="PASS" endtime="20201028 02:23:15.636" starttime="20201028 02:23:15.636"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201028 02:23:15.636" level="INFO">${tmpfile} = /tmp/tempkey-80935</msg>
<status status="PASS" endtime="20201028 02:23:15.637" starttime="20201028 02:23:15.636"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:15.640" level="INFO">Running command 'ozone sh key get -f 63003-source/bucket1/key2 /tmp/tempkey-80935 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:21.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:21.015" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:21.015" starttime="20201028 02:23:15.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.017" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:23:21.017" starttime="20201028 02:23:21.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:21.017" starttime="20201028 02:23:21.017"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.018" starttime="20201028 02:23:15.637"></status>
</kw>
<msg timestamp="20201028 02:23:21.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:21.018" starttime="20201028 02:23:15.637"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.018" starttime="20201028 02:23:15.637"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201028 02:23:21.020" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-80935 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:21.023" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201028 02:23:21.023" starttime="20201028 02:23:21.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:21.027" level="INFO">Running command 'rm -f /tmp/tempkey-80935 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:21.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:21.030" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:21.030" starttime="20201028 02:23:21.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.031" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:21.031" starttime="20201028 02:23:21.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:21.031" starttime="20201028 02:23:21.031"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.032" starttime="20201028 02:23:21.024"></status>
</kw>
<msg timestamp="20201028 02:23:21.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:21.032" starttime="20201028 02:23:21.024"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.032" starttime="20201028 02:23:21.023"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 02:23:21.033" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201028 02:23:21.033" starttime="20201028 02:23:21.032"></status>
</kw>
<msg timestamp="20201028 02:23:21.033" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201028 02:23:21.033" starttime="20201028 02:23:15.635"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:21.033" starttime="20201028 02:23:21.033"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.034" starttime="20201028 02:23:15.634"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:23:21.034" critical="yes" starttime="20201028 02:23:07.430"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:21.042" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:21.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:21.043" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:23:21.043" starttime="20201028 02:23:21.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.044" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:23:21.044" starttime="20201028 02:23:21.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:21.045" starttime="20201028 02:23:21.044"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.045" starttime="20201028 02:23:21.038"></status>
</kw>
<msg timestamp="20201028 02:23:21.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:21.045" starttime="20201028 02:23:21.038"></status>
</kw>
<msg timestamp="20201028 02:23:21.046" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:23:21.046" starttime="20201028 02:23:21.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:23:21.046" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:23:21.046" starttime="20201028 02:23:21.046"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:21.050" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:21.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:21.067" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:21.067" starttime="20201028 02:23:21.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.069" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:21.069" starttime="20201028 02:23:21.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:21.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:21.070" starttime="20201028 02:23:21.069"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.070" starttime="20201028 02:23:21.048"></status>
</kw>
<msg timestamp="20201028 02:23:21.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:21.070" starttime="20201028 02:23:21.047"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.071" starttime="20201028 02:23:21.047"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.071" starttime="20201028 02:23:21.046"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.071" starttime="20201028 02:23:21.036"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:21.071" starttime="20201028 02:23:21.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:21.076" level="INFO">Running command 'ozone sh key list 63003-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:24.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:24.903" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201028 02:23:24.903" starttime="20201028 02:23:21.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:24.904" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201028 02:23:24.904" starttime="20201028 02:23:24.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:24.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:24.905" starttime="20201028 02:23:24.905"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:24.905" starttime="20201028 02:23:21.072"></status>
</kw>
<msg timestamp="20201028 02:23:24.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:24.906" starttime="20201028 02:23:21.072"></status>
</kw>
<msg timestamp="20201028 02:23:24.906" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201028 02:23:24.906" starttime="20201028 02:23:21.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:24.910" level="INFO">Running command 'ozone sh key list 63003-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:28.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:28.851" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201028 02:23:28.851" starttime="20201028 02:23:24.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:28.853" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201028 02:23:28.853" starttime="20201028 02:23:28.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:28.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:28.853" starttime="20201028 02:23:28.853"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:28.854" starttime="20201028 02:23:24.907"></status>
</kw>
<msg timestamp="20201028 02:23:28.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:28.854" starttime="20201028 02:23:24.907"></status>
</kw>
<msg timestamp="20201028 02:23:28.854" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201028 02:23:28.854" starttime="20201028 02:23:24.906"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:28.855" starttime="20201028 02:23:28.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:28.855" starttime="20201028 02:23:28.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:28.856" starttime="20201028 02:23:28.855"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:23:28.856" critical="yes" starttime="20201028 02:23:21.035"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:28.864" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:28.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:28.865" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:23:28.865" starttime="20201028 02:23:28.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:28.866" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:23:28.867" starttime="20201028 02:23:28.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:28.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:28.867" starttime="20201028 02:23:28.867"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:28.868" starttime="20201028 02:23:28.860"></status>
</kw>
<msg timestamp="20201028 02:23:28.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:28.868" starttime="20201028 02:23:28.860"></status>
</kw>
<msg timestamp="20201028 02:23:28.868" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:23:28.868" starttime="20201028 02:23:28.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:23:28.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:23:28.869" starttime="20201028 02:23:28.868"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:28.875" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:28.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:28.885" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:28.885" starttime="20201028 02:23:28.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:28.886" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:28.886" starttime="20201028 02:23:28.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:28.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:28.887" starttime="20201028 02:23:28.886"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:28.887" starttime="20201028 02:23:28.870"></status>
</kw>
<msg timestamp="20201028 02:23:28.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:28.887" starttime="20201028 02:23:28.870"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:28.888" starttime="20201028 02:23:28.869"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:28.888" starttime="20201028 02:23:28.869"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:28.888" starttime="20201028 02:23:28.859"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:28.888" starttime="20201028 02:23:28.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:28.894" level="INFO">Running command 'ozone sh key delete 63003-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:32.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:32.842" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:32.842" starttime="20201028 02:23:28.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:32.843" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:23:32.844" starttime="20201028 02:23:32.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:32.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:32.845" starttime="20201028 02:23:32.844"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:32.846" starttime="20201028 02:23:28.889"></status>
</kw>
<msg timestamp="20201028 02:23:32.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:32.848" starttime="20201028 02:23:28.889"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:32.849" starttime="20201028 02:23:28.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:32.859" level="INFO">Running command 'ozone sh key list 63003-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:36.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:36.761" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201028 02:23:36.761" starttime="20201028 02:23:32.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:36.763" level="INFO">key1</msg>
<status status="PASS" endtime="20201028 02:23:36.763" starttime="20201028 02:23:36.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:36.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:36.764" starttime="20201028 02:23:36.763"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:36.764" starttime="20201028 02:23:32.850"></status>
</kw>
<msg timestamp="20201028 02:23:36.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:36.764" starttime="20201028 02:23:32.850"></status>
</kw>
<msg timestamp="20201028 02:23:36.764" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201028 02:23:36.764" starttime="20201028 02:23:32.849"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:36.765" starttime="20201028 02:23:36.764"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:23:36.765" critical="yes" starttime="20201028 02:23:28.857"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:36.772" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:36.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:36.774" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:23:36.774" starttime="20201028 02:23:36.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:36.775" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:23:36.775" starttime="20201028 02:23:36.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:36.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:36.775" starttime="20201028 02:23:36.775"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:36.776" starttime="20201028 02:23:36.768"></status>
</kw>
<msg timestamp="20201028 02:23:36.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:36.776" starttime="20201028 02:23:36.768"></status>
</kw>
<msg timestamp="20201028 02:23:36.776" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:23:36.776" starttime="20201028 02:23:36.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:23:36.777" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:23:36.777" starttime="20201028 02:23:36.776"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:36.783" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:36.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:36.799" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:36.799" starttime="20201028 02:23:36.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:36.800" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:36.800" starttime="20201028 02:23:36.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:36.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:36.800" starttime="20201028 02:23:36.800"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:36.801" starttime="20201028 02:23:36.778"></status>
</kw>
<msg timestamp="20201028 02:23:36.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:36.801" starttime="20201028 02:23:36.778"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:36.801" starttime="20201028 02:23:36.778"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:36.801" starttime="20201028 02:23:36.777"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:36.801" starttime="20201028 02:23:36.767"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:36.801" starttime="20201028 02:23:36.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:36.808" level="INFO">Running command 'ozone sh bucket list 63003-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:40.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:40.657" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:40.657" starttime="20201028 02:23:36.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:40.658" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:43.061Z",
  "modificationTime" : "2020-10-28T02:22:43.061Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:22.760Z",
  "modificationTime" : "2020-10-28T02:22:39.405Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:49.681Z",
  "modificationTime" : "2020-10-28T02:22:49.681Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:15.693Z",
  "modificationTime" : "2020-10-28T02:22:36.080Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:19.241Z",
  "modificationTime" : "2020-10-28T02:22:19.241Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 02:23:40.659" starttime="20201028 02:23:40.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:40.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:40.659" starttime="20201028 02:23:40.659"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:40.659" starttime="20201028 02:23:36.804"></status>
</kw>
<msg timestamp="20201028 02:23:40.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:40.660" starttime="20201028 02:23:36.803"></status>
</kw>
<msg timestamp="20201028 02:23:40.660" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:40.660" starttime="20201028 02:23:36.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:40.661" starttime="20201028 02:23:40.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:40.661" starttime="20201028 02:23:40.661"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:23:40.661" critical="yes" starttime="20201028 02:23:36.765"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:40.668" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:40.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:40.670" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:23:40.671" starttime="20201028 02:23:40.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:40.671" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:23:40.672" starttime="20201028 02:23:40.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:40.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:40.672" starttime="20201028 02:23:40.672"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:40.672" starttime="20201028 02:23:40.665"></status>
</kw>
<msg timestamp="20201028 02:23:40.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:40.673" starttime="20201028 02:23:40.665"></status>
</kw>
<msg timestamp="20201028 02:23:40.673" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:23:40.673" starttime="20201028 02:23:40.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:23:40.674" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:23:40.674" starttime="20201028 02:23:40.673"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:40.678" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:40.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:40.690" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:40.690" starttime="20201028 02:23:40.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:40.691" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:40.692" starttime="20201028 02:23:40.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:40.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:40.692" starttime="20201028 02:23:40.692"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:40.692" starttime="20201028 02:23:40.675"></status>
</kw>
<msg timestamp="20201028 02:23:40.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:40.693" starttime="20201028 02:23:40.675"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:40.693" starttime="20201028 02:23:40.674"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:40.693" starttime="20201028 02:23:40.674"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:40.693" starttime="20201028 02:23:40.664"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:40.693" starttime="20201028 02:23:40.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:40.698" level="INFO">Running command 'ozone sh bucket info 63003-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:44.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:44.409" level="INFO">${output} = 63003-source bucket1</msg>
<status status="PASS" endtime="20201028 02:23:44.409" starttime="20201028 02:23:40.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:44.410" level="INFO">63003-source bucket1</msg>
<status status="PASS" endtime="20201028 02:23:44.410" starttime="20201028 02:23:44.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:44.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:44.411" starttime="20201028 02:23:44.410"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:44.411" starttime="20201028 02:23:40.694"></status>
</kw>
<msg timestamp="20201028 02:23:44.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:44.411" starttime="20201028 02:23:40.694"></status>
</kw>
<msg timestamp="20201028 02:23:44.412" level="INFO">${result} = 63003-source bucket1</msg>
<status status="PASS" endtime="20201028 02:23:44.412" starttime="20201028 02:23:40.693"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:44.412" starttime="20201028 02:23:44.412"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:23:44.412" critical="yes" starttime="20201028 02:23:40.663"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:44.419" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:44.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:44.422" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:23:44.422" starttime="20201028 02:23:44.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:44.423" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:23:44.423" starttime="20201028 02:23:44.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:44.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:44.424" starttime="20201028 02:23:44.423"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:44.424" starttime="20201028 02:23:44.416"></status>
</kw>
<msg timestamp="20201028 02:23:44.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:44.424" starttime="20201028 02:23:44.416"></status>
</kw>
<msg timestamp="20201028 02:23:44.424" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:23:44.424" starttime="20201028 02:23:44.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:23:44.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:23:44.425" starttime="20201028 02:23:44.425"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:44.430" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:44.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:44.440" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:44.440" starttime="20201028 02:23:44.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:44.441" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:44.441" starttime="20201028 02:23:44.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:44.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:44.442" starttime="20201028 02:23:44.442"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:44.442" starttime="20201028 02:23:44.427"></status>
</kw>
<msg timestamp="20201028 02:23:44.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:44.443" starttime="20201028 02:23:44.426"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:44.443" starttime="20201028 02:23:44.426"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:44.443" starttime="20201028 02:23:44.425"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:44.443" starttime="20201028 02:23:44.415"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:44.443" starttime="20201028 02:23:44.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:44.448" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 63003-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:47.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:47.719" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:47.719" starttime="20201028 02:23:44.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:47.720" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 02:23:47.720" starttime="20201028 02:23:47.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:47.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:47.721" starttime="20201028 02:23:47.720"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:47.721" starttime="20201028 02:23:44.444"></status>
</kw>
<msg timestamp="20201028 02:23:47.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:47.721" starttime="20201028 02:23:44.444"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:47.722" starttime="20201028 02:23:44.443"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:47.726" level="INFO">Running command 'ozone sh bucket getacl 63003-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:51.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:51.133" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201028 02:23:51.133" starttime="20201028 02:23:47.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:51.134" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201028 02:23:51.134" starttime="20201028 02:23:51.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:51.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:51.135" starttime="20201028 02:23:51.134"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:51.135" starttime="20201028 02:23:47.724"></status>
</kw>
<msg timestamp="20201028 02:23:51.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:51.135" starttime="20201028 02:23:47.723"></status>
</kw>
<msg timestamp="20201028 02:23:51.136" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201028 02:23:51.136" starttime="20201028 02:23:47.722"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:51.136" starttime="20201028 02:23:51.136"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:51.136" starttime="20201028 02:23:47.722"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:51.146" level="INFO">Running command 'ozone sh bucket getacl 63003-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:54.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:54.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:23:54.531" starttime="20201028 02:23:51.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:54.532" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:23:54.532" starttime="20201028 02:23:54.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:54.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:54.533" starttime="20201028 02:23:54.532"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:54.533" starttime="20201028 02:23:51.142"></status>
</kw>
<msg timestamp="20201028 02:23:54.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:54.533" starttime="20201028 02:23:51.142"></status>
</kw>
<msg timestamp="20201028 02:23:54.533" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201028 02:23:54.534" starttime="20201028 02:23:51.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:23:54.534" starttime="20201028 02:23:54.534"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:54.534" starttime="20201028 02:23:51.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:54.539" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 63003-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:23:57.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:23:57.991" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:23:57.992" starttime="20201028 02:23:54.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:23:57.993" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201028 02:23:57.993" starttime="20201028 02:23:57.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:23:57.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:23:57.993" starttime="20201028 02:23:57.993"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:57.994" starttime="20201028 02:23:54.536"></status>
</kw>
<msg timestamp="20201028 02:23:57.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:23:57.994" starttime="20201028 02:23:54.535"></status>
</kw>
<status status="PASS" endtime="20201028 02:23:57.994" starttime="20201028 02:23:54.535"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:23:58.000" level="INFO">Running command 'ozone sh bucket getacl 63003-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:02.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:02.004" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:02.004" starttime="20201028 02:23:57.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:02.005" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:02.005" starttime="20201028 02:24:02.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:02.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:02.005" starttime="20201028 02:24:02.005"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:02.006" starttime="20201028 02:23:57.996"></status>
</kw>
<msg timestamp="20201028 02:24:02.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:02.006" starttime="20201028 02:23:57.996"></status>
</kw>
<msg timestamp="20201028 02:24:02.006" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201028 02:24:02.006" starttime="20201028 02:23:57.995"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:02.007" starttime="20201028 02:24:02.006"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:02.007" starttime="20201028 02:23:57.994"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:02.012" level="INFO">Running command 'ozone sh bucket getacl 63003-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:05.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:05.633" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201028 02:24:05.633" starttime="20201028 02:24:02.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:05.634" level="INFO">READ</msg>
<status status="PASS" endtime="20201028 02:24:05.634" starttime="20201028 02:24:05.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:05.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:05.635" starttime="20201028 02:24:05.634"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.635" starttime="20201028 02:24:02.009"></status>
</kw>
<msg timestamp="20201028 02:24:05.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:05.636" starttime="20201028 02:24:02.009"></status>
</kw>
<msg timestamp="20201028 02:24:05.636" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201028 02:24:05.636" starttime="20201028 02:24:02.008"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:05.636" starttime="20201028 02:24:05.636"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.637" starttime="20201028 02:24:02.007"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:24:05.637" critical="yes" starttime="20201028 02:23:44.413"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:05.643" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:05.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:05.646" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:05.646" starttime="20201028 02:24:05.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:05.647" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:05.647" starttime="20201028 02:24:05.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:05.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:05.648" starttime="20201028 02:24:05.647"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.648" starttime="20201028 02:24:05.641"></status>
</kw>
<msg timestamp="20201028 02:24:05.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:05.649" starttime="20201028 02:24:05.640"></status>
</kw>
<msg timestamp="20201028 02:24:05.649" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:05.649" starttime="20201028 02:24:05.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:05.649" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:05.650" starttime="20201028 02:24:05.649"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:05.654" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:05.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:05.665" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:05.665" starttime="20201028 02:24:05.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:05.666" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:05.666" starttime="20201028 02:24:05.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:05.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:05.667" starttime="20201028 02:24:05.666"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.667" starttime="20201028 02:24:05.651"></status>
</kw>
<msg timestamp="20201028 02:24:05.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:05.667" starttime="20201028 02:24:05.651"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.667" starttime="20201028 02:24:05.650"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.667" starttime="20201028 02:24:05.650"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.668" starttime="20201028 02:24:05.639"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:05.668" starttime="20201028 02:24:05.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:05.672" level="INFO">Running command 'ozone sh bucket link 63003-source/bucket2 63003-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:08.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:08.881" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:08.882" starttime="20201028 02:24:05.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:08.883" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:24:08.883" starttime="20201028 02:24:08.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:08.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:08.883" starttime="20201028 02:24:08.883"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:08.884" starttime="20201028 02:24:05.669"></status>
</kw>
<msg timestamp="20201028 02:24:08.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:08.884" starttime="20201028 02:24:05.668"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:08.884" starttime="20201028 02:24:05.668"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:08.887" level="INFO">Running command 'ozone sh bucket create 63003-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:12.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 02:24:12.994" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:12.994" starttime="20201028 02:24:08.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:12.996" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201028 02:24:12.996" starttime="20201028 02:24:12.995"></status>
</kw>
<msg timestamp="20201028 02:24:12.996" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:12.996" starttime="20201028 02:24:08.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:12.997" starttime="20201028 02:24:12.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:13.001" level="INFO">Running command 'ozone sh bucket create 63003-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:16.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:16.584" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:16.584" starttime="20201028 02:24:12.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:16.585" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:24:16.585" starttime="20201028 02:24:16.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:16.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:16.586" starttime="20201028 02:24:16.585"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:16.586" starttime="20201028 02:24:12.998"></status>
</kw>
<msg timestamp="20201028 02:24:16.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:16.586" starttime="20201028 02:24:12.998"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:16.586" starttime="20201028 02:24:12.997"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:16.589" level="INFO">Running command 'ozone sh bucket link 63003-source/bucket1 63003-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:20.157" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 02:24:20.157" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:20.157" starttime="20201028 02:24:16.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.159" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201028 02:24:20.159" starttime="20201028 02:24:20.158"></status>
</kw>
<msg timestamp="20201028 02:24:20.159" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:20.159" starttime="20201028 02:24:16.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:20.160" starttime="20201028 02:24:20.159"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:24:20.160" critical="yes" starttime="20201028 02:24:05.638"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:20.168" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:20.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:20.169" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:20.169" starttime="20201028 02:24:20.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.170" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:20.170" starttime="20201028 02:24:20.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:20.171" starttime="20201028 02:24:20.170"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.171" starttime="20201028 02:24:20.163"></status>
</kw>
<msg timestamp="20201028 02:24:20.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:20.171" starttime="20201028 02:24:20.163"></status>
</kw>
<msg timestamp="20201028 02:24:20.171" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:20.171" starttime="20201028 02:24:20.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:20.172" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:20.172" starttime="20201028 02:24:20.172"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:20.177" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:20.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:20.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:20.187" starttime="20201028 02:24:20.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.188" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:20.188" starttime="20201028 02:24:20.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:20.188" starttime="20201028 02:24:20.188"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.189" starttime="20201028 02:24:20.173"></status>
</kw>
<msg timestamp="20201028 02:24:20.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:20.189" starttime="20201028 02:24:20.173"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.189" starttime="20201028 02:24:20.173"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.189" starttime="20201028 02:24:20.172"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.189" starttime="20201028 02:24:20.162"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.189" starttime="20201028 02:24:20.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:20.194" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:20.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:20.197" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:20.198" starttime="20201028 02:24:20.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.198" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:20.199" starttime="20201028 02:24:20.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:20.199" starttime="20201028 02:24:20.199"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.199" starttime="20201028 02:24:20.191"></status>
</kw>
<msg timestamp="20201028 02:24:20.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:20.200" starttime="20201028 02:24:20.191"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.200" starttime="20201028 02:24:20.191"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:20.205" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:20.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:20.207" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:20.207" starttime="20201028 02:24:20.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.208" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:20.208" starttime="20201028 02:24:20.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:20.208" starttime="20201028 02:24:20.208"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.209" starttime="20201028 02:24:20.201"></status>
</kw>
<msg timestamp="20201028 02:24:20.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:20.209" starttime="20201028 02:24:20.201"></status>
</kw>
<msg timestamp="20201028 02:24:20.209" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:20.209" starttime="20201028 02:24:20.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:20.210" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:20.210" starttime="20201028 02:24:20.209"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:20.214" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:20.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:20.230" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:20.230" starttime="20201028 02:24:20.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.231" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:20.231" starttime="20201028 02:24:20.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:20.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:20.232" starttime="20201028 02:24:20.231"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.233" starttime="20201028 02:24:20.211"></status>
</kw>
<msg timestamp="20201028 02:24:20.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:20.233" starttime="20201028 02:24:20.211"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.233" starttime="20201028 02:24:20.210"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.233" starttime="20201028 02:24:20.210"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.233" starttime="20201028 02:24:20.200"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:20.233" starttime="20201028 02:24:20.200"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:20.237" level="INFO">Running command 'ozone sh key list 63003-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:24.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:24.080" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:24.080" starttime="20201028 02:24:20.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.081" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "63003-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-28T02:22:04.395Z",
  "modificationTime" : "2020-10-28T02:22:08.645Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201028 02:24:24.081" starttime="20201028 02:24:24.080"></status>
</kw>
<msg timestamp="20201028 02:24:24.082" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:24.082" starttime="20201028 02:24:20.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:24.082" starttime="20201028 02:24:24.082"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.082" starttime="20201028 02:24:20.190"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.082" starttime="20201028 02:24:20.189"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:24:24.083" critical="yes" starttime="20201028 02:24:20.161"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:24.090" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:24.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:24.092" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:24.092" starttime="20201028 02:24:24.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.092" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:24.093" starttime="20201028 02:24:24.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:24.093" starttime="20201028 02:24:24.093"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.093" starttime="20201028 02:24:24.086"></status>
</kw>
<msg timestamp="20201028 02:24:24.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:24.094" starttime="20201028 02:24:24.086"></status>
</kw>
<msg timestamp="20201028 02:24:24.094" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:24.094" starttime="20201028 02:24:24.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:24.094" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:24.095" starttime="20201028 02:24:24.094"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:24.100" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:24.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:24.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:24.108" starttime="20201028 02:24:24.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.109" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:24.109" starttime="20201028 02:24:24.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:24.110" starttime="20201028 02:24:24.110"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.110" starttime="20201028 02:24:24.096"></status>
</kw>
<msg timestamp="20201028 02:24:24.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:24.111" starttime="20201028 02:24:24.096"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.111" starttime="20201028 02:24:24.095"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.111" starttime="20201028 02:24:24.095"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.111" starttime="20201028 02:24:24.085"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.111" starttime="20201028 02:24:24.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:24.117" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:24.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:24.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:24.119" starttime="20201028 02:24:24.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.120" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:24.120" starttime="20201028 02:24:24.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:24.121" starttime="20201028 02:24:24.120"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.121" starttime="20201028 02:24:24.113"></status>
</kw>
<msg timestamp="20201028 02:24:24.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:24.121" starttime="20201028 02:24:24.113"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.122" starttime="20201028 02:24:24.112"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:24.126" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:24.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:24.128" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:24.128" starttime="20201028 02:24:24.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.129" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:24.129" starttime="20201028 02:24:24.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:24.130" starttime="20201028 02:24:24.129"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.130" starttime="20201028 02:24:24.123"></status>
</kw>
<msg timestamp="20201028 02:24:24.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:24.130" starttime="20201028 02:24:24.123"></status>
</kw>
<msg timestamp="20201028 02:24:24.131" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:24.131" starttime="20201028 02:24:24.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:24.131" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:24.131" starttime="20201028 02:24:24.131"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:24.136" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:24.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:24.145" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:24.145" starttime="20201028 02:24:24.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.146" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:24.146" starttime="20201028 02:24:24.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:24.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:24.147" starttime="20201028 02:24:24.146"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.147" starttime="20201028 02:24:24.133"></status>
</kw>
<msg timestamp="20201028 02:24:24.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:24.147" starttime="20201028 02:24:24.133"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.147" starttime="20201028 02:24:24.132"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.147" starttime="20201028 02:24:24.132"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.147" starttime="20201028 02:24:24.122"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:24.147" starttime="20201028 02:24:24.122"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:24.151" level="INFO">Running command 'ozone sh key list 63003-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:27.308" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 02:24:27.308" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:27.309" starttime="20201028 02:24:24.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.310" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201028 02:24:27.310" starttime="20201028 02:24:27.309"></status>
</kw>
<msg timestamp="20201028 02:24:27.310" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:27.310" starttime="20201028 02:24:24.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:27.311" starttime="20201028 02:24:27.310"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.311" starttime="20201028 02:24:24.112"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.311" starttime="20201028 02:24:24.111"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:24:27.311" critical="yes" starttime="20201028 02:24:24.084"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:27.318" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:27.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:27.320" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:27.320" starttime="20201028 02:24:27.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.321" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:27.321" starttime="20201028 02:24:27.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:27.322" starttime="20201028 02:24:27.321"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.322" starttime="20201028 02:24:27.314"></status>
</kw>
<msg timestamp="20201028 02:24:27.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:27.322" starttime="20201028 02:24:27.314"></status>
</kw>
<msg timestamp="20201028 02:24:27.322" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:27.322" starttime="20201028 02:24:27.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:27.323" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:27.323" starttime="20201028 02:24:27.323"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:27.328" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:27.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:27.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:27.337" starttime="20201028 02:24:27.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.338" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:27.338" starttime="20201028 02:24:27.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:27.339" starttime="20201028 02:24:27.338"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.339" starttime="20201028 02:24:27.324"></status>
</kw>
<msg timestamp="20201028 02:24:27.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:27.339" starttime="20201028 02:24:27.324"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.339" starttime="20201028 02:24:27.324"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.339" starttime="20201028 02:24:27.323"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.340" starttime="20201028 02:24:27.313"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.340" starttime="20201028 02:24:27.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:27.346" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:27.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:27.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:27.348" starttime="20201028 02:24:27.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.349" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:27.349" starttime="20201028 02:24:27.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:27.350" starttime="20201028 02:24:27.349"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.350" starttime="20201028 02:24:27.341"></status>
</kw>
<msg timestamp="20201028 02:24:27.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:27.350" starttime="20201028 02:24:27.341"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.351" starttime="20201028 02:24:27.341"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:27.356" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:27.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:27.357" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:27.357" starttime="20201028 02:24:27.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.358" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:27.358" starttime="20201028 02:24:27.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:27.359" starttime="20201028 02:24:27.359"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.359" starttime="20201028 02:24:27.352"></status>
</kw>
<msg timestamp="20201028 02:24:27.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:27.359" starttime="20201028 02:24:27.352"></status>
</kw>
<msg timestamp="20201028 02:24:27.360" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:27.360" starttime="20201028 02:24:27.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:27.360" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:27.360" starttime="20201028 02:24:27.360"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:27.365" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:27.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:27.374" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:27.374" starttime="20201028 02:24:27.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.375" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:27.375" starttime="20201028 02:24:27.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:27.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:27.376" starttime="20201028 02:24:27.376"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.376" starttime="20201028 02:24:27.362"></status>
</kw>
<msg timestamp="20201028 02:24:27.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:27.376" starttime="20201028 02:24:27.362"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.377" starttime="20201028 02:24:27.361"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.377" starttime="20201028 02:24:27.361"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.377" starttime="20201028 02:24:27.351"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:27.377" starttime="20201028 02:24:27.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:27.382" level="INFO">Running command 'ozone sh bucket info 63003-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:31.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:31.009" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:31.009" starttime="20201028 02:24:27.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:31.010" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:22.760Z",
  "modificationTime" : "2020-10-28T02:22:39.405Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 02:24:31.010" starttime="20201028 02:24:31.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:31.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:31.011" starttime="20201028 02:24:31.010"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:31.011" starttime="20201028 02:24:27.378"></status>
</kw>
<msg timestamp="20201028 02:24:31.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:31.011" starttime="20201028 02:24:27.378"></status>
</kw>
<msg timestamp="20201028 02:24:31.011" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:31.011" starttime="20201028 02:24:27.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:31.012" starttime="20201028 02:24:31.012"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:31.012" starttime="20201028 02:24:31.012"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:31.015" level="INFO">Running command 'ozone sh key list 63003-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:33.989" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 02:24:33.989" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:33.989" starttime="20201028 02:24:31.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:33.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201028 02:24:33.991" starttime="20201028 02:24:33.990"></status>
</kw>
<msg timestamp="20201028 02:24:33.991" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:33.991" starttime="20201028 02:24:31.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:33.992" starttime="20201028 02:24:33.991"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:33.992" starttime="20201028 02:24:27.340"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:33.992" starttime="20201028 02:24:27.340"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:24:33.992" critical="yes" starttime="20201028 02:24:27.312"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:33.998" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:34.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:34.000" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:34.000" starttime="20201028 02:24:33.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:34.001" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:34.001" starttime="20201028 02:24:34.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:34.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:34.002" starttime="20201028 02:24:34.001"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:34.002" starttime="20201028 02:24:33.995"></status>
</kw>
<msg timestamp="20201028 02:24:34.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:34.003" starttime="20201028 02:24:33.995"></status>
</kw>
<msg timestamp="20201028 02:24:34.003" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:34.003" starttime="20201028 02:24:33.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:34.003" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:34.004" starttime="20201028 02:24:34.003"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:34.009" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:34.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:34.018" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:34.018" starttime="20201028 02:24:34.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:34.019" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:34.019" starttime="20201028 02:24:34.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:34.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:34.020" starttime="20201028 02:24:34.020"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:34.020" starttime="20201028 02:24:34.005"></status>
</kw>
<msg timestamp="20201028 02:24:34.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:34.020" starttime="20201028 02:24:34.005"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:34.021" starttime="20201028 02:24:34.004"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:34.021" starttime="20201028 02:24:34.004"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:34.021" starttime="20201028 02:24:33.994"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:34.021" starttime="20201028 02:24:33.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:34.025" level="INFO">Running command 'ozone sh bucket link 63003-target/loop1 63003-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:37.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:37.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:37.058" starttime="20201028 02:24:34.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:37.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:24:37.059" starttime="20201028 02:24:37.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:37.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:37.060" starttime="20201028 02:24:37.059"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:37.060" starttime="20201028 02:24:34.022"></status>
</kw>
<msg timestamp="20201028 02:24:37.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:37.060" starttime="20201028 02:24:34.022"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:37.061" starttime="20201028 02:24:34.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:37.064" level="INFO">Running command 'ozone sh bucket link 63003-target/loop2 63003-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:40.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:40.539" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:40.539" starttime="20201028 02:24:37.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:40.540" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:24:40.540" starttime="20201028 02:24:40.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:40.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:40.541" starttime="20201028 02:24:40.541"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:40.541" starttime="20201028 02:24:37.062"></status>
</kw>
<msg timestamp="20201028 02:24:40.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:40.542" starttime="20201028 02:24:37.061"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:40.542" starttime="20201028 02:24:37.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:40.547" level="INFO">Running command 'ozone sh bucket link 63003-target/loop3 63003-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:43.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:43.899" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:43.899" starttime="20201028 02:24:40.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:43.901" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:24:43.901" starttime="20201028 02:24:43.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:43.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:43.901" starttime="20201028 02:24:43.901"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:43.902" starttime="20201028 02:24:40.543"></status>
</kw>
<msg timestamp="20201028 02:24:43.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:43.902" starttime="20201028 02:24:40.543"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:43.902" starttime="20201028 02:24:40.542"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:43.905" level="INFO">Running command 'ozone sh key list 63003-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:47.207" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 02:24:47.207" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:47.207" starttime="20201028 02:24:43.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:47.208" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201028 02:24:47.208" starttime="20201028 02:24:47.207"></status>
</kw>
<msg timestamp="20201028 02:24:47.209" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:47.209" starttime="20201028 02:24:43.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201028 02:24:47.209" starttime="20201028 02:24:47.209"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:24:47.209" critical="yes" starttime="20201028 02:24:33.993"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:47.217" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:47.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:47.220" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:24:47.220" starttime="20201028 02:24:47.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:47.221" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:24:47.221" starttime="20201028 02:24:47.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:47.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:47.222" starttime="20201028 02:24:47.221"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:47.222" starttime="20201028 02:24:47.213"></status>
</kw>
<msg timestamp="20201028 02:24:47.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:47.222" starttime="20201028 02:24:47.212"></status>
</kw>
<msg timestamp="20201028 02:24:47.222" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:24:47.223" starttime="20201028 02:24:47.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:24:47.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:24:47.223" starttime="20201028 02:24:47.223"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:47.228" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:47.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:47.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:24:47.238" starttime="20201028 02:24:47.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:47.239" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:24:47.239" starttime="20201028 02:24:47.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:47.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:47.239" starttime="20201028 02:24:47.239"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:47.240" starttime="20201028 02:24:47.225"></status>
</kw>
<msg timestamp="20201028 02:24:47.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:47.240" starttime="20201028 02:24:47.224"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:47.240" starttime="20201028 02:24:47.224"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:47.240" starttime="20201028 02:24:47.223"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:47.240" starttime="20201028 02:24:47.212"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:47.240" starttime="20201028 02:24:47.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:47.244" level="INFO">Running command 'ozone sh bucket link 63003-source/bucket1 63003-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:50.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:50.693" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:50.693" starttime="20201028 02:24:47.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:50.694" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:24:50.694" starttime="20201028 02:24:50.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:50.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:50.695" starttime="20201028 02:24:50.695"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:50.695" starttime="20201028 02:24:47.241"></status>
</kw>
<msg timestamp="20201028 02:24:50.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:50.696" starttime="20201028 02:24:47.241"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:50.696" starttime="20201028 02:24:47.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:50.700" level="INFO">Running command 'ozone sh key put 63003-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:24:58.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:24:58.890" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:24:58.890" starttime="20201028 02:24:50.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:24:58.891" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:24:58.891" starttime="20201028 02:24:58.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:24:58.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:24:58.892" starttime="20201028 02:24:58.892"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:58.892" starttime="20201028 02:24:50.697"></status>
</kw>
<msg timestamp="20201028 02:24:58.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:24:58.892" starttime="20201028 02:24:50.697"></status>
</kw>
<status status="PASS" endtime="20201028 02:24:58.893" starttime="20201028 02:24:50.696"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201028 02:24:58.895" level="INFO">${postfix} = 93241</msg>
<status status="PASS" endtime="20201028 02:24:58.895" starttime="20201028 02:24:58.894"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201028 02:24:58.895" level="INFO">${tmpfile} = /tmp/tempkey-93241</msg>
<status status="PASS" endtime="20201028 02:24:58.895" starttime="20201028 02:24:58.895"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:24:58.899" level="INFO">Running command 'ozone sh key get -f 63003-target/link1/key3 /tmp/tempkey-93241 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:04.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:25:04.246" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:25:04.246" starttime="20201028 02:24:58.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.247" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:25:04.247" starttime="20201028 02:25:04.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:25:04.248" starttime="20201028 02:25:04.247"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.248" starttime="20201028 02:24:58.896"></status>
</kw>
<msg timestamp="20201028 02:25:04.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:25:04.248" starttime="20201028 02:24:58.896"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.249" starttime="20201028 02:24:58.895"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201028 02:25:04.252" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-93241 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:04.254" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201028 02:25:04.254" starttime="20201028 02:25:04.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:25:04.260" level="INFO">Running command 'rm -f /tmp/tempkey-93241 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:04.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:25:04.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:25:04.262" starttime="20201028 02:25:04.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.263" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:25:04.263" starttime="20201028 02:25:04.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:25:04.264" starttime="20201028 02:25:04.263"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.264" starttime="20201028 02:25:04.256"></status>
</kw>
<msg timestamp="20201028 02:25:04.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:25:04.264" starttime="20201028 02:25:04.255"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.265" starttime="20201028 02:25:04.254"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 02:25:04.265" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201028 02:25:04.265" starttime="20201028 02:25:04.265"></status>
</kw>
<msg timestamp="20201028 02:25:04.266" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201028 02:25:04.266" starttime="20201028 02:24:58.893"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201028 02:25:04.266" starttime="20201028 02:25:04.266"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.266" starttime="20201028 02:24:58.893"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:25:04.267" critical="yes" starttime="20201028 02:24:47.210"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:25:04.274" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:04.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:25:04.275" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201028 02:25:04.275" starttime="20201028 02:25:04.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.276" level="INFO">scm</msg>
<status status="PASS" endtime="20201028 02:25:04.276" starttime="20201028 02:25:04.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:25:04.277" starttime="20201028 02:25:04.276"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.277" starttime="20201028 02:25:04.269"></status>
</kw>
<msg timestamp="20201028 02:25:04.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:25:04.278" starttime="20201028 02:25:04.269"></status>
</kw>
<msg timestamp="20201028 02:25:04.278" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201028 02:25:04.278" starttime="20201028 02:25:04.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201028 02:25:04.278" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201028 02:25:04.279" starttime="20201028 02:25:04.278"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:25:04.284" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:04.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:25:04.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 02:25:04.296" starttime="20201028 02:25:04.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.297" level="INFO"></msg>
<status status="PASS" endtime="20201028 02:25:04.297" starttime="20201028 02:25:04.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:25:04.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:25:04.298" starttime="20201028 02:25:04.297"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.298" starttime="20201028 02:25:04.280"></status>
</kw>
<msg timestamp="20201028 02:25:04.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:25:04.298" starttime="20201028 02:25:04.280"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.298" starttime="20201028 02:25:04.279"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.298" starttime="20201028 02:25:04.279"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.298" starttime="20201028 02:25:04.268"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:04.299" starttime="20201028 02:25:04.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:25:04.303" level="INFO">Running command 'ozone sh bucket delete 63003-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:07.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:25:07.669" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:25:07.669" starttime="20201028 02:25:04.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:25:07.671" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201028 02:25:07.671" starttime="20201028 02:25:07.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:25:07.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:25:07.671" starttime="20201028 02:25:07.671"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:07.672" starttime="20201028 02:25:04.300"></status>
</kw>
<msg timestamp="20201028 02:25:07.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:25:07.672" starttime="20201028 02:25:04.299"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:07.672" starttime="20201028 02:25:04.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:25:07.677" level="INFO">Running command 'ozone sh bucket list 63003-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:11.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:25:11.134" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:25:11.134" starttime="20201028 02:25:07.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:25:11.136" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:24:16.407Z",
  "modificationTime" : "2020-10-28T02:24:16.407Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:43.061Z",
  "modificationTime" : "2020-10-28T02:22:43.061Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:22.760Z",
  "modificationTime" : "2020-10-28T02:22:39.405Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:24:08.737Z",
  "modificationTime" : "2020-10-28T02:24:08.737Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:24:50.575Z",
  "modificationTime" : "2020-10-28T02:24:50.575Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:24:43.745Z",
  "modificationTime" : "2020-10-28T02:24:43.745Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:24:36.975Z",
  "modificationTime" : "2020-10-28T02:24:36.975Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:24:40.446Z",
  "modificationTime" : "2020-10-28T02:24:40.446Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:15.693Z",
  "modificationTime" : "2020-10-28T02:22:36.080Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "63003-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T02:22:19.241Z",
  "modificationTime" : "2020-10-28T02:22:19.241Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "63003-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 02:25:11.136" starttime="20201028 02:25:11.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:25:11.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:25:11.137" starttime="20201028 02:25:11.136"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:11.137" starttime="20201028 02:25:07.673"></status>
</kw>
<msg timestamp="20201028 02:25:11.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:25:11.137" starttime="20201028 02:25:07.673"></status>
</kw>
<msg timestamp="20201028 02:25:11.138" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201028 02:25:11.138" starttime="20201028 02:25:07.672"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:25:11.138" starttime="20201028 02:25:11.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 02:25:11.142" level="INFO">Running command 'ozone sh key list 63003-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 02:25:14.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 02:25:14.732" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201028 02:25:14.732" starttime="20201028 02:25:11.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 02:25:14.734" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201028 02:25:14.734" starttime="20201028 02:25:14.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 02:25:14.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 02:25:14.734" starttime="20201028 02:25:14.734"></status>
</kw>
<status status="PASS" endtime="20201028 02:25:14.735" starttime="20201028 02:25:11.139"></status>
</kw>
<msg timestamp="20201028 02:25:14.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 02:25:14.735" starttime="20201028 02:25:11.139"></status>
</kw>
<msg timestamp="20201028 02:25:14.735" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201028 02:25:14.735" starttime="20201028 02:25:11.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201028 02:25:14.736" starttime="20201028 02:25:14.735"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 02:25:14.736" critical="yes" starttime="20201028 02:25:04.267"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201028 02:25:14.739" starttime="20201028 02:21:49.676"></status>
</suite>
<status status="PASS" elapsedtime="235612" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
